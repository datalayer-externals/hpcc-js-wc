{"version":3,"file":"index.min.js","sources":["../src/common/css.ts","../node_modules/@hpcc-js/util/node_modules/tslib/tslib.es6.js","../node_modules/@hpcc-js/util/src/dictionary.ts","../node_modules/@hpcc-js/util/src/graph.ts","../node_modules/@hpcc-js/util/src/graph2.ts","../node_modules/@hpcc-js/util/src/immutable.ts","../node_modules/@hpcc-js/util/src/platform.ts","../node_modules/@hpcc-js/util/src/stack.ts","../node_modules/@hpcc-js/util/src/logging.ts","../node_modules/@hpcc-js/util/src/dispatch.ts","../node_modules/@hpcc-js/util/src/saxParser.ts","../node_modules/@hpcc-js/util/src/stateful.ts","../src/common/html.ts","../src/common/message.ts","../src/common/element.ts","../src/common/decorator.ts","../node_modules/tslib/tslib.es6.js","../src/common/resize.ts","../src/common/panel.ts","../src/common/svg.ts","../node_modules/@codemirror/text/dist/index.js","../node_modules/@codemirror/state/dist/index.js","../node_modules/style-mod/src/style-mod.js","../node_modules/@codemirror/rangeset/dist/index.js","../node_modules/w3c-keyname/index.es.js","../node_modules/@codemirror/view/dist/index.js","../node_modules/@codemirror/history/dist/index.js","../node_modules/@lezer/common/dist/index.js","../node_modules/@codemirror/language/dist/index.js","../node_modules/@codemirror/gutter/dist/index.js","../node_modules/@codemirror/fold/dist/index.js","../node_modules/@codemirror/matchbrackets/dist/index.js","../node_modules/@codemirror/commands/dist/index.js","../node_modules/@codemirror/closebrackets/dist/index.js","../node_modules/@codemirror/panel/dist/index.js","../node_modules/crelt/index.es.js","../node_modules/@codemirror/search/dist/index.js","../node_modules/@codemirror/tooltip/dist/index.js","../node_modules/@codemirror/autocomplete/dist/index.js","../node_modules/@codemirror/comment/dist/index.js","../node_modules/@codemirror/rectangular-selection/dist/index.js","../node_modules/@codemirror/highlight/dist/index.js","../node_modules/@codemirror/lint/dist/index.js","../node_modules/@codemirror/basic-setup/dist/index.js","../node_modules/@lezer/lr/dist/index.js","../node_modules/@lezer/html/dist/index.es.js","../node_modules/@lezer/css/dist/index.es.js","../node_modules/@codemirror/lang-css/dist/index.js","../node_modules/@lezer/javascript/dist/index.es.js","../node_modules/@codemirror/lang-javascript/dist/index.js","../node_modules/@codemirror/lang-html/dist/index.js","../node_modules/@lezer/json/dist/index.es.js","../node_modules/@codemirror/lang-json/dist/index.js","../node_modules/@codemirror/theme-one-dark/dist/index.js","../src/codemirror/codemirror.ts","../../lumino/packages/algorithm/src/iter.ts","../../lumino/packages/algorithm/src/array.ts","../../lumino/packages/algorithm/src/chain.ts","../../lumino/packages/algorithm/src/find.ts","../../lumino/packages/algorithm/src/range.ts","../../lumino/packages/algorithm/src/reduce.ts","../../lumino/packages/algorithm/src/sort.ts","../../lumino/packages/algorithm/src/stride.ts","../../lumino/packages/algorithm/src/string.ts","../../lumino/packages/algorithm/src/take.ts","../../lumino/packages/algorithm/src/zip.ts","../../lumino/packages/domutils/src/clipboard.ts","../../lumino/packages/domutils/src/element.ts","../../lumino/packages/domutils/src/platform.ts","../../lumino/packages/domutils/src/selector.ts","../../lumino/packages/collections/src/bplustree.ts","../../lumino/packages/collections/src/linkedlist.ts","../../lumino/packages/messaging/node_modules/tslib/tslib.es6.js","../../lumino/packages/messaging/src/index.ts","../../lumino/packages/properties/src/index.ts","../../lumino/packages/signaling/src/index.ts","../../lumino/packages/disposable/node_modules/tslib/tslib.es6.js","../../lumino/packages/disposable/src/index.ts","../../lumino/packages/dragdrop/src/index.ts","../../lumino/packages/coreutils/src/json.ts","../../lumino/packages/coreutils/src/mime.ts","../../lumino/packages/coreutils/src/promise.ts","../../lumino/packages/coreutils/src/uuid.ts","../../lumino/packages/keyboard/src/index.ts","../../lumino/packages/commands/src/index.ts","../../lumino/packages/virtualdom/node_modules/tslib/tslib.es6.js","../../lumino/packages/virtualdom/src/index.ts","../../lumino/packages/widgets/node_modules/tslib/tslib.es6.js","../../lumino/packages/widgets/src/boxengine.ts","../../lumino/packages/widgets/src/title.ts","../../lumino/packages/widgets/src/widget.ts","../../lumino/packages/widgets/src/layout.ts","../../lumino/packages/widgets/src/panellayout.ts","../../lumino/packages/widgets/src/utils.ts","../../lumino/packages/widgets/src/splitlayout.ts","../../lumino/packages/widgets/src/accordionlayout.ts","../../lumino/packages/widgets/src/panel.ts","../../lumino/packages/widgets/src/splitpanel.ts","../../lumino/packages/widgets/src/accordionpanel.ts","../../lumino/packages/widgets/src/boxlayout.ts","../../lumino/packages/widgets/src/boxpanel.ts","../../lumino/packages/widgets/src/commandpalette.ts","../../lumino/packages/widgets/src/menu.ts","../../lumino/packages/widgets/src/contextmenu.ts","../../lumino/packages/widgets/src/tabbar.ts","../../lumino/packages/widgets/src/docklayout.ts","../../lumino/packages/widgets/src/dockpanel.ts","../../lumino/packages/widgets/src/focustracker.ts","../../lumino/packages/widgets/src/gridlayout.ts","../../lumino/packages/widgets/src/menubar.ts","../../lumino/packages/widgets/src/scrollbar.ts","../../lumino/packages/widgets/src/singletonlayout.ts","../../lumino/packages/widgets/src/stackedlayout.ts","../../lumino/packages/widgets/src/stackedpanel.ts","../../lumino/packages/widgets/src/tabpanel.ts","../src/layouts/lumino/widgetAdapter.ts","../src/layouts/lumino/styles.ts","../src/layouts/lumino/theme.ts","../src/util/predicates.ts","../src/util/xml.ts","../src/layouts/lumino/dockPanel.ts","../src/layouts/lumino/splitter.ts","../node_modules/internmap/src/index.js","../node_modules/d3-array/src/map.js","../node_modules/d3-dispatch/src/dispatch.js","../node_modules/d3-selection/src/namespaces.js","../node_modules/d3-selection/src/namespace.js","../node_modules/d3-selection/src/creator.js","../node_modules/d3-selection/src/selector.js","../node_modules/d3-selection/src/array.js","../node_modules/d3-selection/src/selectorAll.js","../node_modules/d3-selection/src/matcher.js","../node_modules/d3-selection/src/selection/selectChild.js","../node_modules/d3-selection/src/selection/selectChildren.js","../node_modules/d3-selection/src/selection/sparse.js","../node_modules/d3-selection/src/selection/enter.js","../node_modules/d3-selection/src/constant.js","../node_modules/d3-selection/src/selection/data.js","../node_modules/d3-selection/src/selection/sort.js","../node_modules/d3-selection/src/selection/attr.js","../node_modules/d3-selection/src/window.js","../node_modules/d3-selection/src/selection/style.js","../node_modules/d3-selection/src/selection/property.js","../node_modules/d3-selection/src/selection/classed.js","../node_modules/d3-selection/src/selection/text.js","../node_modules/d3-selection/src/selection/html.js","../node_modules/d3-selection/src/selection/raise.js","../node_modules/d3-selection/src/selection/lower.js","../node_modules/d3-selection/src/selection/insert.js","../node_modules/d3-selection/src/selection/remove.js","../node_modules/d3-selection/src/selection/clone.js","../node_modules/d3-selection/src/selection/on.js","../node_modules/d3-selection/src/selection/dispatch.js","../node_modules/d3-selection/src/selection/index.js","../node_modules/d3-selection/src/select.js","../node_modules/d3-selection/src/pointer.js","../node_modules/d3-selection/src/sourceEvent.js","../node_modules/d3-selection/src/selection/select.js","../node_modules/d3-selection/src/selection/selectAll.js","../node_modules/d3-selection/src/selection/filter.js","../node_modules/d3-selection/src/selection/exit.js","../node_modules/d3-selection/src/selection/join.js","../node_modules/d3-selection/src/selection/merge.js","../node_modules/d3-selection/src/selection/order.js","../node_modules/d3-selection/src/selection/call.js","../node_modules/d3-selection/src/selection/nodes.js","../node_modules/d3-selection/src/selection/node.js","../node_modules/d3-selection/src/selection/size.js","../node_modules/d3-selection/src/selection/empty.js","../node_modules/d3-selection/src/selection/each.js","../node_modules/d3-selection/src/selection/append.js","../node_modules/d3-selection/src/selection/datum.js","../node_modules/d3-selection/src/selection/iterator.js","../node_modules/d3-drag/src/noevent.js","../node_modules/d3-drag/src/nodrag.js","../node_modules/d3-color/src/define.js","../node_modules/d3-color/src/color.js","../node_modules/d3-interpolate/src/constant.js","../node_modules/d3-interpolate/src/color.js","../node_modules/d3-interpolate/src/rgb.js","../node_modules/d3-interpolate/src/numberArray.js","../node_modules/d3-interpolate/src/array.js","../node_modules/d3-interpolate/src/date.js","../node_modules/d3-interpolate/src/number.js","../node_modules/d3-interpolate/src/object.js","../node_modules/d3-interpolate/src/string.js","../node_modules/d3-interpolate/src/value.js","../node_modules/d3-interpolate/src/transform/decompose.js","../node_modules/d3-interpolate/src/transform/parse.js","../node_modules/d3-interpolate/src/transform/index.js","../node_modules/d3-interpolate/src/zoom.js","../node_modules/d3-timer/src/timer.js","../node_modules/d3-timer/src/timeout.js","../node_modules/d3-transition/src/transition/schedule.js","../node_modules/d3-transition/src/interrupt.js","../node_modules/d3-transition/src/transition/tween.js","../node_modules/d3-transition/src/transition/interpolate.js","../node_modules/d3-transition/src/transition/attr.js","../node_modules/d3-transition/src/transition/attrTween.js","../node_modules/d3-transition/src/transition/delay.js","../node_modules/d3-transition/src/transition/duration.js","../node_modules/d3-transition/src/transition/ease.js","../node_modules/d3-transition/src/transition/on.js","../node_modules/d3-transition/src/transition/selection.js","../node_modules/d3-transition/src/transition/style.js","../node_modules/d3-transition/src/transition/styleTween.js","../node_modules/d3-transition/src/transition/textTween.js","../node_modules/d3-transition/src/transition/index.js","../node_modules/d3-transition/src/transition/select.js","../node_modules/d3-transition/src/transition/selectAll.js","../node_modules/d3-transition/src/transition/filter.js","../node_modules/d3-transition/src/transition/merge.js","../node_modules/d3-transition/src/transition/transition.js","../node_modules/d3-transition/src/transition/text.js","../node_modules/d3-transition/src/transition/remove.js","../node_modules/d3-transition/src/transition/easeVarying.js","../node_modules/d3-transition/src/transition/end.js","../node_modules/d3-transition/src/selection/transition.js","../node_modules/d3-ease/src/cubic.js","../node_modules/d3-transition/src/selection/index.js","../node_modules/d3-transition/src/selection/interrupt.js","../node_modules/d3-path/src/path.js","../node_modules/d3-format/src/formatDecimal.js","../node_modules/d3-format/src/formatSpecifier.js","../node_modules/d3-format/src/formatPrefixAuto.js","../node_modules/d3-format/src/formatRounded.js","../node_modules/d3-format/src/formatTypes.js","../node_modules/d3-format/src/identity.js","../node_modules/d3-format/src/locale.js","../node_modules/d3-format/src/defaultLocale.js","../node_modules/d3-format/src/formatGroup.js","../node_modules/d3-format/src/formatNumerals.js","../node_modules/d3-format/src/formatTrim.js","../node_modules/d3-format/src/exponent.js","../node_modules/d3-hierarchy/src/hierarchy/count.js","../node_modules/d3-hierarchy/src/hierarchy/index.js","../node_modules/d3-hierarchy/src/accessors.js","../node_modules/d3-hierarchy/src/constant.js","../node_modules/d3-hierarchy/src/treemap/round.js","../node_modules/d3-hierarchy/src/treemap/dice.js","../node_modules/d3-hierarchy/src/treemap/slice.js","../node_modules/d3-hierarchy/src/hierarchy/each.js","../node_modules/d3-hierarchy/src/hierarchy/eachAfter.js","../node_modules/d3-hierarchy/src/hierarchy/eachBefore.js","../node_modules/d3-hierarchy/src/hierarchy/find.js","../node_modules/d3-hierarchy/src/hierarchy/sum.js","../node_modules/d3-hierarchy/src/hierarchy/sort.js","../node_modules/d3-hierarchy/src/hierarchy/path.js","../node_modules/d3-hierarchy/src/hierarchy/ancestors.js","../node_modules/d3-hierarchy/src/hierarchy/descendants.js","../node_modules/d3-hierarchy/src/hierarchy/leaves.js","../node_modules/d3-hierarchy/src/hierarchy/links.js","../node_modules/d3-hierarchy/src/hierarchy/iterator.js","../node_modules/d3-hierarchy/src/treemap/squarify.js","../node_modules/d3-scale/src/init.js","../node_modules/d3-scale/src/ordinal.js","../node_modules/d3-scale-chromatic/src/colors.js","../node_modules/d3-scale-chromatic/src/categorical/Tableau10.js","../node_modules/d3-shape/src/constant.js","../node_modules/d3-shape/src/math.js","../node_modules/d3-shape/src/arc.js","../node_modules/d3-shape/src/array.js","../node_modules/d3-shape/src/descending.js","../node_modules/d3-shape/src/identity.js","../node_modules/d3-zoom/src/constant.js","../node_modules/d3-zoom/src/event.js","../node_modules/d3-zoom/src/transform.js","../node_modules/d3-zoom/src/noevent.js","../node_modules/d3-zoom/src/zoom.js","../src/layouts/zoom.ts","../src/legacy/Utility.ts","../src/legacy/SVGWidget.ts","../src/legacy/Class.ts","../src/legacy/Widget.ts","../src/pie/pie.ts","../node_modules/d3-shape/src/pie.js","../node_modules/@hpcc-js/util/src/math.ts","../src/preview/preview.ts","../node_modules/d3-sankey/node_modules/d3-array/src/max.js","../node_modules/d3-sankey/node_modules/d3-array/src/min.js","../node_modules/d3-sankey/node_modules/d3-array/src/sum.js","../node_modules/d3-sankey/src/align.js","../node_modules/d3-sankey/src/constant.js","../node_modules/d3-sankey/src/sankey.js","../node_modules/d3-sankey/node_modules/d3-path/src/path.js","../node_modules/d3-sankey/node_modules/d3-shape/src/constant.js","../node_modules/d3-sankey/node_modules/d3-shape/src/point.js","../node_modules/d3-sankey/node_modules/d3-shape/src/array.js","../node_modules/d3-sankey/node_modules/d3-shape/src/link/index.js","../node_modules/d3-sankey/src/sankeyLinkHorizontal.js","../src/sankey/sankeyFunc.ts","../node_modules/d3-array/src/union.js","../src/sankey/sankey.ts","../src/treemap/treemapFunc.ts","../node_modules/d3-hierarchy/src/treemap/binary.js","../node_modules/d3-hierarchy/src/treemap/sliceDice.js","../node_modules/d3-array/src/descending.js","../node_modules/d3-hierarchy/src/treemap/index.js","../src/treemap/treemap.ts"],"sourcesContent":["export function css(templateData: TemplateStringsArray, ...args: any[]): string {\r\n    let retVal = templateData[0];\r\n    for (let i = 0; i < args.length; ++i) {\r\n        retVal += String(args[i]);\r\n        retVal += templateData[i + 1];\r\n    }\r\n    return retVal;\r\n}\r\n\r\nexport function display(display): string {\r\n    return `\\\r\n:host([hidden]) {\r\n    display: none\r\n}\r\n\r\n:host {\r\n    display: ${display}\r\n}`;\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","export type StringAnyMap = { [key: string]: any };\n\nexport class Dictionary<T> {\n    private store: { [key: string]: T } = {};\n\n    constructor(attrs?: StringAnyMap) {\n        if (attrs) {\n            for (const key in attrs) {\n                this.set(key, attrs[key]);\n            }\n        }\n    }\n\n    set(key: string, value: T): T {\n        const retVal: T = this.store[key];\n        this.store[key] = value;\n        return retVal;\n    }\n\n    get(key: string): T {\n        return this.store[key];\n    }\n\n    has(key: string) {\n        return this.store[key] !== undefined;\n    }\n\n    remove(key: string) {\n        delete this.store[key];\n    }\n\n    keys(): string[] {\n        const retVal: string[] = [];\n        for (const key in this.store) {\n            retVal.push(key);\n        }\n        return retVal;\n    }\n\n    values(): T[] {\n        const retVal: T[] = [];\n        for (const key in this.store) {\n            retVal.push(this.store[key]);\n        }\n        return retVal;\n    }\n}\n\nexport class DictionaryNoCase<T> extends Dictionary<T> {\n    constructor(attrs?: StringAnyMap) {\n        super(attrs);\n    }\n\n    set(key: string, value: T): T {\n        return super.set(key.toLowerCase(), value);\n    }\n\n    get(key: string): T {\n        return super.get(key.toLowerCase());\n    }\n\n    has(key: string) {\n        return super.has(key.toLowerCase());\n    }\n\n    remove(key: string) {\n        return super.remove(key.toLowerCase());\n    }\n}\n","export class GraphItem<S, V, E> {\n    protected _graph: Graph<S, V, E>;\n    readonly parent: Subgraph<S, V, E> | null;\n    readonly props: { [key: string]: any } = {};\n\n    constructor(graph: Graph<S, V, E>, parent: Subgraph<S, V, E> | null) {\n        this._graph = graph;\n        this.parent = parent;\n    }\n}\n\nexport class Subgraph<S, V, E> extends GraphItem<S, V, E> {\n    readonly subgraphs: Array<Subgraph<S, V, E>> = [];\n    readonly vertices: Array<Vertex<S, V, E>> = [];\n    readonly edges: Array<Edge<S, V, E>> = [];\n    readonly _?: S;\n\n    constructor(graph: Graph<S, V, E>, parent: Subgraph<S, V, E> | null, _?: S) {\n        super(graph, parent);\n        if (parent) {  //  Only needed for dummy root\n            parent._addSubgraph(this);\n        }\n        this._ = _;\n    }\n\n    remove(full: boolean = true): void {\n        this._graph.removeSubgraph(this, full);\n    }\n\n    createSubgraph(_?: S): Subgraph<S, V, E> {\n        return this._graph.createSubgraph(this, _);\n    }\n\n    _addSubgraph(subgraph: Subgraph<S, V, E>) {\n        if (this.subgraphs.indexOf(subgraph) >= 0) {\n            throw new Error(\"Subgraph already exists\");\n        }\n        this.subgraphs.push(subgraph);\n    }\n\n    _removeSubgraph(subgraph: Subgraph<S, V, E>) {\n        const idx = this.subgraphs.indexOf(subgraph);\n        if (idx < 0) {\n            throw new Error(\"Subgraph does not exist\");\n        }\n        this.subgraphs.splice(idx, 1);\n    }\n\n    removeAllSubgraphs() {\n        for (let i = this.subgraphs.length - 1; i >= 0; --i) {\n            this._graph.removeSubgraph(this.subgraphs[i], true);\n        }\n    }\n\n    createVertex(_?: V): Vertex<S, V, E> {\n        return this._graph.createVertex(this, _);\n    }\n\n    _addVertex(vertex: Vertex<S, V, E>) {\n        if (this.vertices.indexOf(vertex) >= 0) {\n            throw new Error(\"Vertex already exists\");\n        }\n        this.vertices.push(vertex);\n    }\n\n    _removeVertex(vertex: Vertex<S, V, E>) {\n        const idx = this.vertices.indexOf(vertex);\n        if (idx < 0) {\n            throw new Error(\"Vertex does not exist\");\n        }\n        this.vertices.splice(idx, 1);\n    }\n\n    removeAllVertices() {\n        for (let i = this.vertices.length - 1; i >= 0; --i) {\n            this._graph.removeVertex(this.vertices[i], true);\n        }\n    }\n\n    createEdge(source: Vertex<S, V, E>, target: Vertex<S, V, E>, _?: E): Edge<S, V, E> {\n        return this._graph.createEdge(this, source, target, _);\n    }\n\n    _addEdge(edge: Edge<S, V, E>) {\n        if (this.edges.indexOf(edge) >= 0) {\n            throw new Error(\"Edge already exists\");\n        }\n        this.edges.push(edge);\n    }\n\n    _removeEdge(edge: Edge<S, V, E>) {\n        const idx = this.edges.indexOf(edge);\n        if (idx < 0) {\n            throw new Error(\"Edge does not exist\");\n        }\n        this.edges.splice(idx, 1);\n    }\n\n    _add(item: Subgraph<S, V, E> | Vertex<S, V, E> | Edge<S, V, E>) {\n        if (item instanceof Subgraph) {\n            this._addSubgraph(item);\n        } else if (item instanceof Vertex) {\n            this._addVertex(item);\n        } else {\n            this._addEdge(item);\n        }\n    }\n}\n\nexport class Vertex<S, V, E> extends GraphItem<S, V, E> {\n    readonly inEdges: Array<Edge<S, V, E>> = [];\n    readonly outEdges: Array<Edge<S, V, E>> = [];\n    get edges(): ReadonlyArray<Edge<S, V, E>> {\n        return [...this.inEdges, ...this.outEdges];\n    }\n    readonly _?: V;\n\n    constructor(graph: Graph<S, V, E>, parent: Subgraph<S, V, E>, _?: V) {\n        super(graph, parent);\n        parent._addVertex(this);\n        this._ = _;\n    }\n\n    remove(full: boolean = true, _?: (source: V, target: V) => E) {\n        return this._graph.removeVertex(this, full, _);\n    }\n\n    addInEdge(edge: Edge<S, V, E>) {\n        this.inEdges.push(edge);\n    }\n\n    removeInEdge(edge: Edge<S, V, E>) {\n        const idx = this.inEdges.indexOf(edge);\n        if (idx < 0) {\n            throw new Error(\"In edge does not exist\");\n        }\n        this.inEdges.splice(idx, 1);\n    }\n\n    addOutEdge(edge: Edge<S, V, E>) {\n        this.outEdges.push(edge);\n    }\n\n    removeOutEdge(edge: Edge<S, V, E>) {\n        const idx = this.outEdges.indexOf(edge);\n        if (idx < 0) {\n            throw new Error(\"Out edge does not exist\");\n        }\n        this.outEdges.splice(idx, 1);\n    }\n}\n\nexport class Edge<S, V, E> extends GraphItem<S, V, E> {\n    readonly source: Vertex<S, V, E>;\n    readonly target: Vertex<S, V, E>;\n    readonly _?: E;\n\n    constructor(graph: Graph<S, V, E>, parent: Subgraph<S, V, E>, source: Vertex<S, V, E>, target: Vertex<S, V, E>, _?: E) {\n        super(graph, parent);\n        if (!source) {\n            throw new Error(\"Missing source vertex\");\n        }\n        if (!target) {\n            throw new Error(\"Missing target vertex\");\n        }\n        parent._addEdge(this);\n        this.source = source;\n        this.source.addOutEdge(this);\n        this.target = target;\n        this.target.addInEdge(this);\n        this._ = _;\n    }\n\n    remove(): void {\n        this._graph.removeEdge(this);\n    }\n}\n\nexport class Graph<S = undefined, V = undefined, E = undefined> {\n    readonly root: Subgraph<S, V, E>;\n    private _allSubgraphs: Array<Subgraph<S, V, E>> = [];\n    private _allSubgraphsMap: { [id: string]: Subgraph<S, V, E> } = {};\n    private _allVertices: Array<Vertex<S, V, E>> = [];\n    private _allVerticesMap: { [id: string]: Vertex<S, V, E> } = {};\n    private _allEdges: Array<Edge<S, V, E>> = [];\n    private _allEdgesMap: { [id: string]: Edge<S, V, E> } = {};\n\n    idOf: (item: Subgraph<S, V, E> | Vertex<S, V, E> | Edge<S, V, E>) => string;\n\n    constructor(idOf: (item: Subgraph<S, V, E> | Vertex<S, V, E> | Edge<S, V, E>) => string = item => \"\" + item._, _?: S) {\n        this.root = new Subgraph(this, null, _);\n        this.idOf = idOf;\n    }\n\n    createSubgraph(parent?: Subgraph<S, V, E>, _?: S): Subgraph<S, V, E> {\n        const retVal = new Subgraph(this, parent || this.root, _);\n        this._allSubgraphs.push(retVal);\n        this._allSubgraphsMap[this.idOf(retVal)] = retVal;\n        return retVal;\n    }\n\n    removeSubgraph(subgraph: Subgraph<S, V, E>, full: boolean = true) {\n        const idx = this._allSubgraphs.indexOf(subgraph);\n        if (idx < 0) {\n            throw new Error(\"Subgraph does not exist\");\n        }\n        this._allSubgraphs.splice(idx, 1);\n        delete this._allSubgraphsMap[this.idOf(subgraph)];\n        if (subgraph.parent) {\n            subgraph.parent._removeSubgraph(subgraph);\n        }\n        subgraph.edges.forEach(edge => full ? this.removeEdge(edge) : subgraph.parent!._addEdge(edge));\n        subgraph.vertices.forEach(vertex => full ? this.removeVertex(vertex, full) : subgraph.parent!._addVertex(vertex));\n        subgraph.subgraphs.forEach(childSubgraph => full ? this.removeSubgraph(childSubgraph, full) : subgraph.parent!._addSubgraph(childSubgraph)\n        );\n    }\n\n    get subgraphs(): ReadonlyArray<Subgraph<S, V, E>> {\n        return this._allSubgraphs;\n    }\n\n    subgraph(id: string): Subgraph<S, V, E> {\n        return this._allSubgraphsMap[id];\n    }\n\n    createVertex(parent: Subgraph<S, V, E>, _?: V): Vertex<S, V, E> {\n        const retVal = new Vertex(this, parent, _);\n        this._allVertices.push(retVal);\n        this._allVerticesMap[this.idOf(retVal)] = retVal;\n        return retVal;\n    }\n\n    removeVertex(vertex: Vertex<S, V, E>, full: boolean = true, _?: (source: V, target: V) => E) {\n        const idx = this._allVertices.indexOf(vertex);\n        if (idx < 0) {\n            throw new Error(\"Vertex does not exist\");\n        }\n        this._allVertices.splice(idx, 1);\n        delete this._allVerticesMap[this.idOf(vertex)];\n        if (vertex.parent) {\n            vertex.parent._removeVertex(vertex);\n        }\n        if (!full) {\n            vertex.inEdges.forEach(inEdge => {\n                vertex.outEdges.forEach(outEdge => {\n                    this.createEdge(this.root, inEdge.source, outEdge.target, _ ? _(inEdge.source._!, outEdge.target._!) : undefined);\n                });\n            });\n        }\n        vertex.inEdges.forEach(edge => this.removeEdge(edge));\n        vertex.outEdges.forEach(edge => this.removeEdge(edge));\n    }\n\n    get vertices(): ReadonlyArray<Vertex<S, V, E>> {\n        return this._allVertices;\n    }\n\n    vertex(id: string): Vertex<S, V, E> {\n        return this._allVerticesMap[id];\n    }\n\n    createEdge(parent: Subgraph<S, V, E>, source: Vertex<S, V, E>, target: Vertex<S, V, E>, _?: E): Edge<S, V, E> {\n        const retVal = new Edge<S, V, E>(this, parent, source, target, _);\n        this._allEdges.push(retVal);\n        this._allEdgesMap[this.idOf(retVal)] = retVal;\n        return retVal;\n    }\n\n    removeEdge(edge: Edge<S, V, E>) {\n        const idx = this._allEdges.indexOf(edge);\n        if (idx < 0) {\n            throw new Error(\"Edge does not exist\");\n        }\n        this._allEdges.splice(idx, 1);\n        delete this._allEdgesMap[this.idOf(edge)];\n        if (edge.parent) {\n            edge.parent._removeEdge(edge);\n        }\n        edge.source.removeOutEdge(edge);\n        edge.target.removeInEdge(edge);\n    }\n\n    get edges(): ReadonlyArray<Edge<S, V, E>> {\n        return this._allEdges;\n    }\n\n    edge(id: string): Edge<S, V, E> {\n        return this._allEdgesMap[id];\n    }\n\n    private _walk(parent: Subgraph<S, V, E>, visitor: (item: GraphItem<S, V, E>) => \"abort\" | \"stepover\" | void): true | false | void {\n        for (const subgraph of parent.subgraphs) {\n            switch (visitor(subgraph)) {\n                case \"abort\":\n                    return true;\n                case \"stepover\":\n                    break;\n                default:\n                    if (this._walk(subgraph, visitor)) return true;\n            }\n        }\n        for (const vertex of parent.vertices) {\n            if (visitor(vertex) === \"abort\") return true;\n        }\n    }\n\n    walk(visitor: (visitor: GraphItem<S, V, E>) => \"abort\" | \"stepover\" | void) {\n        this._walk(this.root, visitor);\n        for (const edge of this._allEdges) {\n            if (visitor(edge) === \"abort\") return true;\n        }\n    }\n\n    clone(): Graph<S, V, E> {\n        const ctor: new (idOf: (item: Subgraph<S, V, E> | Vertex<S, V, E> | Edge<S, V, E>) => string, _?: S) => Graph<S, V, E> = this.constructor as any;\n        const retVal = new ctor(this.idOf, this.root._);\n        const map = ObjMap();\n        map.put(this.root, retVal.root);\n        this.walk(item => {\n            const parent = map.get(item.parent);\n            if (item instanceof Subgraph) {\n                map.put(item, parent.createSubgraph(item._));\n            } else if (item instanceof Vertex) {\n                map.put(item, parent.createVertex(item._));\n            } else if (item instanceof Edge) {\n                const source = map.get(item.source);\n                const target = map.get(item.target);\n                parent.createEdge(source, target, item._);\n            }\n        });\n        return retVal;\n    }\n}\n\nfunction ObjMap() {\n    const keys: any[] = [];\n    const values: any[] = [];\n\n    return {\n        put(key: any, value: any) {\n            const index = keys.indexOf(key);\n            if (index === -1) {\n                keys.push(key);\n                values.push(value);\n            } else {\n                values[index] = value;\n            }\n        },\n        get(key: any) {\n            return values[keys.indexOf(key)];\n        }\n    };\n}\n","import { compare2 } from \"./array\";\n\ntype ID = string | number;\n\nclass GraphItem<T = any> {\n    protected _graph: Graph2;\n    _: T;\n    id(): ID {\n        return this._graph.id(this._);\n    }\n\n    constructor(g: Graph2, _: T) {\n        this._graph = g;\n        this._ = _;\n    }\n}\n\nclass ChildGraphItem<S = any> extends GraphItem<S> {\n\n    private _parent: Subgraph | undefined;\n\n    constructor(g: Graph2, _: S) {\n        super(g, _);\n    }\n\n    clearParent(): this {\n        if (this._parent) {\n            this._parent.removeChild(this);\n            delete this._parent;\n        }\n        return this;\n    }\n\n    parent(): Subgraph | undefined;\n    parent(_: Subgraph | undefined): this;\n    parent(_?: Subgraph): Subgraph | undefined | this {\n        if (arguments.length === 0) return this._parent;\n        if (this._parent !== _) {\n            if (this._parent) {\n                this._parent.removeChild(this);\n            }\n            this._parent = _;\n            if (this._parent) {\n                this._parent.addChild(this);\n            }\n        }\n        return this;\n    }\n}\n\nclass Subgraph<S = any> extends ChildGraphItem<S> {\n\n    private _children: ChildGraphItem[] = [];\n\n    constructor(g: Graph2, _: S) {\n        super(g, _);\n    }\n\n    children(): ChildGraphItem[] {\n        return this._children;\n    }\n\n    addChild(_: ChildGraphItem) {\n        this._children.push(_);\n    }\n\n    removeChild(_: ChildGraphItem) {\n        this._children = this._children.filter(row => row.id !== _.id);\n    }\n}\n\nclass Vertex<V = any> extends ChildGraphItem<V> {\n\n    private _inEdges: Edge[] = [];\n    private _outEdges: Edge[] = [];\n\n    constructor(g: Graph2, _: V) {\n        super(g, _);\n    }\n\n    edges() {\n        return [...this._inEdges, ...this._outEdges];\n    }\n\n    edgeCount() {\n        return this._outEdges.length + this._inEdges.length;\n    }\n\n    inEdges() {\n        return this._inEdges;\n    }\n\n    addInEdge(e: Edge) {\n        this._inEdges.push(e);\n    }\n\n    removeInEdge(id: ID) {\n        this._inEdges = this._inEdges.filter(e => e._.id !== id);\n    }\n\n    outEdges() {\n        return this._outEdges;\n    }\n\n    addOutEdge(e: Edge) {\n        this._outEdges.push(e);\n    }\n\n    removeOutEdge(id: ID) {\n        this._outEdges = this._outEdges.filter(e => e._.id !== id);\n    }\n}\n\nclass Edge<E = any> extends ChildGraphItem<E> {\n\n    _source: Vertex;\n    _target: Vertex;\n\n    constructor(g: Graph2, _: E, source: Vertex, target: Vertex) {\n        super(g, _);\n        this._source = source;\n        this._target = target;\n    }\n}\n\ntype SubgraphMap<T> = { [id: string]: Subgraph<T> };\ntype VertexMap<T> = { [id: string]: Vertex<T> };\ntype EdgeMap<T> = { [id: string]: Edge<T> };\n\nexport type HierarchyFormatter<V, S> = (type: \"subgraph\" | \"vertex\", item: V | S, children?: object[]) => object;\n\nexport class Graph2<V = any, E = any, S = any> {\n\n    private _directed: boolean;\n    private _subgraphMap: SubgraphMap<S> = {};\n    private _vertexMap: VertexMap<V> = {};\n    private _edgeMap: EdgeMap<E> = {};\n\n    constructor(directed = true) {\n        this._directed = directed;\n    }\n\n    clear(): this {\n        this._subgraphMap = {};\n        this._vertexMap = {};\n        this._edgeMap = {};\n        return this;\n    }\n\n    clearParents(): this {\n        for (const key in this._subgraphMap) {\n            this._subgraphMap[key].clearParent();\n        }\n        for (const key in this._vertexMap) {\n            this._vertexMap[key].clearParent();\n        }\n        return this;\n    }\n\n    isDirected(): boolean {\n        return this._directed;\n    }\n\n    _idFunc = (_: any): string => typeof _.id === \"function\" ? _.id() : _.id;\n    idFunc(_: (_: S | V | E) => string): this {\n        this._idFunc = _;\n        return this;\n    }\n\n    _sourceFunc = (_: any): ID => typeof _.source === \"function\" ? _.source() : _.source;\n    sourceFunc(_: (_: E) => ID): this {\n        this._sourceFunc = _;\n        return this;\n    }\n\n    _targetFunc = (_: any): ID => typeof _.target === \"function\" ? _.target() : _.target;\n    targetFunc(_: (_: E) => ID): this {\n        this._targetFunc = _;\n        return this;\n    }\n\n    _updateFunc = (before: S | V | E, after: S | V | E): S | V | E => after;\n    updateFunc(_: (before: S | V | E, after: S | V | E) => S | V | E): this {\n        this._updateFunc = _;\n        return this;\n    }\n\n    id(_: S | V | E): string {\n        return this._idFunc(_);\n    }\n\n    type(id: ID): \"S\" | \"V\" | \"E\" | \"\" {\n        if (this.subgraphExists(id)) return \"S\";\n        if (this.vertexExists(id)) return \"V\";\n        if (this.edgeExists(id)) return \"E\";\n        return \"\";\n    }\n\n    isSubgraph(_: S | V | E): _ is S {\n        return this.subgraphExists(this.id(_));\n    }\n\n    isVertex(_: S | V | E): _ is V {\n        return this.vertexExists(this.id(_));\n    }\n\n    isEdge(_: S | V | E): _ is E {\n        return this.edgeExists(this.id(_));\n    }\n\n    allItems(): Array<S | V | E> {\n        return [...this.allSubgraphs(), ...this.allVertices(), ...this.allEdges()];\n    }\n\n    item(id: ID): S | V | E | undefined {\n        if (this.subgraphExists(id)) return this.subgraph(id);\n        if (this.vertexExists(id)) return this.vertex(id);\n        if (this.edgeExists(id)) return this.edge(id);\n        return undefined;\n    }\n\n    itemExists(id: ID): boolean {\n        return this.edgeExists(id) || this.vertexExists(id) || this.subgraphExists(id);\n    }\n\n    // Subgraphs  ---\n    allSubgraphs(): S[] {\n        const retVal: S[] = [];\n        for (const key in this._subgraphMap) {\n            retVal.push(this._subgraphMap[key]._);\n        }\n        return retVal;\n    }\n\n    subgraphs(): S[] {\n        const retVal: S[] = [];\n        for (const key in this._subgraphMap) {\n            if (this._subgraphMap[key].parent() === undefined) {\n                retVal.push(this._subgraphMap[key]._);\n            }\n        }\n        return retVal;\n    }\n\n    subgraphExists(id: ID): boolean {\n        return !!this._subgraphMap[id];\n    }\n\n    subgraph(id: ID): S {\n        return this._subgraphMap[id]._;\n    }\n\n    subgraphSubgraphs(id: ID): S[] {\n        return this._subgraphMap[id].children().filter(child => this.isSubgraph(child._)).map(child => child._);\n    }\n\n    subgraphVertices(id: ID): V[] {\n        return this._subgraphMap[id].children().filter(child => this.isVertex(child._)).map(child => child._);\n    }\n\n    subgraphEdges(id: ID): E[] {\n        return this._subgraphMap[id].children().filter(child => this.isEdge(child._)).map(child => child._);\n    }\n\n    addSubgraph(s: S, parent?: S): this {\n        const s_id = this._idFunc(s);\n        if (this._subgraphMap[s_id]) throw new Error(`Subgraph '${s_id}' already exists.`);\n        const subgraph = new Subgraph(this, s);\n        if (parent) {\n            const p_id = this._idFunc(parent);\n            if (!this._subgraphMap[p_id]) throw new Error(`Subgraph '${p_id}' does not exist.`);\n            subgraph.parent(this._subgraphMap[p_id]);\n        }\n        this._subgraphMap[s_id] = subgraph;\n        return this;\n    }\n\n    mergeSubgraphs(_subgraphs: S[] = []): this {\n        const sgDiff = compare2<S>(this.allSubgraphs(), _subgraphs, sg => this._idFunc(sg), this._updateFunc as any);\n        sgDiff.exit.forEach(sg => this.removeSubgraph(this._idFunc(sg)));\n        sgDiff.enter.forEach(sg => this.addSubgraph(sg));\n        sgDiff.update.forEach(sg => this.updateSubgraph(sg));\n        return this;\n    }\n\n    updateSubgraph(sg: S): this {\n        const sg_id = this._idFunc(sg);\n        const subgraph = this._subgraphMap[sg_id];\n        if (!subgraph) throw new Error(`Subgraph '${sg_id}' does not exist.`);\n        subgraph._ = sg;\n        return this;\n    }\n\n    removeSubgraph(id: ID, promoteChildren = true): this {\n        const sg = this._subgraphMap[id];\n        if (!sg) throw new Error(`Subgraph '${id}' does not exist.`);\n        sg.children().forEach(child => {\n            if (promoteChildren) {\n                child.parent(sg.parent());\n            } else {\n                if (child instanceof Subgraph) {\n                    this.removeSubgraph(child.id());\n                } else {\n                    this.removeVertex(child.id());\n                }\n            }\n        });\n        delete this._subgraphMap[id];\n        return this;\n    }\n\n    subgraphParent(id: ID): S | undefined;\n    subgraphParent(id: ID, parentID: ID): this;\n    subgraphParent(id: ID, parentID?: ID): S | undefined | this {\n        const item = this._subgraphMap[id];\n        if (!item) throw new Error(`Subgraph '${id}' does not exist.`);\n        if (parentID === void 0) {\n            const parent = item.parent();\n            return parent ? parent._ as S : undefined;\n        }\n        const parent = this._subgraphMap[parentID];\n        if (!parent) throw new Error(`Vertex parent '${parent}' does not exist.`);\n        item.parent(parent);\n        return this;\n    }\n\n    // Vertices  ---\n    allVertices(): V[] {\n        const retVal: V[] = [];\n        for (const key in this._vertexMap) {\n            retVal.push(this._vertexMap[key]._);\n        }\n        return retVal;\n    }\n\n    vertices(): V[] {\n        const retVal: V[] = [];\n        for (const key in this._vertexMap) {\n            if (this._vertexMap[key].parent() === undefined) {\n                retVal.push(this._vertexMap[key]._);\n            }\n        }\n        return retVal;\n    }\n\n    vertexExists(id: ID): boolean {\n        return !!this._vertexMap[id];\n    }\n\n    vertex(id: ID): V {\n        return this._vertexMap[id]._;\n    }\n\n    allEdges(): E[] {\n        const retVal: E[] = [];\n        for (const key in this._edgeMap) {\n            retVal.push(this._edgeMap[key]._);\n        }\n        return retVal;\n    }\n\n    edges(): E[] {\n        const retVal: E[] = [];\n        for (const key in this._edgeMap) {\n            if (this._edgeMap[key].parent() === undefined) {\n                retVal.push(this._edgeMap[key]._);\n            }\n        }\n        return retVal;\n    }\n\n    vertexEdges(vertexID: string): E[] {\n        return this._vertexMap[vertexID].edges().map(e => e._);\n    }\n\n    inEdges(vertexID: string): E[] {\n        return this._vertexMap[vertexID].inEdges().map(e => e._);\n    }\n\n    outEdges(vertexID: string): E[] {\n        return this._vertexMap[vertexID].outEdges().map(e => e._);\n    }\n\n    private _neighbors(id: ID): Vertex[] {\n        return [...this._vertexMap[id].outEdges().map(e => e._target), ...this._vertexMap[id].inEdges().map(e => e._source)];\n    }\n\n    neighbors(id: ID): V[] {\n        return this._neighbors(id).map(n => n._);\n    }\n\n    singleNeighbors(id: ID): V[] {\n        return this._neighbors(id).filter(n => n.edgeCount() === 1).map(n => n._);\n    }\n\n    addVertex(v: V, parent?: S): this {\n        const v_id = this._idFunc(v);\n        if (this._vertexMap[v_id]) throw new Error(`Vertex '${v_id}' already exists.`);\n        const vertex = new Vertex(this, v);\n        if (parent) {\n            const p_id = this._idFunc(parent);\n            if (!this.subgraphExists(p_id)) throw new Error(`Subgraph '${p_id}' does not exist.`);\n            vertex.parent(this._subgraphMap[p_id]);\n        }\n        this._vertexMap[v_id] = vertex;\n        return this;\n    }\n\n    mergeVertices(_vertices: V[]): this {\n        const vDiff = compare2(this.allVertices(), _vertices, v => this._idFunc(v), this._updateFunc as any);\n        vDiff.exit.forEach(v => this.removeVertex(this._idFunc(v)));\n        vDiff.enter.forEach(v => this.addVertex(v));\n        vDiff.update.forEach(v => this.updateVertex(v));\n        return this;\n    }\n\n    updateVertex(v: V): this {\n        const v_id = this._idFunc(v);\n        const vertex = this._vertexMap[v_id];\n        if (!vertex) throw new Error(`Vertex '${v_id}' does not exist.`);\n        vertex._ = v;\n        return this;\n    }\n\n    removeVertex(id: ID): this {\n        const v = this._vertexMap[id];\n        if (!v) throw new Error(`Vertex '${id}' does not exist.`);\n        v.edges().forEach(e => {\n            this.removeEdge(e.id());\n        });\n        delete this._vertexMap[id];\n        return this;\n    }\n\n    vertexParent(id: ID): S | undefined;\n    vertexParent(id: ID, parentID: ID): this;\n    vertexParent(id: ID, parentID?: ID): S | undefined | this {\n        const item = this._vertexMap[id];\n        if (!item) throw new Error(`Vertex '${id}' does not exist.`);\n        if (parentID === void 0) {\n            const parent = item.parent();\n            return parent ? parent._ as S : undefined;\n        }\n        const parent = this._subgraphMap[parentID];\n        if (!parent) throw new Error(`Vertex parent '${parent}' does not exist.`);\n        item.parent(parent);\n        return this;\n    }\n\n    // Edges  ---\n    edgeExists(id: ID): boolean {\n        return !!this._edgeMap[id];\n    }\n\n    edge(id: ID): E {\n        return this._edgeMap[id]._;\n    }\n\n    addEdge(e: E, parent?: S): this {\n        const e_id = this._idFunc(e);\n        const e_source = this._sourceFunc(e);\n        const e_target = this._targetFunc(e);\n        if (this._edgeMap[e_id]) throw new Error(`Edge '${e_id}' already exists.`);\n        if (!this.vertexExists(e_source)) throw new Error(`Edge Source '${e_source}' does not exist.`);\n        if (!this.vertexExists(e_target)) throw new Error(`Edge Target '${e_target}' does not exist.`);\n        const edge = new Edge(this, e, this._vertexMap[e_source], this._vertexMap[e_target]);\n        if (parent) {\n            const p_id = this._idFunc(parent);\n            if (!this.subgraphExists(p_id)) throw new Error(`Subgraph '${p_id}' does not exist.`);\n            edge.parent(this._subgraphMap[p_id]);\n        }\n        this._edgeMap[e_id] = edge;\n        this._vertexMap[e_source].addOutEdge(edge);\n        this._vertexMap[e_target].addInEdge(edge);\n        return this;\n    }\n\n    mergeEdges(_edges: E[]): this {\n        const eDiff = compare2(this.allEdges(), _edges, e => this._idFunc(e), this._updateFunc as any);\n        eDiff.exit.forEach(e => this.removeEdge(this._idFunc(e)));\n        eDiff.enter.forEach(e => this.addEdge(e));\n        eDiff.update.forEach(e => this.updateEdge(e));\n        return this;\n    }\n\n    updateEdge(e: E): this {\n        const e_id = this._idFunc(e);\n        const edge = this._edgeMap[e_id];\n        if (!edge) throw new Error(`Edge '${e_id}' does not exist.`);\n        edge._ = e;\n        return this;\n    }\n\n    removeEdge(id: ID): this {\n        const e: Edge<E> = this._edgeMap[id];\n        if (!e) throw new Error(`Edge '${id}' does not exist.`);\n\n        const e_sourceID = this._idFunc(e._source._);\n        if (!this.vertexExists(e_sourceID)) throw new Error(`Edge Source'${e_sourceID}' does not exist.`);\n        this._vertexMap[e_sourceID].removeOutEdge(id);\n\n        const e_targetID = this._idFunc(e._target._);\n        if (!this.vertexExists(e_targetID)) throw new Error(`Edge Target'${e_targetID}' does not exist.`);\n        this._vertexMap[e_targetID].removeInEdge(id);\n\n        delete this._edgeMap[id];\n        return this;\n    }\n\n    protected _hwalk(item: Subgraph<S> | Vertex<V>, formatter: HierarchyFormatter<V, S>): object {\n        if (item instanceof Subgraph) {\n            return formatter(\"subgraph\", item._, item.children().map(child => this._hwalk(child as Subgraph<S> | Vertex<V>, formatter)));\n        } else {\n            return formatter(\"vertex\", item._);\n        }\n    }\n\n    hierarchy(formatter: HierarchyFormatter<V, S>): object[] {\n        const retVal: object[] = [];\n        for (const id in this._subgraphMap) {\n            const sg = this._subgraphMap[id];\n            if (sg.parent() === undefined) {\n                retVal.push(this._hwalk(sg, formatter));\n            }\n        }\n        for (const id in this._vertexMap) {\n            const v = this._vertexMap[id];\n            if (v.parent() === undefined) {\n                retVal.push(this._hwalk(v, formatter));\n            }\n        }\n        return retVal;\n    }\n\n    dijkstra(source: string, target: string): { ids: string[], len: number } {\n        const edges = this.allEdges();\n        const Q = new Set<string | number>();\n        const prev: { [key: string]: string } = {};\n        const dist: { [key: string]: number } = {};\n        const adj: { [key: string]: { [key: string]: number } } = {};\n\n        function vertex_with_min_dist(Q: Set<string | number>, dist: { [key: string]: number }) {\n            let min_distance = Infinity;\n            let u: string | number | null = null;\n\n            Q.forEach(v => {\n                if (dist[v] < min_distance) {\n                    min_distance = dist[v];\n                    u = v;\n                }\n            });\n            return u;\n        }\n\n        for (let i = 0; i < edges.length; i++) {\n            const v1 = this._sourceFunc(edges[i]);\n            const v2 = this._targetFunc(edges[i]);\n            const len = 1;\n\n            Q.add(v1);\n            Q.add(v2);\n\n            dist[v1] = Infinity;\n            dist[v2] = Infinity;\n\n            if (adj[v1] === undefined) adj[v1] = {};\n            if (adj[v2] === undefined) adj[v2] = {};\n\n            adj[v1][v2] = len;\n            adj[v2][v1] = len;\n        }\n\n        dist[source] = 0;\n\n        while (Q.size) {\n            const u = vertex_with_min_dist(Q, dist);\n            if (u === null) break;\n            const neighbors = Object.keys(adj[u]).filter(v => Q.has(v)); // Neighbor still in Q\n\n            Q.delete(u);\n\n            if (u === target) break; // Break when the target has been found\n\n            for (const v of neighbors) {\n                const alt = dist[u] + adj[u][v];\n                if (alt < dist[v]) {\n                    dist[v] = alt;\n                    prev[v] = u;\n                }\n            }\n        }\n\n        let u = target;\n        const ids = [u];\n        let len = 0;\n\n        while (prev[u] !== undefined) {\n            ids.unshift(prev[u]);\n            len += adj[u][prev[u]];\n            u = prev[u];\n        }\n        return { ids, len };\n    }\n\n    sort(v_id?: string): V[] {\n        const retVal: V[] = [];\n        const visited: { [id: string]: boolean } = {};\n\n        const visit = (vertex: Vertex<V>, ancestors: Vertex<V>[] = []) => {\n            const v_id = vertex.id();\n            if (visited[v_id]) return;\n            visited[v_id] = true;\n            ancestors.push(vertex);\n            vertex.outEdges().forEach(e => {\n                if (ancestors.indexOf(e._target) < 0) {\n                    visit(e._target, [...ancestors]);\n                }\n            });\n            retVal.unshift(vertex._);\n        };\n\n        if (v_id) {\n            visit(this._vertexMap[v_id]);\n        } else {\n            for (const key in this._vertexMap) {\n                visit(this._vertexMap[key]);\n            }\n        }\n\n        return retVal;\n    }\n}\n\nclass Set<T> {\n\n    private _content: T[] = [];\n    get size(): number {\n        return this._content.length;\n    }\n\n    has(_: T) {\n        return this._content.indexOf(_) >= 0;\n    }\n\n    add(_: T) {\n        if (!this.has(_)) {\n            this._content.push(_);\n        }\n    }\n\n    delete(_: T) {\n        const idx = this._content.indexOf(_);\n        if (idx >= 0) {\n            this._content.splice(idx, 1);\n        }\n    }\n\n    forEach(_: (value: T, index: number, array: T[]) => void) {\n        this._content.forEach(_);\n    }\n}\n","const isArray = Array.isArray;\nconst keyList = Object.keys;\nconst hasProp = Object.prototype.hasOwnProperty;\n\nexport function deepEquals(a: any, b: any) {\n    if (a === b) return true;\n\n    if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n        const arrA = isArray(a);\n        const arrB = isArray(b);\n        let i;\n        let length;\n        let key;\n\n        if (arrA && arrB) {\n            length = a.length;\n            if (length !== b.length) return false;\n            for (i = length; i-- !== 0;)\n                if (!deepEquals(a[i], b[i])) return false;\n            return true;\n        }\n\n        if (arrA !== arrB) return false;\n\n        const dateA = a instanceof Date;\n        const dateB = b instanceof Date;\n        if (dateA !== dateB) return false;\n        if (dateA && dateB) return a.getTime() === b.getTime();\n\n        const regexpA = a instanceof RegExp;\n        const regexpB = b instanceof RegExp;\n        if (regexpA !== regexpB) return false;\n        if (regexpA && regexpB) return a.toString() === b.toString();\n\n        const keys = keyList(a);\n        length = keys.length;\n\n        if (length !== keyList(b).length)\n            return false;\n\n        for (i = length; i-- !== 0;)\n            if (!hasProp.call(b, keys[i])) return false;\n\n        for (i = length; i-- !== 0;) {\n            key = keys[i];\n            if (!deepEquals(a[key], b[key])) return false;\n        }\n\n        return true;\n    }\n\n    return a !== a && b !== b;\n}\n\nexport function update<T>(origItem: T, newItem: T): T {\n    return deepEquals(origItem, newItem) ? origItem : newItem;\n}\n","declare const process: any;\n\nexport const root: any = typeof globalThis !== \"undefined\" ? globalThis : window;\nexport const isBrowser: boolean = typeof window !== \"undefined\" && root === window;\nexport const isNode: boolean = typeof process !== \"undefined\" && process.versions != null && process.versions.node != null;\nexport const isCI: boolean = isNode && process.env != null && (process.env.TRAVIS != null || process.env.GITHUB_ACTIONS != null);\n\nexport function getScriptSrc(partial: string) {\n    const scripts = document.scripts || [];\n    for (let i = document.scripts.length - 1; i >= 0; --i) {\n        const script = scripts[i];\n        if (script.src) {\n            const idx = script.src.indexOf(partial);\n            if (idx >= 0) {\n                return script.src.substring(0, idx);\n            }\n        }\n    }\n    return \"\";\n}\n","/**\n * A generic Stack\n */\nexport class Stack<T> {\n    private stack: T[] = [];\n\n    /**\n     * Push element onto the stack\n     *\n     * @param e - element to push\n     */\n    push(e: T) {\n        this.stack.push(e);\n        return e;\n    }\n\n    /**\n     * Pop element off the stack\n     */\n    pop(): T | undefined {\n        return this.stack.pop();\n    }\n\n    /**\n     * Top item on the stack\n     *\n     * @returns Top element on the stack\n     */\n    top(): T | undefined {\n        return this.stack.length ? this.stack[this.stack.length - 1] : undefined;\n    }\n\n    /**\n     * Depth of stack\n     *\n     * @returns Depth\n     */\n    depth(): number {\n        return this.stack.length;\n    }\n}\n","import { isNode } from \"./platform\";\nimport { Stack } from \"./stack\";\n\nexport enum Level {\n    debug,\n    info,\n    notice,\n    warning,\n    error,\n    critical,\n    alert,\n    emergency\n}\n\nconst colours: { [key: string]: string } = {\n    debug: \"cyan\",\n    info: \"green\",\n    notice: \"grey\",\n    warning: \"blue\",\n    error: \"red\",\n    critical: \"magenta\",\n    alert: \"magenta\",\n    emergency: \"magenta\"\n};\n\nexport interface Writer {\n    write?(dateTime: string, level: Level, id: string, msg: string): void;\n    rawWrite?(dateTime: string, level: Level, id: string, msg: string | object): void;\n}\n\nclass ConsoleWriter implements Writer {\n    write(dateTime: string, level: Level, id: string, msg: string) {\n        if (isNode) {\n            console.log(`[${dateTime}] ${Level[level].toUpperCase()} ${id}:  ${msg}`);\n        } else {\n            console.log(`[${dateTime}] %c${Level[level].toUpperCase()}%c ${id}:  ${msg}`, `color:${colours[Level[level]]}`, \"\");\n        }\n    }\n}\n\nexport class Logging {\n    private static _instance: Logging;\n    private _levelStack = new Stack<Level>();\n    private _level = Level.info;\n    private _filter: string = \"\";\n    private _writer: Writer = new ConsoleWriter();\n\n    public static Instance() {\n        return this._instance || (this._instance = new this());\n    }\n\n    private constructor() {\n    }\n\n    private stringify(obj: object): string {\n        const cache: any[] = [];\n        return JSON.stringify(obj, function (_key, value) {\n            if (typeof value === \"object\" && value !== null) {\n                if (cache.indexOf(value) !== -1) {\n                    return;\n                }\n                cache.push(value);\n            }\n            return value;\n        }, 2);\n    }\n\n    writer(): Writer;\n    writer(_: Writer): Logging;\n    writer(_?: Writer): Writer | Logging {\n        if (_ === void 0) return this._writer;\n        this._writer = _;\n        return this;\n    }\n\n    log(level: Level, id: string, msg: string | object) {\n        if (level < this._level) return;\n        if (this._filter && this._filter !== id) return;\n\n        const dateTime = new Date().toISOString();\n\n        if (this._writer.rawWrite) {\n            this._writer.rawWrite(dateTime, level, id, msg);\n        } else {\n            if (typeof msg !== \"string\") {\n                msg = this.stringify(msg);\n            }\n\n            if (this._writer.write) {\n                this._writer.write(dateTime, level, id, msg);\n            }\n        }\n    }\n\n    debug(id: string, msg: string | object) {\n        this.log(Level.debug, id, msg);\n    }\n\n    info(id: string, msg: string | object) {\n        this.log(Level.info, id, msg);\n    }\n\n    notice(id: string, msg: string | object) {\n        this.log(Level.notice, id, msg);\n    }\n\n    warning(id: string, msg: string | object) {\n        this.log(Level.warning, id, msg);\n    }\n\n    error(id: string, msg: string | object) {\n        this.log(Level.error, id, msg);\n    }\n\n    critical(id: string, msg: string | object) {\n        this.log(Level.critical, id, msg);\n    }\n\n    alert(id: string, msg: string | object) {\n        this.log(Level.alert, id, msg);\n    }\n\n    emergency(id: string, msg: string | object) {\n        this.log(Level.emergency, id, msg);\n    }\n\n    level(): Level;\n    level(_: Level): this;\n    level(_?: Level): Level | this {\n        if (_ === void 0) return this._level;\n        this._level = _;\n        return this;\n    }\n\n    pushLevel(_: Level): this {\n        this._levelStack.push(this._level);\n        this._level = _;\n        return this;\n    }\n\n    popLevel(): this {\n        this._level = this._levelStack.pop()!;\n        return this;\n    }\n\n    filter(): string;\n    filter(_: string): this;\n    filter(_?: string): string | this {\n        if (_ === void 0) return this._filter;\n        this._filter = _;\n        return this;\n    }\n}\nexport const logger = Logging.Instance();\n\nexport class ScopedLogging {\n    protected _scopeID: string;\n\n    constructor(scopeID: string) {\n        this._scopeID = scopeID;\n    }\n\n    debug(msg: string | object) {\n        logger.debug(this._scopeID, msg);\n    }\n\n    info(msg: string | object) {\n        logger.info(this._scopeID, msg);\n    }\n\n    notice(msg: string | object) {\n        logger.notice(this._scopeID, msg);\n    }\n\n    warning(msg: string | object) {\n        logger.warning(this._scopeID, msg);\n    }\n\n    error(msg: string | object) {\n        logger.error(this._scopeID, msg);\n    }\n\n    critical(msg: string | object) {\n        logger.critical(this._scopeID, msg);\n    }\n\n    alert(msg: string | object) {\n        logger.alert(this._scopeID, msg);\n    }\n\n    emergency(msg: string | object) {\n        logger.emergency(this._scopeID, msg);\n    }\n\n    pushLevel(_: Level): this {\n        logger.pushLevel(_);\n        return this;\n    }\n\n    popLevel(): this {\n        logger.popLevel();\n        return this;\n    }\n}\n\nexport function scopedLogger(scopeID: string, filter: boolean = false) {\n    if (filter) {\n        logger.filter(scopeID);\n    }\n    return new ScopedLogging(scopeID);\n}\n","import { IObserverHandle } from \"./observer\";\nimport { root } from \"./platform\";\n\nexport type RquestAnimationFrame = (callback: FrameRequestCallback) => number | undefined;\nexport type CancelAnimationFrame = (handle: number) => void | undefined;\n\nlet requestAnimationFrame: RquestAnimationFrame;\n// let cancelAnimationFrame: CancelAnimationFrame;\n\n(function () {\n    if (root.requestAnimationFrame) {\n        requestAnimationFrame = root.requestAnimationFrame;\n        // cancelAnimationFrame = root.cancelAnimationFrame;\n    } else {\n        let lastTime = 0;\n        requestAnimationFrame = function (callback: FrameRequestCallback): number {\n            const currTime = new Date().getTime();\n            const timeToCall = Math.max(0, 16 - (currTime - lastTime));\n            const id = setTimeout(() => callback(currTime + timeToCall), timeToCall);\n            lastTime = currTime + timeToCall;\n            return id;\n        };\n        // cancelAnimationFrame = function (handle: number): void {\n        //     clearTimeout(handle);\n        // };\n    }\n})();\n\nexport class Message {\n\n    get canConflate(): boolean { return false; }\n    conflate(other: Message): boolean {\n        return false;\n    }\n\n    void(): boolean {\n        return false;\n    }\n}\ntype MessageConstructor<T extends Message> = new (...args: any[]) => T;\n\nexport type Callback<T extends Message> = (messages: T[]) => void;\nexport { IObserverHandle };\n\ntype ObserverAdapter<T extends Message = Message> = {\n    id: number;\n    type?: MessageConstructor<T>;\n    callback: Callback<T>;\n};\n\nexport class Dispatch<T extends Message = Message> {\n\n    private _observerID: number = 0;\n    private _observers: ObserverAdapter[] = [];\n    private _messageBuffer: T[] = [];\n\n    constructor() {\n    }\n\n    private observers(): ObserverAdapter[] {\n        return this._observers;\n    }\n\n    private messages(): T[] {\n        const retVal: T[] = [];\n        this._messageBuffer.forEach(msg => {\n            if (!retVal.some(msg2 => msg2.canConflate && msg2.conflate(msg))) {\n                retVal.push(msg);\n            }\n        });\n        return retVal;\n    }\n\n    private dispatchAll() {\n        this.dispatch(this.messages());\n        this.flush();\n    }\n\n    private dispatch(messages: T[]) {\n        if (messages.length === 0) return;\n        this.observers().forEach(o => {\n            const msgs = messages.filter(m => !m.void() && (o.type === undefined || m instanceof o.type));\n            if (msgs.length) {\n                o.callback(msgs);\n            }\n        });\n    }\n\n    hasObserver(): boolean {\n        return this._observers.length > 0;\n    }\n\n    flush() {\n        this._messageBuffer = [];\n    }\n\n    send(msg: T) {\n        this.dispatch([msg]);\n    }\n\n    post(msg: T) {\n        this._messageBuffer.push(msg);\n        requestAnimationFrame(() => this.dispatchAll());\n    }\n\n    attach(callback: Callback<T>, type?: MessageConstructor<T>): IObserverHandle {\n        const context = this;\n        const id = ++this._observerID;\n        this._observers.push({ id, type, callback });\n        return {\n            release() {\n                context._observers = context._observers.filter(o => o.id !== id);\n            },\n            unwatch() {\n                this.release();\n            }\n        };\n    }\n}\n","import { StringAnyMap } from \"./dictionary\";\nimport { Stack } from \"./stack\";\n\nexport class XMLNode {\n    name: string = \"\";\n    $: StringAnyMap = {};\n    protected _children: XMLNode[] = [];\n    content: string = \"\";\n\n    constructor(name: string) {\n        this.name = name;\n    }\n\n    appendAttribute(key: string, val: string) {\n        this.$[key] = val;\n    }\n\n    appendContent(content: string) {\n        this.content += content;\n    }\n\n    appendChild(child: XMLNode) {\n        this._children.push(child);\n    }\n\n    children(tag?: string): XMLNode[] {\n        if (tag === undefined) {\n            return this._children;\n        }\n        return this._children.filter((xmlNode) => {\n            return xmlNode.name === tag;\n        });\n    }\n}\n\nexport class SAXStackParser {\n    root: XMLNode;\n    stack: Stack<XMLNode> = new Stack<XMLNode>();\n\n    constructor() {\n    }\n\n    private walkDoc(node: any) {\n        const xmlNode = this._startXMLNode(node);\n        if (node.attributes) {\n            for (let i = 0; i < node.attributes.length; ++i) {\n                const attribute = node.attributes.item(i);\n                this.attributes(attribute.nodeName, attribute.nodeValue);\n            }\n        }\n        this.startXMLNode(xmlNode);\n        if (node.childNodes) {\n            for (let i = 0; i < node.childNodes.length; ++i) {\n                const childNode = node.childNodes.item(i);\n                if (childNode.nodeType === childNode.TEXT_NODE) {\n                    this.characters(childNode.nodeValue!);\n                } else {\n                    this.walkDoc(childNode);\n                }\n            }\n        }\n        this.endXMLNode(this.stack.pop()!);\n    }\n\n    private _startXMLNode(node: Node): XMLNode {\n        const newNode = new XMLNode(node.nodeName);\n        if (!this.stack.depth()) {\n            this.root = newNode;\n        } else {\n            this.stack.top()!.appendChild(newNode);\n        }\n        return this.stack.push(newNode);\n    }\n\n    parse(xml: string) {\n        const domParser = new DOMParser();\n        const doc = domParser.parseFromString(xml, \"application/xml\");\n        this.startDocument();\n        this.walkDoc(doc);\n        this.endDocument();\n    }\n\n    //  Callbacks  ---\n    startDocument() {\n    }\n\n    endDocument() {\n    }\n\n    startXMLNode(node: XMLNode) {\n    }\n\n    endXMLNode(node: XMLNode) {\n    }\n\n    attributes(key: string, val: any) {\n        this.stack.top()!.appendAttribute(key, val);\n    }\n\n    characters(text: string) {\n        this.stack.top()!.appendContent(text);\n    }\n}\n\nclass XML2JSONParser extends SAXStackParser {\n    startXMLNode(node: XMLNode) {\n        super.startXMLNode(node);\n        switch (node.name) {\n            case \"xs:element\":\n                break;\n            case \"xs:simpleType\":\n                break;\n            default:\n                break;\n        }\n    }\n\n    endXMLNode(node: XMLNode) {\n        switch (node.name) {\n            case \"xs:element\":\n                break;\n            case \"xs:simpleType\":\n                break;\n            default:\n                break;\n        }\n        super.endXMLNode(node);\n    }\n}\n\nexport function xml2json(xml: string): XMLNode {\n    const saxParser = new XML2JSONParser();\n    saxParser.parse(xml);\n    return saxParser.root;\n}\n","import { Dispatch, IObserverHandle, Message } from \"./dispatch\";\nimport { deepEquals } from \"./immutable\";\n\nclass PropChangedMessage extends Message {\n\n    constructor(readonly property: string, public newValue: any, public oldValue?: any) {\n        super();\n    }\n\n    get canConflate(): boolean { return true; }\n    conflate(other: PropChangedMessage) {\n        if (this.property === other.property) {\n            this.newValue = other.newValue;\n            return true;\n        }\n        return false;\n    }\n\n    void(): boolean {\n        return deepEquals(this.newValue, this.oldValue);\n    }\n}\n\nexport interface IEvent {\n    id: string;\n    oldValue: any;\n    newValue: any;\n}\n\nexport type StatePropCallback = (changes: IEvent) => void;\nexport type StateCallback = (changes: IEvent[]) => void;\nexport type StateEvents = \"propChanged\" | \"changed\";\nexport class StateObject<U, I> {\n    private _espState: Partial<U> = {} as U;\n    private _dispatch = new Dispatch();\n    private _monitorHandle?: number;\n    protected _monitorTickCount: number = 0;\n\n    protected clear(newVals?: Partial<I>) {\n        this._espState = {} as U;\n        if (newVals !== void 0) {\n            this.set(newVals as I);\n        }\n        this._monitorTickCount = 0;\n    }\n\n    protected get(): U;\n    protected get<K extends keyof U>(key: K, defValue?: U[K]): U[K];\n    protected get<K extends keyof U>(key?: K, defValue?: U[K]): Partial<U> | U[K] | undefined {\n        if (key === void 0) {\n            return this._espState;\n        }\n        return this.has(key) ? this._espState[key] : defValue;\n    }\n\n    protected set(newVals: I): void;\n    protected set<K extends keyof U>(key: K, newVal: U[K], batchMode?: boolean): void;\n    protected set<K extends keyof U>(keyOrNewVals: K | U, newVal?: U[K]): void {\n        if (typeof keyOrNewVals === \"string\") {\n            return this.setSingle(keyOrNewVals as any, newVal as U[K]);  //  TODO:  \"as any\" should not be needed (TS >= 3.1.x)\n        }\n        this.setAll(keyOrNewVals as Partial<U>);\n    }\n\n    private setSingle<K extends keyof U>(key: K, newVal: U[K] | undefined): void {\n        const oldVal = this._espState[key];\n        this._espState[key] = newVal;\n        this._dispatch.post(new PropChangedMessage(key as string, newVal, oldVal));\n    }\n\n    private setAll(_: Partial<U>): void {\n        for (const key in _) {\n            if (_.hasOwnProperty(key)) {\n                this.setSingle(key, _[key]);\n            }\n        }\n    }\n\n    protected has<K extends keyof U>(key: K): boolean {\n        return this._espState[key] !== void 0;\n    }\n\n    addObserver(eventID: StateEvents, callback: StateCallback): IObserverHandle;\n    addObserver(eventID: StateEvents, propID: keyof U, callback: StatePropCallback): IObserverHandle;\n    addObserver(eventID: StateEvents, propIDOrCallback: StateCallback | keyof U, callback?: StatePropCallback): IObserverHandle {\n        if (this.isCallback(propIDOrCallback)) {\n            if (eventID !== \"changed\") throw new Error(\"Invalid eventID:  \" + eventID);\n            return this._dispatch.attach((messages: PropChangedMessage[]) => {\n                propIDOrCallback(messages.map(m => ({\n                    id: m.property,\n                    oldValue: m.oldValue,\n                    newValue: m.newValue\n                })));\n            });\n        } else {\n            if (eventID !== \"propChanged\") throw new Error(\"Invalid eventID:  \" + eventID);\n            return this._dispatch.attach((messages: PropChangedMessage[]) => {\n                const filteredMessages = messages.filter(m => m.property === propIDOrCallback);\n                if (filteredMessages.length) {\n                    if (filteredMessages.length > 1) {\n                        console.warn(\"Should only be 1 message?\");\n                    }\n                    const event = filteredMessages[filteredMessages.length - 1];\n                    callback!({\n                        id: event.property,\n                        oldValue: event.oldValue,\n                        newValue: event.newValue\n                    });\n                }\n            });\n        }\n    }\n\n    on(eventID: StateEvents, callback: StateCallback): this;\n    on(eventID: StateEvents, propID: keyof U, callback: StatePropCallback): this;\n    on(eventID: StateEvents, propIDOrCallback: StateCallback | keyof U, callback?: StatePropCallback): this {\n        this.addObserver(eventID, propIDOrCallback as any, callback as any);\n        return this;\n    }\n\n    protected isCallback(propIDOrCallback: StateCallback | keyof U): propIDOrCallback is StateCallback {\n        return (typeof propIDOrCallback === \"function\");\n    }\n\n    protected hasEventListener(): boolean {\n        return this._dispatch.hasObserver();\n    }\n\n    //  Monitoring  ---\n    protected async refresh(full: boolean = false): Promise<this> {\n        await Promise.resolve();\n        return this;\n    }\n\n    protected _monitor(): void {\n        if (this._monitorHandle) {\n            this._monitorTickCount = 0;\n            return;\n        }\n\n        this._monitorHandle = setTimeout(() => {\n            const refreshPromise: Promise<any> = this.hasEventListener() ? this.refresh() : Promise.resolve();\n            refreshPromise.then(() => {\n                this._monitor();\n            });\n            delete this._monitorHandle;\n        }, this._monitorTimeoutDuraction());\n    }\n\n    protected _monitorTimeoutDuraction(): number {\n        ++this._monitorTickCount;\n        if (this._monitorTickCount <= 1) {          //  Once\n            return 0;\n        }\n        return 30000;\n    }\n\n    watch(callback: StateCallback, triggerChange: boolean = true): IObserverHandle {\n        if (typeof callback !== \"function\") {\n            throw new Error(\"Invalid Callback\");\n        }\n        if (triggerChange) {\n            setTimeout(() => {\n                const props: any = this.get();\n                const changes: IEvent[] = [];\n                for (const key in props) {\n                    if (props.hasOwnProperty(props)) {\n                        changes.push({ id: key, newValue: props[key], oldValue: undefined });\n                    }\n                }\n                callback(changes);\n            }, 0);\n        }\n        const retVal = this.addObserver(\"changed\", callback);\n        this._monitor();\n        return retVal;\n    }\n}\n","import { HPCCElement } from \"./element\";\r\n\r\nexport class Directive {\r\n}\r\n\r\nexport class Ref extends Directive {\r\n\r\n    constructor(public id: string) {\r\n        super();\r\n    }\r\n}\r\n\r\nexport interface HTMLTemplate {\r\n    html: string;\r\n    directives: Directive[];\r\n}\r\n\r\nexport function html<T extends HPCCElement>(templateData: TemplateStringsArray, ...args: any[]): HTMLTemplate {\r\n    let html = templateData[0];\r\n    const directives: Directive[] = [];\r\n    for (let i = 0; i < args.length; ++i) {\r\n        const arg = args[i];\r\n        if (arg instanceof Directive) {\r\n            directives.push(arg);\r\n            if (arg instanceof Ref) {\r\n                html += `id=\"${arg.id}\"`;\r\n            } else {\r\n                html += String(args[i]);\r\n            }\r\n        } else {\r\n            html += String(args[i]);\r\n        }\r\n        html += templateData[i + 1];\r\n    }\r\n    return { html, directives };\r\n}\r\n\r\nexport function ref(refID: string) {\r\n    return new Ref(refID);\r\n}\r\n","import { Message } from \"@hpcc-js/util\";\r\n\r\nexport interface Change {\r\n    oldValue: any;\r\n    newValue: any;\r\n}\r\n\r\nexport interface ChangeMap {\r\n    [what: string]: Change;\r\n}\r\n\r\nexport class AttrChangedMessage extends Message {\r\n\r\n    get canConflate(): boolean {\r\n        return true;\r\n    }\r\n\r\n    changes: ChangeMap = {};\r\n\r\n    constructor(what: string, oldValue: any, newValue: any) {\r\n        super();\r\n        this.changes[what] = { oldValue, newValue };\r\n    }\r\n\r\n    conflate(other: AttrChangedMessage): boolean {\r\n        for (const what in other.changes) {\r\n            const thisChange = this.changes[what];\r\n            const otherChange = other.changes[what];\r\n            if (thisChange) {\r\n                this.changes[what].newValue = otherChange.newValue;\r\n            } else {\r\n                this.changes[what] = otherChange;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { Dispatch, IObserverHandle } from \"@hpcc-js/util\";\r\nimport { isTrue } from \"../util\";\r\nimport { classMeta, instanceMeta } from \"./decorator\";\r\nimport { Ref } from \"./html\";\r\nimport { AttrChangedMessage, ChangeMap } from \"./message\";\r\n\r\nexport type HTMLColor = string;\r\n\r\nexport const DefaultEventOptions = {\r\n    bubbles: true,\r\n    composed: true,\r\n    cancelable: true\r\n};\r\n\r\nexport class HPCCElement extends HTMLElement {\r\n\r\n    static get observedAttributes(): string[] {\r\n        return classMeta(this).observedAttributes;\r\n    }\r\n\r\n    private $meta = instanceMeta(this);\r\n\r\n    private $dispath = new Dispatch<AttrChangedMessage>();\r\n\r\n    protected _fire = (what: string, oldVal: any = false, newVal: any = true) => {\r\n        this.$dispath.post(new AttrChangedMessage(what, oldVal, newVal));\r\n    };\r\n\r\n    private $dispatchHandle: IObserverHandle;\r\n\r\n    private $styles: HTMLStyleElement;\r\n    protected set styles(_: string) {\r\n        this.$styles.innerHTML = _;\r\n    }\r\n    protected get styles() {\r\n        return this.$styles.innerHTML;\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n        this.attachShadow({ mode: \"open\" });\r\n        this.shadowRoot!.innerHTML = this.$meta.template?.html.trim() || \"\";\r\n        for (const directive of this.$meta.template?.directives || []) {\r\n            if (directive instanceof Ref) {\r\n                const ref = this.shadowRoot!.getElementById(directive.id);\r\n                this[directive.id] = ref;\r\n                ref?.removeAttribute(\"id\");\r\n            }\r\n        }\r\n        this.$styles = document.createElement(\"style\");\r\n        this.$styles.innerHTML = this.$meta.styles.trim();\r\n        this.shadowRoot!.insertBefore(this.$styles, this.shadowRoot!.firstChild);\r\n    }\r\n\r\n    protected attrValue(qualifiedName: string, value: string | null) {\r\n        switch (this.$meta.observed[qualifiedName].type) {\r\n            case \"boolean\":\r\n                return !!value;\r\n            case \"number\":\r\n                const retVal = Number(value);\r\n                return isNaN(retVal) ? null : retVal;\r\n            case \"string\":\r\n            default:\r\n                return value;\r\n        }\r\n    }\r\n\r\n    attr(qualifiedName: string): boolean | number | string | null;\r\n    attr(qualifiedName: string, _: boolean | number | string | null): this;\r\n    attr(qualifiedName: string, _?: boolean | number | string | null): boolean | number | string | null | this {\r\n        if (_ === undefined) {\r\n            return this.attrValue(qualifiedName, this.getAttribute(qualifiedName));\r\n        } else {\r\n            switch (this.$meta.observed[qualifiedName].type) {\r\n                case \"boolean\":\r\n                    if (_ as boolean) {\r\n                        this.setAttribute(qualifiedName, \"true\");\r\n                    } else {\r\n                        this.removeAttribute(qualifiedName);\r\n                    }\r\n                    break;\r\n                case \"number\":\r\n                    this.setAttribute(qualifiedName, (_ as number).toString());\r\n                    break;\r\n                case \"string\":\r\n                default:\r\n                    this.setAttribute(qualifiedName, _ as string);\r\n            }\r\n        }\r\n        return this;\r\n    }\r\n\r\n    private _initialized = false;\r\n    private initalizeAttributes(): ChangeMap {\r\n        if (this._initialized) return {};\r\n        this._initialized = true;\r\n        const retVal: ChangeMap = {};\r\n        this.$meta.observedAttributes.forEach(attr => {\r\n            const innerID = `_${attr}`;\r\n            const value = this[innerID];\r\n            if (this.hasAttribute(attr)) {\r\n                this[innerID] = this.attr(attr);\r\n            } else {\r\n                this.attr(attr, value);\r\n            }\r\n            retVal[attr] = { oldValue: undefined, newValue: this[innerID] };\r\n        });\r\n        this.$meta.observedProperties.forEach(prop => {\r\n            retVal[prop] = { oldValue: undefined, newValue: this[prop] };\r\n        });\r\n        return retVal;\r\n    }\r\n\r\n    connectedCallback() {\r\n        const changes = this.initalizeAttributes();\r\n        this.enter();\r\n        this.update(changes);\r\n        this.$dispath.flush();\r\n        this.$dispatchHandle = this.$dispath.attach((messages) => {\r\n            if (this.isConnected) {\r\n                const changes: ChangeMap = {};\r\n                if (messages.length > 1) throw new Error(\"Conflation issue.\");\r\n                for (const what in messages[0].changes) {\r\n                    const change = messages[0].changes[what];\r\n                    if (change.oldValue !== change.newValue) {\r\n                        changes[what] = change;\r\n                    }\r\n                }\r\n                if (Object.keys(changes).length) {\r\n                    this.update(changes);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    disconnectedCallback() {\r\n        this.$dispatchHandle.release();\r\n        this.exit();\r\n    }\r\n\r\n    adoptedCallback() {\r\n    }\r\n\r\n    attributeChangedCallback(name, oldValue, newValue) {\r\n        const innerID = `_${name}`;\r\n        const coercedValue = this.attrValue(name, newValue);\r\n        if (this[innerID] !== coercedValue) {\r\n            const oldValue = this[innerID];\r\n            this[innerID] = coercedValue;\r\n            this._fire(name, oldValue, coercedValue);\r\n        }\r\n    }\r\n\r\n    //  Lifecycle  ---\r\n    enter() {\r\n        //  Debugging, remove for production  ---\r\n        for (const key of this.$meta.observedAttributes) {\r\n            if (this[key] !== this.attr(key)) {\r\n                console.log(\"enter sync error\", key, this[key], this.attr(key));\r\n            }\r\n        }\r\n        //  Debugging, remove for production  ---\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        for (const key in changes) {\r\n            if (this.$meta.observed[key]?.isAttribute && this[key] !== this.attr(key)) {\r\n                this.attr(key, this[key]);\r\n            }\r\n        }\r\n        //  Debugging, remove for production  ---\r\n        for (const key of this.$meta.observedAttributes) {\r\n            if (this.$meta.observedAttributes.indexOf(key) >= 0 && this[key] !== this.attr(key)) {\r\n                console.log(\"update sync error\", key, this[key], this.attr(key));\r\n            }\r\n        }\r\n        //  Debugging, remove for production  ---\r\n    }\r\n\r\n    exit() {\r\n    }\r\n\r\n    //  Events  ---\r\n    $emit(type: string, detail?: any, options?) {\r\n        const opts = { detail, ...DefaultEventOptions, ...options };\r\n        if (this.isConnected) {\r\n            return this.dispatchEvent(new CustomEvent(type, opts));\r\n        }\r\n        return opts.cancelable ? true : false;\r\n    }\r\n}\r\n","import { HPCCElement } from \"./element\";\r\nimport { HTMLTemplate } from \"./html\";\r\n\r\n//  Web Component Meta Data  ---\r\n\r\nexport interface PropertyBase {\r\n    type: \"string\" | \"boolean\" | \"number\";\r\n    name: string;\r\n    isAttribute: boolean;\r\n}\r\n\r\nexport interface StringProperty extends PropertyBase {\r\n    type: \"string\";\r\n}\r\n\r\nexport interface NumberProperty extends PropertyBase {\r\n    type: \"number\";\r\n}\r\n\r\nexport interface BooleanProperty extends PropertyBase {\r\n    type: \"boolean\";\r\n}\r\n\r\nexport type Property = StringProperty | NumberProperty | BooleanProperty;\r\n\r\nexport interface ClassMeta {\r\n    template?: HTMLTemplate;\r\n    styles: string;\r\n    properties: Property[];\r\n    observedAttributes: string[];\r\n    observedProperties: string[];\r\n    observed: { [id: string]: Property };\r\n}\r\n\r\nconst _allMeta = new WeakMap<CustomElementConstructor, ClassMeta>();\r\nfunction initMeta(target: CustomElementConstructor): ClassMeta {\r\n    let retVal: ClassMeta;\r\n    if (!_allMeta.has(target)) {\r\n        retVal = {\r\n            template: { html: \"\", directives: [] },\r\n            styles: \"\",\r\n            properties: [],\r\n            observedAttributes: [],\r\n            observedProperties: [],\r\n            observed: {}\r\n        };\r\n        _allMeta.set(target, retVal);\r\n    } else {\r\n        retVal = _allMeta.get(target)!;\r\n    }\r\n    return retVal;\r\n}\r\n\r\nexport function classMeta(target: CustomElementConstructor): Readonly<ClassMeta> {\r\n    return _allMeta.get(target)!;\r\n}\r\n\r\nexport function instanceMeta(target: HPCCElement): Readonly<ClassMeta> {\r\n    return initMeta(Object.getPrototypeOf(target).constructor);\r\n}\r\n\r\n//  Web Component Decarators  ---\r\n\r\nexport type CustomElementOption = { template?: HTMLTemplate, styles?: string };\r\n\r\nexport function customElement(name: string, opts?: CustomElementOption): (target: CustomElementConstructor) => void {\r\n\r\n    const { template = { html: \"\", directives: [] }, styles = \"\" }: CustomElementOption = opts || {};\r\n\r\n    function decorator(target: CustomElementConstructor): void {\r\n        const meta = initMeta(target);\r\n\r\n        //  Gather inherited meta  ---\r\n        let allProperties: PropertyBase[] = [];\r\n\r\n        let self = target;\r\n        while (true) {\r\n            allProperties = allProperties.concat(initMeta(self).properties);\r\n            if (self === HPCCElement) {\r\n                break;\r\n            }\r\n            self = Object.getPrototypeOf(self);\r\n        }\r\n        meta.template = template;\r\n        meta.styles = styles;\r\n        meta.observedAttributes = allProperties\r\n            .filter(prop => prop.isAttribute)\r\n            .map(prop => prop.name)\r\n            ;\r\n        meta.observedProperties = allProperties\r\n            .filter(prop => !prop.isAttribute)\r\n            .map(prop => prop.name)\r\n            ;\r\n        meta.observed = {};\r\n        allProperties.forEach(prop => meta.observed[prop.name] = prop);\r\n        customElements?.define(name, target);\r\n        return;\r\n    }\r\n\r\n    return decorator;\r\n}\r\n\r\nfunction changedHandler(target: HPCCElement, opts: PropertyBase) {\r\n    const meta = initMeta(target.constructor as CustomElementConstructor);\r\n    meta.properties.push(opts);\r\n    const innerID = `_${opts.name}`;\r\n    Object.defineProperty(target, opts.name, {\r\n        set: function (newVal) {\r\n            const oldVal = this[innerID];\r\n            this[innerID] = newVal;\r\n            this._fire(opts.name, oldVal, newVal);\r\n        },\r\n        get: function () { return this[innerID]; }\r\n    });\r\n}\r\n\r\nexport type OptionsEx = Omit<PropertyBase, \"name\" | \"isAttribute\">;\r\nfunction attrProp(isAttribute: boolean, configOrTarget?: OptionsEx | HPCCElement, prop?: string): void | ((target: HPCCElement, property: string) => void) {\r\n\r\n    const options: PropertyBase = {\r\n        name: prop ?? \"\",\r\n        type: \"string\",\r\n        isAttribute: isAttribute,\r\n        ...(prop === undefined ? configOrTarget as OptionsEx : {})\r\n    };\r\n\r\n    function decorator($target: HPCCElement, $prop: string): void {\r\n        changedHandler($target, { ...options, name: $prop });\r\n    }\r\n\r\n    if (prop === undefined) {\r\n        return decorator;\r\n    }\r\n\r\n    decorator(configOrTarget as HPCCElement, prop!);\r\n}\r\n\r\nexport function attribute(config?: OptionsEx): (target: HPCCElement, property: string) => void;\r\nexport function attribute(target: HPCCElement, prop: string): void;\r\nexport function attribute(configOrTarget?: OptionsEx | HPCCElement, prop?: string): void | ((target: HPCCElement, property: string) => void) {\r\n    return attrProp(true, configOrTarget, prop);\r\n}\r\n\r\nexport function property(config?: OptionsEx): (target: HPCCElement, property: string) => void;\r\nexport function property(target: HPCCElement, prop: string): void;\r\nexport function property(configOrTarget?: OptionsEx | HPCCElement, prop?: string): void | ((target: HPCCElement, property: string) => void) {\r\n    return attrProp(false, configOrTarget, prop);\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","import { attribute } from \"./decorator\";\r\nimport { HPCCElement } from \"./element\";\r\n\r\nexport class HPCCResizeElement extends HPCCElement {\r\n\r\n    protected observer = new ResizeObserver(() => {\r\n        this._fire(\"resize\");\r\n    });\r\n\r\n    connectedCallback(): void {\r\n        super.connectedCallback();\r\n        this.observer.observe(this);\r\n    }\r\n\r\n    disconnectedCallback(): void {\r\n        this.observer.unobserve(this);\r\n        super.disconnectedCallback();\r\n    }\r\n}\r\n","import { css, display } from \"./css\";\r\nimport { attribute, customElement } from \"./decorator\";\r\nimport { HPCCResizeElement } from \"./resize\";\r\nimport { html, ref } from \"./html\";\r\nimport { ChangeMap } from \"./message\";\r\n\r\nconst template = html<HPCCPanelElement>`\\\r\n`;\r\n\r\nconst styles = css`\r\n${display(\"inline-block\")}\r\n\r\n:host {\r\n}\r\n\r\n:host > div {\r\n    background-color: pink;\r\n}\r\n\r\n:host > div > div {\r\n    position: absolute;\r\n    background-color: palegreen;\r\n}\r\n`;\r\n\r\n@customElement(\"hpcc-panel\", { template, styles })\r\nexport class HPCCPanelElement extends HPCCResizeElement {\r\n\r\n    protected _divOuter: HTMLDivElement;\r\n    protected _divInner: HTMLDivElement;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    enter() {\r\n        super.enter();\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n    }\r\n}\r\n","import { ChangeMap } from \"./message\";\r\nimport { HPCCResizeElement } from \"./resize\";\r\n\r\nexport class HPCCSVGElement extends HPCCResizeElement {\r\n\r\n    _svg: SVGSVGElement;\r\n\r\n    constructor() {\r\n        super();\r\n        if (!this._svg) {\r\n            throw new Error(\"SVG element not found\");\r\n        }\r\n    }\r\n\r\n    enter() {\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        this._svg.setAttribute(\"width\", `${this.clientWidth}px`);\r\n        this._svg.setAttribute(\"height\", `${this.clientHeight - 5}px`);\r\n        this._svg.setAttribute(\"viewBox\", `0 0 ${this._svg.clientWidth} ${this._svg.clientHeight}`);\r\n    }\r\n}\r\n","// Compressed representation of the Grapheme_Cluster_Break=Extend\n// information from\n// http://www.unicode.org/Public/13.0.0/ucd/auxiliary/GraphemeBreakProperty.txt.\n// Each pair of elements represents a range, as an offet from the\n// previous range and a length. Numbers are in base-36, with the empty\n// string being a shorthand for 1.\nlet extend = /*@__PURE__*/\"lc,34,7n,7,7b,19,,,,2,,2,,,20,b,1c,l,g,,2t,7,2,6,2,2,,4,z,,u,r,2j,b,1m,9,9,,o,4,,9,,3,,5,17,3,3b,f,,w,1j,,,,4,8,4,,3,7,a,2,t,,1m,,,,2,4,8,,9,,a,2,q,,2,2,1l,,4,2,4,2,2,3,3,,u,2,3,,b,2,1l,,4,5,,2,4,,k,2,m,6,,,1m,,,2,,4,8,,7,3,a,2,u,,1n,,,,c,,9,,14,,3,,1l,3,5,3,,4,7,2,b,2,t,,1m,,2,,2,,3,,5,2,7,2,b,2,s,2,1l,2,,,2,4,8,,9,,a,2,t,,20,,4,,2,3,,,8,,29,,2,7,c,8,2q,,2,9,b,6,22,2,r,,,,,,1j,e,,5,,2,5,b,,10,9,,2u,4,,6,,2,2,2,p,2,4,3,g,4,d,,2,2,6,,f,,jj,3,qa,3,t,3,t,2,u,2,1s,2,,7,8,,2,b,9,,19,3,3b,2,y,,3a,3,4,2,9,,6,3,63,2,2,,1m,,,7,,,,,2,8,6,a,2,,1c,h,1r,4,1c,7,,,5,,14,9,c,2,w,4,2,2,,3,1k,,,2,3,,,3,1m,8,2,2,48,3,,d,,7,4,,6,,3,2,5i,1m,,5,ek,,5f,x,2da,3,3x,,2o,w,fe,6,2x,2,n9w,4,,a,w,2,28,2,7k,,3,,4,,p,2,5,,47,2,q,i,d,,12,8,p,b,1a,3,1c,,2,4,2,2,13,,1v,6,2,2,2,2,c,,8,,1b,,1f,,,3,2,2,5,2,,,16,2,8,,6m,,2,,4,,fn4,,kh,g,g,g,a6,2,gt,,6a,,45,5,1ae,3,,2,5,4,14,3,4,,4l,2,fx,4,ar,2,49,b,4w,,1i,f,1k,3,1d,4,2,2,1x,3,10,5,,8,1q,,c,2,1g,9,a,4,2,,2n,3,2,,,2,6,,4g,,3,8,l,2,1l,2,,,,,m,,e,7,3,5,5f,8,2,3,,,n,,29,,2,6,,,2,,,2,,2,6j,,2,4,6,2,,2,r,2,2d,8,2,,,2,2y,,,,2,6,,,2t,3,2,4,,5,77,9,,2,6t,,a,2,,,4,,40,4,2,2,4,,w,a,14,6,2,4,8,,9,6,2,3,1a,d,,2,ba,7,,6,,,2a,m,2,7,,2,,2,3e,6,3,,,2,,7,,,20,2,3,,,,9n,2,f0b,5,1n,7,t4,,1r,4,29,,f5k,2,43q,,,3,4,5,8,8,2,7,u,4,44,3,1iz,1j,4,1e,8,,e,,m,5,,f,11s,7,,h,2,7,,2,,5,79,7,c5,4,15s,7,31,7,240,5,gx7k,2o,3k,6o\".split(\",\").map(s => s ? parseInt(s, 36) : 1);\n// Convert offsets into absolute values\nfor (let i = 1; i < extend.length; i++)\n    extend[i] += extend[i - 1];\nfunction isExtendingChar(code) {\n    for (let i = 1; i < extend.length; i += 2)\n        if (extend[i] > code)\n            return extend[i - 1] <= code;\n    return false;\n}\nfunction isRegionalIndicator(code) {\n    return code >= 0x1F1E6 && code <= 0x1F1FF;\n}\nconst ZWJ = 0x200d;\n/**\nReturns a next grapheme cluster break _after_ (not equal to)\n`pos`, if `forward` is true, or before otherwise. Returns `pos`\nitself if no further cluster break is available in the string.\nMoves across surrogate pairs, extending characters, characters\njoined with zero-width joiners, and flag emoji.\n*/\nfunction findClusterBreak(str, pos, forward = true) {\n    return (forward ? nextClusterBreak : prevClusterBreak)(str, pos);\n}\nfunction nextClusterBreak(str, pos) {\n    if (pos == str.length)\n        return pos;\n    // If pos is in the middle of a surrogate pair, move to its start\n    if (pos && surrogateLow(str.charCodeAt(pos)) && surrogateHigh(str.charCodeAt(pos - 1)))\n        pos--;\n    let prev = codePointAt(str, pos);\n    pos += codePointSize(prev);\n    while (pos < str.length) {\n        let next = codePointAt(str, pos);\n        if (prev == ZWJ || next == ZWJ || isExtendingChar(next)) {\n            pos += codePointSize(next);\n            prev = next;\n        }\n        else if (isRegionalIndicator(next)) {\n            let countBefore = 0, i = pos - 2;\n            while (i >= 0 && isRegionalIndicator(codePointAt(str, i))) {\n                countBefore++;\n                i -= 2;\n            }\n            if (countBefore % 2 == 0)\n                break;\n            else\n                pos += 2;\n        }\n        else {\n            break;\n        }\n    }\n    return pos;\n}\nfunction prevClusterBreak(str, pos) {\n    while (pos > 0) {\n        let found = nextClusterBreak(str, pos - 2);\n        if (found < pos)\n            return found;\n        pos--;\n    }\n    return 0;\n}\nfunction surrogateLow(ch) { return ch >= 0xDC00 && ch < 0xE000; }\nfunction surrogateHigh(ch) { return ch >= 0xD800 && ch < 0xDC00; }\n/**\nFind the code point at the given position in a string (like the\n[`codePointAt`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/codePointAt)\nstring method).\n*/\nfunction codePointAt(str, pos) {\n    let code0 = str.charCodeAt(pos);\n    if (!surrogateHigh(code0) || pos + 1 == str.length)\n        return code0;\n    let code1 = str.charCodeAt(pos + 1);\n    if (!surrogateLow(code1))\n        return code0;\n    return ((code0 - 0xd800) << 10) + (code1 - 0xdc00) + 0x10000;\n}\n/**\nGiven a Unicode codepoint, return the JavaScript string that\nrespresents it (like\n[`String.fromCodePoint`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/fromCodePoint)).\n*/\nfunction fromCodePoint(code) {\n    if (code <= 0xffff)\n        return String.fromCharCode(code);\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xd800, (code & 1023) + 0xdc00);\n}\n/**\nThe first character that takes up two positions in a JavaScript\nstring. It is often useful to compare with this after calling\n`codePointAt`, to figure out whether your character takes up 1 or\n2 index positions.\n*/\nfunction codePointSize(code) { return code < 0x10000 ? 1 : 2; }\n\n/**\nCount the column position at the given offset into the string,\ntaking extending characters and tab size into account.\n*/\nfunction countColumn(string, tabSize, to = string.length) {\n    let n = 0;\n    for (let i = 0; i < to;) {\n        if (string.charCodeAt(i) == 9) {\n            n += tabSize - (n % tabSize);\n            i++;\n        }\n        else {\n            n++;\n            i = findClusterBreak(string, i);\n        }\n    }\n    return n;\n}\n/**\nFind the offset that corresponds to the given column position in a\nstring, taking extending characters and tab size into account. By\ndefault, the string length is returned when it is too short to\nreach the column. Pass `strict` true to make it return -1 in that\nsituation.\n*/\nfunction findColumn(string, col, tabSize, strict) {\n    for (let i = 0, n = 0;;) {\n        if (n >= col)\n            return i;\n        if (i == string.length)\n            break;\n        n += string.charCodeAt(i) == 9 ? tabSize - (n % tabSize) : 1;\n        i = findClusterBreak(string, i);\n    }\n    return strict === true ? -1 : string.length;\n}\n\n/**\nThe data structure for documents.\n*/\nclass Text {\n    /**\n    @internal\n    */\n    constructor() { }\n    /**\n    Get the line description around the given position.\n    */\n    lineAt(pos) {\n        if (pos < 0 || pos > this.length)\n            throw new RangeError(`Invalid position ${pos} in document of length ${this.length}`);\n        return this.lineInner(pos, false, 1, 0);\n    }\n    /**\n    Get the description for the given (1-based) line number.\n    */\n    line(n) {\n        if (n < 1 || n > this.lines)\n            throw new RangeError(`Invalid line number ${n} in ${this.lines}-line document`);\n        return this.lineInner(n, true, 1, 0);\n    }\n    /**\n    Replace a range of the text with the given content.\n    */\n    replace(from, to, text) {\n        let parts = [];\n        this.decompose(0, from, parts, 2 /* To */);\n        if (text.length)\n            text.decompose(0, text.length, parts, 1 /* From */ | 2 /* To */);\n        this.decompose(to, this.length, parts, 1 /* From */);\n        return TextNode.from(parts, this.length - (to - from) + text.length);\n    }\n    /**\n    Append another document to this one.\n    */\n    append(other) {\n        return this.replace(this.length, this.length, other);\n    }\n    /**\n    Retrieve the text between the given points.\n    */\n    slice(from, to = this.length) {\n        let parts = [];\n        this.decompose(from, to, parts, 0);\n        return TextNode.from(parts, to - from);\n    }\n    /**\n    Test whether this text is equal to another instance.\n    */\n    eq(other) {\n        if (other == this)\n            return true;\n        if (other.length != this.length || other.lines != this.lines)\n            return false;\n        let start = this.scanIdentical(other, 1), end = this.length - this.scanIdentical(other, -1);\n        let a = new RawTextCursor(this), b = new RawTextCursor(other);\n        for (let skip = start, pos = start;;) {\n            a.next(skip);\n            b.next(skip);\n            skip = 0;\n            if (a.lineBreak != b.lineBreak || a.done != b.done || a.value != b.value)\n                return false;\n            pos += a.value.length;\n            if (a.done || pos >= end)\n                return true;\n        }\n    }\n    /**\n    Iterate over the text. When `dir` is `-1`, iteration happens\n    from end to start. This will return lines and the breaks between\n    them as separate strings, and for long lines, might split lines\n    themselves into multiple chunks as well.\n    */\n    iter(dir = 1) { return new RawTextCursor(this, dir); }\n    /**\n    Iterate over a range of the text. When `from` > `to`, the\n    iterator will run in reverse.\n    */\n    iterRange(from, to = this.length) { return new PartialTextCursor(this, from, to); }\n    /**\n    Return a cursor that iterates over the given range of lines,\n    _without_ returning the line breaks between, and yielding empty\n    strings for empty lines.\n    \n    When `from` and `to` are given, they should be 1-based line numbers.\n    */\n    iterLines(from, to) {\n        let inner;\n        if (from == null) {\n            inner = this.iter();\n        }\n        else {\n            if (to == null)\n                to = this.lines + 1;\n            let start = this.line(from).from;\n            inner = this.iterRange(start, Math.max(start, to == this.lines + 1 ? this.length : to <= 1 ? 0 : this.line(to - 1).to));\n        }\n        return new LineCursor(inner);\n    }\n    /**\n    @internal\n    */\n    toString() { return this.sliceString(0); }\n    /**\n    Convert the document to an array of lines (which can be\n    deserialized again via [`Text.of`](https://codemirror.net/6/docs/ref/#text.Text^of)).\n    */\n    toJSON() {\n        let lines = [];\n        this.flatten(lines);\n        return lines;\n    }\n    /**\n    Create a `Text` instance for the given array of lines.\n    */\n    static of(text) {\n        if (text.length == 0)\n            throw new RangeError(\"A document must have at least one line\");\n        if (text.length == 1 && !text[0])\n            return Text.empty;\n        return text.length <= 32 /* Branch */ ? new TextLeaf(text) : TextNode.from(TextLeaf.split(text, []));\n    }\n}\n// Leaves store an array of line strings. There are always line breaks\n// between these strings. Leaves are limited in size and have to be\n// contained in TextNode instances for bigger documents.\nclass TextLeaf extends Text {\n    constructor(text, length = textLength(text)) {\n        super();\n        this.text = text;\n        this.length = length;\n    }\n    get lines() { return this.text.length; }\n    get children() { return null; }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let string = this.text[i], end = offset + string.length;\n            if ((isLine ? line : end) >= target)\n                return new Line(offset, end, line, string);\n            offset = end + 1;\n            line++;\n        }\n    }\n    decompose(from, to, target, open) {\n        let text = from <= 0 && to >= this.length ? this\n            : new TextLeaf(sliceText(this.text, from, to), Math.min(to, this.length) - Math.max(0, from));\n        if (open & 1 /* From */) {\n            let prev = target.pop();\n            let joined = appendText(text.text, prev.text.slice(), 0, text.length);\n            if (joined.length <= 32 /* Branch */) {\n                target.push(new TextLeaf(joined, prev.length + text.length));\n            }\n            else {\n                let mid = joined.length >> 1;\n                target.push(new TextLeaf(joined.slice(0, mid)), new TextLeaf(joined.slice(mid)));\n            }\n        }\n        else {\n            target.push(text);\n        }\n    }\n    replace(from, to, text) {\n        if (!(text instanceof TextLeaf))\n            return super.replace(from, to, text);\n        let lines = appendText(this.text, appendText(text.text, sliceText(this.text, 0, from)), to);\n        let newLen = this.length + text.length - (to - from);\n        if (lines.length <= 32 /* Branch */)\n            return new TextLeaf(lines, newLen);\n        return TextNode.from(TextLeaf.split(lines, []), newLen);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let pos = 0, i = 0; pos <= to && i < this.text.length; i++) {\n            let line = this.text[i], end = pos + line.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += line.slice(Math.max(0, from - pos), to - pos);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let line of this.text)\n            target.push(line);\n    }\n    scanIdentical() { return 0; }\n    static split(text, target) {\n        let part = [], len = -1;\n        for (let line of text) {\n            part.push(line);\n            len += line.length + 1;\n            if (part.length == 32 /* Branch */) {\n                target.push(new TextLeaf(part, len));\n                part = [];\n                len = -1;\n            }\n        }\n        if (len > -1)\n            target.push(new TextLeaf(part, len));\n        return target;\n    }\n}\n// Nodes provide the tree structure of the `Text` type. They store a\n// number of other nodes or leaves, taking care to balance themselves\n// on changes. There are implied line breaks _between_ the children of\n// a node (but not before the first or after the last child).\nclass TextNode extends Text {\n    constructor(children, length) {\n        super();\n        this.children = children;\n        this.length = length;\n        this.lines = 0;\n        for (let child of children)\n            this.lines += child.lines;\n    }\n    lineInner(target, isLine, line, offset) {\n        for (let i = 0;; i++) {\n            let child = this.children[i], end = offset + child.length, endLine = line + child.lines - 1;\n            if ((isLine ? endLine : end) >= target)\n                return child.lineInner(target, isLine, line, offset);\n            offset = end + 1;\n            line = endLine + 1;\n        }\n    }\n    decompose(from, to, target, open) {\n        for (let i = 0, pos = 0; pos <= to && i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (from <= end && to >= pos) {\n                let childOpen = open & ((pos <= from ? 1 /* From */ : 0) | (end >= to ? 2 /* To */ : 0));\n                if (pos >= from && end <= to && !childOpen)\n                    target.push(child);\n                else\n                    child.decompose(from - pos, to - pos, target, childOpen);\n            }\n            pos = end + 1;\n        }\n    }\n    replace(from, to, text) {\n        if (text.lines < this.lines)\n            for (let i = 0, pos = 0; i < this.children.length; i++) {\n                let child = this.children[i], end = pos + child.length;\n                // Fast path: if the change only affects one child and the\n                // child's size remains in the acceptable range, only update\n                // that child\n                if (from >= pos && to <= end) {\n                    let updated = child.replace(from - pos, to - pos, text);\n                    let totalLines = this.lines - child.lines + updated.lines;\n                    if (updated.lines < (totalLines >> (5 /* BranchShift */ - 1)) &&\n                        updated.lines > (totalLines >> (5 /* BranchShift */ + 1))) {\n                        let copy = this.children.slice();\n                        copy[i] = updated;\n                        return new TextNode(copy, this.length - (to - from) + text.length);\n                    }\n                    return super.replace(pos, end, updated);\n                }\n                pos = end + 1;\n            }\n        return super.replace(from, to, text);\n    }\n    sliceString(from, to = this.length, lineSep = \"\\n\") {\n        let result = \"\";\n        for (let i = 0, pos = 0; i < this.children.length && pos <= to; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos > from && i)\n                result += lineSep;\n            if (from < end && to > pos)\n                result += child.sliceString(from - pos, to - pos, lineSep);\n            pos = end + 1;\n        }\n        return result;\n    }\n    flatten(target) {\n        for (let child of this.children)\n            child.flatten(target);\n    }\n    scanIdentical(other, dir) {\n        if (!(other instanceof TextNode))\n            return 0;\n        let length = 0;\n        let [iA, iB, eA, eB] = dir > 0 ? [0, 0, this.children.length, other.children.length]\n            : [this.children.length - 1, other.children.length - 1, -1, -1];\n        for (;; iA += dir, iB += dir) {\n            if (iA == eA || iB == eB)\n                return length;\n            let chA = this.children[iA], chB = other.children[iB];\n            if (chA != chB)\n                return length + chA.scanIdentical(chB, dir);\n            length += chA.length + 1;\n        }\n    }\n    static from(children, length = children.reduce((l, ch) => l + ch.length + 1, -1)) {\n        let lines = 0;\n        for (let ch of children)\n            lines += ch.lines;\n        if (lines < 32 /* Branch */) {\n            let flat = [];\n            for (let ch of children)\n                ch.flatten(flat);\n            return new TextLeaf(flat, length);\n        }\n        let chunk = Math.max(32 /* Branch */, lines >> 5 /* BranchShift */), maxChunk = chunk << 1, minChunk = chunk >> 1;\n        let chunked = [], currentLines = 0, currentLen = -1, currentChunk = [];\n        function add(child) {\n            let last;\n            if (child.lines > maxChunk && child instanceof TextNode) {\n                for (let node of child.children)\n                    add(node);\n            }\n            else if (child.lines > minChunk && (currentLines > minChunk || !currentLines)) {\n                flush();\n                chunked.push(child);\n            }\n            else if (child instanceof TextLeaf && currentLines &&\n                (last = currentChunk[currentChunk.length - 1]) instanceof TextLeaf &&\n                child.lines + last.lines <= 32 /* Branch */) {\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk[currentChunk.length - 1] = new TextLeaf(last.text.concat(child.text), last.length + 1 + child.length);\n            }\n            else {\n                if (currentLines + child.lines > chunk)\n                    flush();\n                currentLines += child.lines;\n                currentLen += child.length + 1;\n                currentChunk.push(child);\n            }\n        }\n        function flush() {\n            if (currentLines == 0)\n                return;\n            chunked.push(currentChunk.length == 1 ? currentChunk[0] : TextNode.from(currentChunk, currentLen));\n            currentLen = -1;\n            currentLines = currentChunk.length = 0;\n        }\n        for (let child of children)\n            add(child);\n        flush();\n        return chunked.length == 1 ? chunked[0] : new TextNode(chunked, length);\n    }\n}\nText.empty = /*@__PURE__*/new TextLeaf([\"\"], 0);\nfunction textLength(text) {\n    let length = -1;\n    for (let line of text)\n        length += line.length + 1;\n    return length;\n}\nfunction appendText(text, target, from = 0, to = 1e9) {\n    for (let pos = 0, i = 0, first = true; i < text.length && pos <= to; i++) {\n        let line = text[i], end = pos + line.length;\n        if (end >= from) {\n            if (end > to)\n                line = line.slice(0, to - pos);\n            if (pos < from)\n                line = line.slice(from - pos);\n            if (first) {\n                target[target.length - 1] += line;\n                first = false;\n            }\n            else\n                target.push(line);\n        }\n        pos = end + 1;\n    }\n    return target;\n}\nfunction sliceText(text, from, to) {\n    return appendText(text, [\"\"], from, to);\n}\nclass RawTextCursor {\n    constructor(text, dir = 1) {\n        this.dir = dir;\n        this.done = false;\n        this.lineBreak = false;\n        this.value = \"\";\n        this.nodes = [text];\n        this.offsets = [dir > 0 ? 1 : (text instanceof TextLeaf ? text.text.length : text.children.length) << 1];\n    }\n    nextInner(skip, dir) {\n        this.done = this.lineBreak = false;\n        for (;;) {\n            let last = this.nodes.length - 1;\n            let top = this.nodes[last], offsetValue = this.offsets[last], offset = offsetValue >> 1;\n            let size = top instanceof TextLeaf ? top.text.length : top.children.length;\n            if (offset == (dir > 0 ? size : 0)) {\n                if (last == 0) {\n                    this.done = true;\n                    this.value = \"\";\n                    return this;\n                }\n                if (dir > 0)\n                    this.offsets[last - 1]++;\n                this.nodes.pop();\n                this.offsets.pop();\n            }\n            else if ((offsetValue & 1) == (dir > 0 ? 0 : 1)) {\n                this.offsets[last] += dir;\n                if (skip == 0) {\n                    this.lineBreak = true;\n                    this.value = \"\\n\";\n                    return this;\n                }\n                skip--;\n            }\n            else if (top instanceof TextLeaf) {\n                // Move to the next string\n                let next = top.text[offset + (dir < 0 ? -1 : 0)];\n                this.offsets[last] += dir;\n                if (next.length > Math.max(0, skip)) {\n                    this.value = skip == 0 ? next : dir > 0 ? next.slice(skip) : next.slice(0, next.length - skip);\n                    return this;\n                }\n                skip -= next.length;\n            }\n            else {\n                let next = top.children[offset + (dir < 0 ? -1 : 0)];\n                if (skip > next.length) {\n                    skip -= next.length;\n                    this.offsets[last] += dir;\n                }\n                else {\n                    if (dir < 0)\n                        this.offsets[last]--;\n                    this.nodes.push(next);\n                    this.offsets.push(dir > 0 ? 1 : (next instanceof TextLeaf ? next.text.length : next.children.length) << 1);\n                }\n            }\n        }\n    }\n    next(skip = 0) {\n        if (skip < 0) {\n            this.nextInner(-skip, (-this.dir));\n            skip = this.value.length;\n        }\n        return this.nextInner(skip, this.dir);\n    }\n}\nclass PartialTextCursor {\n    constructor(text, start, end) {\n        this.value = \"\";\n        this.done = false;\n        this.cursor = new RawTextCursor(text, start > end ? -1 : 1);\n        this.pos = start > end ? text.length : 0;\n        this.from = Math.min(start, end);\n        this.to = Math.max(start, end);\n    }\n    nextInner(skip, dir) {\n        if (dir < 0 ? this.pos <= this.from : this.pos >= this.to) {\n            this.value = \"\";\n            this.done = true;\n            return this;\n        }\n        skip += Math.max(0, dir < 0 ? this.pos - this.to : this.from - this.pos);\n        let limit = dir < 0 ? this.pos - this.from : this.to - this.pos;\n        if (skip > limit)\n            skip = limit;\n        limit -= skip;\n        let { value } = this.cursor.next(skip);\n        this.pos += (value.length + skip) * dir;\n        this.value = value.length <= limit ? value : dir < 0 ? value.slice(value.length - limit) : value.slice(0, limit);\n        this.done = !this.value;\n        return this;\n    }\n    next(skip = 0) {\n        if (skip < 0)\n            skip = Math.max(skip, this.from - this.pos);\n        else if (skip > 0)\n            skip = Math.min(skip, this.to - this.pos);\n        return this.nextInner(skip, this.cursor.dir);\n    }\n    get lineBreak() { return this.cursor.lineBreak && this.value != \"\"; }\n}\nclass LineCursor {\n    constructor(inner) {\n        this.inner = inner;\n        this.afterBreak = true;\n        this.value = \"\";\n        this.done = false;\n    }\n    next(skip = 0) {\n        let { done, lineBreak, value } = this.inner.next(skip);\n        if (done) {\n            this.done = true;\n            this.value = \"\";\n        }\n        else if (lineBreak) {\n            if (this.afterBreak) {\n                this.value = \"\";\n            }\n            else {\n                this.afterBreak = true;\n                this.next();\n            }\n        }\n        else {\n            this.value = value;\n            this.afterBreak = false;\n        }\n        return this;\n    }\n    get lineBreak() { return false; }\n}\nif (typeof Symbol != \"undefined\") {\n    Text.prototype[Symbol.iterator] = function () { return this.iter(); };\n    RawTextCursor.prototype[Symbol.iterator] = PartialTextCursor.prototype[Symbol.iterator] =\n        LineCursor.prototype[Symbol.iterator] = function () { return this; };\n}\n/**\nThis type describes a line in the document. It is created\non-demand when lines are [queried](https://codemirror.net/6/docs/ref/#text.Text.lineAt).\n*/\nclass Line {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The position of the start of the line.\n    */\n    from, \n    /**\n    The position at the end of the line (_before_ the line break,\n    or at the end of document for the last line).\n    */\n    to, \n    /**\n    This line's line number (1-based).\n    */\n    number, \n    /**\n    The line's content.\n    */\n    text) {\n        this.from = from;\n        this.to = to;\n        this.number = number;\n        this.text = text;\n    }\n    /**\n    The length of the line (not including any line break after it).\n    */\n    get length() { return this.to - this.from; }\n}\n\nexport { Line, Text, codePointAt, codePointSize, countColumn, findClusterBreak, findColumn, fromCodePoint };\n","import { Text, findClusterBreak } from '@codemirror/text';\nexport { Text } from '@codemirror/text';\n\nconst DefaultSplit = /\\r\\n?|\\n/;\n/**\nDistinguishes different ways in which positions can be mapped.\n*/\nvar MapMode = /*@__PURE__*/(function (MapMode) {\n    /**\n    Map a position to a valid new position, even when its context\n    was deleted.\n    */\n    MapMode[MapMode[\"Simple\"] = 0] = \"Simple\";\n    /**\n    Return null if deletion happens across the position.\n    */\n    MapMode[MapMode[\"TrackDel\"] = 1] = \"TrackDel\";\n    /**\n    Return null if the character _before_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackBefore\"] = 2] = \"TrackBefore\";\n    /**\n    Return null if the character _after_ the position is deleted.\n    */\n    MapMode[MapMode[\"TrackAfter\"] = 3] = \"TrackAfter\";\nreturn MapMode})(MapMode || (MapMode = {}));\n/**\nA change description is a variant of [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet)\nthat doesn't store the inserted text. As such, it can't be\napplied, but is cheaper to store and manipulate.\n*/\nclass ChangeDesc {\n    // Sections are encoded as pairs of integers. The first is the\n    // length in the current document, and the second is -1 for\n    // unaffected sections, and the length of the replacement content\n    // otherwise. So an insertion would be (0, n>0), a deletion (n>0,\n    // 0), and a replacement two positive numbers.\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    sections) {\n        this.sections = sections;\n    }\n    /**\n    The length of the document before the change.\n    */\n    get length() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2)\n            result += this.sections[i];\n        return result;\n    }\n    /**\n    The length of the document after the change.\n    */\n    get newLength() {\n        let result = 0;\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let ins = this.sections[i + 1];\n            result += ins < 0 ? this.sections[i] : ins;\n        }\n        return result;\n    }\n    /**\n    False when there are actual changes in this set.\n    */\n    get empty() { return this.sections.length == 0 || this.sections.length == 2 && this.sections[1] < 0; }\n    /**\n    Iterate over the unchanged parts left by these changes.\n    */\n    iterGaps(f) {\n        for (let i = 0, posA = 0, posB = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0) {\n                f(posA, posB, len);\n                posB += len;\n            }\n            else {\n                posB += ins;\n            }\n            posA += len;\n        }\n    }\n    /**\n    Iterate over the ranges changed by these changes. (See\n    [`ChangeSet.iterChanges`](https://codemirror.net/6/docs/ref/#state.ChangeSet.iterChanges) for a\n    variant that also provides you with the inserted text.)\n    \n    When `individual` is true, adjacent changes (which are kept\n    separate for [position mapping](https://codemirror.net/6/docs/ref/#state.ChangeDesc.mapPos)) are\n    reported separately.\n    */\n    iterChangedRanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a description of the inverted form of these changes.\n    */\n    get invertedDesc() {\n        let sections = [];\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            if (ins < 0)\n                sections.push(len, ins);\n            else\n                sections.push(ins, len);\n        }\n        return new ChangeDesc(sections);\n    }\n    /**\n    Compute the combined effect of applying another set of changes\n    after this one. The length of the document after this set should\n    match the length before `other`.\n    */\n    composeDesc(other) { return this.empty ? other : other.empty ? this : composeSets(this, other); }\n    /**\n    Map this description, which should start with the same document\n    as `other`, over another set of changes, so that it can be\n    applied after it. When `before` is true, map as if the changes\n    in `other` happened before the ones in `this`.\n    */\n    mapDesc(other, before = false) { return other.empty ? this : mapSet(this, other, before); }\n    mapPos(pos, assoc = -1, mode = MapMode.Simple) {\n        let posA = 0, posB = 0;\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++], endA = posA + len;\n            if (ins < 0) {\n                if (endA > pos)\n                    return posB + (pos - posA);\n                posB += len;\n            }\n            else {\n                if (mode != MapMode.Simple && endA >= pos &&\n                    (mode == MapMode.TrackDel && posA < pos && endA > pos ||\n                        mode == MapMode.TrackBefore && posA < pos ||\n                        mode == MapMode.TrackAfter && endA > pos))\n                    return null;\n                if (endA > pos || endA == pos && assoc < 0 && !len)\n                    return pos == posA || assoc < 0 ? posB : posB + ins;\n                posB += ins;\n            }\n            posA = endA;\n        }\n        if (pos > posA)\n            throw new RangeError(`Position ${pos} is out of range for changeset of length ${posA}`);\n        return posB;\n    }\n    /**\n    Check whether these changes touch a given range. When one of the\n    changes entirely covers the range, the string `\"cover\"` is\n    returned.\n    */\n    touchesRange(from, to = from) {\n        for (let i = 0, pos = 0; i < this.sections.length && pos <= to;) {\n            let len = this.sections[i++], ins = this.sections[i++], end = pos + len;\n            if (ins >= 0 && pos <= to && end >= from)\n                return pos < from && end > to ? \"cover\" : true;\n            pos = end;\n        }\n        return false;\n    }\n    /**\n    @internal\n    */\n    toString() {\n        let result = \"\";\n        for (let i = 0; i < this.sections.length;) {\n            let len = this.sections[i++], ins = this.sections[i++];\n            result += (result ? \" \" : \"\") + len + (ins >= 0 ? \":\" + ins : \"\");\n        }\n        return result;\n    }\n    /**\n    Serialize this change desc to a JSON-representable value.\n    */\n    toJSON() { return this.sections; }\n    /**\n    Create a change desc from its JSON representation (as produced\n    by [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeDesc.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json) || json.length % 2 || json.some(a => typeof a != \"number\"))\n            throw new RangeError(\"Invalid JSON representation of ChangeDesc\");\n        return new ChangeDesc(json);\n    }\n}\n/**\nA change set represents a group of modifications to a document. It\nstores the document length, and can only be applied to documents\nwith exactly that length.\n*/\nclass ChangeSet extends ChangeDesc {\n    /**\n    @internal\n    */\n    constructor(sections, \n    /**\n    @internal\n    */\n    inserted) {\n        super(sections);\n        this.inserted = inserted;\n    }\n    /**\n    Apply the changes to a document, returning the modified\n    document.\n    */\n    apply(doc) {\n        if (this.length != doc.length)\n            throw new RangeError(\"Applying change set to a document with the wrong length\");\n        iterChanges(this, (fromA, toA, fromB, _toB, text) => doc = doc.replace(fromB, fromB + (toA - fromA), text), false);\n        return doc;\n    }\n    mapDesc(other, before = false) { return mapSet(this, other, before, true); }\n    /**\n    Given the document as it existed _before_ the changes, return a\n    change set that represents the inverse of this set, which could\n    be used to go from the document created by the changes back to\n    the document as it existed before the changes.\n    */\n    invert(doc) {\n        let sections = this.sections.slice(), inserted = [];\n        for (let i = 0, pos = 0; i < sections.length; i += 2) {\n            let len = sections[i], ins = sections[i + 1];\n            if (ins >= 0) {\n                sections[i] = ins;\n                sections[i + 1] = len;\n                let index = i >> 1;\n                while (inserted.length < index)\n                    inserted.push(Text.empty);\n                inserted.push(len ? doc.slice(pos, pos + len) : Text.empty);\n            }\n            pos += len;\n        }\n        return new ChangeSet(sections, inserted);\n    }\n    /**\n    Combine two subsequent change sets into a single set. `other`\n    must start in the document produced by `this`. If `this` goes\n    `docA` → `docB` and `other` represents `docB` → `docC`, the\n    returned value will represent the change `docA` → `docC`.\n    */\n    compose(other) { return this.empty ? other : other.empty ? this : composeSets(this, other, true); }\n    /**\n    Given another change set starting in the same document, maps this\n    change set over the other, producing a new change set that can be\n    applied to the document produced by applying `other`. When\n    `before` is `true`, order changes as if `this` comes before\n    `other`, otherwise (the default) treat `other` as coming first.\n    \n    Given two changes `A` and `B`, `A.compose(B.map(A))` and\n    `B.compose(A.map(B, true))` will produce the same document. This\n    provides a basic form of [operational\n    transformation](https://en.wikipedia.org/wiki/Operational_transformation),\n    and can be used for collaborative editing.\n    */\n    map(other, before = false) { return other.empty ? this : mapSet(this, other, before, true); }\n    /**\n    Iterate over the changed ranges in the document, calling `f` for\n    each.\n    \n    When `individual` is true, adjacent changes are reported\n    separately.\n    */\n    iterChanges(f, individual = false) {\n        iterChanges(this, f, individual);\n    }\n    /**\n    Get a [change description](https://codemirror.net/6/docs/ref/#state.ChangeDesc) for this change\n    set.\n    */\n    get desc() { return new ChangeDesc(this.sections); }\n    /**\n    @internal\n    */\n    filter(ranges) {\n        let resultSections = [], resultInserted = [], filteredSections = [];\n        let iter = new SectionIter(this);\n        done: for (let i = 0, pos = 0;;) {\n            let next = i == ranges.length ? 1e9 : ranges[i++];\n            while (pos < next || pos == next && iter.len == 0) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, next - pos);\n                addSection(filteredSections, len, -1);\n                let ins = iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0;\n                addSection(resultSections, len, ins);\n                if (ins > 0)\n                    addInsert(resultInserted, resultSections, iter.text);\n                iter.forward(len);\n                pos += len;\n            }\n            let end = ranges[i++];\n            while (pos < end) {\n                if (iter.done)\n                    break done;\n                let len = Math.min(iter.len, end - pos);\n                addSection(resultSections, len, -1);\n                addSection(filteredSections, len, iter.ins == -1 ? -1 : iter.off == 0 ? iter.ins : 0);\n                iter.forward(len);\n                pos += len;\n            }\n        }\n        return { changes: new ChangeSet(resultSections, resultInserted),\n            filtered: new ChangeDesc(filteredSections) };\n    }\n    /**\n    Serialize this change set to a JSON-representable value.\n    */\n    toJSON() {\n        let parts = [];\n        for (let i = 0; i < this.sections.length; i += 2) {\n            let len = this.sections[i], ins = this.sections[i + 1];\n            if (ins < 0)\n                parts.push(len);\n            else if (ins == 0)\n                parts.push([len]);\n            else\n                parts.push([len].concat(this.inserted[i >> 1].toJSON()));\n        }\n        return parts;\n    }\n    /**\n    Create a change set for the given changes, for a document of the\n    given length, using `lineSep` as line separator.\n    */\n    static of(changes, length, lineSep) {\n        let sections = [], inserted = [], pos = 0;\n        let total = null;\n        function flush(force = false) {\n            if (!force && !sections.length)\n                return;\n            if (pos < length)\n                addSection(sections, length - pos, -1);\n            let set = new ChangeSet(sections, inserted);\n            total = total ? total.compose(set.map(total)) : set;\n            sections = [];\n            inserted = [];\n            pos = 0;\n        }\n        function process(spec) {\n            if (Array.isArray(spec)) {\n                for (let sub of spec)\n                    process(sub);\n            }\n            else if (spec instanceof ChangeSet) {\n                if (spec.length != length)\n                    throw new RangeError(`Mismatched change set length (got ${spec.length}, expected ${length})`);\n                flush();\n                total = total ? total.compose(spec.map(total)) : spec;\n            }\n            else {\n                let { from, to = from, insert } = spec;\n                if (from > to || from < 0 || to > length)\n                    throw new RangeError(`Invalid change range ${from} to ${to} (in doc of length ${length})`);\n                let insText = !insert ? Text.empty : typeof insert == \"string\" ? Text.of(insert.split(lineSep || DefaultSplit)) : insert;\n                let insLen = insText.length;\n                if (from == to && insLen == 0)\n                    return;\n                if (from < pos)\n                    flush();\n                if (from > pos)\n                    addSection(sections, from - pos, -1);\n                addSection(sections, to - from, insLen);\n                addInsert(inserted, sections, insText);\n                pos = to;\n            }\n        }\n        process(changes);\n        flush(!total);\n        return total;\n    }\n    /**\n    Create an empty changeset of the given length.\n    */\n    static empty(length) {\n        return new ChangeSet(length ? [length, -1] : [], []);\n    }\n    /**\n    Create a changeset from its JSON representation (as produced by\n    [`toJSON`](https://codemirror.net/6/docs/ref/#state.ChangeSet.toJSON).\n    */\n    static fromJSON(json) {\n        if (!Array.isArray(json))\n            throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n        let sections = [], inserted = [];\n        for (let i = 0; i < json.length; i++) {\n            let part = json[i];\n            if (typeof part == \"number\") {\n                sections.push(part, -1);\n            }\n            else if (!Array.isArray(part) || typeof part[0] != \"number\" || part.some((e, i) => i && typeof e != \"string\")) {\n                throw new RangeError(\"Invalid JSON representation of ChangeSet\");\n            }\n            else if (part.length == 1) {\n                sections.push(part[0], 0);\n            }\n            else {\n                while (inserted.length < i)\n                    inserted.push(Text.empty);\n                inserted[i] = Text.of(part.slice(1));\n                sections.push(part[0], inserted[i].length);\n            }\n        }\n        return new ChangeSet(sections, inserted);\n    }\n}\nfunction addSection(sections, len, ins, forceJoin = false) {\n    if (len == 0 && ins <= 0)\n        return;\n    let last = sections.length - 2;\n    if (last >= 0 && ins <= 0 && ins == sections[last + 1])\n        sections[last] += len;\n    else if (len == 0 && sections[last] == 0)\n        sections[last + 1] += ins;\n    else if (forceJoin) {\n        sections[last] += len;\n        sections[last + 1] += ins;\n    }\n    else\n        sections.push(len, ins);\n}\nfunction addInsert(values, sections, value) {\n    if (value.length == 0)\n        return;\n    let index = (sections.length - 2) >> 1;\n    if (index < values.length) {\n        values[values.length - 1] = values[values.length - 1].append(value);\n    }\n    else {\n        while (values.length < index)\n            values.push(Text.empty);\n        values.push(value);\n    }\n}\nfunction iterChanges(desc, f, individual) {\n    let inserted = desc.inserted;\n    for (let posA = 0, posB = 0, i = 0; i < desc.sections.length;) {\n        let len = desc.sections[i++], ins = desc.sections[i++];\n        if (ins < 0) {\n            posA += len;\n            posB += len;\n        }\n        else {\n            let endA = posA, endB = posB, text = Text.empty;\n            for (;;) {\n                endA += len;\n                endB += ins;\n                if (ins && inserted)\n                    text = text.append(inserted[(i - 2) >> 1]);\n                if (individual || i == desc.sections.length || desc.sections[i + 1] < 0)\n                    break;\n                len = desc.sections[i++];\n                ins = desc.sections[i++];\n            }\n            f(posA, endA, posB, endB, text);\n            posA = endA;\n            posB = endB;\n        }\n    }\n}\nfunction mapSet(setA, setB, before, mkSet = false) {\n    let sections = [], insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let posA = 0, posB = 0;;) {\n        if (a.ins == -1) {\n            posA += a.len;\n            a.next();\n        }\n        else if (b.ins == -1 && posB < posA) {\n            let skip = Math.min(b.len, posA - posB);\n            b.forward(skip);\n            addSection(sections, skip, -1);\n            posB += skip;\n        }\n        else if (b.ins >= 0 && (a.done || posB < posA || posB == posA && (b.len < a.len || b.len == a.len && !before))) {\n            addSection(sections, b.ins, -1);\n            while (posA > posB && !a.done && posA + a.len < posB + b.len) {\n                posA += a.len;\n                a.next();\n            }\n            posB += b.len;\n            b.next();\n        }\n        else if (a.ins >= 0) {\n            let len = 0, end = posA + a.len;\n            for (;;) {\n                if (b.ins >= 0 && posB > posA && posB + b.len < end) {\n                    len += b.ins;\n                    posB += b.len;\n                    b.next();\n                }\n                else if (b.ins == -1 && posB < end) {\n                    let skip = Math.min(b.len, end - posB);\n                    len += skip;\n                    b.forward(skip);\n                    posB += skip;\n                }\n                else {\n                    break;\n                }\n            }\n            addSection(sections, len, a.ins);\n            if (insert)\n                addInsert(insert, sections, a.text);\n            posA = end;\n            a.next();\n        }\n        else if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n    }\n}\nfunction composeSets(setA, setB, mkSet = false) {\n    let sections = [];\n    let insert = mkSet ? [] : null;\n    let a = new SectionIter(setA), b = new SectionIter(setB);\n    for (let open = false;;) {\n        if (a.done && b.done) {\n            return insert ? new ChangeSet(sections, insert) : new ChangeDesc(sections);\n        }\n        else if (a.ins == 0) { // Deletion in A\n            addSection(sections, a.len, 0, open);\n            a.next();\n        }\n        else if (b.len == 0 && !b.done) { // Insertion in B\n            addSection(sections, 0, b.ins, open);\n            if (insert)\n                addInsert(insert, sections, b.text);\n            b.next();\n        }\n        else if (a.done || b.done) {\n            throw new Error(\"Mismatched change set lengths\");\n        }\n        else {\n            let len = Math.min(a.len2, b.len), sectionLen = sections.length;\n            if (a.ins == -1) {\n                let insB = b.ins == -1 ? -1 : b.off ? 0 : b.ins;\n                addSection(sections, len, insB, open);\n                if (insert && insB)\n                    addInsert(insert, sections, b.text);\n            }\n            else if (b.ins == -1) {\n                addSection(sections, a.off ? 0 : a.len, len, open);\n                if (insert)\n                    addInsert(insert, sections, a.textBit(len));\n            }\n            else {\n                addSection(sections, a.off ? 0 : a.len, b.off ? 0 : b.ins, open);\n                if (insert && !b.off)\n                    addInsert(insert, sections, b.text);\n            }\n            open = (a.ins > len || b.ins >= 0 && b.len > len) && (open || sections.length > sectionLen);\n            a.forward2(len);\n            b.forward(len);\n        }\n    }\n}\nclass SectionIter {\n    constructor(set) {\n        this.set = set;\n        this.i = 0;\n        this.next();\n    }\n    next() {\n        let { sections } = this.set;\n        if (this.i < sections.length) {\n            this.len = sections[this.i++];\n            this.ins = sections[this.i++];\n        }\n        else {\n            this.len = 0;\n            this.ins = -2;\n        }\n        this.off = 0;\n    }\n    get done() { return this.ins == -2; }\n    get len2() { return this.ins < 0 ? this.len : this.ins; }\n    get text() {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length ? Text.empty : inserted[index];\n    }\n    textBit(len) {\n        let { inserted } = this.set, index = (this.i - 2) >> 1;\n        return index >= inserted.length && !len ? Text.empty\n            : inserted[index].slice(this.off, len == null ? undefined : this.off + len);\n    }\n    forward(len) {\n        if (len == this.len)\n            this.next();\n        else {\n            this.len -= len;\n            this.off += len;\n        }\n    }\n    forward2(len) {\n        if (this.ins == -1)\n            this.forward(len);\n        else if (len == this.ins)\n            this.next();\n        else {\n            this.ins -= len;\n            this.off += len;\n        }\n    }\n}\n\n/**\nA single selection range. When\n[`allowMultipleSelections`](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\nis enabled, a [selection](https://codemirror.net/6/docs/ref/#state.EditorSelection) may hold\nmultiple ranges. By default, selections hold exactly one range.\n*/\nclass SelectionRange {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The lower boundary of the range.\n    */\n    from, \n    /**\n    The upper boundary of the range.\n    */\n    to, flags) {\n        this.from = from;\n        this.to = to;\n        this.flags = flags;\n    }\n    /**\n    The anchor of the range—the side that doesn't move when you\n    extend it.\n    */\n    get anchor() { return this.flags & 16 /* Inverted */ ? this.to : this.from; }\n    /**\n    The head of the range, which is moved when the range is\n    [extended](https://codemirror.net/6/docs/ref/#state.SelectionRange.extend).\n    */\n    get head() { return this.flags & 16 /* Inverted */ ? this.from : this.to; }\n    /**\n    True when `anchor` and `head` are at the same position.\n    */\n    get empty() { return this.from == this.to; }\n    /**\n    If this is a cursor that is explicitly associated with the\n    character on one of its sides, this returns the side. -1 means\n    the character before its position, 1 the character after, and 0\n    means no association.\n    */\n    get assoc() { return this.flags & 4 /* AssocBefore */ ? -1 : this.flags & 8 /* AssocAfter */ ? 1 : 0; }\n    /**\n    The bidirectional text level associated with this cursor, if\n    any.\n    */\n    get bidiLevel() {\n        let level = this.flags & 3 /* BidiLevelMask */;\n        return level == 3 ? null : level;\n    }\n    /**\n    The goal column (stored vertical offset) associated with a\n    cursor. This is used to preserve the vertical position when\n    [moving](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) across\n    lines of different length.\n    */\n    get goalColumn() {\n        let value = this.flags >> 5 /* GoalColumnOffset */;\n        return value == 33554431 /* NoGoalColumn */ ? undefined : value;\n    }\n    /**\n    Map this range through a change, producing a valid range in the\n    updated document.\n    */\n    map(change, assoc = -1) {\n        let from = change.mapPos(this.from, assoc), to = change.mapPos(this.to, assoc);\n        return from == this.from && to == this.to ? this : new SelectionRange(from, to, this.flags);\n    }\n    /**\n    Extend this range to cover at least `from` to `to`.\n    */\n    extend(from, to = from) {\n        if (from <= this.anchor && to >= this.anchor)\n            return EditorSelection.range(from, to);\n        let head = Math.abs(from - this.anchor) > Math.abs(to - this.anchor) ? from : to;\n        return EditorSelection.range(this.anchor, head);\n    }\n    /**\n    Compare this range to another range.\n    */\n    eq(other) {\n        return this.anchor == other.anchor && this.head == other.head;\n    }\n    /**\n    Return a JSON-serializable object representing the range.\n    */\n    toJSON() { return { anchor: this.anchor, head: this.head }; }\n    /**\n    Convert a JSON representation of a range to a `SelectionRange`\n    instance.\n    */\n    static fromJSON(json) {\n        if (!json || typeof json.anchor != \"number\" || typeof json.head != \"number\")\n            throw new RangeError(\"Invalid JSON representation for SelectionRange\");\n        return EditorSelection.range(json.anchor, json.head);\n    }\n}\n/**\nAn editor selection holds one or more selection ranges.\n*/\nclass EditorSelection {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The ranges in the selection, sorted by position. Ranges cannot\n    overlap (but they may touch, if they aren't empty).\n    */\n    ranges, \n    /**\n    The index of the _main_ range in the selection (which is\n    usually the range that was added last).\n    */\n    mainIndex = 0) {\n        this.ranges = ranges;\n        this.mainIndex = mainIndex;\n    }\n    /**\n    Map a selection through a change. Used to adjust the selection\n    position for changes.\n    */\n    map(change, assoc = -1) {\n        if (change.empty)\n            return this;\n        return EditorSelection.create(this.ranges.map(r => r.map(change, assoc)), this.mainIndex);\n    }\n    /**\n    Compare this selection to another selection.\n    */\n    eq(other) {\n        if (this.ranges.length != other.ranges.length ||\n            this.mainIndex != other.mainIndex)\n            return false;\n        for (let i = 0; i < this.ranges.length; i++)\n            if (!this.ranges[i].eq(other.ranges[i]))\n                return false;\n        return true;\n    }\n    /**\n    Get the primary selection range. Usually, you should make sure\n    your code applies to _all_ ranges, by using methods like\n    [`changeByRange`](https://codemirror.net/6/docs/ref/#state.EditorState.changeByRange).\n    */\n    get main() { return this.ranges[this.mainIndex]; }\n    /**\n    Make sure the selection only has one range. Returns a selection\n    holding only the main range from this selection.\n    */\n    asSingle() {\n        return this.ranges.length == 1 ? this : new EditorSelection([this.main]);\n    }\n    /**\n    Extend this selection with an extra range.\n    */\n    addRange(range, main = true) {\n        return EditorSelection.create([range].concat(this.ranges), main ? 0 : this.mainIndex + 1);\n    }\n    /**\n    Replace a given range with another range, and then normalize the\n    selection to merge and sort ranges if necessary.\n    */\n    replaceRange(range, which = this.mainIndex) {\n        let ranges = this.ranges.slice();\n        ranges[which] = range;\n        return EditorSelection.create(ranges, this.mainIndex);\n    }\n    /**\n    Convert this selection to an object that can be serialized to\n    JSON.\n    */\n    toJSON() {\n        return { ranges: this.ranges.map(r => r.toJSON()), main: this.mainIndex };\n    }\n    /**\n    Create a selection from a JSON representation.\n    */\n    static fromJSON(json) {\n        if (!json || !Array.isArray(json.ranges) || typeof json.main != \"number\" || json.main >= json.ranges.length)\n            throw new RangeError(\"Invalid JSON representation for EditorSelection\");\n        return new EditorSelection(json.ranges.map((r) => SelectionRange.fromJSON(r)), json.main);\n    }\n    /**\n    Create a selection holding a single range.\n    */\n    static single(anchor, head = anchor) {\n        return new EditorSelection([EditorSelection.range(anchor, head)], 0);\n    }\n    /**\n    Sort and merge the given set of ranges, creating a valid\n    selection.\n    */\n    static create(ranges, mainIndex = 0) {\n        if (ranges.length == 0)\n            throw new RangeError(\"A selection needs at least one range\");\n        for (let pos = 0, i = 0; i < ranges.length; i++) {\n            let range = ranges[i];\n            if (range.empty ? range.from <= pos : range.from < pos)\n                return normalized(ranges.slice(), mainIndex);\n            pos = range.to;\n        }\n        return new EditorSelection(ranges, mainIndex);\n    }\n    /**\n    Create a cursor selection range at the given position. You can\n    safely ignore the optional arguments in most situations.\n    */\n    static cursor(pos, assoc = 0, bidiLevel, goalColumn) {\n        return new SelectionRange(pos, pos, (assoc == 0 ? 0 : assoc < 0 ? 4 /* AssocBefore */ : 8 /* AssocAfter */) |\n            (bidiLevel == null ? 3 : Math.min(2, bidiLevel)) |\n            ((goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */));\n    }\n    /**\n    Create a selection range.\n    */\n    static range(anchor, head, goalColumn) {\n        let goal = (goalColumn !== null && goalColumn !== void 0 ? goalColumn : 33554431 /* NoGoalColumn */) << 5 /* GoalColumnOffset */;\n        return head < anchor ? new SelectionRange(head, anchor, 16 /* Inverted */ | goal) : new SelectionRange(anchor, head, goal);\n    }\n}\nfunction normalized(ranges, mainIndex = 0) {\n    let main = ranges[mainIndex];\n    ranges.sort((a, b) => a.from - b.from);\n    mainIndex = ranges.indexOf(main);\n    for (let i = 1; i < ranges.length; i++) {\n        let range = ranges[i], prev = ranges[i - 1];\n        if (range.empty ? range.from <= prev.to : range.from < prev.to) {\n            let from = prev.from, to = Math.max(range.to, prev.to);\n            if (i <= mainIndex)\n                mainIndex--;\n            ranges.splice(--i, 2, range.anchor > range.head ? EditorSelection.range(to, from) : EditorSelection.range(from, to));\n        }\n    }\n    return new EditorSelection(ranges, mainIndex);\n}\nfunction checkSelection(selection, docLength) {\n    for (let range of selection.ranges)\n        if (range.to > docLength)\n            throw new RangeError(\"Selection points outside of document\");\n}\n\nlet nextID = 0;\n/**\nA facet is a labeled value that is associated with an editor\nstate. It takes inputs from any number of extensions, and combines\nthose into a single output value.\n\nExamples of facets are the [theme](https://codemirror.net/6/docs/ref/#view.EditorView^theme) styles\nassociated with an editor or the [tab\nsize](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) (which is reduced to a single\nvalue, using the input with the hightest precedence).\n*/\nclass Facet {\n    constructor(\n    /**\n    @internal\n    */\n    combine, \n    /**\n    @internal\n    */\n    compareInput, \n    /**\n    @internal\n    */\n    compare, isStatic, \n    /**\n    @internal\n    */\n    extensions) {\n        this.combine = combine;\n        this.compareInput = compareInput;\n        this.compare = compare;\n        this.isStatic = isStatic;\n        this.extensions = extensions;\n        /**\n        @internal\n        */\n        this.id = nextID++;\n        this.default = combine([]);\n    }\n    /**\n    Define a new facet.\n    */\n    static define(config = {}) {\n        return new Facet(config.combine || ((a) => a), config.compareInput || ((a, b) => a === b), config.compare || (!config.combine ? sameArray : (a, b) => a === b), !!config.static, config.enables);\n    }\n    /**\n    Returns an extension that adds the given value for this facet.\n    */\n    of(value) {\n        return new FacetProvider([], this, 0 /* Static */, value);\n    }\n    /**\n    Create an extension that computes a value for the facet from a\n    state. You must take care to declare the parts of the state that\n    this value depends on, since your function is only called again\n    for a new state when one of those parts changed.\n    \n    In most cases, you'll want to use the\n    [`provide`](https://codemirror.net/6/docs/ref/#state.StateField^define^config.provide) option when\n    defining a field instead.\n    */\n    compute(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 1 /* Single */, get);\n    }\n    /**\n    Create an extension that computes zero or more values for this\n    facet from a state.\n    */\n    computeN(deps, get) {\n        if (this.isStatic)\n            throw new Error(\"Can't compute a static facet\");\n        return new FacetProvider(deps, this, 2 /* Multi */, get);\n    }\n    from(field, get) {\n        if (!get)\n            get = x => x;\n        return this.compute([field], state => get(state.field(field)));\n    }\n}\nfunction sameArray(a, b) {\n    return a == b || a.length == b.length && a.every((e, i) => e === b[i]);\n}\nclass FacetProvider {\n    constructor(dependencies, facet, type, value) {\n        this.dependencies = dependencies;\n        this.facet = facet;\n        this.type = type;\n        this.value = value;\n        this.id = nextID++;\n    }\n    dynamicSlot(addresses) {\n        var _a;\n        let getter = this.value;\n        let compare = this.facet.compareInput;\n        let idx = addresses[this.id] >> 1, multi = this.type == 2 /* Multi */;\n        let depDoc = false, depSel = false, depAddrs = [];\n        for (let dep of this.dependencies) {\n            if (dep == \"doc\")\n                depDoc = true;\n            else if (dep == \"selection\")\n                depSel = true;\n            else if ((((_a = addresses[dep.id]) !== null && _a !== void 0 ? _a : 1) & 1) == 0)\n                depAddrs.push(addresses[dep.id]);\n        }\n        return (state, tr) => {\n            let oldVal = state.values[idx];\n            if (oldVal === Uninitialized) {\n                state.values[idx] = getter(state);\n                return 1 /* Changed */;\n            }\n            if (tr) {\n                let depChanged = (depDoc && tr.docChanged) || (depSel && (tr.docChanged || tr.selection)) ||\n                    depAddrs.some(addr => (ensureAddr(state, addr) & 1 /* Changed */) > 0);\n                if (depChanged) {\n                    let newVal = getter(state);\n                    if (multi ? !compareArray(newVal, oldVal, compare) : !compare(newVal, oldVal)) {\n                        state.values[idx] = newVal;\n                        return 1 /* Changed */;\n                    }\n                }\n            }\n            return 0;\n        };\n    }\n}\nfunction compareArray(a, b, compare) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!compare(a[i], b[i]))\n            return false;\n    return true;\n}\nfunction dynamicFacetSlot(addresses, facet, providers) {\n    let providerAddrs = providers.map(p => addresses[p.id]);\n    let providerTypes = providers.map(p => p.type);\n    let dynamic = providerAddrs.filter(p => !(p & 1));\n    let idx = addresses[facet.id] >> 1;\n    return (state, tr) => {\n        let oldVal = state.values[idx], changed = oldVal === Uninitialized || !tr;\n        for (let dynAddr of dynamic) {\n            if (ensureAddr(state, dynAddr) & 1 /* Changed */)\n                changed = true;\n        }\n        if (!changed)\n            return 0;\n        let values = [];\n        for (let i = 0; i < providerAddrs.length; i++) {\n            let value = getAddr(state, providerAddrs[i]);\n            if (providerTypes[i] == 2 /* Multi */)\n                for (let val of value)\n                    values.push(val);\n            else\n                values.push(value);\n        }\n        let value = facet.combine(values);\n        if (oldVal !== Uninitialized && facet.compare(value, oldVal))\n            return 0;\n        state.values[idx] = value;\n        return 1 /* Changed */;\n    };\n}\nconst initField = /*@__PURE__*/Facet.define({ static: true });\n/**\nFields can store additional information in an editor state, and\nkeep it in sync with the rest of the state.\n*/\nclass StateField {\n    constructor(\n    /**\n    @internal\n    */\n    id, createF, updateF, compareF, \n    /**\n    @internal\n    */\n    spec) {\n        this.id = id;\n        this.createF = createF;\n        this.updateF = updateF;\n        this.compareF = compareF;\n        this.spec = spec;\n        /**\n        @internal\n        */\n        this.provides = undefined;\n    }\n    /**\n    Define a state field.\n    */\n    static define(config) {\n        let field = new StateField(nextID++, config.create, config.update, config.compare || ((a, b) => a === b), config);\n        if (config.provide)\n            field.provides = config.provide(field);\n        return field;\n    }\n    create(state) {\n        let init = state.facet(initField).find(i => i.field == this);\n        return ((init === null || init === void 0 ? void 0 : init.create) || this.createF)(state);\n    }\n    /**\n    @internal\n    */\n    slot(addresses) {\n        let idx = addresses[this.id] >> 1;\n        return (state, tr) => {\n            let oldVal = state.values[idx];\n            if (oldVal === Uninitialized) {\n                state.values[idx] = this.create(state);\n                return 1 /* Changed */;\n            }\n            if (tr) {\n                let value = this.updateF(oldVal, tr);\n                if (!this.compareF(oldVal, value)) {\n                    state.values[idx] = value;\n                    return 1 /* Changed */;\n                }\n            }\n            return 0;\n        };\n    }\n    /**\n    Returns an extension that enables this field and overrides the\n    way it is initialized. Can be useful when you need to provide a\n    non-default starting value for the field.\n    */\n    init(create) {\n        return [this, initField.of({ field: this, create })];\n    }\n    /**\n    State field instances can be used as\n    [`Extension`](https://codemirror.net/6/docs/ref/#state.Extension) values to enable the field in a\n    given state.\n    */\n    get extension() { return this; }\n}\nconst Prec_ = { lowest: 4, low: 3, default: 2, high: 1, highest: 0 };\nfunction prec(value) {\n    return (ext) => new PrecExtension(ext, value);\n}\n/**\nBy default extensions are registered in the order they are found\nin the flattened form of nested array that was provided.\nIndividual extension values can be assigned a precedence to\noverride this. Extensions that do not have a precedence set get\nthe precedence of the nearest parent with a precedence, or\n[`default`](https://codemirror.net/6/docs/ref/#state.Prec.default) if there is no such parent. The\nfinal ordering of extensions is determined by first sorting by\nprecedence and then by order within each precedence.\n*/\nconst Prec = {\n    /**\n    The lowest precedence level. Meant for things that should end up\n    near the end of the extension order.\n    */\n    lowest: /*@__PURE__*/prec(Prec_.lowest),\n    /**\n    A lower-than-default precedence, for extensions.\n    */\n    low: /*@__PURE__*/prec(Prec_.low),\n    /**\n    The default precedence, which is also used for extensions\n    without an explicit precedence.\n    */\n    default: /*@__PURE__*/prec(Prec_.default),\n    /**\n    A higher-than-default precedence, for extensions that should\n    come before those with default precedence.\n    */\n    high: /*@__PURE__*/prec(Prec_.high),\n    /**\n    The highest precedence level, for extensions that should end up\n    near the start of the precedence ordering.\n    */\n    highest: /*@__PURE__*/prec(Prec_.highest),\n    // FIXME Drop these in some future breaking version\n    /**\n    Backwards-compatible synonym for `Prec.lowest`.\n    */\n    fallback: /*@__PURE__*/prec(Prec_.lowest),\n    /**\n    Backwards-compatible synonym for `Prec.high`.\n    */\n    extend: /*@__PURE__*/prec(Prec_.high),\n    /**\n    Backwards-compatible synonym for `Prec.highest`.\n    */\n    override: /*@__PURE__*/prec(Prec_.highest)\n};\nclass PrecExtension {\n    constructor(inner, prec) {\n        this.inner = inner;\n        this.prec = prec;\n    }\n}\n/**\nExtension compartments can be used to make a configuration\ndynamic. By [wrapping](https://codemirror.net/6/docs/ref/#state.Compartment.of) part of your\nconfiguration in a compartment, you can later\n[replace](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure) that part through a\ntransaction.\n*/\nclass Compartment {\n    /**\n    Create an instance of this compartment to add to your [state\n    configuration](https://codemirror.net/6/docs/ref/#state.EditorStateConfig.extensions).\n    */\n    of(ext) { return new CompartmentInstance(this, ext); }\n    /**\n    Create an [effect](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) that\n    reconfigures this compartment.\n    */\n    reconfigure(content) {\n        return Compartment.reconfigure.of({ compartment: this, extension: content });\n    }\n    /**\n    Get the current content of the compartment in the state, or\n    `undefined` if it isn't present.\n    */\n    get(state) {\n        return state.config.compartments.get(this);\n    }\n}\nclass CompartmentInstance {\n    constructor(compartment, inner) {\n        this.compartment = compartment;\n        this.inner = inner;\n    }\n}\nclass Configuration {\n    constructor(base, compartments, dynamicSlots, address, staticValues) {\n        this.base = base;\n        this.compartments = compartments;\n        this.dynamicSlots = dynamicSlots;\n        this.address = address;\n        this.staticValues = staticValues;\n        this.statusTemplate = [];\n        while (this.statusTemplate.length < dynamicSlots.length)\n            this.statusTemplate.push(0 /* Unresolved */);\n    }\n    staticFacet(facet) {\n        let addr = this.address[facet.id];\n        return addr == null ? facet.default : this.staticValues[addr >> 1];\n    }\n    static resolve(base, compartments, oldState) {\n        let fields = [];\n        let facets = Object.create(null);\n        let newCompartments = new Map();\n        for (let ext of flatten(base, compartments, newCompartments)) {\n            if (ext instanceof StateField)\n                fields.push(ext);\n            else\n                (facets[ext.facet.id] || (facets[ext.facet.id] = [])).push(ext);\n        }\n        let address = Object.create(null);\n        let staticValues = [];\n        let dynamicSlots = [];\n        let dynamicDeps = [];\n        for (let field of fields) {\n            address[field.id] = dynamicSlots.length << 1;\n            dynamicSlots.push(a => field.slot(a));\n            dynamicDeps.push([]);\n        }\n        for (let id in facets) {\n            let providers = facets[id], facet = providers[0].facet;\n            if (providers.every(p => p.type == 0 /* Static */)) {\n                address[facet.id] = (staticValues.length << 1) | 1;\n                let value = facet.combine(providers.map(p => p.value));\n                let oldAddr = oldState ? oldState.config.address[facet.id] : null;\n                if (oldAddr != null) {\n                    let oldVal = getAddr(oldState, oldAddr);\n                    if (facet.compare(value, oldVal))\n                        value = oldVal;\n                }\n                staticValues.push(value);\n            }\n            else {\n                for (let p of providers) {\n                    if (p.type == 0 /* Static */) {\n                        address[p.id] = (staticValues.length << 1) | 1;\n                        staticValues.push(p.value);\n                    }\n                    else {\n                        address[p.id] = dynamicSlots.length << 1;\n                        dynamicSlots.push(a => p.dynamicSlot(a));\n                        dynamicDeps.push(p.dependencies.filter(d => typeof d != \"string\").map(d => d.id));\n                    }\n                }\n                address[facet.id] = dynamicSlots.length << 1;\n                dynamicSlots.push(a => dynamicFacetSlot(a, facet, providers));\n                dynamicDeps.push(providers.filter(p => p.type != 0 /* Static */).map(d => d.id));\n            }\n        }\n        let dynamicValues = dynamicSlots.map(_ => Uninitialized);\n        if (oldState) {\n            let canReuse = (id, depth) => {\n                if (depth > 7)\n                    return false;\n                let addr = address[id];\n                if (!(addr & 1))\n                    return dynamicDeps[addr >> 1].every(id => canReuse(id, depth + 1));\n                let oldAddr = oldState.config.address[id];\n                return oldAddr != null && getAddr(oldState, oldAddr) == staticValues[addr >> 1];\n            };\n            // Copy over old values for shared facets/fields, if we can\n            // prove that they don't need to be recomputed.\n            for (let id in address) {\n                let cur = address[id], prev = oldState.config.address[id];\n                if (prev != null && (cur & 1) == 0 && canReuse(+id, 0))\n                    dynamicValues[cur >> 1] = getAddr(oldState, prev);\n            }\n        }\n        return {\n            configuration: new Configuration(base, newCompartments, dynamicSlots.map(f => f(address)), address, staticValues),\n            values: dynamicValues\n        };\n    }\n}\nfunction flatten(extension, compartments, newCompartments) {\n    let result = [[], [], [], [], []];\n    let seen = new Map();\n    function inner(ext, prec) {\n        let known = seen.get(ext);\n        if (known != null) {\n            if (known >= prec)\n                return;\n            let found = result[known].indexOf(ext);\n            if (found > -1)\n                result[known].splice(found, 1);\n            if (ext instanceof CompartmentInstance)\n                newCompartments.delete(ext.compartment);\n        }\n        seen.set(ext, prec);\n        if (Array.isArray(ext)) {\n            for (let e of ext)\n                inner(e, prec);\n        }\n        else if (ext instanceof CompartmentInstance) {\n            if (newCompartments.has(ext.compartment))\n                throw new RangeError(`Duplicate use of compartment in extensions`);\n            let content = compartments.get(ext.compartment) || ext.inner;\n            newCompartments.set(ext.compartment, content);\n            inner(content, prec);\n        }\n        else if (ext instanceof PrecExtension) {\n            inner(ext.inner, ext.prec);\n        }\n        else if (ext instanceof StateField) {\n            result[prec].push(ext);\n            if (ext.provides)\n                inner(ext.provides, prec);\n        }\n        else if (ext instanceof FacetProvider) {\n            result[prec].push(ext);\n            if (ext.facet.extensions)\n                inner(ext.facet.extensions, prec);\n        }\n        else {\n            let content = ext.extension;\n            if (!content)\n                throw new Error(`Unrecognized extension value in extension set (${ext}). This sometimes happens because multiple instances of @codemirror/state are loaded, breaking instanceof checks.`);\n            inner(content, prec);\n        }\n    }\n    inner(extension, Prec_.default);\n    return result.reduce((a, b) => a.concat(b));\n}\nconst Uninitialized = {};\nfunction ensureAddr(state, addr) {\n    if (addr & 1)\n        return 2 /* Computed */;\n    let idx = addr >> 1;\n    let status = state.status[idx];\n    if (status == 4 /* Computing */)\n        throw new Error(\"Cyclic dependency between fields and/or facets\");\n    if (status & 2 /* Computed */)\n        return status;\n    state.status[idx] = 4 /* Computing */;\n    let changed = state.config.dynamicSlots[idx](state, state.applying);\n    return state.status[idx] = 2 /* Computed */ | changed;\n}\nfunction getAddr(state, addr) {\n    return addr & 1 ? state.config.staticValues[addr >> 1] : state.values[addr >> 1];\n}\n\nconst languageData = /*@__PURE__*/Facet.define();\nconst allowMultipleSelections = /*@__PURE__*/Facet.define({\n    combine: values => values.some(v => v),\n    static: true\n});\nconst lineSeparator = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : undefined,\n    static: true\n});\nconst changeFilter = /*@__PURE__*/Facet.define();\nconst transactionFilter = /*@__PURE__*/Facet.define();\nconst transactionExtender = /*@__PURE__*/Facet.define();\nconst readOnly = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : false\n});\n\n/**\nAnnotations are tagged values that are used to add metadata to\ntransactions in an extensible way. They should be used to model\nthings that effect the entire transaction (such as its [time\nstamp](https://codemirror.net/6/docs/ref/#state.Transaction^time) or information about its\n[origin](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent)). For effects that happen\n_alongside_ the other changes made by the transaction, [state\neffects](https://codemirror.net/6/docs/ref/#state.StateEffect) are more appropriate.\n*/\nclass Annotation {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The annotation type.\n    */\n    type, \n    /**\n    The value of this annotation.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Define a new type of annotation.\n    */\n    static define() { return new AnnotationType(); }\n}\n/**\nMarker that identifies a type of [annotation](https://codemirror.net/6/docs/ref/#state.Annotation).\n*/\nclass AnnotationType {\n    /**\n    Create an instance of this annotation.\n    */\n    of(value) { return new Annotation(this, value); }\n}\n/**\nRepresentation of a type of state effect. Defined with\n[`StateEffect.define`](https://codemirror.net/6/docs/ref/#state.StateEffect^define).\n*/\nclass StateEffectType {\n    /**\n    @internal\n    */\n    constructor(\n    // The `any` types in these function types are there to work\n    // around TypeScript issue #37631, where the type guard on\n    // `StateEffect.is` mysteriously stops working when these properly\n    // have type `Value`.\n    /**\n    @internal\n    */\n    map) {\n        this.map = map;\n    }\n    /**\n    Create a [state effect](https://codemirror.net/6/docs/ref/#state.StateEffect) instance of this\n    type.\n    */\n    of(value) { return new StateEffect(this, value); }\n}\n/**\nState effects can be used to represent additional effects\nassociated with a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction.effects). They\nare often useful to model changes to custom [state\nfields](https://codemirror.net/6/docs/ref/#state.StateField), when those changes aren't implicit in\ndocument or selection changes.\n*/\nclass StateEffect {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    type, \n    /**\n    The value of this effect.\n    */\n    value) {\n        this.type = type;\n        this.value = value;\n    }\n    /**\n    Map this effect through a position mapping. Will return\n    `undefined` when that ends up deleting the effect.\n    */\n    map(mapping) {\n        let mapped = this.type.map(this.value, mapping);\n        return mapped === undefined ? undefined : mapped == this.value ? this : new StateEffect(this.type, mapped);\n    }\n    /**\n    Tells you whether this effect object is of a given\n    [type](https://codemirror.net/6/docs/ref/#state.StateEffectType).\n    */\n    is(type) { return this.type == type; }\n    /**\n    Define a new effect type. The type parameter indicates the type\n    of values that his effect holds.\n    */\n    static define(spec = {}) {\n        return new StateEffectType(spec.map || (v => v));\n    }\n    /**\n    Map an array of effects through a change set.\n    */\n    static mapEffects(effects, mapping) {\n        if (!effects.length)\n            return effects;\n        let result = [];\n        for (let effect of effects) {\n            let mapped = effect.map(mapping);\n            if (mapped)\n                result.push(mapped);\n        }\n        return result;\n    }\n}\n/**\nThis effect can be used to reconfigure the root extensions of\nthe editor. Doing this will discard any extensions\n[appended](https://codemirror.net/6/docs/ref/#state.StateEffect^appendConfig), but does not reset\nthe content of [reconfigured](https://codemirror.net/6/docs/ref/#state.Compartment.reconfigure)\ncompartments.\n*/\nStateEffect.reconfigure = /*@__PURE__*/StateEffect.define();\n/**\nAppend extensions to the top-level configuration of the editor.\n*/\nStateEffect.appendConfig = /*@__PURE__*/StateEffect.define();\n/**\nChanges to the editor state are grouped into transactions.\nTypically, a user action creates a single transaction, which may\ncontain any number of document changes, may change the selection,\nor have other effects. Create a transaction by calling\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n*/\nclass Transaction {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The state from which the transaction starts.\n    */\n    startState, \n    /**\n    The document changes made by this transaction.\n    */\n    changes, \n    /**\n    The selection set by this transaction, or undefined if it\n    doesn't explicitly set a selection.\n    */\n    selection, \n    /**\n    The effects added to the transaction.\n    */\n    effects, \n    /**\n    @internal\n    */\n    annotations, \n    /**\n    Whether the selection should be scrolled into view after this\n    transaction is dispatched.\n    */\n    scrollIntoView) {\n        this.startState = startState;\n        this.changes = changes;\n        this.selection = selection;\n        this.effects = effects;\n        this.annotations = annotations;\n        this.scrollIntoView = scrollIntoView;\n        /**\n        @internal\n        */\n        this._doc = null;\n        /**\n        @internal\n        */\n        this._state = null;\n        if (selection)\n            checkSelection(selection, changes.newLength);\n        if (!annotations.some((a) => a.type == Transaction.time))\n            this.annotations = annotations.concat(Transaction.time.of(Date.now()));\n    }\n    /**\n    The new document produced by the transaction. Contrary to\n    [`.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state)`.doc`, accessing this won't\n    force the entire new state to be computed right away, so it is\n    recommended that [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) use this getter\n    when they need to look at the new document.\n    */\n    get newDoc() {\n        return this._doc || (this._doc = this.changes.apply(this.startState.doc));\n    }\n    /**\n    The new selection produced by the transaction. If\n    [`this.selection`](https://codemirror.net/6/docs/ref/#state.Transaction.selection) is undefined,\n    this will [map](https://codemirror.net/6/docs/ref/#state.EditorSelection.map) the start state's\n    current selection through the changes made by the transaction.\n    */\n    get newSelection() {\n        return this.selection || this.startState.selection.map(this.changes);\n    }\n    /**\n    The new state created by the transaction. Computed on demand\n    (but retained for subsequent access), so itis recommended not to\n    access it in [transaction\n    filters](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter) when possible.\n    */\n    get state() {\n        if (!this._state)\n            this.startState.applyTransaction(this);\n        return this._state;\n    }\n    /**\n    Get the value of the given annotation type, if any.\n    */\n    annotation(type) {\n        for (let ann of this.annotations)\n            if (ann.type == type)\n                return ann.value;\n        return undefined;\n    }\n    /**\n    Indicates whether the transaction changed the document.\n    */\n    get docChanged() { return !this.changes.empty; }\n    /**\n    Indicates whether this transaction reconfigures the state\n    (through a [configuration compartment](https://codemirror.net/6/docs/ref/#state.Compartment) or\n    with a top-level configuration\n    [effect](https://codemirror.net/6/docs/ref/#state.StateEffect^reconfigure).\n    */\n    get reconfigured() { return this.startState.config != this.state.config; }\n    /**\n    Returns true if the transaction has a [user\n    event](https://codemirror.net/6/docs/ref/#state.Transaction^userEvent) annotation that is equal to\n    or more specific than `event`. For example, if the transaction\n    has `\"select.pointer\"` as user event, `\"select\"` and\n    `\"select.pointer\"` will match it.\n    */\n    isUserEvent(event) {\n        let e = this.annotation(Transaction.userEvent);\n        return !!(e && (e == event || e.length > event.length && e.slice(0, event.length) == event && e[event.length] == \".\"));\n    }\n}\n/**\nAnnotation used to store transaction timestamps.\n*/\nTransaction.time = /*@__PURE__*/Annotation.define();\n/**\nAnnotation used to associate a transaction with a user interface\nevent. Holds a string identifying the event, using a\ndot-separated format to support attaching more specific\ninformation. The events used by the core libraries are:\n\n - `\"input\"` when content is entered\n   - `\"input.type\"` for typed input\n     - `\"input.type.compose\"` for composition\n   - `\"input.paste\"` for pasted input\n   - `\"input.drop\"` when adding content with drag-and-drop\n   - `\"input.complete\"` when autocompleting\n - `\"delete\"` when the user deletes content\n   - `\"delete.selection\"` when deleting the selection\n   - `\"delete.forward\"` when deleting forward from the selection\n   - `\"delete.backward\"` when deleting backward from the selection\n   - `\"delete.cut\"` when cutting to the clipboard\n - `\"move\"` when content is moved\n   - `\"move.drop\"` when content is moved within the editor through drag-and-drop\n - `\"select\"` when explicitly changing the selection\n   - `\"select.pointer\"` when selecting with a mouse or other pointing device\n - `\"undo\"` and `\"redo\"` for history actions\n\nUse [`isUserEvent`](https://codemirror.net/6/docs/ref/#state.Transaction.isUserEvent) to check\nwhether the annotation matches a given event.\n*/\nTransaction.userEvent = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating whether a transaction should be added to\nthe undo history or not.\n*/\nTransaction.addToHistory = /*@__PURE__*/Annotation.define();\n/**\nAnnotation indicating (when present and true) that a transaction\nrepresents a change made by some other actor, not the user. This\nis used, for example, to tag other people's changes in\ncollaborative editing.\n*/\nTransaction.remote = /*@__PURE__*/Annotation.define();\nfunction joinRanges(a, b) {\n    let result = [];\n    for (let iA = 0, iB = 0;;) {\n        let from, to;\n        if (iA < a.length && (iB == b.length || b[iB] >= a[iA])) {\n            from = a[iA++];\n            to = a[iA++];\n        }\n        else if (iB < b.length) {\n            from = b[iB++];\n            to = b[iB++];\n        }\n        else\n            return result;\n        if (!result.length || result[result.length - 1] < from)\n            result.push(from, to);\n        else if (result[result.length - 1] < to)\n            result[result.length - 1] = to;\n    }\n}\nfunction mergeTransaction(a, b, sequential) {\n    var _a;\n    let mapForA, mapForB, changes;\n    if (sequential) {\n        mapForA = b.changes;\n        mapForB = ChangeSet.empty(b.changes.length);\n        changes = a.changes.compose(b.changes);\n    }\n    else {\n        mapForA = b.changes.map(a.changes);\n        mapForB = a.changes.mapDesc(b.changes, true);\n        changes = a.changes.compose(mapForA);\n    }\n    return {\n        changes,\n        selection: b.selection ? b.selection.map(mapForB) : (_a = a.selection) === null || _a === void 0 ? void 0 : _a.map(mapForA),\n        effects: StateEffect.mapEffects(a.effects, mapForA).concat(StateEffect.mapEffects(b.effects, mapForB)),\n        annotations: a.annotations.length ? a.annotations.concat(b.annotations) : b.annotations,\n        scrollIntoView: a.scrollIntoView || b.scrollIntoView\n    };\n}\nfunction resolveTransactionInner(state, spec, docSize) {\n    let sel = spec.selection, annotations = asArray(spec.annotations);\n    if (spec.userEvent)\n        annotations = annotations.concat(Transaction.userEvent.of(spec.userEvent));\n    return {\n        changes: spec.changes instanceof ChangeSet ? spec.changes\n            : ChangeSet.of(spec.changes || [], docSize, state.facet(lineSeparator)),\n        selection: sel && (sel instanceof EditorSelection ? sel : EditorSelection.single(sel.anchor, sel.head)),\n        effects: asArray(spec.effects),\n        annotations,\n        scrollIntoView: !!spec.scrollIntoView\n    };\n}\nfunction resolveTransaction(state, specs, filter) {\n    let s = resolveTransactionInner(state, specs.length ? specs[0] : {}, state.doc.length);\n    if (specs.length && specs[0].filter === false)\n        filter = false;\n    for (let i = 1; i < specs.length; i++) {\n        if (specs[i].filter === false)\n            filter = false;\n        let seq = !!specs[i].sequential;\n        s = mergeTransaction(s, resolveTransactionInner(state, specs[i], seq ? s.changes.newLength : state.doc.length), seq);\n    }\n    let tr = new Transaction(state, s.changes, s.selection, s.effects, s.annotations, s.scrollIntoView);\n    return extendTransaction(filter ? filterTransaction(tr) : tr);\n}\n// Finish a transaction by applying filters if necessary.\nfunction filterTransaction(tr) {\n    let state = tr.startState;\n    // Change filters\n    let result = true;\n    for (let filter of state.facet(changeFilter)) {\n        let value = filter(tr);\n        if (value === false) {\n            result = false;\n            break;\n        }\n        if (Array.isArray(value))\n            result = result === true ? value : joinRanges(result, value);\n    }\n    if (result !== true) {\n        let changes, back;\n        if (result === false) {\n            back = tr.changes.invertedDesc;\n            changes = ChangeSet.empty(state.doc.length);\n        }\n        else {\n            let filtered = tr.changes.filter(result);\n            changes = filtered.changes;\n            back = filtered.filtered.invertedDesc;\n        }\n        tr = new Transaction(state, changes, tr.selection && tr.selection.map(back), StateEffect.mapEffects(tr.effects, back), tr.annotations, tr.scrollIntoView);\n    }\n    // Transaction filters\n    let filters = state.facet(transactionFilter);\n    for (let i = filters.length - 1; i >= 0; i--) {\n        let filtered = filters[i](tr);\n        if (filtered instanceof Transaction)\n            tr = filtered;\n        else if (Array.isArray(filtered) && filtered.length == 1 && filtered[0] instanceof Transaction)\n            tr = filtered[0];\n        else\n            tr = resolveTransaction(state, asArray(filtered), false);\n    }\n    return tr;\n}\nfunction extendTransaction(tr) {\n    let state = tr.startState, extenders = state.facet(transactionExtender), spec = tr;\n    for (let i = extenders.length - 1; i >= 0; i--) {\n        let extension = extenders[i](tr);\n        if (extension && Object.keys(extension).length)\n            spec = mergeTransaction(tr, resolveTransactionInner(state, extension, tr.changes.newLength), true);\n    }\n    return spec == tr ? tr : new Transaction(state, tr.changes, tr.selection, spec.effects, spec.annotations, spec.scrollIntoView);\n}\nconst none = [];\nfunction asArray(value) {\n    return value == null ? none : Array.isArray(value) ? value : [value];\n}\n\n/**\nThe categories produced by a [character\ncategorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer). These are used\ndo things like selecting by word.\n*/\nvar CharCategory = /*@__PURE__*/(function (CharCategory) {\n    /**\n    Word characters.\n    */\n    CharCategory[CharCategory[\"Word\"] = 0] = \"Word\";\n    /**\n    Whitespace.\n    */\n    CharCategory[CharCategory[\"Space\"] = 1] = \"Space\";\n    /**\n    Anything else.\n    */\n    CharCategory[CharCategory[\"Other\"] = 2] = \"Other\";\nreturn CharCategory})(CharCategory || (CharCategory = {}));\nconst nonASCIISingleCaseWordChar = /[\\u00df\\u0587\\u0590-\\u05f4\\u0600-\\u06ff\\u3040-\\u309f\\u30a0-\\u30ff\\u3400-\\u4db5\\u4e00-\\u9fcc\\uac00-\\ud7af]/;\nlet wordChar;\ntry {\n    wordChar = /*@__PURE__*/new RegExp(\"[\\\\p{Alphabetic}\\\\p{Number}_]\", \"u\");\n}\ncatch (_) { }\nfunction hasWordChar(str) {\n    if (wordChar)\n        return wordChar.test(str);\n    for (let i = 0; i < str.length; i++) {\n        let ch = str[i];\n        if (/\\w/.test(ch) || ch > \"\\x80\" && (ch.toUpperCase() != ch.toLowerCase() || nonASCIISingleCaseWordChar.test(ch)))\n            return true;\n    }\n    return false;\n}\nfunction makeCategorizer(wordChars) {\n    return (char) => {\n        if (!/\\S/.test(char))\n            return CharCategory.Space;\n        if (hasWordChar(char))\n            return CharCategory.Word;\n        for (let i = 0; i < wordChars.length; i++)\n            if (char.indexOf(wordChars[i]) > -1)\n                return CharCategory.Word;\n        return CharCategory.Other;\n    };\n}\n\n/**\nThe editor state class is a persistent (immutable) data structure.\nTo update a state, you [create](https://codemirror.net/6/docs/ref/#state.EditorState.update) a\n[transaction](https://codemirror.net/6/docs/ref/#state.Transaction), which produces a _new_ state\ninstance, without modifying the original object.\n\nAs such, _never_ mutate properties of a state directly. That'll\njust break things.\n*/\nclass EditorState {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    config, \n    /**\n    The current document.\n    */\n    doc, \n    /**\n    The current selection.\n    */\n    selection, \n    /**\n    @internal\n    */\n    values, tr = null) {\n        this.config = config;\n        this.doc = doc;\n        this.selection = selection;\n        this.values = values;\n        /**\n        @internal\n        */\n        this.applying = null;\n        this.status = config.statusTemplate.slice();\n        this.applying = tr;\n        // Fill in the computed state immediately, so that further queries\n        // for it made during the update return this state\n        if (tr)\n            tr._state = this;\n        for (let i = 0; i < this.config.dynamicSlots.length; i++)\n            ensureAddr(this, i << 1);\n        this.applying = null;\n    }\n    field(field, require = true) {\n        let addr = this.config.address[field.id];\n        if (addr == null) {\n            if (require)\n                throw new RangeError(\"Field is not present in this state\");\n            return undefined;\n        }\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Create a [transaction](https://codemirror.net/6/docs/ref/#state.Transaction) that updates this\n    state. Any number of [transaction specs](https://codemirror.net/6/docs/ref/#state.TransactionSpec)\n    can be passed. Unless\n    [`sequential`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.sequential) is set, the\n    [changes](https://codemirror.net/6/docs/ref/#state.TransactionSpec.changes) (if any) of each spec\n    are assumed to start in the _current_ document (not the document\n    produced by previous specs), and its\n    [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) and\n    [effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) are assumed to refer\n    to the document created by its _own_ changes. The resulting\n    transaction contains the combined effect of all the different\n    specs. For [selection](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection), later\n    specs take precedence over earlier ones.\n    */\n    update(...specs) {\n        return resolveTransaction(this, specs, true);\n    }\n    /**\n    @internal\n    */\n    applyTransaction(tr) {\n        let conf = this.config, { base, compartments } = conf;\n        for (let effect of tr.effects) {\n            if (effect.is(Compartment.reconfigure)) {\n                if (conf) {\n                    compartments = new Map;\n                    conf.compartments.forEach((val, key) => compartments.set(key, val));\n                    conf = null;\n                }\n                compartments.set(effect.value.compartment, effect.value.extension);\n            }\n            else if (effect.is(StateEffect.reconfigure)) {\n                conf = null;\n                base = effect.value;\n            }\n            else if (effect.is(StateEffect.appendConfig)) {\n                conf = null;\n                base = asArray(base).concat(effect.value);\n            }\n        }\n        let startValues;\n        if (!conf) {\n            let resolved = Configuration.resolve(base, compartments, this);\n            conf = resolved.configuration;\n            let intermediateState = new EditorState(conf, this.doc, this.selection, resolved.values, null);\n            startValues = intermediateState.values;\n        }\n        else {\n            startValues = tr.startState.values.slice();\n        }\n        new EditorState(conf, tr.newDoc, tr.newSelection, startValues, tr);\n    }\n    /**\n    Create a [transaction spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec) that\n    replaces every selection range with the given content.\n    */\n    replaceSelection(text) {\n        if (typeof text == \"string\")\n            text = this.toText(text);\n        return this.changeByRange(range => ({ changes: { from: range.from, to: range.to, insert: text },\n            range: EditorSelection.cursor(range.from + text.length) }));\n    }\n    /**\n    Create a set of changes and a new selection by running the given\n    function for each range in the active selection. The function\n    can return an optional set of changes (in the coordinate space\n    of the start document), plus an updated range (in the coordinate\n    space of the document produced by the call's own changes). This\n    method will merge all the changes and ranges into a single\n    changeset and selection, and return it as a [transaction\n    spec](https://codemirror.net/6/docs/ref/#state.TransactionSpec), which can be passed to\n    [`update`](https://codemirror.net/6/docs/ref/#state.EditorState.update).\n    */\n    changeByRange(f) {\n        let sel = this.selection;\n        let result1 = f(sel.ranges[0]);\n        let changes = this.changes(result1.changes), ranges = [result1.range];\n        let effects = asArray(result1.effects);\n        for (let i = 1; i < sel.ranges.length; i++) {\n            let result = f(sel.ranges[i]);\n            let newChanges = this.changes(result.changes), newMapped = newChanges.map(changes);\n            for (let j = 0; j < i; j++)\n                ranges[j] = ranges[j].map(newMapped);\n            let mapBy = changes.mapDesc(newChanges, true);\n            ranges.push(result.range.map(mapBy));\n            changes = changes.compose(newMapped);\n            effects = StateEffect.mapEffects(effects, newMapped).concat(StateEffect.mapEffects(asArray(result.effects), mapBy));\n        }\n        return {\n            changes,\n            selection: EditorSelection.create(ranges, sel.mainIndex),\n            effects\n        };\n    }\n    /**\n    Create a [change set](https://codemirror.net/6/docs/ref/#state.ChangeSet) from the given change\n    description, taking the state's document length and line\n    separator into account.\n    */\n    changes(spec = []) {\n        if (spec instanceof ChangeSet)\n            return spec;\n        return ChangeSet.of(spec, this.doc.length, this.facet(EditorState.lineSeparator));\n    }\n    /**\n    Using the state's [line\n    separator](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator), create a\n    [`Text`](https://codemirror.net/6/docs/ref/#text.Text) instance from the given string.\n    */\n    toText(string) {\n        return Text.of(string.split(this.facet(EditorState.lineSeparator) || DefaultSplit));\n    }\n    /**\n    Return the given range of the document as a string.\n    */\n    sliceDoc(from = 0, to = this.doc.length) {\n        return this.doc.sliceString(from, to, this.lineBreak);\n    }\n    /**\n    Get the value of a state [facet](https://codemirror.net/6/docs/ref/#state.Facet).\n    */\n    facet(facet) {\n        let addr = this.config.address[facet.id];\n        if (addr == null)\n            return facet.default;\n        ensureAddr(this, addr);\n        return getAddr(this, addr);\n    }\n    /**\n    Convert this state to a JSON-serializable object. When custom\n    fields should be serialized, you can pass them in as an object\n    mapping property names (in the resulting object, which should\n    not use `doc` or `selection`) to fields.\n    */\n    toJSON(fields) {\n        let result = {\n            doc: this.sliceDoc(),\n            selection: this.selection.toJSON()\n        };\n        if (fields)\n            for (let prop in fields) {\n                let value = fields[prop];\n                if (value instanceof StateField)\n                    result[prop] = value.spec.toJSON(this.field(fields[prop]), this);\n            }\n        return result;\n    }\n    /**\n    Deserialize a state from its JSON representation. When custom\n    fields should be deserialized, pass the same object you passed\n    to [`toJSON`](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) when serializing as\n    third argument.\n    */\n    static fromJSON(json, config = {}, fields) {\n        if (!json || typeof json.doc != \"string\")\n            throw new RangeError(\"Invalid JSON representation for EditorState\");\n        let fieldInit = [];\n        if (fields)\n            for (let prop in fields) {\n                let field = fields[prop], value = json[prop];\n                fieldInit.push(field.init(state => field.spec.fromJSON(value, state)));\n            }\n        return EditorState.create({\n            doc: json.doc,\n            selection: EditorSelection.fromJSON(json.selection),\n            extensions: config.extensions ? fieldInit.concat([config.extensions]) : fieldInit\n        });\n    }\n    /**\n    Create a new state. You'll usually only need this when\n    initializing an editor—updated states are created by applying\n    transactions.\n    */\n    static create(config = {}) {\n        let { configuration, values } = Configuration.resolve(config.extensions || [], new Map);\n        let doc = config.doc instanceof Text ? config.doc\n            : Text.of((config.doc || \"\").split(configuration.staticFacet(EditorState.lineSeparator) || DefaultSplit));\n        let selection = !config.selection ? EditorSelection.single(0)\n            : config.selection instanceof EditorSelection ? config.selection\n                : EditorSelection.single(config.selection.anchor, config.selection.head);\n        checkSelection(selection, doc.length);\n        if (!configuration.staticFacet(allowMultipleSelections))\n            selection = selection.asSingle();\n        return new EditorState(configuration, doc, selection, values);\n    }\n    /**\n    The size (in columns) of a tab in the document, determined by\n    the [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) facet.\n    */\n    get tabSize() { return this.facet(EditorState.tabSize); }\n    /**\n    Get the proper [line-break](https://codemirror.net/6/docs/ref/#state.EditorState^lineSeparator)\n    string for this state.\n    */\n    get lineBreak() { return this.facet(EditorState.lineSeparator) || \"\\n\"; }\n    /**\n    Returns true when the editor is\n    [configured](https://codemirror.net/6/docs/ref/#state.EditorState^readOnly) to be read-only.\n    */\n    get readOnly() { return this.facet(readOnly); }\n    /**\n    Look up a translation for the given phrase (via the\n    [`phrases`](https://codemirror.net/6/docs/ref/#state.EditorState^phrases) facet), or return the\n    original string if no translation is found.\n    */\n    phrase(phrase) {\n        for (let map of this.facet(EditorState.phrases))\n            if (Object.prototype.hasOwnProperty.call(map, phrase))\n                return map[phrase];\n        return phrase;\n    }\n    /**\n    Find the values for a given language data field, provided by the\n    the [`languageData`](https://codemirror.net/6/docs/ref/#state.EditorState^languageData) facet.\n    */\n    languageDataAt(name, pos, side = -1) {\n        let values = [];\n        for (let provider of this.facet(languageData)) {\n            for (let result of provider(this, pos, side)) {\n                if (Object.prototype.hasOwnProperty.call(result, name))\n                    values.push(result[name]);\n            }\n        }\n        return values;\n    }\n    /**\n    Return a function that can categorize strings (expected to\n    represent a single [grapheme cluster](https://codemirror.net/6/docs/ref/#text.findClusterBreak))\n    into one of:\n    \n     - Word (contains an alphanumeric character or a character\n       explicitly listed in the local language's `\"wordChars\"`\n       language data, which should be a string)\n     - Space (contains only whitespace)\n     - Other (anything else)\n    */\n    charCategorizer(at) {\n        return makeCategorizer(this.languageDataAt(\"wordChars\", at).join(\"\"));\n    }\n    /**\n    Find the word at the given position, meaning the range\n    containing all [word](https://codemirror.net/6/docs/ref/#state.CharCategory.Word) characters\n    around it. If no word characters are adjacent to the position,\n    this returns null.\n    */\n    wordAt(pos) {\n        let { text, from, length } = this.doc.lineAt(pos);\n        let cat = this.charCategorizer(pos);\n        let start = pos - from, end = pos - from;\n        while (start > 0) {\n            let prev = findClusterBreak(text, start, false);\n            if (cat(text.slice(prev, start)) != CharCategory.Word)\n                break;\n            start = prev;\n        }\n        while (end < length) {\n            let next = findClusterBreak(text, end);\n            if (cat(text.slice(end, next)) != CharCategory.Word)\n                break;\n            end = next;\n        }\n        return start == end ? null : EditorSelection.range(start + from, end + from);\n    }\n}\n/**\nA facet that, when enabled, causes the editor to allow multiple\nranges to be selected. Be careful though, because by default the\neditor relies on the native DOM selection, which cannot handle\nmultiple selections. An extension like\n[`drawSelection`](https://codemirror.net/6/docs/ref/#view.drawSelection) can be used to make\nsecondary selections visible to the user.\n*/\nEditorState.allowMultipleSelections = allowMultipleSelections;\n/**\nConfigures the tab size to use in this state. The first\n(highest-precedence) value of the facet is used. If no value is\ngiven, this defaults to 4.\n*/\nEditorState.tabSize = /*@__PURE__*/Facet.define({\n    combine: values => values.length ? values[0] : 4\n});\n/**\nThe line separator to use. By default, any of `\"\\n\"`, `\"\\r\\n\"`\nand `\"\\r\"` is treated as a separator when splitting lines, and\nlines are joined with `\"\\n\"`.\n\nWhen you configure a value here, only that precise separator\nwill be used, allowing you to round-trip documents through the\neditor without normalizing line separators.\n*/\nEditorState.lineSeparator = lineSeparator;\n/**\nThis facet controls the value of the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) getter, which is\nconsulted by commands and extensions that implement editing\nfunctionality to determine whether they should apply. It\ndefaults to false, but when its highest-precedence value is\n`true`, such functionality disables itself.\n\nNot to be confused with\n[`EditorView.editable`](https://codemirror.net/6/docs/ref/#view.EditorView^editable), which\ncontrols whether the editor's DOM is set to be editable (and\nthus focusable).\n*/\nEditorState.readOnly = readOnly;\n/**\nRegisters translation phrases. The\n[`phrase`](https://codemirror.net/6/docs/ref/#state.EditorState.phrase) method will look through\nall objects registered with this facet to find translations for\nits argument.\n*/\nEditorState.phrases = /*@__PURE__*/Facet.define();\n/**\nA facet used to register [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) providers.\n*/\nEditorState.languageData = languageData;\n/**\nFacet used to register change filters, which are called for each\ntransaction (unless explicitly\n[disabled](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter)), and can suppress\npart of the transaction's changes.\n\nSuch a function can return `true` to indicate that it doesn't\nwant to do anything, `false` to completely stop the changes in\nthe transaction, or a set of ranges in which changes should be\nsuppressed. Such ranges are represented as an array of numbers,\nwith each pair of two number indicating the start and end of a\nrange. So for example `[10, 20, 100, 110]` suppresses changes\nbetween 10 and 20, and between 100 and 110.\n*/\nEditorState.changeFilter = changeFilter;\n/**\nFacet used to register a hook that gets a chance to update or\nreplace transaction specs before they are applied. This will\nonly be applied for transactions that don't have\n[`filter`](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter) set to `false`. You\ncan either return a single transaction spec (possibly the input\ntransaction), or an array of specs (which will be combined in\nthe same way as the arguments to\n[`EditorState.update`](https://codemirror.net/6/docs/ref/#state.EditorState.update)).\n\nWhen possible, it is recommended to avoid accessing\n[`Transaction.state`](https://codemirror.net/6/docs/ref/#state.Transaction.state) in a filter,\nsince it will force creation of a state that will then be\ndiscarded again, if the transaction is actually filtered.\n\n(This functionality should be used with care. Indiscriminately\nmodifying transaction is likely to break something or degrade\nthe user experience.)\n*/\nEditorState.transactionFilter = transactionFilter;\n/**\nThis is a more limited form of\n[`transactionFilter`](https://codemirror.net/6/docs/ref/#state.EditorState^transactionFilter),\nwhich can only add\n[annotations](https://codemirror.net/6/docs/ref/#state.TransactionSpec.annotations) and\n[effects](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects). _But_, this type\nof filter runs even the transaction has disabled regular\n[filtering](https://codemirror.net/6/docs/ref/#state.TransactionSpec.filter), making it suitable\nfor effects that don't need to touch the changes or selection,\nbut do want to process every transaction.\n\nExtenders run _after_ filters, when both are applied.\n*/\nEditorState.transactionExtender = transactionExtender;\nCompartment.reconfigure = /*@__PURE__*/StateEffect.define();\n\n/**\nUtility function for combining behaviors to fill in a config\nobject from an array of provided configs. Will, by default, error\nwhen a field gets two values that aren't `===`-equal, but you can\nprovide combine functions per field to do something else.\n*/\nfunction combineConfig(configs, defaults, // Should hold only the optional properties of Config, but I haven't managed to express that\ncombine = {}) {\n    let result = {};\n    for (let config of configs)\n        for (let key of Object.keys(config)) {\n            let value = config[key], current = result[key];\n            if (current === undefined)\n                result[key] = value;\n            else if (current === value || value === undefined) ; // No conflict\n            else if (Object.hasOwnProperty.call(combine, key))\n                result[key] = combine[key](current, value);\n            else\n                throw new Error(\"Config merge conflict for field \" + key);\n        }\n    for (let key in defaults)\n        if (result[key] === undefined)\n            result[key] = defaults[key];\n    return result;\n}\n\nexport { Annotation, AnnotationType, ChangeDesc, ChangeSet, CharCategory, Compartment, EditorSelection, EditorState, Facet, MapMode, Prec, SelectionRange, StateEffect, StateEffectType, StateField, Transaction, combineConfig };\n","const C = \"\\u037c\"\nconst COUNT = typeof Symbol == \"undefined\" ? \"__\" + C : Symbol.for(C)\nconst SET = typeof Symbol == \"undefined\" ? \"__styleSet\" + Math.floor(Math.random() * 1e8) : Symbol(\"styleSet\")\nconst top = typeof globalThis != \"undefined\" ? globalThis : typeof window != \"undefined\" ? window : {}\n\n// :: - Style modules encapsulate a set of CSS rules defined from\n// JavaScript. Their definitions are only available in a given DOM\n// root after it has been _mounted_ there with `StyleModule.mount`.\n//\n// Style modules should be created once and stored somewhere, as\n// opposed to re-creating them every time you need them. The amount of\n// CSS rules generated for a given DOM root is bounded by the amount\n// of style modules that were used. So to avoid leaking rules, don't\n// create these dynamically, but treat them as one-time allocations.\nexport class StyleModule {\n  // :: (Object<Style>, ?{finish: ?(string) → string})\n  // Create a style module from the given spec.\n  //\n  // When `finish` is given, it is called on regular (non-`@`)\n  // selectors (after `&` expansion) to compute the final selector.\n  constructor(spec, options) {\n    this.rules = []\n    let {finish} = options || {}\n\n    function splitSelector(selector) {\n      return /^@/.test(selector) ? [selector] : selector.split(/,\\s*/)\n    }\n\n    function render(selectors, spec, target, isKeyframes) {\n      let local = [], isAt = /^@(\\w+)\\b/.exec(selectors[0]), keyframes = isAt && isAt[1] == \"keyframes\"\n      if (isAt && spec == null) return target.push(selectors[0] + \";\")\n      for (let prop in spec) {\n        let value = spec[prop]\n        if (/&/.test(prop)) {\n          render(prop.split(/,\\s*/).map(part => selectors.map(sel => part.replace(/&/, sel))).reduce((a, b) => a.concat(b)),\n                 value, target)\n        } else if (value && typeof value == \"object\") {\n          if (!isAt) throw new RangeError(\"The value of a property (\" + prop + \") should be a primitive value.\")\n          render(splitSelector(prop), value, local, keyframes)\n        } else if (value != null) {\n          local.push(prop.replace(/_.*/, \"\").replace(/[A-Z]/g, l => \"-\" + l.toLowerCase()) + \": \" + value + \";\")\n        }\n      }\n      if (local.length || keyframes) {\n        target.push((finish && !isAt && !isKeyframes ? selectors.map(finish) : selectors).join(\", \") +\n                    \" {\" + local.join(\" \") + \"}\")\n      }\n    }\n\n    for (let prop in spec) render(splitSelector(prop), spec[prop], this.rules)\n  }\n\n  // :: () → string\n  // Returns a string containing the module's CSS rules.\n  getRules() { return this.rules.join(\"\\n\") }\n\n  // :: () → string\n  // Generate a new unique CSS class name.\n  static newName() {\n    let id = top[COUNT] || 1\n    top[COUNT] = id + 1\n    return C + id.toString(36)\n  }\n\n  // :: (union<Document, ShadowRoot>, union<[StyleModule], StyleModule>)\n  //\n  // Mount the given set of modules in the given DOM root, which ensures\n  // that the CSS rules defined by the module are available in that\n  // context.\n  //\n  // Rules are only added to the document once per root.\n  //\n  // Rule order will follow the order of the modules, so that rules from\n  // modules later in the array take precedence of those from earlier\n  // modules. If you call this function multiple times for the same root\n  // in a way that changes the order of already mounted modules, the old\n  // order will be changed.\n  static mount(root, modules) {\n    (root[SET] || new StyleSet(root)).mount(Array.isArray(modules) ? modules : [modules])\n  }\n}\n\nlet adoptedSet = null\n\nclass StyleSet {\n  constructor(root) {\n    if (!root.head && root.adoptedStyleSheets && typeof CSSStyleSheet != \"undefined\") {\n      if (adoptedSet) {\n        root.adoptedStyleSheets = [adoptedSet.sheet].concat(root.adoptedStyleSheets)\n        return root[SET] = adoptedSet\n      }\n      this.sheet = new CSSStyleSheet\n      root.adoptedStyleSheets = [this.sheet].concat(root.adoptedStyleSheets)\n      adoptedSet = this\n    } else {\n      this.styleTag = (root.ownerDocument || root).createElement(\"style\")\n      let target = root.head || root\n      target.insertBefore(this.styleTag, target.firstChild)\n    }\n    this.modules = []\n    root[SET] = this\n  }\n\n  mount(modules) {\n    let sheet = this.sheet\n    let pos = 0 /* Current rule offset */, j = 0 /* Index into this.modules */\n    for (let i = 0; i < modules.length; i++) {\n      let mod = modules[i], index = this.modules.indexOf(mod)\n      if (index < j && index > -1) { // Ordering conflict\n        this.modules.splice(index, 1)\n        j--\n        index = -1\n      }\n      if (index == -1) {\n        this.modules.splice(j++, 0, mod)\n        if (sheet) for (let k = 0; k < mod.rules.length; k++)\n          sheet.insertRule(mod.rules[k], pos++)\n      } else {\n        while (j < index) pos += this.modules[j++].rules.length\n        pos += mod.rules.length\n        j++\n      }\n    }\n\n    if (!sheet) {\n      let text = \"\"\n      for (let i = 0; i < this.modules.length; i++)\n        text += this.modules[i].getRules() + \"\\n\"\n      this.styleTag.textContent = text\n    }\n  }\n}\n\n// Style::Object<union<Style,string>>\n//\n// A style is an object that, in the simple case, maps CSS property\n// names to strings holding their values, as in `{color: \"red\",\n// fontWeight: \"bold\"}`. The property names can be given in\n// camel-case—the library will insert a dash before capital letters\n// when converting them to CSS.\n//\n// If you include an underscore in a property name, it and everything\n// after it will be removed from the output, which can be useful when\n// providing a property multiple times, for browser compatibility\n// reasons.\n//\n// A property in a style object can also be a sub-selector, which\n// extends the current context to add a pseudo-selector or a child\n// selector. Such a property should contain a `&` character, which\n// will be replaced by the current selector. For example `{\"&:before\":\n// {content: '\"hi\"'}}`. Sub-selectors and regular properties can\n// freely be mixed in a given object. Any property containing a `&` is\n// assumed to be a sub-selector.\n//\n// Finally, a property can specify an @-block to be wrapped around the\n// styles defined inside the object that's the property's value. For\n// example to create a media query you can do `{\"@media screen and\n// (min-width: 400px)\": {...}}`.\n","import { MapMode } from '@codemirror/state';\n\n/**\nEach range is associated with a value, which must inherit from\nthis class.\n*/\nclass RangeValue {\n    /**\n    Compare this value with another value. The default\n    implementation compares by identity.\n    */\n    eq(other) { return this == other; }\n    /**\n    Create a [range](https://codemirror.net/6/docs/ref/#rangeset.Range) with this value.\n    */\n    range(from, to = from) { return new Range(from, to, this); }\n}\nRangeValue.prototype.startSide = RangeValue.prototype.endSide = 0;\nRangeValue.prototype.point = false;\nRangeValue.prototype.mapMode = MapMode.TrackDel;\n/**\nA range associates a value with a range of positions.\n*/\nclass Range {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The range's start position.\n    */\n    from, \n    /**\n    Its end position.\n    */\n    to, \n    /**\n    The value associated with this range.\n    */\n    value) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n    }\n}\nfunction cmpRange(a, b) {\n    return a.from - b.from || a.value.startSide - b.value.startSide;\n}\nclass Chunk {\n    constructor(from, to, value, \n    // Chunks are marked with the largest point that occurs\n    // in them (or -1 for no points), so that scans that are\n    // only interested in points (such as the\n    // heightmap-related logic) can skip range-only chunks.\n    maxPoint) {\n        this.from = from;\n        this.to = to;\n        this.value = value;\n        this.maxPoint = maxPoint;\n    }\n    get length() { return this.to[this.to.length - 1]; }\n    // Find the index of the given position and side. Use the ranges'\n    // `from` pos when `end == false`, `to` when `end == true`.\n    findIndex(pos, side, end, startAt = 0) {\n        let arr = end ? this.to : this.from;\n        for (let lo = startAt, hi = arr.length;;) {\n            if (lo == hi)\n                return lo;\n            let mid = (lo + hi) >> 1;\n            let diff = arr[mid] - pos || (end ? this.value[mid].endSide : this.value[mid].startSide) - side;\n            if (mid == lo)\n                return diff >= 0 ? lo : hi;\n            if (diff >= 0)\n                hi = mid;\n            else\n                lo = mid + 1;\n        }\n    }\n    between(offset, from, to, f) {\n        for (let i = this.findIndex(from, -1000000000 /* Far */, true), e = this.findIndex(to, 1000000000 /* Far */, false, i); i < e; i++)\n            if (f(this.from[i] + offset, this.to[i] + offset, this.value[i]) === false)\n                return false;\n    }\n    map(offset, changes) {\n        let value = [], from = [], to = [], newPos = -1, maxPoint = -1;\n        for (let i = 0; i < this.value.length; i++) {\n            let val = this.value[i], curFrom = this.from[i] + offset, curTo = this.to[i] + offset, newFrom, newTo;\n            if (curFrom == curTo) {\n                let mapped = changes.mapPos(curFrom, val.startSide, val.mapMode);\n                if (mapped == null)\n                    continue;\n                newFrom = newTo = mapped;\n            }\n            else {\n                newFrom = changes.mapPos(curFrom, val.startSide);\n                newTo = changes.mapPos(curTo, val.endSide);\n                if (newFrom > newTo || newFrom == newTo && val.startSide > 0 && val.endSide <= 0)\n                    continue;\n            }\n            if ((newTo - newFrom || val.endSide - val.startSide) < 0)\n                continue;\n            if (newPos < 0)\n                newPos = newFrom;\n            if (val.point)\n                maxPoint = Math.max(maxPoint, newTo - newFrom);\n            value.push(val);\n            from.push(newFrom - newPos);\n            to.push(newTo - newPos);\n        }\n        return { mapped: value.length ? new Chunk(from, to, value, maxPoint) : null, pos: newPos };\n    }\n}\n/**\nA range set stores a collection of [ranges](https://codemirror.net/6/docs/ref/#rangeset.Range) in a\nway that makes them efficient to [map](https://codemirror.net/6/docs/ref/#rangeset.RangeSet.map) and\n[update](https://codemirror.net/6/docs/ref/#rangeset.RangeSet.update). This is an immutable data\nstructure.\n*/\nclass RangeSet {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    chunkPos, \n    /**\n    @internal\n    */\n    chunk, \n    /**\n    @internal\n    */\n    nextLayer = RangeSet.empty, \n    /**\n    @internal\n    */\n    maxPoint) {\n        this.chunkPos = chunkPos;\n        this.chunk = chunk;\n        this.nextLayer = nextLayer;\n        this.maxPoint = maxPoint;\n    }\n    /**\n    @internal\n    */\n    get length() {\n        let last = this.chunk.length - 1;\n        return last < 0 ? 0 : Math.max(this.chunkEnd(last), this.nextLayer.length);\n    }\n    /**\n    The number of ranges in the set.\n    */\n    get size() {\n        if (this.isEmpty)\n            return 0;\n        let size = this.nextLayer.size;\n        for (let chunk of this.chunk)\n            size += chunk.value.length;\n        return size;\n    }\n    /**\n    @internal\n    */\n    chunkEnd(index) {\n        return this.chunkPos[index] + this.chunk[index].length;\n    }\n    /**\n    Update the range set, optionally adding new ranges or filtering\n    out existing ones.\n    \n    (The extra type parameter is just there as a kludge to work\n    around TypeScript variance issues that prevented `RangeSet<X>`\n    from being a subtype of `RangeSet<Y>` when `X` is a subtype of\n    `Y`.)\n    */\n    update(updateSpec) {\n        let { add = [], sort = false, filterFrom = 0, filterTo = this.length } = updateSpec;\n        let filter = updateSpec.filter;\n        if (add.length == 0 && !filter)\n            return this;\n        if (sort)\n            add.slice().sort(cmpRange);\n        if (this.isEmpty)\n            return add.length ? RangeSet.of(add) : this;\n        let cur = new LayerCursor(this, null, -1).goto(0), i = 0, spill = [];\n        let builder = new RangeSetBuilder();\n        while (cur.value || i < add.length) {\n            if (i < add.length && (cur.from - add[i].from || cur.startSide - add[i].value.startSide) >= 0) {\n                let range = add[i++];\n                if (!builder.addInner(range.from, range.to, range.value))\n                    spill.push(range);\n            }\n            else if (cur.rangeIndex == 1 && cur.chunkIndex < this.chunk.length &&\n                (i == add.length || this.chunkEnd(cur.chunkIndex) < add[i].from) &&\n                (!filter || filterFrom > this.chunkEnd(cur.chunkIndex) || filterTo < this.chunkPos[cur.chunkIndex]) &&\n                builder.addChunk(this.chunkPos[cur.chunkIndex], this.chunk[cur.chunkIndex])) {\n                cur.nextChunk();\n            }\n            else {\n                if (!filter || filterFrom > cur.to || filterTo < cur.from || filter(cur.from, cur.to, cur.value)) {\n                    if (!builder.addInner(cur.from, cur.to, cur.value))\n                        spill.push(new Range(cur.from, cur.to, cur.value));\n                }\n                cur.next();\n            }\n        }\n        return builder.finishInner(this.nextLayer.isEmpty && !spill.length ? RangeSet.empty\n            : this.nextLayer.update({ add: spill, filter, filterFrom, filterTo }));\n    }\n    /**\n    Map this range set through a set of changes, return the new set.\n    */\n    map(changes) {\n        if (changes.length == 0 || this.isEmpty)\n            return this;\n        let chunks = [], chunkPos = [], maxPoint = -1;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            let touch = changes.touchesRange(start, start + chunk.length);\n            if (touch === false) {\n                maxPoint = Math.max(maxPoint, chunk.maxPoint);\n                chunks.push(chunk);\n                chunkPos.push(changes.mapPos(start));\n            }\n            else if (touch === true) {\n                let { mapped, pos } = chunk.map(start, changes);\n                if (mapped) {\n                    maxPoint = Math.max(maxPoint, mapped.maxPoint);\n                    chunks.push(mapped);\n                    chunkPos.push(pos);\n                }\n            }\n        }\n        let next = this.nextLayer.map(changes);\n        return chunks.length == 0 ? next : new RangeSet(chunkPos, chunks, next, maxPoint);\n    }\n    /**\n    Iterate over the ranges that touch the region `from` to `to`,\n    calling `f` for each. There is no guarantee that the ranges will\n    be reported in any specific order. When the callback returns\n    `false`, iteration stops.\n    */\n    between(from, to, f) {\n        if (this.isEmpty)\n            return;\n        for (let i = 0; i < this.chunk.length; i++) {\n            let start = this.chunkPos[i], chunk = this.chunk[i];\n            if (to >= start && from <= start + chunk.length &&\n                chunk.between(start, from - start, to - start, f) === false)\n                return;\n        }\n        this.nextLayer.between(from, to, f);\n    }\n    /**\n    Iterate over the ranges in this set, in order, including all\n    ranges that end at or after `from`.\n    */\n    iter(from = 0) {\n        return HeapCursor.from([this]).goto(from);\n    }\n    /**\n    @internal\n    */\n    get isEmpty() { return this.nextLayer == this; }\n    /**\n    Iterate over the ranges in a collection of sets, in order,\n    starting from `from`.\n    */\n    static iter(sets, from = 0) {\n        return HeapCursor.from(sets).goto(from);\n    }\n    /**\n    Iterate over two groups of sets, calling methods on `comparator`\n    to notify it of possible differences.\n    */\n    static compare(oldSets, newSets, \n    /**\n    This indicates how the underlying data changed between these\n    ranges, and is needed to synchronize the iteration. `from` and\n    `to` are coordinates in the _new_ space, after these changes.\n    */\n    textDiff, comparator, \n    /**\n    Can be used to ignore all non-point ranges, and points below\n    the given size. When -1, all ranges are compared.\n    */\n    minPointSize = -1) {\n        let a = oldSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let b = newSets.filter(set => set.maxPoint > 0 || !set.isEmpty && set.maxPoint >= minPointSize);\n        let sharedChunks = findSharedChunks(a, b, textDiff);\n        let sideA = new SpanCursor(a, sharedChunks, minPointSize);\n        let sideB = new SpanCursor(b, sharedChunks, minPointSize);\n        textDiff.iterGaps((fromA, fromB, length) => compare(sideA, fromA, sideB, fromB, length, comparator));\n        if (textDiff.empty && textDiff.length == 0)\n            compare(sideA, 0, sideB, 0, 0, comparator);\n    }\n    /**\n    Compare the contents of two groups of range sets, returning true\n    if they are equivalent in the given range.\n    */\n    static eq(oldSets, newSets, from = 0, to) {\n        if (to == null)\n            to = 1000000000 /* Far */;\n        let a = oldSets.filter(set => !set.isEmpty && newSets.indexOf(set) < 0);\n        let b = newSets.filter(set => !set.isEmpty && oldSets.indexOf(set) < 0);\n        if (a.length != b.length)\n            return false;\n        if (!a.length)\n            return true;\n        let sharedChunks = findSharedChunks(a, b);\n        let sideA = new SpanCursor(a, sharedChunks, 0).goto(from), sideB = new SpanCursor(b, sharedChunks, 0).goto(from);\n        for (;;) {\n            if (sideA.to != sideB.to ||\n                !sameValues(sideA.active, sideB.active) ||\n                sideA.point && (!sideB.point || !sideA.point.eq(sideB.point)))\n                return false;\n            if (sideA.to > to)\n                return true;\n            sideA.next();\n            sideB.next();\n        }\n    }\n    /**\n    Iterate over a group of range sets at the same time, notifying\n    the iterator about the ranges covering every given piece of\n    content. Returns the open count (see\n    [`SpanIterator.span`](https://codemirror.net/6/docs/ref/#rangeset.SpanIterator.span)) at the end\n    of the iteration.\n    */\n    static spans(sets, from, to, iterator, \n    /**\n    When given and greater than -1, only points of at least this\n    size are taken into account.\n    */\n    minPointSize = -1) {\n        var _a;\n        let cursor = new SpanCursor(sets, null, minPointSize, (_a = iterator.filterPoint) === null || _a === void 0 ? void 0 : _a.bind(iterator)).goto(from), pos = from;\n        let open = cursor.openStart;\n        for (;;) {\n            let curTo = Math.min(cursor.to, to);\n            if (cursor.point) {\n                iterator.point(pos, curTo, cursor.point, cursor.activeForPoint(cursor.to), open);\n                open = cursor.openEnd(curTo) + (cursor.to > curTo ? 1 : 0);\n            }\n            else if (curTo > pos) {\n                iterator.span(pos, curTo, cursor.active, open);\n                open = cursor.openEnd(curTo);\n            }\n            if (cursor.to > to)\n                break;\n            pos = cursor.to;\n            cursor.next();\n        }\n        return open;\n    }\n    /**\n    Create a range set for the given range or array of ranges. By\n    default, this expects the ranges to be _sorted_ (by start\n    position and, if two start at the same position,\n    `value.startSide`). You can pass `true` as second argument to\n    cause the method to sort them.\n    */\n    static of(ranges, sort = false) {\n        let build = new RangeSetBuilder();\n        for (let range of ranges instanceof Range ? [ranges] : sort ? lazySort(ranges) : ranges)\n            build.add(range.from, range.to, range.value);\n        return build.finish();\n    }\n}\n/**\nThe empty set of ranges.\n*/\nRangeSet.empty = /*@__PURE__*/new RangeSet([], [], null, -1);\nfunction lazySort(ranges) {\n    if (ranges.length > 1)\n        for (let prev = ranges[0], i = 1; i < ranges.length; i++) {\n            let cur = ranges[i];\n            if (cmpRange(prev, cur) > 0)\n                return ranges.slice().sort(cmpRange);\n            prev = cur;\n        }\n    return ranges;\n}\nRangeSet.empty.nextLayer = RangeSet.empty;\n/**\nA range set builder is a data structure that helps build up a\n[range set](https://codemirror.net/6/docs/ref/#rangeset.RangeSet) directly, without first allocating\nan array of [`Range`](https://codemirror.net/6/docs/ref/#rangeset.Range) objects.\n*/\nclass RangeSetBuilder {\n    /**\n    Create an empty builder.\n    */\n    constructor() {\n        this.chunks = [];\n        this.chunkPos = [];\n        this.chunkStart = -1;\n        this.last = null;\n        this.lastFrom = -1000000000 /* Far */;\n        this.lastTo = -1000000000 /* Far */;\n        this.from = [];\n        this.to = [];\n        this.value = [];\n        this.maxPoint = -1;\n        this.setMaxPoint = -1;\n        this.nextLayer = null;\n    }\n    finishChunk(newArrays) {\n        this.chunks.push(new Chunk(this.from, this.to, this.value, this.maxPoint));\n        this.chunkPos.push(this.chunkStart);\n        this.chunkStart = -1;\n        this.setMaxPoint = Math.max(this.setMaxPoint, this.maxPoint);\n        this.maxPoint = -1;\n        if (newArrays) {\n            this.from = [];\n            this.to = [];\n            this.value = [];\n        }\n    }\n    /**\n    Add a range. Ranges should be added in sorted (by `from` and\n    `value.startSide`) order.\n    */\n    add(from, to, value) {\n        if (!this.addInner(from, to, value))\n            (this.nextLayer || (this.nextLayer = new RangeSetBuilder)).add(from, to, value);\n    }\n    /**\n    @internal\n    */\n    addInner(from, to, value) {\n        let diff = from - this.lastTo || value.startSide - this.last.endSide;\n        if (diff <= 0 && (from - this.lastFrom || value.startSide - this.last.startSide) < 0)\n            throw new Error(\"Ranges must be added sorted by `from` position and `startSide`\");\n        if (diff < 0)\n            return false;\n        if (this.from.length == 250 /* ChunkSize */)\n            this.finishChunk(true);\n        if (this.chunkStart < 0)\n            this.chunkStart = from;\n        this.from.push(from - this.chunkStart);\n        this.to.push(to - this.chunkStart);\n        this.last = value;\n        this.lastFrom = from;\n        this.lastTo = to;\n        this.value.push(value);\n        if (value.point)\n            this.maxPoint = Math.max(this.maxPoint, to - from);\n        return true;\n    }\n    /**\n    @internal\n    */\n    addChunk(from, chunk) {\n        if ((from - this.lastTo || chunk.value[0].startSide - this.last.endSide) < 0)\n            return false;\n        if (this.from.length)\n            this.finishChunk(true);\n        this.setMaxPoint = Math.max(this.setMaxPoint, chunk.maxPoint);\n        this.chunks.push(chunk);\n        this.chunkPos.push(from);\n        let last = chunk.value.length - 1;\n        this.last = chunk.value[last];\n        this.lastFrom = chunk.from[last] + from;\n        this.lastTo = chunk.to[last] + from;\n        return true;\n    }\n    /**\n    Finish the range set. Returns the new set. The builder can't be\n    used anymore after this has been called.\n    */\n    finish() { return this.finishInner(RangeSet.empty); }\n    /**\n    @internal\n    */\n    finishInner(next) {\n        if (this.from.length)\n            this.finishChunk(false);\n        if (this.chunks.length == 0)\n            return next;\n        let result = new RangeSet(this.chunkPos, this.chunks, this.nextLayer ? this.nextLayer.finishInner(next) : next, this.setMaxPoint);\n        this.from = null; // Make sure further `add` calls produce errors\n        return result;\n    }\n}\nfunction findSharedChunks(a, b, textDiff) {\n    let inA = new Map();\n    for (let set of a)\n        for (let i = 0; i < set.chunk.length; i++)\n            if (set.chunk[i].maxPoint <= 0)\n                inA.set(set.chunk[i], set.chunkPos[i]);\n    let shared = new Set();\n    for (let set of b)\n        for (let i = 0; i < set.chunk.length; i++) {\n            let known = inA.get(set.chunk[i]);\n            if (known != null && (textDiff ? textDiff.mapPos(known) : known) == set.chunkPos[i])\n                shared.add(set.chunk[i]);\n        }\n    return shared;\n}\nclass LayerCursor {\n    constructor(layer, skip, minPoint, rank = 0) {\n        this.layer = layer;\n        this.skip = skip;\n        this.minPoint = minPoint;\n        this.rank = rank;\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    get endSide() { return this.value ? this.value.endSide : 0; }\n    goto(pos, side = -1000000000 /* Far */) {\n        this.chunkIndex = this.rangeIndex = 0;\n        this.gotoInner(pos, side, false);\n        return this;\n    }\n    gotoInner(pos, side, forward) {\n        while (this.chunkIndex < this.layer.chunk.length) {\n            let next = this.layer.chunk[this.chunkIndex];\n            if (!(this.skip && this.skip.has(next) ||\n                this.layer.chunkEnd(this.chunkIndex) < pos ||\n                next.maxPoint < this.minPoint))\n                break;\n            this.chunkIndex++;\n            forward = false;\n        }\n        if (this.chunkIndex < this.layer.chunk.length) {\n            let rangeIndex = this.layer.chunk[this.chunkIndex].findIndex(pos - this.layer.chunkPos[this.chunkIndex], side, true);\n            if (!forward || this.rangeIndex < rangeIndex)\n                this.setRangeIndex(rangeIndex);\n        }\n        this.next();\n    }\n    forward(pos, side) {\n        if ((this.to - pos || this.endSide - side) < 0)\n            this.gotoInner(pos, side, true);\n    }\n    next() {\n        for (;;) {\n            if (this.chunkIndex == this.layer.chunk.length) {\n                this.from = this.to = 1000000000 /* Far */;\n                this.value = null;\n                break;\n            }\n            else {\n                let chunkPos = this.layer.chunkPos[this.chunkIndex], chunk = this.layer.chunk[this.chunkIndex];\n                let from = chunkPos + chunk.from[this.rangeIndex];\n                this.from = from;\n                this.to = chunkPos + chunk.to[this.rangeIndex];\n                this.value = chunk.value[this.rangeIndex];\n                this.setRangeIndex(this.rangeIndex + 1);\n                if (this.minPoint < 0 || this.value.point && this.to - this.from >= this.minPoint)\n                    break;\n            }\n        }\n    }\n    setRangeIndex(index) {\n        if (index == this.layer.chunk[this.chunkIndex].value.length) {\n            this.chunkIndex++;\n            if (this.skip) {\n                while (this.chunkIndex < this.layer.chunk.length && this.skip.has(this.layer.chunk[this.chunkIndex]))\n                    this.chunkIndex++;\n            }\n            this.rangeIndex = 0;\n        }\n        else {\n            this.rangeIndex = index;\n        }\n    }\n    nextChunk() {\n        this.chunkIndex++;\n        this.rangeIndex = 0;\n        this.next();\n    }\n    compare(other) {\n        return this.from - other.from || this.startSide - other.startSide || this.to - other.to || this.endSide - other.endSide;\n    }\n}\nclass HeapCursor {\n    constructor(heap) {\n        this.heap = heap;\n    }\n    static from(sets, skip = null, minPoint = -1) {\n        let heap = [];\n        for (let i = 0; i < sets.length; i++) {\n            for (let cur = sets[i]; !cur.isEmpty; cur = cur.nextLayer) {\n                if (cur.maxPoint >= minPoint)\n                    heap.push(new LayerCursor(cur, skip, minPoint, i));\n            }\n        }\n        return heap.length == 1 ? heap[0] : new HeapCursor(heap);\n    }\n    get startSide() { return this.value ? this.value.startSide : 0; }\n    goto(pos, side = -1000000000 /* Far */) {\n        for (let cur of this.heap)\n            cur.goto(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        for (let cur of this.heap)\n            cur.forward(pos, side);\n        for (let i = this.heap.length >> 1; i >= 0; i--)\n            heapBubble(this.heap, i);\n        if ((this.to - pos || this.value.endSide - side) < 0)\n            this.next();\n    }\n    next() {\n        if (this.heap.length == 0) {\n            this.from = this.to = 1000000000 /* Far */;\n            this.value = null;\n            this.rank = -1;\n        }\n        else {\n            let top = this.heap[0];\n            this.from = top.from;\n            this.to = top.to;\n            this.value = top.value;\n            this.rank = top.rank;\n            if (top.value)\n                top.next();\n            heapBubble(this.heap, 0);\n        }\n    }\n}\nfunction heapBubble(heap, index) {\n    for (let cur = heap[index];;) {\n        let childIndex = (index << 1) + 1;\n        if (childIndex >= heap.length)\n            break;\n        let child = heap[childIndex];\n        if (childIndex + 1 < heap.length && child.compare(heap[childIndex + 1]) >= 0) {\n            child = heap[childIndex + 1];\n            childIndex++;\n        }\n        if (cur.compare(child) < 0)\n            break;\n        heap[childIndex] = cur;\n        heap[index] = child;\n        index = childIndex;\n    }\n}\nclass SpanCursor {\n    constructor(sets, skip, minPoint, filterPoint = () => true) {\n        this.minPoint = minPoint;\n        this.filterPoint = filterPoint;\n        this.active = [];\n        this.activeTo = [];\n        this.activeRank = [];\n        this.minActive = -1;\n        // A currently active point range, if any\n        this.point = null;\n        this.pointFrom = 0;\n        this.pointRank = 0;\n        this.to = -1000000000 /* Far */;\n        this.endSide = 0;\n        this.openStart = -1;\n        this.cursor = HeapCursor.from(sets, skip, minPoint);\n    }\n    goto(pos, side = -1000000000 /* Far */) {\n        this.cursor.goto(pos, side);\n        this.active.length = this.activeTo.length = this.activeRank.length = 0;\n        this.minActive = -1;\n        this.to = pos;\n        this.endSide = side;\n        this.openStart = -1;\n        this.next();\n        return this;\n    }\n    forward(pos, side) {\n        while (this.minActive > -1 && (this.activeTo[this.minActive] - pos || this.active[this.minActive].endSide - side) < 0)\n            this.removeActive(this.minActive);\n        this.cursor.forward(pos, side);\n    }\n    removeActive(index) {\n        remove(this.active, index);\n        remove(this.activeTo, index);\n        remove(this.activeRank, index);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    addActive(trackOpen) {\n        let i = 0, { value, to, rank } = this.cursor;\n        while (i < this.activeRank.length && this.activeRank[i] <= rank)\n            i++;\n        insert(this.active, i, value);\n        insert(this.activeTo, i, to);\n        insert(this.activeRank, i, rank);\n        if (trackOpen)\n            insert(trackOpen, i, this.cursor.from);\n        this.minActive = findMinIndex(this.active, this.activeTo);\n    }\n    // After calling this, if `this.point` != null, the next range is a\n    // point. Otherwise, it's a regular range, covered by `this.active`.\n    next() {\n        let from = this.to, wasPoint = this.point;\n        this.point = null;\n        let trackOpen = this.openStart < 0 ? [] : null, trackExtra = 0;\n        for (;;) {\n            let a = this.minActive;\n            if (a > -1 && (this.activeTo[a] - this.cursor.from || this.active[a].endSide - this.cursor.startSide) < 0) {\n                if (this.activeTo[a] > from) {\n                    this.to = this.activeTo[a];\n                    this.endSide = this.active[a].endSide;\n                    break;\n                }\n                this.removeActive(a);\n                if (trackOpen)\n                    remove(trackOpen, a);\n            }\n            else if (!this.cursor.value) {\n                this.to = this.endSide = 1000000000 /* Far */;\n                break;\n            }\n            else if (this.cursor.from > from) {\n                this.to = this.cursor.from;\n                this.endSide = this.cursor.startSide;\n                break;\n            }\n            else {\n                let nextVal = this.cursor.value;\n                if (!nextVal.point) { // Opening a range\n                    this.addActive(trackOpen);\n                    this.cursor.next();\n                }\n                else if (wasPoint && this.cursor.to == this.to && this.cursor.from < this.cursor.to) {\n                    // Ignore any non-empty points that end precisely at the end of the prev point\n                    this.cursor.next();\n                }\n                else if (!this.filterPoint(this.cursor.from, this.cursor.to, this.cursor.value, this.cursor.rank)) {\n                    this.cursor.next();\n                }\n                else { // New point\n                    this.point = nextVal;\n                    this.pointFrom = this.cursor.from;\n                    this.pointRank = this.cursor.rank;\n                    this.to = this.cursor.to;\n                    this.endSide = nextVal.endSide;\n                    if (this.cursor.from < from)\n                        trackExtra = 1;\n                    this.cursor.next();\n                    if (this.to > from)\n                        this.forward(this.to, this.endSide);\n                    break;\n                }\n            }\n        }\n        if (trackOpen) {\n            let openStart = 0;\n            while (openStart < trackOpen.length && trackOpen[openStart] < from)\n                openStart++;\n            this.openStart = openStart + trackExtra;\n        }\n    }\n    activeForPoint(to) {\n        if (!this.active.length)\n            return this.active;\n        let active = [];\n        for (let i = this.active.length - 1; i >= 0; i--) {\n            if (this.activeRank[i] < this.pointRank)\n                break;\n            if (this.activeTo[i] > to || this.activeTo[i] == to && this.active[i].endSide >= this.point.endSide)\n                active.push(this.active[i]);\n        }\n        return active.reverse();\n    }\n    openEnd(to) {\n        let open = 0;\n        for (let i = this.activeTo.length - 1; i >= 0 && this.activeTo[i] > to; i--)\n            open++;\n        return open;\n    }\n}\nfunction compare(a, startA, b, startB, length, comparator) {\n    a.goto(startA);\n    b.goto(startB);\n    let endB = startB + length;\n    let pos = startB, dPos = startB - startA;\n    for (;;) {\n        let diff = (a.to + dPos) - b.to || a.endSide - b.endSide;\n        let end = diff < 0 ? a.to + dPos : b.to, clipEnd = Math.min(end, endB);\n        if (a.point || b.point) {\n            if (!(a.point && b.point && (a.point == b.point || a.point.eq(b.point)) &&\n                sameValues(a.activeForPoint(a.to + dPos), b.activeForPoint(b.to))))\n                comparator.comparePoint(pos, clipEnd, a.point, b.point);\n        }\n        else {\n            if (clipEnd > pos && !sameValues(a.active, b.active))\n                comparator.compareRange(pos, clipEnd, a.active, b.active);\n        }\n        if (end > endB)\n            break;\n        pos = end;\n        if (diff <= 0)\n            a.next();\n        if (diff >= 0)\n            b.next();\n    }\n}\nfunction sameValues(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (a[i] != b[i] && !a[i].eq(b[i]))\n            return false;\n    return true;\n}\nfunction remove(array, index) {\n    for (let i = index, e = array.length - 1; i < e; i++)\n        array[i] = array[i + 1];\n    array.pop();\n}\nfunction insert(array, index, value) {\n    for (let i = array.length - 1; i >= index; i--)\n        array[i + 1] = array[i];\n    array[index] = value;\n}\nfunction findMinIndex(value, array) {\n    let found = -1, foundPos = 1000000000 /* Far */;\n    for (let i = 0; i < array.length; i++)\n        if ((array[i] - foundPos || value[i].endSide - value[found].endSide) < 0) {\n            found = i;\n            foundPos = array[i];\n        }\n    return found;\n}\n\nexport { Range, RangeSet, RangeSetBuilder, RangeValue };\n","export var base = {\n  8: \"Backspace\",\n  9: \"Tab\",\n  10: \"Enter\",\n  12: \"NumLock\",\n  13: \"Enter\",\n  16: \"Shift\",\n  17: \"Control\",\n  18: \"Alt\",\n  20: \"CapsLock\",\n  27: \"Escape\",\n  32: \" \",\n  33: \"PageUp\",\n  34: \"PageDown\",\n  35: \"End\",\n  36: \"Home\",\n  37: \"ArrowLeft\",\n  38: \"ArrowUp\",\n  39: \"ArrowRight\",\n  40: \"ArrowDown\",\n  44: \"PrintScreen\",\n  45: \"Insert\",\n  46: \"Delete\",\n  59: \";\",\n  61: \"=\",\n  91: \"Meta\",\n  92: \"Meta\",\n  106: \"*\",\n  107: \"+\",\n  108: \",\",\n  109: \"-\",\n  110: \".\",\n  111: \"/\",\n  144: \"NumLock\",\n  145: \"ScrollLock\",\n  160: \"Shift\",\n  161: \"Shift\",\n  162: \"Control\",\n  163: \"Control\",\n  164: \"Alt\",\n  165: \"Alt\",\n  173: \"-\",\n  186: \";\",\n  187: \"=\",\n  188: \",\",\n  189: \"-\",\n  190: \".\",\n  191: \"/\",\n  192: \"`\",\n  219: \"[\",\n  220: \"\\\\\",\n  221: \"]\",\n  222: \"'\",\n  229: \"q\"\n}\n\nexport var shift = {\n  48: \")\",\n  49: \"!\",\n  50: \"@\",\n  51: \"#\",\n  52: \"$\",\n  53: \"%\",\n  54: \"^\",\n  55: \"&\",\n  56: \"*\",\n  57: \"(\",\n  59: \":\",\n  61: \"+\",\n  173: \"_\",\n  186: \":\",\n  187: \"+\",\n  188: \"<\",\n  189: \"_\",\n  190: \">\",\n  191: \"?\",\n  192: \"~\",\n  219: \"{\",\n  220: \"|\",\n  221: \"}\",\n  222: \"\\\"\",\n  229: \"Q\"\n}\n\nvar chrome = typeof navigator != \"undefined\" && /Chrome\\/(\\d+)/.exec(navigator.userAgent)\nvar safari = typeof navigator != \"undefined\" && /Apple Computer/.test(navigator.vendor)\nvar gecko = typeof navigator != \"undefined\" && /Gecko\\/\\d+/.test(navigator.userAgent)\nvar mac = typeof navigator != \"undefined\" && /Mac/.test(navigator.platform)\nvar ie = typeof navigator != \"undefined\" && /MSIE \\d|Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(navigator.userAgent)\nvar brokenModifierNames = chrome && (mac || +chrome[1] < 57) || gecko && mac\n\n// Fill in the digit keys\nfor (var i = 0; i < 10; i++) base[48 + i] = base[96 + i] = String(i)\n\n// The function keys\nfor (var i = 1; i <= 24; i++) base[i + 111] = \"F\" + i\n\n// And the alphabetic keys\nfor (var i = 65; i <= 90; i++) {\n  base[i] = String.fromCharCode(i + 32)\n  shift[i] = String.fromCharCode(i)\n}\n\n// For each code that doesn't have a shift-equivalent, copy the base name\nfor (var code in base) if (!shift.hasOwnProperty(code)) shift[code] = base[code]\n\nexport function keyName(event) {\n  // Don't trust event.key in Chrome when there are modifiers until\n  // they fix https://bugs.chromium.org/p/chromium/issues/detail?id=633838\n  var ignoreKey = brokenModifierNames && (event.ctrlKey || event.altKey || event.metaKey) ||\n    (safari || ie) && event.shiftKey && event.key && event.key.length == 1\n  var name = (!ignoreKey && event.key) ||\n    (event.shiftKey ? shift : base)[event.keyCode] ||\n    event.key || \"Unidentified\"\n  // Edge sometimes produces wrong names (Issue #3)\n  if (name == \"Esc\") name = \"Escape\"\n  if (name == \"Del\") name = \"Delete\"\n  // https://developer.microsoft.com/en-us/microsoft-edge/platform/issues/8860571/\n  if (name == \"Left\") name = \"ArrowLeft\"\n  if (name == \"Up\") name = \"ArrowUp\"\n  if (name == \"Right\") name = \"ArrowRight\"\n  if (name == \"Down\") name = \"ArrowDown\"\n  return name\n}\n","import { MapMode, Text as Text$1, Facet, StateEffect, ChangeSet, EditorSelection, CharCategory, EditorState, Transaction, Prec, combineConfig, StateField } from '@codemirror/state';\nimport { StyleModule } from 'style-mod';\nimport { RangeSet, RangeValue, RangeSetBuilder } from '@codemirror/rangeset';\nexport { Range } from '@codemirror/rangeset';\nimport { Text, findClusterBreak, findColumn, codePointAt, countColumn } from '@codemirror/text';\nimport { keyName, base } from 'w3c-keyname';\n\nfunction getSelection(root) {\n    let target;\n    // Browsers differ on whether shadow roots have a getSelection\n    // method. If it exists, use that, otherwise, call it on the\n    // document.\n    if (root.nodeType == 11) { // Shadow root\n        target = root.getSelection ? root : root.ownerDocument;\n    }\n    else {\n        target = root;\n    }\n    return target.getSelection();\n}\nfunction contains(dom, node) {\n    return node ? dom.contains(node.nodeType != 1 ? node.parentNode : node) : false;\n}\nfunction deepActiveElement() {\n    let elt = document.activeElement;\n    while (elt && elt.shadowRoot)\n        elt = elt.shadowRoot.activeElement;\n    return elt;\n}\nfunction hasSelection(dom, selection) {\n    if (!selection.anchorNode)\n        return false;\n    try {\n        // Firefox will raise 'permission denied' errors when accessing\n        // properties of `sel.anchorNode` when it's in a generated CSS\n        // element.\n        return contains(dom, selection.anchorNode);\n    }\n    catch (_) {\n        return false;\n    }\n}\nfunction clientRectsFor(dom) {\n    if (dom.nodeType == 3)\n        return textRange(dom, 0, dom.nodeValue.length).getClientRects();\n    else if (dom.nodeType == 1)\n        return dom.getClientRects();\n    else\n        return [];\n}\n// Scans forward and backward through DOM positions equivalent to the\n// given one to see if the two are in the same place (i.e. after a\n// text node vs at the end of that text node)\nfunction isEquivalentPosition(node, off, targetNode, targetOff) {\n    return targetNode ? (scanFor(node, off, targetNode, targetOff, -1) ||\n        scanFor(node, off, targetNode, targetOff, 1)) : false;\n}\nfunction domIndex(node) {\n    for (var index = 0;; index++) {\n        node = node.previousSibling;\n        if (!node)\n            return index;\n    }\n}\nfunction scanFor(node, off, targetNode, targetOff, dir) {\n    for (;;) {\n        if (node == targetNode && off == targetOff)\n            return true;\n        if (off == (dir < 0 ? 0 : maxOffset(node))) {\n            if (node.nodeName == \"DIV\")\n                return false;\n            let parent = node.parentNode;\n            if (!parent || parent.nodeType != 1)\n                return false;\n            off = domIndex(node) + (dir < 0 ? 0 : 1);\n            node = parent;\n        }\n        else if (node.nodeType == 1) {\n            node = node.childNodes[off + (dir < 0 ? -1 : 0)];\n            if (node.nodeType == 1 && node.contentEditable == \"false\")\n                return false;\n            off = dir < 0 ? maxOffset(node) : 0;\n        }\n        else {\n            return false;\n        }\n    }\n}\nfunction maxOffset(node) {\n    return node.nodeType == 3 ? node.nodeValue.length : node.childNodes.length;\n}\nconst Rect0 = { left: 0, right: 0, top: 0, bottom: 0 };\nfunction flattenRect(rect, left) {\n    let x = left ? rect.left : rect.right;\n    return { left: x, right: x, top: rect.top, bottom: rect.bottom };\n}\nfunction windowRect(win) {\n    return { left: 0, right: win.innerWidth,\n        top: 0, bottom: win.innerHeight };\n}\nfunction scrollRectIntoView(dom, rect, side, x, y, xMargin, yMargin, ltr) {\n    let doc = dom.ownerDocument, win = doc.defaultView;\n    for (let cur = dom; cur;) {\n        if (cur.nodeType == 1) { // Element\n            let bounding, top = cur == doc.body;\n            if (top) {\n                bounding = windowRect(win);\n            }\n            else {\n                if (cur.scrollHeight <= cur.clientHeight && cur.scrollWidth <= cur.clientWidth) {\n                    cur = cur.parentNode;\n                    continue;\n                }\n                let rect = cur.getBoundingClientRect();\n                // Make sure scrollbar width isn't included in the rectangle\n                bounding = { left: rect.left, right: rect.left + cur.clientWidth,\n                    top: rect.top, bottom: rect.top + cur.clientHeight };\n            }\n            let moveX = 0, moveY = 0;\n            if (y == \"nearest\") {\n                if (rect.top < bounding.top) {\n                    moveY = -(bounding.top - rect.top + yMargin);\n                    if (side > 0 && rect.bottom > bounding.bottom + moveY)\n                        moveY = rect.bottom - bounding.bottom + moveY + yMargin;\n                }\n                else if (rect.bottom > bounding.bottom) {\n                    moveY = rect.bottom - bounding.bottom + yMargin;\n                    if (side < 0 && (rect.top - moveY) < bounding.top)\n                        moveY = -(bounding.top + moveY - rect.top + yMargin);\n                }\n            }\n            else {\n                let rectHeight = rect.bottom - rect.top, boundingHeight = bounding.bottom - bounding.top;\n                let targetTop = y == \"center\" && rectHeight <= boundingHeight ? rect.top + rectHeight / 2 - boundingHeight / 2 :\n                    y == \"start\" || y == \"center\" && side < 0 ? rect.top - yMargin :\n                        rect.bottom - boundingHeight + yMargin;\n                moveY = targetTop - bounding.top;\n            }\n            if (x == \"nearest\") {\n                if (rect.left < bounding.left) {\n                    moveX = -(bounding.left - rect.left + xMargin);\n                    if (side > 0 && rect.right > bounding.right + moveX)\n                        moveX = rect.right - bounding.right + moveX + xMargin;\n                }\n                else if (rect.right > bounding.right) {\n                    moveX = rect.right - bounding.right + xMargin;\n                    if (side < 0 && rect.left < bounding.left + moveX)\n                        moveX = -(bounding.left + moveX - rect.left + xMargin);\n                }\n            }\n            else {\n                let targetLeft = x == \"center\" ? rect.left + (rect.right - rect.left) / 2 - (bounding.right - bounding.left) / 2 :\n                    (x == \"start\") == ltr ? rect.left - xMargin :\n                        rect.right - (bounding.right - bounding.left) + xMargin;\n                moveX = targetLeft - bounding.left;\n            }\n            if (moveX || moveY) {\n                if (top) {\n                    win.scrollBy(moveX, moveY);\n                }\n                else {\n                    if (moveY) {\n                        let start = cur.scrollTop;\n                        cur.scrollTop += moveY;\n                        moveY = cur.scrollTop - start;\n                    }\n                    if (moveX) {\n                        let start = cur.scrollLeft;\n                        cur.scrollLeft += moveX;\n                        moveX = cur.scrollLeft - start;\n                    }\n                    rect = { left: rect.left - moveX, top: rect.top - moveY,\n                        right: rect.right - moveX, bottom: rect.bottom - moveY };\n                }\n            }\n            if (top)\n                break;\n            cur = cur.assignedSlot || cur.parentNode;\n            x = y = \"nearest\";\n        }\n        else if (cur.nodeType == 11) { // A shadow root\n            cur = cur.host;\n        }\n        else {\n            break;\n        }\n    }\n}\nclass DOMSelectionState {\n    constructor() {\n        this.anchorNode = null;\n        this.anchorOffset = 0;\n        this.focusNode = null;\n        this.focusOffset = 0;\n    }\n    eq(domSel) {\n        return this.anchorNode == domSel.anchorNode && this.anchorOffset == domSel.anchorOffset &&\n            this.focusNode == domSel.focusNode && this.focusOffset == domSel.focusOffset;\n    }\n    setRange(range) {\n        this.set(range.anchorNode, range.anchorOffset, range.focusNode, range.focusOffset);\n    }\n    set(anchorNode, anchorOffset, focusNode, focusOffset) {\n        this.anchorNode = anchorNode;\n        this.anchorOffset = anchorOffset;\n        this.focusNode = focusNode;\n        this.focusOffset = focusOffset;\n    }\n}\nlet preventScrollSupported = null;\n// Feature-detects support for .focus({preventScroll: true}), and uses\n// a fallback kludge when not supported.\nfunction focusPreventScroll(dom) {\n    if (dom.setActive)\n        return dom.setActive(); // in IE\n    if (preventScrollSupported)\n        return dom.focus(preventScrollSupported);\n    let stack = [];\n    for (let cur = dom; cur; cur = cur.parentNode) {\n        stack.push(cur, cur.scrollTop, cur.scrollLeft);\n        if (cur == cur.ownerDocument)\n            break;\n    }\n    dom.focus(preventScrollSupported == null ? {\n        get preventScroll() {\n            preventScrollSupported = { preventScroll: true };\n            return true;\n        }\n    } : undefined);\n    if (!preventScrollSupported) {\n        preventScrollSupported = false;\n        for (let i = 0; i < stack.length;) {\n            let elt = stack[i++], top = stack[i++], left = stack[i++];\n            if (elt.scrollTop != top)\n                elt.scrollTop = top;\n            if (elt.scrollLeft != left)\n                elt.scrollLeft = left;\n        }\n    }\n}\nlet scratchRange;\nfunction textRange(node, from, to = from) {\n    let range = scratchRange || (scratchRange = document.createRange());\n    range.setEnd(node, to);\n    range.setStart(node, from);\n    return range;\n}\nfunction dispatchKey(elt, name, code) {\n    let options = { key: name, code: name, keyCode: code, which: code, cancelable: true };\n    let down = new KeyboardEvent(\"keydown\", options);\n    down.synthetic = true;\n    elt.dispatchEvent(down);\n    let up = new KeyboardEvent(\"keyup\", options);\n    up.synthetic = true;\n    elt.dispatchEvent(up);\n    return down.defaultPrevented || up.defaultPrevented;\n}\nfunction getRoot(node) {\n    while (node) {\n        if (node && (node.nodeType == 9 || node.nodeType == 11 && node.host))\n            return node;\n        node = node.assignedSlot || node.parentNode;\n    }\n    return null;\n}\nfunction clearAttributes(node) {\n    while (node.attributes.length)\n        node.removeAttributeNode(node.attributes[0]);\n}\n\nclass DOMPos {\n    constructor(node, offset, precise = true) {\n        this.node = node;\n        this.offset = offset;\n        this.precise = precise;\n    }\n    static before(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom), precise); }\n    static after(dom, precise) { return new DOMPos(dom.parentNode, domIndex(dom) + 1, precise); }\n}\nconst noChildren = [];\nclass ContentView {\n    constructor() {\n        this.parent = null;\n        this.dom = null;\n        this.dirty = 2 /* Node */;\n    }\n    get editorView() {\n        if (!this.parent)\n            throw new Error(\"Accessing view in orphan content view\");\n        return this.parent.editorView;\n    }\n    get overrideDOMText() { return null; }\n    get posAtStart() {\n        return this.parent ? this.parent.posBefore(this) : 0;\n    }\n    get posAtEnd() {\n        return this.posAtStart + this.length;\n    }\n    posBefore(view) {\n        let pos = this.posAtStart;\n        for (let child of this.children) {\n            if (child == view)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n        throw new RangeError(\"Invalid child in posBefore\");\n    }\n    posAfter(view) {\n        return this.posBefore(view) + view.length;\n    }\n    // Will return a rectangle directly before (when side < 0), after\n    // (side > 0) or directly on (when the browser supports it) the\n    // given position.\n    coordsAt(_pos, _side) { return null; }\n    sync(track) {\n        if (this.dirty & 2 /* Node */) {\n            let parent = this.dom;\n            let pos = parent.firstChild;\n            for (let child of this.children) {\n                if (child.dirty) {\n                    if (!child.dom && pos) {\n                        let contentView = ContentView.get(pos);\n                        if (!contentView || !contentView.parent && contentView.constructor == child.constructor)\n                            child.reuseDOM(pos);\n                    }\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n                if (track && !track.written && track.node == parent && pos != child.dom)\n                    track.written = true;\n                if (child.dom.parentNode == parent) {\n                    while (pos && pos != child.dom)\n                        pos = rm(pos);\n                    pos = child.dom.nextSibling;\n                }\n                else {\n                    parent.insertBefore(child.dom, pos);\n                }\n            }\n            if (pos && track && track.node == parent)\n                track.written = true;\n            while (pos)\n                pos = rm(pos);\n        }\n        else if (this.dirty & 1 /* Child */) {\n            for (let child of this.children)\n                if (child.dirty) {\n                    child.sync(track);\n                    child.dirty = 0 /* Not */;\n                }\n        }\n    }\n    reuseDOM(_dom) { }\n    localPosFromDOM(node, offset) {\n        let after;\n        if (node == this.dom) {\n            after = this.dom.childNodes[offset];\n        }\n        else {\n            let bias = maxOffset(node) == 0 ? 0 : offset == 0 ? -1 : 1;\n            for (;;) {\n                let parent = node.parentNode;\n                if (parent == this.dom)\n                    break;\n                if (bias == 0 && parent.firstChild != parent.lastChild) {\n                    if (node == parent.firstChild)\n                        bias = -1;\n                    else\n                        bias = 1;\n                }\n                node = parent;\n            }\n            if (bias < 0)\n                after = node;\n            else\n                after = node.nextSibling;\n        }\n        if (after == this.dom.firstChild)\n            return 0;\n        while (after && !ContentView.get(after))\n            after = after.nextSibling;\n        if (!after)\n            return this.length;\n        for (let i = 0, pos = 0;; i++) {\n            let child = this.children[i];\n            if (child.dom == after)\n                return pos;\n            pos += child.length + child.breakAfter;\n        }\n    }\n    domBoundsAround(from, to, offset = 0) {\n        let fromI = -1, fromStart = -1, toI = -1, toEnd = -1;\n        for (let i = 0, pos = offset, prevEnd = offset; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (pos < from && end > to)\n                return child.domBoundsAround(from, to, pos);\n            if (end >= from && fromI == -1) {\n                fromI = i;\n                fromStart = pos;\n            }\n            if (pos > to && child.dom.parentNode == this.dom) {\n                toI = i;\n                toEnd = prevEnd;\n                break;\n            }\n            prevEnd = end;\n            pos = end + child.breakAfter;\n        }\n        return { from: fromStart, to: toEnd < 0 ? offset + this.length : toEnd,\n            startDOM: (fromI ? this.children[fromI - 1].dom.nextSibling : null) || this.dom.firstChild,\n            endDOM: toI < this.children.length && toI >= 0 ? this.children[toI].dom : null };\n    }\n    markDirty(andParent = false) {\n        this.dirty |= 2 /* Node */;\n        this.markParentsDirty(andParent);\n    }\n    markParentsDirty(childList) {\n        for (let parent = this.parent; parent; parent = parent.parent) {\n            if (childList)\n                parent.dirty |= 2 /* Node */;\n            if (parent.dirty & 1 /* Child */)\n                return;\n            parent.dirty |= 1 /* Child */;\n            childList = false;\n        }\n    }\n    setParent(parent) {\n        if (this.parent != parent) {\n            this.parent = parent;\n            if (this.dirty)\n                this.markParentsDirty(true);\n        }\n    }\n    setDOM(dom) {\n        if (this.dom)\n            this.dom.cmView = null;\n        this.dom = dom;\n        dom.cmView = this;\n    }\n    get rootView() {\n        for (let v = this;;) {\n            let parent = v.parent;\n            if (!parent)\n                return v;\n            v = parent;\n        }\n    }\n    replaceChildren(from, to, children = noChildren) {\n        this.markDirty();\n        for (let i = from; i < to; i++) {\n            let child = this.children[i];\n            if (child.parent == this)\n                child.destroy();\n        }\n        this.children.splice(from, to - from, ...children);\n        for (let i = 0; i < children.length; i++)\n            children[i].setParent(this);\n    }\n    ignoreMutation(_rec) { return false; }\n    ignoreEvent(_event) { return false; }\n    childCursor(pos = this.length) {\n        return new ChildCursor(this.children, pos, this.children.length);\n    }\n    childPos(pos, bias = 1) {\n        return this.childCursor().findPos(pos, bias);\n    }\n    toString() {\n        let name = this.constructor.name.replace(\"View\", \"\");\n        return name + (this.children.length ? \"(\" + this.children.join() + \")\" :\n            this.length ? \"[\" + (name == \"Text\" ? this.text : this.length) + \"]\" : \"\") +\n            (this.breakAfter ? \"#\" : \"\");\n    }\n    static get(node) { return node.cmView; }\n    get isEditable() { return true; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        return false;\n    }\n    become(other) { return false; }\n    // When this is a zero-length view with a side, this should return a\n    // number <= 0 to indicate it is before its position, or a\n    // number > 0 when after its position.\n    getSide() { return 0; }\n    destroy() {\n        this.parent = null;\n    }\n}\nContentView.prototype.breakAfter = 0;\n// Remove a DOM node and return its next sibling.\nfunction rm(dom) {\n    let next = dom.nextSibling;\n    dom.parentNode.removeChild(dom);\n    return next;\n}\nclass ChildCursor {\n    constructor(children, pos, i) {\n        this.children = children;\n        this.pos = pos;\n        this.i = i;\n        this.off = 0;\n    }\n    findPos(pos, bias = 1) {\n        for (;;) {\n            if (pos > this.pos || pos == this.pos &&\n                (bias > 0 || this.i == 0 || this.children[this.i - 1].breakAfter)) {\n                this.off = pos - this.pos;\n                return this;\n            }\n            let next = this.children[--this.i];\n            this.pos -= next.length + next.breakAfter;\n        }\n    }\n}\nfunction replaceRange(parent, fromI, fromOff, toI, toOff, insert, breakAtStart, openStart, openEnd) {\n    let { children } = parent;\n    let before = children.length ? children[fromI] : null;\n    let last = insert.length ? insert[insert.length - 1] : null;\n    let breakAtEnd = last ? last.breakAfter : breakAtStart;\n    // Change within a single child\n    if (fromI == toI && before && !breakAtStart && !breakAtEnd && insert.length < 2 &&\n        before.merge(fromOff, toOff, insert.length ? last : null, fromOff == 0, openStart, openEnd))\n        return;\n    if (toI < children.length) {\n        let after = children[toI];\n        // Make sure the end of the child after the update is preserved in `after`\n        if (after && toOff < after.length) {\n            // If we're splitting a child, separate part of it to avoid that\n            // being mangled when updating the child before the update.\n            if (fromI == toI) {\n                after = after.split(toOff);\n                toOff = 0;\n            }\n            // If the element after the replacement should be merged with\n            // the last replacing element, update `content`\n            if (!breakAtEnd && last && after.merge(0, toOff, last, true, 0, openEnd)) {\n                insert[insert.length - 1] = after;\n            }\n            else {\n                // Remove the start of the after element, if necessary, and\n                // add it to `content`.\n                if (toOff)\n                    after.merge(0, toOff, null, false, 0, openEnd);\n                insert.push(after);\n            }\n        }\n        else if (after === null || after === void 0 ? void 0 : after.breakAfter) {\n            // The element at `toI` is entirely covered by this range.\n            // Preserve its line break, if any.\n            if (last)\n                last.breakAfter = 1;\n            else\n                breakAtStart = 1;\n        }\n        // Since we've handled the next element from the current elements\n        // now, make sure `toI` points after that.\n        toI++;\n    }\n    if (before) {\n        before.breakAfter = breakAtStart;\n        if (fromOff > 0) {\n            if (!breakAtStart && insert.length && before.merge(fromOff, before.length, insert[0], false, openStart, 0)) {\n                before.breakAfter = insert.shift().breakAfter;\n            }\n            else if (fromOff < before.length || before.children.length && before.children[before.children.length - 1].length == 0) {\n                before.merge(fromOff, before.length, null, false, openStart, 0);\n            }\n            fromI++;\n        }\n    }\n    // Try to merge widgets on the boundaries of the replacement\n    while (fromI < toI && insert.length) {\n        if (children[toI - 1].become(insert[insert.length - 1])) {\n            toI--;\n            insert.pop();\n            openEnd = insert.length ? 0 : openStart;\n        }\n        else if (children[fromI].become(insert[0])) {\n            fromI++;\n            insert.shift();\n            openStart = insert.length ? 0 : openEnd;\n        }\n        else {\n            break;\n        }\n    }\n    if (!insert.length && fromI && toI < children.length && !children[fromI - 1].breakAfter &&\n        children[toI].merge(0, 0, children[fromI - 1], false, openStart, openEnd))\n        fromI--;\n    if (fromI < toI || insert.length)\n        parent.replaceChildren(fromI, toI, insert);\n}\nfunction mergeChildrenInto(parent, from, to, insert, openStart, openEnd) {\n    let cur = parent.childCursor();\n    let { i: toI, off: toOff } = cur.findPos(to, 1);\n    let { i: fromI, off: fromOff } = cur.findPos(from, -1);\n    let dLen = from - to;\n    for (let view of insert)\n        dLen += view.length;\n    parent.length += dLen;\n    replaceRange(parent, fromI, fromOff, toI, toOff, insert, 0, openStart, openEnd);\n}\n\nlet [nav, doc] = typeof navigator != \"undefined\"\n    ? [navigator, document]\n    : [{ userAgent: \"\", vendor: \"\", platform: \"\" }, { documentElement: { style: {} } }];\nconst ie_edge = /*@__PURE__*//Edge\\/(\\d+)/.exec(nav.userAgent);\nconst ie_upto10 = /*@__PURE__*//MSIE \\d/.test(nav.userAgent);\nconst ie_11up = /*@__PURE__*//Trident\\/(?:[7-9]|\\d{2,})\\..*rv:(\\d+)/.exec(nav.userAgent);\nconst ie = !!(ie_upto10 || ie_11up || ie_edge);\nconst gecko = !ie && /*@__PURE__*//gecko\\/(\\d+)/i.test(nav.userAgent);\nconst chrome = !ie && /*@__PURE__*//Chrome\\/(\\d+)/.exec(nav.userAgent);\nconst webkit = \"webkitFontSmoothing\" in doc.documentElement.style;\nconst safari = !ie && /*@__PURE__*//Apple Computer/.test(nav.vendor);\nconst ios = safari && (/*@__PURE__*//Mobile\\/\\w+/.test(nav.userAgent) || nav.maxTouchPoints > 2);\nvar browser = {\n    mac: ios || /*@__PURE__*//Mac/.test(nav.platform),\n    windows: /*@__PURE__*//Win/.test(nav.platform),\n    linux: /*@__PURE__*//Linux|X11/.test(nav.platform),\n    ie,\n    ie_version: ie_upto10 ? doc.documentMode || 6 : ie_11up ? +ie_11up[1] : ie_edge ? +ie_edge[1] : 0,\n    gecko,\n    gecko_version: gecko ? +(/*@__PURE__*//Firefox\\/(\\d+)/.exec(nav.userAgent) || [0, 0])[1] : 0,\n    chrome: !!chrome,\n    chrome_version: chrome ? +chrome[1] : 0,\n    ios,\n    android: /*@__PURE__*//Android\\b/.test(nav.userAgent),\n    webkit,\n    safari,\n    webkit_version: webkit ? +(/*@__PURE__*//\\bAppleWebKit\\/(\\d+)/.exec(navigator.userAgent) || [0, 0])[1] : 0,\n    tabSize: doc.documentElement.style.tabSize != null ? \"tab-size\" : \"-moz-tab-size\"\n};\n\nconst MaxJoinLen = 256;\nclass TextView extends ContentView {\n    constructor(text) {\n        super();\n        this.text = text;\n    }\n    get length() { return this.text.length; }\n    createDOM(textDOM) {\n        this.setDOM(textDOM || document.createTextNode(this.text));\n    }\n    sync(track) {\n        if (!this.dom)\n            this.createDOM();\n        if (this.dom.nodeValue != this.text) {\n            if (track && track.node == this.dom)\n                track.written = true;\n            this.dom.nodeValue = this.text;\n        }\n    }\n    reuseDOM(dom) {\n        if (dom.nodeType == 3)\n            this.createDOM(dom);\n    }\n    merge(from, to, source) {\n        if (source && (!(source instanceof TextView) || this.length - (to - from) + source.length > MaxJoinLen))\n            return false;\n        this.text = this.text.slice(0, from) + (source ? source.text : \"\") + this.text.slice(to);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = new TextView(this.text.slice(from));\n        this.text = this.text.slice(0, from);\n        this.markDirty();\n        return result;\n    }\n    localPosFromDOM(node, offset) {\n        return node == this.dom ? offset : offset ? this.text.length : 0;\n    }\n    domAtPos(pos) { return new DOMPos(this.dom, pos); }\n    domBoundsAround(_from, _to, offset) {\n        return { from: offset, to: offset + this.length, startDOM: this.dom, endDOM: this.dom.nextSibling };\n    }\n    coordsAt(pos, side) {\n        return textCoords(this.dom, pos, side);\n    }\n}\nclass MarkView extends ContentView {\n    constructor(mark, children = [], length = 0) {\n        super();\n        this.mark = mark;\n        this.children = children;\n        this.length = length;\n        for (let ch of children)\n            ch.setParent(this);\n    }\n    setAttrs(dom) {\n        clearAttributes(dom);\n        if (this.mark.class)\n            dom.className = this.mark.class;\n        if (this.mark.attrs)\n            for (let name in this.mark.attrs)\n                dom.setAttribute(name, this.mark.attrs[name]);\n        return dom;\n    }\n    reuseDOM(node) {\n        if (node.nodeName == this.mark.tagName.toUpperCase()) {\n            this.setDOM(node);\n            this.dirty |= 4 /* Attrs */ | 2 /* Node */;\n        }\n    }\n    sync(track) {\n        if (!this.dom)\n            this.setDOM(this.setAttrs(document.createElement(this.mark.tagName)));\n        else if (this.dirty & 4 /* Attrs */)\n            this.setAttrs(this.dom);\n        super.sync(track);\n    }\n    merge(from, to, source, _hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof MarkView && source.mark.eq(this.mark)) ||\n            (from && openStart <= 0) || (to < this.length && openEnd <= 0)))\n            return false;\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart - 1, openEnd - 1);\n        this.markDirty();\n        return true;\n    }\n    split(from) {\n        let result = [], off = 0, detachFrom = -1, i = 0;\n        for (let elt of this.children) {\n            let end = off + elt.length;\n            if (end > from)\n                result.push(off < from ? elt.split(from - off) : elt);\n            if (detachFrom < 0 && off >= from)\n                detachFrom = i;\n            off = end;\n            i++;\n        }\n        let length = this.length - from;\n        this.length = from;\n        if (detachFrom > -1) {\n            this.children.length = detachFrom;\n            this.markDirty();\n        }\n        return new MarkView(this.mark, result, length);\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n}\nfunction textCoords(text, pos, side) {\n    let length = text.nodeValue.length;\n    if (pos > length)\n        pos = length;\n    let from = pos, to = pos, flatten = 0;\n    if (pos == 0 && side < 0 || pos == length && side >= 0) {\n        if (!(browser.chrome || browser.gecko)) { // These browsers reliably return valid rectangles for empty ranges\n            if (pos) {\n                from--;\n                flatten = 1;\n            } // FIXME this is wrong in RTL text\n            else {\n                to++;\n                flatten = -1;\n            }\n        }\n    }\n    else {\n        if (side < 0)\n            from--;\n        else\n            to++;\n    }\n    let rects = textRange(text, from, to).getClientRects();\n    if (!rects.length)\n        return Rect0;\n    let rect = rects[(flatten ? flatten < 0 : side >= 0) ? 0 : rects.length - 1];\n    if (browser.safari && !flatten && rect.width == 0)\n        rect = Array.prototype.find.call(rects, r => r.width) || rect;\n    return flatten ? flattenRect(rect, flatten < 0) : rect || null;\n}\n// Also used for collapsed ranges that don't have a placeholder widget!\nclass WidgetView extends ContentView {\n    constructor(widget, length, side) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.side = side;\n    }\n    static create(widget, length, side) {\n        return new (widget.customView || WidgetView)(widget, length, side);\n    }\n    split(from) {\n        let result = WidgetView.create(this.widget, this.length - from, this.side);\n        this.length -= from;\n        return result;\n    }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    getSide() { return this.side; }\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source && (!(source instanceof WidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    become(other) {\n        if (other.length == this.length && other instanceof WidgetView && other.side == this.side) {\n            if (this.widget.constructor == other.widget.constructor) {\n                if (!this.widget.eq(other.widget))\n                    this.markDirty(true);\n                this.widget = other.widget;\n                return true;\n            }\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    get overrideDOMText() {\n        if (this.length == 0)\n            return Text.empty;\n        let top = this;\n        while (top.parent)\n            top = top.parent;\n        let view = top.editorView, text = view && view.state.doc, start = this.posAtStart;\n        return text ? text.slice(start, start + this.length) : Text.empty;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    domBoundsAround() { return null; }\n    coordsAt(pos, side) {\n        let rects = this.dom.getClientRects(), rect = null;\n        if (!rects.length)\n            return Rect0;\n        for (let i = pos > 0 ? rects.length - 1 : 0;; i += (pos > 0 ? -1 : 1)) {\n            rect = rects[i];\n            if (pos > 0 ? i == 0 : i == rects.length - 1 || rect.top < rect.bottom)\n                break;\n        }\n        return (pos == 0 && side > 0 || pos == this.length && side <= 0) ? rect : flattenRect(rect, pos == 0);\n    }\n    get isEditable() { return false; }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\nclass CompositionView extends WidgetView {\n    domAtPos(pos) { return new DOMPos(this.widget.text, pos); }\n    sync() { this.setDOM(this.widget.toDOM()); }\n    localPosFromDOM(node, offset) {\n        return !offset ? 0 : node.nodeType == 3 ? Math.min(offset, this.length) : this.length;\n    }\n    ignoreMutation() { return false; }\n    get overrideDOMText() { return null; }\n    coordsAt(pos, side) { return textCoords(this.widget.text, pos, side); }\n    get isEditable() { return true; }\n}\n// Use two characters on Android, to prevent Chrome from closing the\n// virtual keyboard when backspacing after a widget (#602).\nconst ZeroWidthSpace = browser.android ? \"\\u200b\\u200b\" : \"\\u200b\";\n// These are drawn around uneditable widgets to avoid a number of\n// browser bugs that show up when the cursor is directly next to\n// uneditable inline content.\nclass WidgetBufferView extends ContentView {\n    constructor(side) {\n        super();\n        this.side = side;\n    }\n    get length() { return 0; }\n    merge() { return false; }\n    become(other) {\n        return other instanceof WidgetBufferView && other.side == this.side;\n    }\n    split() { return new WidgetBufferView(this.side); }\n    sync() {\n        if (!this.dom)\n            this.setDOM(document.createTextNode(ZeroWidthSpace));\n        else if (this.dirty && this.dom.nodeValue != ZeroWidthSpace)\n            this.dom.nodeValue = ZeroWidthSpace;\n    }\n    getSide() { return this.side; }\n    domAtPos(pos) { return DOMPos.before(this.dom); }\n    localPosFromDOM() { return 0; }\n    domBoundsAround() { return null; }\n    coordsAt(pos) {\n        let rects = clientRectsFor(this.dom);\n        return rects[rects.length - 1] || null;\n    }\n    get overrideDOMText() {\n        return Text.of([this.dom.nodeValue.replace(/\\u200b/g, \"\")]);\n    }\n}\nTextView.prototype.children = WidgetView.prototype.children = WidgetBufferView.prototype.children = noChildren;\nfunction inlineDOMAtPos(dom, children, pos) {\n    let i = 0;\n    for (let off = 0; i < children.length; i++) {\n        let child = children[i], end = off + child.length;\n        if (end == off && child.getSide() <= 0)\n            continue;\n        if (pos > off && pos < end && child.dom.parentNode == dom)\n            return child.domAtPos(pos - off);\n        if (pos <= off)\n            break;\n        off = end;\n    }\n    for (; i > 0; i--) {\n        let before = children[i - 1].dom;\n        if (before.parentNode == dom)\n            return DOMPos.after(before);\n    }\n    return new DOMPos(dom, 0);\n}\n// Assumes `view`, if a mark view, has precisely 1 child.\nfunction joinInlineInto(parent, view, open) {\n    let last, { children } = parent;\n    if (open > 0 && view instanceof MarkView && children.length &&\n        (last = children[children.length - 1]) instanceof MarkView && last.mark.eq(view.mark)) {\n        joinInlineInto(last, view.children[0], open - 1);\n    }\n    else {\n        children.push(view);\n        view.setParent(parent);\n    }\n    parent.length += view.length;\n}\nfunction coordsInChildren(view, pos, side) {\n    for (let off = 0, i = 0; i < view.children.length; i++) {\n        let child = view.children[i], end = off + child.length, next;\n        if ((side <= 0 || end == view.length || child.getSide() > 0 ? end >= pos : end > pos) &&\n            (pos < end || i + 1 == view.children.length || (next = view.children[i + 1]).length || next.getSide() > 0)) {\n            let flatten = 0;\n            if (end == off) {\n                if (child.getSide() <= 0)\n                    continue;\n                flatten = side = -child.getSide();\n            }\n            let rect = child.coordsAt(pos - off, side);\n            return flatten && rect ? flattenRect(rect, side < 0) : rect;\n        }\n        off = end;\n    }\n    let last = view.dom.lastChild;\n    if (!last)\n        return view.dom.getBoundingClientRect();\n    let rects = clientRectsFor(last);\n    return rects[rects.length - 1] || null;\n}\n\nfunction combineAttrs(source, target) {\n    for (let name in source) {\n        if (name == \"class\" && target.class)\n            target.class += \" \" + source.class;\n        else if (name == \"style\" && target.style)\n            target.style += \";\" + source.style;\n        else\n            target[name] = source[name];\n    }\n    return target;\n}\nfunction attrsEq(a, b) {\n    if (a == b)\n        return true;\n    if (!a || !b)\n        return false;\n    let keysA = Object.keys(a), keysB = Object.keys(b);\n    if (keysA.length != keysB.length)\n        return false;\n    for (let key of keysA) {\n        if (keysB.indexOf(key) == -1 || a[key] !== b[key])\n            return false;\n    }\n    return true;\n}\nfunction updateAttrs(dom, prev, attrs) {\n    if (prev)\n        for (let name in prev)\n            if (!(attrs && name in attrs))\n                dom.removeAttribute(name);\n    if (attrs)\n        for (let name in attrs)\n            if (!(prev && prev[name] == attrs[name]))\n                dom.setAttribute(name, attrs[name]);\n}\n\n/**\nWidgets added to the content are described by subclasses of this\nclass. Using a description object like that makes it possible to\ndelay creating of the DOM structure for a widget until it is\nneeded, and to avoid redrawing widgets even when the decorations\nthat define them are recreated.\n*/\nclass WidgetType {\n    /**\n    Compare this instance to another instance of the same type.\n    (TypeScript can't express this, but only instances of the same\n    specific class will be passed to this method.) This is used to\n    avoid redrawing widgets when they are replaced by a new\n    decoration of the same type. The default implementation just\n    returns `false`, which will cause new instances of the widget to\n    always be redrawn.\n    */\n    eq(_widget) { return false; }\n    /**\n    Update a DOM element created by a widget of the same type (but\n    different, non-`eq` content) to reflect this widget. May return\n    true to indicate that it could update, false to indicate it\n    couldn't (in which case the widget will be redrawn). The default\n    implementation just returns false.\n    */\n    updateDOM(_dom) { return false; }\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    The estimated height this widget will have, to be used when\n    estimating the height of content that hasn't been drawn. May\n    return -1 to indicate you don't know. The default implementation\n    returns -1.\n    */\n    get estimatedHeight() { return -1; }\n    /**\n    Can be used to configure which kinds of events inside the widget\n    should be ignored by the editor. The default is to ignore all\n    events.\n    */\n    ignoreEvent(_event) { return true; }\n    /**\n    @internal\n    */\n    get customView() { return null; }\n    /**\n    This is called when the an instance of the widget is removed\n    from the editor view.\n    */\n    destroy(_dom) { }\n}\n/**\nThe different types of blocks that can occur in an editor view.\n*/\nvar BlockType = /*@__PURE__*/(function (BlockType) {\n    /**\n    A line of text.\n    */\n    BlockType[BlockType[\"Text\"] = 0] = \"Text\";\n    /**\n    A block widget associated with the position after it.\n    */\n    BlockType[BlockType[\"WidgetBefore\"] = 1] = \"WidgetBefore\";\n    /**\n    A block widget associated with the position before it.\n    */\n    BlockType[BlockType[\"WidgetAfter\"] = 2] = \"WidgetAfter\";\n    /**\n    A block widget [replacing](https://codemirror.net/6/docs/ref/#view.Decoration^replace) a range of content.\n    */\n    BlockType[BlockType[\"WidgetRange\"] = 3] = \"WidgetRange\";\nreturn BlockType})(BlockType || (BlockType = {}));\n/**\nA decoration provides information on how to draw or style a piece\nof content. You'll usually use it wrapped in a\n[`Range`](https://codemirror.net/6/docs/ref/#rangeset.Range), which adds a start and end position.\n*/\nclass Decoration extends RangeValue {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    startSide, \n    /**\n    @internal\n    */\n    endSide, \n    /**\n    @internal\n    */\n    widget, \n    /**\n    The config object used to create this decoration. You can\n    include additional properties in there to store metadata about\n    your decoration.\n    */\n    spec) {\n        super();\n        this.startSide = startSide;\n        this.endSide = endSide;\n        this.widget = widget;\n        this.spec = spec;\n    }\n    /**\n    @internal\n    */\n    get heightRelevant() { return false; }\n    /**\n    Create a mark decoration, which influences the styling of the\n    content in its range. Nested mark decorations will cause nested\n    DOM elements to be created. Nesting order is determined by\n    precedence of the [facet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations) or\n    (below the facet-provided decorations) [view\n    plugin](https://codemirror.net/6/docs/ref/#view.PluginSpec.decorations). Such elements are split\n    on line boundaries and on the boundaries of higher-precedence\n    decorations.\n    */\n    static mark(spec) {\n        return new MarkDecoration(spec);\n    }\n    /**\n    Create a widget decoration, which adds an element at the given\n    position.\n    */\n    static widget(spec) {\n        let side = spec.side || 0, block = !!spec.block;\n        side += block ? (side > 0 ? 300000000 /* BlockAfter */ : -400000000 /* BlockBefore */) : (side > 0 ? 100000000 /* InlineAfter */ : -100000000 /* InlineBefore */);\n        return new PointDecoration(spec, side, side, block, spec.widget || null, false);\n    }\n    /**\n    Create a replace decoration which replaces the given range with\n    a widget, or simply hides it.\n    */\n    static replace(spec) {\n        let block = !!spec.block;\n        let { start, end } = getInclusive(spec, block);\n        let startSide = block ? (start ? -300000000 /* BlockIncStart */ : -1 /* InlineIncStart */) : 400000000 /* NonIncStart */;\n        let endSide = block ? (end ? 200000000 /* BlockIncEnd */ : 1 /* InlineIncEnd */) : -500000000 /* NonIncEnd */;\n        return new PointDecoration(spec, startSide, endSide, block, spec.widget || null, true);\n    }\n    /**\n    Create a line decoration, which can add DOM attributes to the\n    line starting at the given position.\n    */\n    static line(spec) {\n        return new LineDecoration(spec);\n    }\n    /**\n    Build a [`DecorationSet`](https://codemirror.net/6/docs/ref/#view.DecorationSet) from the given\n    decorated range or ranges. If the ranges aren't already sorted,\n    pass `true` for `sort` to make the library sort them for you.\n    */\n    static set(of, sort = false) {\n        return RangeSet.of(of, sort);\n    }\n    /**\n    @internal\n    */\n    hasHeight() { return this.widget ? this.widget.estimatedHeight > -1 : false; }\n}\n/**\nThe empty set of decorations.\n*/\nDecoration.none = RangeSet.empty;\nclass MarkDecoration extends Decoration {\n    constructor(spec) {\n        let { start, end } = getInclusive(spec);\n        super(start ? -1 /* InlineIncStart */ : 400000000 /* NonIncStart */, end ? 1 /* InlineIncEnd */ : -500000000 /* NonIncEnd */, null, spec);\n        this.tagName = spec.tagName || \"span\";\n        this.class = spec.class || \"\";\n        this.attrs = spec.attributes || null;\n    }\n    eq(other) {\n        return this == other ||\n            other instanceof MarkDecoration &&\n                this.tagName == other.tagName &&\n                this.class == other.class &&\n                attrsEq(this.attrs, other.attrs);\n    }\n    range(from, to = from) {\n        if (from >= to)\n            throw new RangeError(\"Mark decorations may not be empty\");\n        return super.range(from, to);\n    }\n}\nMarkDecoration.prototype.point = false;\nclass LineDecoration extends Decoration {\n    constructor(spec) {\n        super(-200000000 /* Line */, -200000000 /* Line */, null, spec);\n    }\n    eq(other) {\n        return other instanceof LineDecoration && attrsEq(this.spec.attributes, other.spec.attributes);\n    }\n    range(from, to = from) {\n        if (to != from)\n            throw new RangeError(\"Line decoration ranges must be zero-length\");\n        return super.range(from, to);\n    }\n}\nLineDecoration.prototype.mapMode = MapMode.TrackBefore;\nLineDecoration.prototype.point = true;\nclass PointDecoration extends Decoration {\n    constructor(spec, startSide, endSide, block, widget, isReplace) {\n        super(startSide, endSide, widget, spec);\n        this.block = block;\n        this.isReplace = isReplace;\n        this.mapMode = !block ? MapMode.TrackDel : startSide <= 0 ? MapMode.TrackBefore : MapMode.TrackAfter;\n    }\n    // Only relevant when this.block == true\n    get type() {\n        return this.startSide < this.endSide ? BlockType.WidgetRange\n            : this.startSide <= 0 ? BlockType.WidgetBefore : BlockType.WidgetAfter;\n    }\n    get heightRelevant() { return this.block || !!this.widget && this.widget.estimatedHeight >= 5; }\n    eq(other) {\n        return other instanceof PointDecoration &&\n            widgetsEq(this.widget, other.widget) &&\n            this.block == other.block &&\n            this.startSide == other.startSide && this.endSide == other.endSide;\n    }\n    range(from, to = from) {\n        if (this.isReplace && (from > to || (from == to && this.startSide > 0 && this.endSide <= 0)))\n            throw new RangeError(\"Invalid range for replacement decoration\");\n        if (!this.isReplace && to != from)\n            throw new RangeError(\"Widget decorations can only have zero-length ranges\");\n        return super.range(from, to);\n    }\n}\nPointDecoration.prototype.point = true;\nfunction getInclusive(spec, block = false) {\n    let { inclusiveStart: start, inclusiveEnd: end } = spec;\n    if (start == null)\n        start = spec.inclusive;\n    if (end == null)\n        end = spec.inclusive;\n    return { start: start !== null && start !== void 0 ? start : block, end: end !== null && end !== void 0 ? end : block };\n}\nfunction widgetsEq(a, b) {\n    return a == b || !!(a && b && a.compare(b));\n}\nfunction addRange(from, to, ranges, margin = 0) {\n    let last = ranges.length - 1;\n    if (last >= 0 && ranges[last] + margin > from)\n        ranges[last] = Math.max(ranges[last], to);\n    else\n        ranges.push(from, to);\n}\n\nclass LineView extends ContentView {\n    constructor() {\n        super(...arguments);\n        this.children = [];\n        this.length = 0;\n        this.prevAttrs = undefined;\n        this.attrs = null;\n        this.breakAfter = 0;\n    }\n    // Consumes source\n    merge(from, to, source, hasStart, openStart, openEnd) {\n        if (source) {\n            if (!(source instanceof LineView))\n                return false;\n            if (!this.dom)\n                source.transferDOM(this); // Reuse source.dom when appropriate\n        }\n        if (hasStart)\n            this.setDeco(source ? source.attrs : null);\n        mergeChildrenInto(this, from, to, source ? source.children : [], openStart, openEnd);\n        return true;\n    }\n    split(at) {\n        let end = new LineView;\n        end.breakAfter = this.breakAfter;\n        if (this.length == 0)\n            return end;\n        let { i, off } = this.childPos(at);\n        if (off) {\n            end.append(this.children[i].split(off), 0);\n            this.children[i].merge(off, this.children[i].length, null, false, 0, 0);\n            i++;\n        }\n        for (let j = i; j < this.children.length; j++)\n            end.append(this.children[j], 0);\n        while (i > 0 && this.children[i - 1].length == 0)\n            this.children[--i].destroy();\n        this.children.length = i;\n        this.markDirty();\n        this.length = at;\n        return end;\n    }\n    transferDOM(other) {\n        if (!this.dom)\n            return;\n        other.setDOM(this.dom);\n        other.prevAttrs = this.prevAttrs === undefined ? this.attrs : this.prevAttrs;\n        this.prevAttrs = undefined;\n        this.dom = null;\n    }\n    setDeco(attrs) {\n        if (!attrsEq(this.attrs, attrs)) {\n            if (this.dom) {\n                this.prevAttrs = this.attrs;\n                this.markDirty();\n            }\n            this.attrs = attrs;\n        }\n    }\n    append(child, openStart) {\n        joinInlineInto(this, child, openStart);\n    }\n    // Only called when building a line view in ContentBuilder\n    addLineDeco(deco) {\n        let attrs = deco.spec.attributes, cls = deco.spec.class;\n        if (attrs)\n            this.attrs = combineAttrs(attrs, this.attrs || {});\n        if (cls)\n            this.attrs = combineAttrs(attrs, { class: cls });\n    }\n    domAtPos(pos) {\n        return inlineDOMAtPos(this.dom, this.children, pos);\n    }\n    reuseDOM(node) {\n        if (node.nodeName == \"DIV\") {\n            this.setDOM(node);\n            this.dirty |= 4 /* Attrs */ | 2 /* Node */;\n        }\n    }\n    sync(track) {\n        var _a;\n        if (!this.dom) {\n            this.setDOM(document.createElement(\"div\"));\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        else if (this.dirty & 4 /* Attrs */) {\n            clearAttributes(this.dom);\n            this.dom.className = \"cm-line\";\n            this.prevAttrs = this.attrs ? null : undefined;\n        }\n        if (this.prevAttrs !== undefined) {\n            updateAttrs(this.dom, this.prevAttrs, this.attrs);\n            this.dom.classList.add(\"cm-line\");\n            this.prevAttrs = undefined;\n        }\n        super.sync(track);\n        let last = this.dom.lastChild;\n        while (last && ContentView.get(last) instanceof MarkView)\n            last = last.lastChild;\n        if (!last ||\n            last.nodeName != \"BR\" && ((_a = ContentView.get(last)) === null || _a === void 0 ? void 0 : _a.isEditable) == false &&\n                (!browser.ios || !this.children.some(ch => ch instanceof TextView))) {\n            let hack = document.createElement(\"BR\");\n            hack.cmIgnore = true;\n            this.dom.appendChild(hack);\n        }\n    }\n    measureTextSize() {\n        if (this.children.length == 0 || this.length > 20)\n            return null;\n        let totalWidth = 0;\n        for (let child of this.children) {\n            if (!(child instanceof TextView))\n                return null;\n            let rects = clientRectsFor(child.dom);\n            if (rects.length != 1)\n                return null;\n            totalWidth += rects[0].width;\n        }\n        return { lineHeight: this.dom.getBoundingClientRect().height,\n            charWidth: totalWidth / this.length };\n    }\n    coordsAt(pos, side) {\n        return coordsInChildren(this, pos, side);\n    }\n    become(_other) { return false; }\n    get type() { return BlockType.Text; }\n    static find(docView, pos) {\n        for (let i = 0, off = 0; i < docView.children.length; i++) {\n            let block = docView.children[i], end = off + block.length;\n            if (end >= pos) {\n                if (block instanceof LineView)\n                    return block;\n                if (end > pos)\n                    break;\n            }\n            off = end + block.breakAfter;\n        }\n        return null;\n    }\n}\nclass BlockWidgetView extends ContentView {\n    constructor(widget, length, type) {\n        super();\n        this.widget = widget;\n        this.length = length;\n        this.type = type;\n        this.breakAfter = 0;\n    }\n    merge(from, to, source, _takeDeco, openStart, openEnd) {\n        if (source && (!(source instanceof BlockWidgetView) || !this.widget.compare(source.widget) ||\n            from > 0 && openStart <= 0 || to < this.length && openEnd <= 0))\n            return false;\n        this.length = from + (source ? source.length : 0) + (this.length - to);\n        return true;\n    }\n    domAtPos(pos) {\n        return pos == 0 ? DOMPos.before(this.dom) : DOMPos.after(this.dom, pos == this.length);\n    }\n    split(at) {\n        let len = this.length - at;\n        this.length = at;\n        let end = new BlockWidgetView(this.widget, len, this.type);\n        end.breakAfter = this.breakAfter;\n        return end;\n    }\n    get children() { return noChildren; }\n    sync() {\n        if (!this.dom || !this.widget.updateDOM(this.dom)) {\n            this.setDOM(this.widget.toDOM(this.editorView));\n            this.dom.contentEditable = \"false\";\n        }\n    }\n    get overrideDOMText() {\n        return this.parent ? this.parent.view.state.doc.slice(this.posAtStart, this.posAtEnd) : Text$1.empty;\n    }\n    domBoundsAround() { return null; }\n    become(other) {\n        if (other instanceof BlockWidgetView && other.type == this.type &&\n            other.widget.constructor == this.widget.constructor) {\n            if (!other.widget.eq(this.widget))\n                this.markDirty(true);\n            this.widget = other.widget;\n            this.length = other.length;\n            this.breakAfter = other.breakAfter;\n            return true;\n        }\n        return false;\n    }\n    ignoreMutation() { return true; }\n    ignoreEvent(event) { return this.widget.ignoreEvent(event); }\n    destroy() {\n        super.destroy();\n        if (this.dom)\n            this.widget.destroy(this.dom);\n    }\n}\n\nclass ContentBuilder {\n    constructor(doc, pos, end, disallowBlockEffectsBelow) {\n        this.doc = doc;\n        this.pos = pos;\n        this.end = end;\n        this.disallowBlockEffectsBelow = disallowBlockEffectsBelow;\n        this.content = [];\n        this.curLine = null;\n        this.breakAtStart = 0;\n        this.pendingBuffer = 0 /* No */;\n        // Set to false directly after a widget that covers the position after it\n        this.atCursorPos = true;\n        this.openStart = -1;\n        this.openEnd = -1;\n        this.text = \"\";\n        this.textOff = 0;\n        this.cursor = doc.iter();\n        this.skip = pos;\n    }\n    posCovered() {\n        if (this.content.length == 0)\n            return !this.breakAtStart && this.doc.lineAt(this.pos).from != this.pos;\n        let last = this.content[this.content.length - 1];\n        return !last.breakAfter && !(last instanceof BlockWidgetView && last.type == BlockType.WidgetBefore);\n    }\n    getLine() {\n        if (!this.curLine) {\n            this.content.push(this.curLine = new LineView);\n            this.atCursorPos = true;\n        }\n        return this.curLine;\n    }\n    flushBuffer(active) {\n        if (this.pendingBuffer) {\n            this.curLine.append(wrapMarks(new WidgetBufferView(-1), active), active.length);\n            this.pendingBuffer = 0 /* No */;\n        }\n    }\n    addBlockWidget(view) {\n        this.flushBuffer([]);\n        this.curLine = null;\n        this.content.push(view);\n    }\n    finish(openEnd) {\n        if (!openEnd)\n            this.flushBuffer([]);\n        else\n            this.pendingBuffer = 0 /* No */;\n        if (!this.posCovered())\n            this.getLine();\n    }\n    buildText(length, active, openStart) {\n        while (length > 0) {\n            if (this.textOff == this.text.length) {\n                let { value, lineBreak, done } = this.cursor.next(this.skip);\n                this.skip = 0;\n                if (done)\n                    throw new Error(\"Ran out of text content when drawing inline views\");\n                if (lineBreak) {\n                    if (!this.posCovered())\n                        this.getLine();\n                    if (this.content.length)\n                        this.content[this.content.length - 1].breakAfter = 1;\n                    else\n                        this.breakAtStart = 1;\n                    this.flushBuffer([]);\n                    this.curLine = null;\n                    length--;\n                    continue;\n                }\n                else {\n                    this.text = value;\n                    this.textOff = 0;\n                }\n            }\n            let take = Math.min(this.text.length - this.textOff, length, 512 /* Chunk */);\n            this.flushBuffer(active);\n            this.getLine().append(wrapMarks(new TextView(this.text.slice(this.textOff, this.textOff + take)), active), openStart);\n            this.atCursorPos = true;\n            this.textOff += take;\n            length -= take;\n            openStart = 0;\n        }\n    }\n    span(from, to, active, openStart) {\n        this.buildText(to - from, active, openStart);\n        this.pos = to;\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    point(from, to, deco, active, openStart) {\n        let len = to - from;\n        if (deco instanceof PointDecoration) {\n            if (deco.block) {\n                let { type } = deco;\n                if (type == BlockType.WidgetAfter && !this.posCovered())\n                    this.getLine();\n                this.addBlockWidget(new BlockWidgetView(deco.widget || new NullWidget(\"div\"), len, type));\n            }\n            else {\n                let view = WidgetView.create(deco.widget || new NullWidget(\"span\"), len, deco.startSide);\n                let cursorBefore = this.atCursorPos && !view.isEditable && openStart <= active.length && (from < to || deco.startSide > 0);\n                let cursorAfter = !view.isEditable && (from < to || deco.startSide <= 0);\n                let line = this.getLine();\n                if (this.pendingBuffer == 2 /* IfCursor */ && !cursorBefore)\n                    this.pendingBuffer = 0 /* No */;\n                this.flushBuffer(active);\n                if (cursorBefore) {\n                    line.append(wrapMarks(new WidgetBufferView(1), active), openStart);\n                    openStart = active.length + Math.max(0, openStart - active.length);\n                }\n                line.append(wrapMarks(view, active), openStart);\n                this.atCursorPos = cursorAfter;\n                this.pendingBuffer = !cursorAfter ? 0 /* No */ : from < to ? 1 /* Yes */ : 2 /* IfCursor */;\n            }\n        }\n        else if (this.doc.lineAt(this.pos).from == this.pos) { // Line decoration\n            this.getLine().addLineDeco(deco);\n        }\n        if (len) {\n            // Advance the iterator past the replaced content\n            if (this.textOff + len <= this.text.length) {\n                this.textOff += len;\n            }\n            else {\n                this.skip += len - (this.text.length - this.textOff);\n                this.text = \"\";\n                this.textOff = 0;\n            }\n            this.pos = to;\n        }\n        if (this.openStart < 0)\n            this.openStart = openStart;\n    }\n    filterPoint(from, to, value, index) {\n        if (index >= this.disallowBlockEffectsBelow || !(value instanceof PointDecoration))\n            return true;\n        if (value.block)\n            throw new RangeError(\"Block decorations may not be specified via plugins\");\n        return to <= this.doc.lineAt(this.pos).to;\n    }\n    static build(text, from, to, decorations, pluginDecorationLength) {\n        let builder = new ContentBuilder(text, from, to, pluginDecorationLength);\n        builder.openEnd = RangeSet.spans(decorations, from, to, builder);\n        if (builder.openStart < 0)\n            builder.openStart = builder.openEnd;\n        builder.finish(builder.openEnd);\n        return builder;\n    }\n}\nfunction wrapMarks(view, active) {\n    for (let mark of active)\n        view = new MarkView(mark, [view], view.length);\n    return view;\n}\nclass NullWidget extends WidgetType {\n    constructor(tag) {\n        super();\n        this.tag = tag;\n    }\n    eq(other) { return other.tag == this.tag; }\n    toDOM() { return document.createElement(this.tag); }\n    updateDOM(elt) { return elt.nodeName.toLowerCase() == this.tag; }\n}\n\nconst none = [];\nconst clickAddsSelectionRange = /*@__PURE__*/Facet.define();\nconst dragMovesSelection$1 = /*@__PURE__*/Facet.define();\nconst mouseSelectionStyle = /*@__PURE__*/Facet.define();\nconst exceptionSink = /*@__PURE__*/Facet.define();\nconst updateListener = /*@__PURE__*/Facet.define();\nconst inputHandler = /*@__PURE__*/Facet.define();\n// FIXME remove\nconst scrollTo = /*@__PURE__*/StateEffect.define({\n    map: (range, changes) => range.map(changes)\n});\n// FIXME remove\nconst centerOn = /*@__PURE__*/StateEffect.define({\n    map: (range, changes) => range.map(changes)\n});\nclass ScrollTarget {\n    constructor(range, y = \"nearest\", x = \"nearest\", yMargin = 5, xMargin = 5) {\n        this.range = range;\n        this.y = y;\n        this.x = x;\n        this.yMargin = yMargin;\n        this.xMargin = xMargin;\n    }\n    map(changes) {\n        return changes.empty ? this : new ScrollTarget(this.range.map(changes), this.y, this.x, this.yMargin, this.xMargin);\n    }\n}\nconst scrollIntoView = /*@__PURE__*/StateEffect.define({ map: (t, ch) => t.map(ch) });\n/**\nLog or report an unhandled exception in client code. Should\nprobably only be used by extension code that allows client code to\nprovide functions, and calls those functions in a context where an\nexception can't be propagated to calling code in a reasonable way\n(for example when in an event handler).\n\nEither calls a handler registered with\n[`EditorView.exceptionSink`](https://codemirror.net/6/docs/ref/#view.EditorView^exceptionSink),\n`window.onerror`, if defined, or `console.error` (in which case\nit'll pass `context`, when given, as first argument).\n*/\nfunction logException(state, exception, context) {\n    let handler = state.facet(exceptionSink);\n    if (handler.length)\n        handler[0](exception);\n    else if (window.onerror)\n        window.onerror(String(exception), context, undefined, undefined, exception);\n    else if (context)\n        console.error(context + \":\", exception);\n    else\n        console.error(exception);\n}\nconst editable = /*@__PURE__*/Facet.define({ combine: values => values.length ? values[0] : true });\n/**\nUsed to [declare](https://codemirror.net/6/docs/ref/#view.PluginSpec.provide) which\n[fields](https://codemirror.net/6/docs/ref/#view.PluginValue) a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin)\nprovides.\n*/\nclass PluginFieldProvider {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    @internal\n    */\n    field, \n    /**\n    @internal\n    */\n    get) {\n        this.field = field;\n        this.get = get;\n    }\n}\n/**\nPlugin fields are a mechanism for allowing plugins to provide\nvalues that can be retrieved through the\n[`pluginField`](https://codemirror.net/6/docs/ref/#view.EditorView.pluginField) view method.\n*/\nclass PluginField {\n    /**\n    Create a [provider](https://codemirror.net/6/docs/ref/#view.PluginFieldProvider) for this field,\n    to use with a plugin's [provide](https://codemirror.net/6/docs/ref/#view.PluginSpec.provide)\n    option.\n    */\n    from(get) {\n        return new PluginFieldProvider(this, get);\n    }\n    /**\n    Define a new plugin field.\n    */\n    static define() { return new PluginField(); }\n}\n/**\nThis field can be used by plugins to provide\n[decorations](https://codemirror.net/6/docs/ref/#view.Decoration).\n\n**Note**: For reasons of data flow (plugins are only updated\nafter the viewport is computed), decorations produced by plugins\nare _not_ taken into account when predicting the vertical layout\nstructure of the editor. They **must not** introduce block\nwidgets (that will raise an error) or replacing decorations that\ncover line breaks (these will be ignored if they occur). Such\ndecorations, or others that cause a large amount of vertical\nsize shift compared to the undecorated content, should be\nprovided through the state-level [`decorations`\nfacet](https://codemirror.net/6/docs/ref/#view.EditorView^decorations) instead.\n*/\nPluginField.decorations = /*@__PURE__*/PluginField.define();\n/**\nUsed to provide ranges that should be treated as atoms as far as\ncursor motion is concerned. This causes methods like\n[`moveByChar`](https://codemirror.net/6/docs/ref/#view.EditorView.moveByChar) and\n[`moveVertically`](https://codemirror.net/6/docs/ref/#view.EditorView.moveVertically) (and the\ncommands built on top of them) to skip across such regions when\na selection endpoint would enter them. This does _not_ prevent\ndirect programmatic [selection\nupdates](https://codemirror.net/6/docs/ref/#state.TransactionSpec.selection) from moving into such\nregions.\n*/\nPluginField.atomicRanges = /*@__PURE__*/PluginField.define();\n/**\nPlugins can provide additional scroll margins (space around the\nsides of the scrolling element that should be considered\ninvisible) through this field. This can be useful when the\nplugin introduces elements that cover part of that element (for\nexample a horizontally fixed gutter).\n*/\nPluginField.scrollMargins = /*@__PURE__*/PluginField.define();\nlet nextPluginID = 0;\nconst viewPlugin = /*@__PURE__*/Facet.define();\n/**\nView plugins associate stateful values with a view. They can\ninfluence the way the content is drawn, and are notified of things\nthat happen in the view.\n*/\nclass ViewPlugin {\n    constructor(\n    /**\n    @internal\n    */\n    id, \n    /**\n    @internal\n    */\n    create, \n    /**\n    @internal\n    */\n    fields) {\n        this.id = id;\n        this.create = create;\n        this.fields = fields;\n        this.extension = viewPlugin.of(this);\n    }\n    /**\n    Define a plugin from a constructor function that creates the\n    plugin's value, given an editor view.\n    */\n    static define(create, spec) {\n        let { eventHandlers, provide, decorations } = spec || {};\n        let fields = [];\n        if (provide)\n            for (let provider of Array.isArray(provide) ? provide : [provide])\n                fields.push(provider);\n        if (eventHandlers)\n            fields.push(domEventHandlers.from((value) => ({ plugin: value, handlers: eventHandlers })));\n        if (decorations)\n            fields.push(PluginField.decorations.from(decorations));\n        return new ViewPlugin(nextPluginID++, create, fields);\n    }\n    /**\n    Create a plugin for a class whose constructor takes a single\n    editor view as argument.\n    */\n    static fromClass(cls, spec) {\n        return ViewPlugin.define(view => new cls(view), spec);\n    }\n}\nconst domEventHandlers = /*@__PURE__*/PluginField.define();\nclass PluginInstance {\n    constructor(spec) {\n        this.spec = spec;\n        // When starting an update, all plugins have this field set to the\n        // update object, indicating they need to be updated. When finished\n        // updating, it is set to `false`. Retrieving a plugin that needs to\n        // be updated with `view.plugin` forces an eager update.\n        this.mustUpdate = null;\n        // This is null when the plugin is initially created, but\n        // initialized on the first update.\n        this.value = null;\n    }\n    takeField(type, target) {\n        if (this.spec)\n            for (let { field, get } of this.spec.fields)\n                if (field == type)\n                    target.push(get(this.value));\n    }\n    update(view) {\n        if (!this.value) {\n            if (this.spec) {\n                try {\n                    this.value = this.spec.create(view);\n                }\n                catch (e) {\n                    logException(view.state, e, \"CodeMirror plugin crashed\");\n                    this.deactivate();\n                }\n            }\n        }\n        else if (this.mustUpdate) {\n            let update = this.mustUpdate;\n            this.mustUpdate = null;\n            if (this.value.update) {\n                try {\n                    this.value.update(update);\n                }\n                catch (e) {\n                    logException(update.state, e, \"CodeMirror plugin crashed\");\n                    if (this.value.destroy)\n                        try {\n                            this.value.destroy();\n                        }\n                        catch (_) { }\n                    this.deactivate();\n                }\n            }\n        }\n        return this;\n    }\n    destroy(view) {\n        var _a;\n        if ((_a = this.value) === null || _a === void 0 ? void 0 : _a.destroy) {\n            try {\n                this.value.destroy();\n            }\n            catch (e) {\n                logException(view.state, e, \"CodeMirror plugin crashed\");\n            }\n        }\n    }\n    deactivate() {\n        this.spec = this.value = null;\n    }\n}\nconst editorAttributes = /*@__PURE__*/Facet.define();\nconst contentAttributes = /*@__PURE__*/Facet.define();\n// Provide decorations\nconst decorations = /*@__PURE__*/Facet.define();\nconst styleModule = /*@__PURE__*/Facet.define();\nclass ChangedRange {\n    constructor(fromA, toA, fromB, toB) {\n        this.fromA = fromA;\n        this.toA = toA;\n        this.fromB = fromB;\n        this.toB = toB;\n    }\n    join(other) {\n        return new ChangedRange(Math.min(this.fromA, other.fromA), Math.max(this.toA, other.toA), Math.min(this.fromB, other.fromB), Math.max(this.toB, other.toB));\n    }\n    addToSet(set) {\n        let i = set.length, me = this;\n        for (; i > 0; i--) {\n            let range = set[i - 1];\n            if (range.fromA > me.toA)\n                continue;\n            if (range.toA < me.fromA)\n                break;\n            me = me.join(range);\n            set.splice(i - 1, 1);\n        }\n        set.splice(i, 0, me);\n        return set;\n    }\n    static extendWithRanges(diff, ranges) {\n        if (ranges.length == 0)\n            return diff;\n        let result = [];\n        for (let dI = 0, rI = 0, posA = 0, posB = 0;; dI++) {\n            let next = dI == diff.length ? null : diff[dI], off = posA - posB;\n            let end = next ? next.fromB : 1e9;\n            while (rI < ranges.length && ranges[rI] < end) {\n                let from = ranges[rI], to = ranges[rI + 1];\n                let fromB = Math.max(posB, from), toB = Math.min(end, to);\n                if (fromB <= toB)\n                    new ChangedRange(fromB + off, toB + off, fromB, toB).addToSet(result);\n                if (to > end)\n                    break;\n                else\n                    rI += 2;\n            }\n            if (!next)\n                return result;\n            new ChangedRange(next.fromA, next.toA, next.fromB, next.toB).addToSet(result);\n            posA = next.toA;\n            posB = next.toB;\n        }\n    }\n}\n/**\nView [plugins](https://codemirror.net/6/docs/ref/#view.ViewPlugin) are given instances of this\nclass, which describe what happened, whenever the view is updated.\n*/\nclass ViewUpdate {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The editor view that the update is associated with.\n    */\n    view, \n    /**\n    The new editor state.\n    */\n    state, \n    /**\n    The transactions involved in the update. May be empty.\n    */\n    transactions = none) {\n        this.view = view;\n        this.state = state;\n        this.transactions = transactions;\n        /**\n        @internal\n        */\n        this.flags = 0;\n        this.startState = view.state;\n        this.changes = ChangeSet.empty(this.startState.doc.length);\n        for (let tr of transactions)\n            this.changes = this.changes.compose(tr.changes);\n        let changedRanges = [];\n        this.changes.iterChangedRanges((fromA, toA, fromB, toB) => changedRanges.push(new ChangedRange(fromA, toA, fromB, toB)));\n        this.changedRanges = changedRanges;\n        let focus = view.hasFocus;\n        if (focus != view.inputState.notifiedFocused) {\n            view.inputState.notifiedFocused = focus;\n            this.flags |= 1 /* Focus */;\n        }\n    }\n    /**\n    Tells you whether the [viewport](https://codemirror.net/6/docs/ref/#view.EditorView.viewport) or\n    [visible ranges](https://codemirror.net/6/docs/ref/#view.EditorView.visibleRanges) changed in this\n    update.\n    */\n    get viewportChanged() {\n        return (this.flags & 4 /* Viewport */) > 0;\n    }\n    /**\n    Indicates whether the height of an element in the editor changed\n    in this update.\n    */\n    get heightChanged() {\n        return (this.flags & 2 /* Height */) > 0;\n    }\n    /**\n    Returns true when the document was modified or the size of the\n    editor, or elements within the editor, changed.\n    */\n    get geometryChanged() {\n        return this.docChanged || (this.flags & (8 /* Geometry */ | 2 /* Height */)) > 0;\n    }\n    /**\n    True when this update indicates a focus change.\n    */\n    get focusChanged() {\n        return (this.flags & 1 /* Focus */) > 0;\n    }\n    /**\n    Whether the document changed in this update.\n    */\n    get docChanged() {\n        return !this.changes.empty;\n    }\n    /**\n    Whether the selection was explicitly set in this update.\n    */\n    get selectionSet() {\n        return this.transactions.some(tr => tr.selection);\n    }\n    /**\n    @internal\n    */\n    get empty() { return this.flags == 0 && this.transactions.length == 0; }\n}\n\n/**\nUsed to indicate [text direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection).\n*/\nvar Direction = /*@__PURE__*/(function (Direction) {\n    // (These are chosen to match the base levels, in bidi algorithm\n    // terms, of spans in that direction.)\n    /**\n    Left-to-right.\n    */\n    Direction[Direction[\"LTR\"] = 0] = \"LTR\";\n    /**\n    Right-to-left.\n    */\n    Direction[Direction[\"RTL\"] = 1] = \"RTL\";\nreturn Direction})(Direction || (Direction = {}));\nconst LTR = Direction.LTR, RTL = Direction.RTL;\n// Decode a string with each type encoded as log2(type)\nfunction dec(str) {\n    let result = [];\n    for (let i = 0; i < str.length; i++)\n        result.push(1 << +str[i]);\n    return result;\n}\n// Character types for codepoints 0 to 0xf8\nconst LowTypes = /*@__PURE__*/dec(\"88888888888888888888888888888888888666888888787833333333337888888000000000000000000000000008888880000000000000000000000000088888888888888888888888888888888888887866668888088888663380888308888800000000000000000000000800000000000000000000000000000008\");\n// Character types for codepoints 0x600 to 0x6f9\nconst ArabicTypes = /*@__PURE__*/dec(\"4444448826627288999999999992222222222222222222222222222222222222222222222229999999999999999999994444444444644222822222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222999999949999999229989999223333333333\");\nconst Brackets = /*@__PURE__*/Object.create(null), BracketStack = [];\n// There's a lot more in\n// https://www.unicode.org/Public/UCD/latest/ucd/BidiBrackets.txt,\n// which are left out to keep code size down.\nfor (let p of [\"()\", \"[]\", \"{}\"]) {\n    let l = /*@__PURE__*/p.charCodeAt(0), r = /*@__PURE__*/p.charCodeAt(1);\n    Brackets[l] = r;\n    Brackets[r] = -l;\n}\nfunction charType(ch) {\n    return ch <= 0xf7 ? LowTypes[ch] :\n        0x590 <= ch && ch <= 0x5f4 ? 2 /* R */ :\n            0x600 <= ch && ch <= 0x6f9 ? ArabicTypes[ch - 0x600] :\n                0x6ee <= ch && ch <= 0x8ac ? 4 /* AL */ :\n                    0x2000 <= ch && ch <= 0x200b ? 256 /* NI */ :\n                        ch == 0x200c ? 256 /* NI */ : 1 /* L */;\n}\nconst BidiRE = /[\\u0590-\\u05f4\\u0600-\\u06ff\\u0700-\\u08ac]/;\n/**\nRepresents a contiguous range of text that has a single direction\n(as in left-to-right or right-to-left).\n*/\nclass BidiSpan {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the span (relative to the start of the line).\n    */\n    from, \n    /**\n    The end of the span.\n    */\n    to, \n    /**\n    The [\"bidi\n    level\"](https://unicode.org/reports/tr9/#Basic_Display_Algorithm)\n    of the span (in this context, 0 means\n    left-to-right, 1 means right-to-left, 2 means left-to-right\n    number inside right-to-left text).\n    */\n    level) {\n        this.from = from;\n        this.to = to;\n        this.level = level;\n    }\n    /**\n    The direction of this span.\n    */\n    get dir() { return this.level % 2 ? RTL : LTR; }\n    /**\n    @internal\n    */\n    side(end, dir) { return (this.dir == dir) == end ? this.to : this.from; }\n    /**\n    @internal\n    */\n    static find(order, index, level, assoc) {\n        let maybe = -1;\n        for (let i = 0; i < order.length; i++) {\n            let span = order[i];\n            if (span.from <= index && span.to >= index) {\n                if (span.level == level)\n                    return i;\n                // When multiple spans match, if assoc != 0, take the one that\n                // covers that side, otherwise take the one with the minimum\n                // level.\n                if (maybe < 0 || (assoc != 0 ? (assoc < 0 ? span.from < index : span.to > index) : order[maybe].level > span.level))\n                    maybe = i;\n            }\n        }\n        if (maybe < 0)\n            throw new RangeError(\"Index out of range\");\n        return maybe;\n    }\n}\n// Reused array of character types\nconst types = [];\nfunction computeOrder(line, direction) {\n    let len = line.length, outerType = direction == LTR ? 1 /* L */ : 2 /* R */, oppositeType = direction == LTR ? 2 /* R */ : 1 /* L */;\n    if (!line || outerType == 1 /* L */ && !BidiRE.test(line))\n        return trivialOrder(len);\n    // W1. Examine each non-spacing mark (NSM) in the level run, and\n    // change the type of the NSM to the type of the previous\n    // character. If the NSM is at the start of the level run, it will\n    // get the type of sor.\n    // W2. Search backwards from each instance of a European number\n    // until the first strong type (R, L, AL, or sor) is found. If an\n    // AL is found, change the type of the European number to Arabic\n    // number.\n    // W3. Change all ALs to R.\n    // (Left after this: L, R, EN, AN, ET, CS, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = charType(line.charCodeAt(i));\n        if (type == 512 /* NSM */)\n            type = prev;\n        else if (type == 8 /* EN */ && prevStrong == 4 /* AL */)\n            type = 16 /* AN */;\n        types[i] = type == 4 /* AL */ ? 2 /* R */ : type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n        prev = type;\n    }\n    // W5. A sequence of European terminators adjacent to European\n    // numbers changes to all European numbers.\n    // W6. Otherwise, separators and terminators change to Other\n    // Neutral.\n    // W7. Search backwards from each instance of a European number\n    // until the first strong type (R, L, or sor) is found. If an L is\n    // found, then change the type of the European number to L.\n    // (Left after this: L, R, EN+AN, NI)\n    for (let i = 0, prev = outerType, prevStrong = outerType; i < len; i++) {\n        let type = types[i];\n        if (type == 128 /* CS */) {\n            if (i < len - 1 && prev == types[i + 1] && (prev & 24 /* Num */))\n                type = types[i] = prev;\n            else\n                types[i] = 256 /* NI */;\n        }\n        else if (type == 64 /* ET */) {\n            let end = i + 1;\n            while (end < len && types[end] == 64 /* ET */)\n                end++;\n            let replace = (i && prev == 8 /* EN */) || (end < len && types[end] == 8 /* EN */) ? (prevStrong == 1 /* L */ ? 1 /* L */ : 8 /* EN */) : 256 /* NI */;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n        else if (type == 8 /* EN */ && prevStrong == 1 /* L */) {\n            types[i] = 1 /* L */;\n        }\n        prev = type;\n        if (type & 7 /* Strong */)\n            prevStrong = type;\n    }\n    // N0. Process bracket pairs in an isolating run sequence\n    // sequentially in the logical order of the text positions of the\n    // opening paired brackets using the logic given below. Within this\n    // scope, bidirectional types EN and AN are treated as R.\n    for (let i = 0, sI = 0, context = 0, ch, br, type; i < len; i++) {\n        // Keeps [startIndex, type, strongSeen] triples for each open\n        // bracket on BracketStack.\n        if (br = Brackets[ch = line.charCodeAt(i)]) {\n            if (br < 0) { // Closing bracket\n                for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                    if (BracketStack[sJ + 1] == -br) {\n                        let flags = BracketStack[sJ + 2];\n                        let type = (flags & 2 /* EmbedInside */) ? outerType :\n                            !(flags & 4 /* OppositeInside */) ? 0 :\n                                (flags & 1 /* OppositeBefore */) ? oppositeType : outerType;\n                        if (type)\n                            types[i] = types[BracketStack[sJ]] = type;\n                        sI = sJ;\n                        break;\n                    }\n                }\n            }\n            else if (BracketStack.length == 189 /* MaxDepth */) {\n                break;\n            }\n            else {\n                BracketStack[sI++] = i;\n                BracketStack[sI++] = ch;\n                BracketStack[sI++] = context;\n            }\n        }\n        else if ((type = types[i]) == 2 /* R */ || type == 1 /* L */) {\n            let embed = type == outerType;\n            context = embed ? 0 : 1 /* OppositeBefore */;\n            for (let sJ = sI - 3; sJ >= 0; sJ -= 3) {\n                let cur = BracketStack[sJ + 2];\n                if (cur & 2 /* EmbedInside */)\n                    break;\n                if (embed) {\n                    BracketStack[sJ + 2] |= 2 /* EmbedInside */;\n                }\n                else {\n                    if (cur & 4 /* OppositeInside */)\n                        break;\n                    BracketStack[sJ + 2] |= 4 /* OppositeInside */;\n                }\n            }\n        }\n    }\n    // N1. A sequence of neutrals takes the direction of the\n    // surrounding strong text if the text on both sides has the same\n    // direction. European and Arabic numbers act as if they were R in\n    // terms of their influence on neutrals. Start-of-level-run (sor)\n    // and end-of-level-run (eor) are used at level run boundaries.\n    // N2. Any remaining neutrals take the embedding direction.\n    // (Left after this: L, R, EN+AN)\n    for (let i = 0; i < len; i++) {\n        if (types[i] == 256 /* NI */) {\n            let end = i + 1;\n            while (end < len && types[end] == 256 /* NI */)\n                end++;\n            let beforeL = (i ? types[i - 1] : outerType) == 1 /* L */;\n            let afterL = (end < len ? types[end] : outerType) == 1 /* L */;\n            let replace = beforeL == afterL ? (beforeL ? 1 /* L */ : 2 /* R */) : outerType;\n            for (let j = i; j < end; j++)\n                types[j] = replace;\n            i = end - 1;\n        }\n    }\n    // Here we depart from the documented algorithm, in order to avoid\n    // building up an actual levels array. Since there are only three\n    // levels (0, 1, 2) in an implementation that doesn't take\n    // explicit embedding into account, we can build up the order on\n    // the fly, without following the level-based algorithm.\n    let order = [];\n    if (outerType == 1 /* L */) {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] != 1 /* L */;\n            while (i < len && rtl == (types[i] != 1 /* L */))\n                i++;\n            if (rtl) {\n                for (let j = i; j > start;) {\n                    let end = j, l = types[--j] != 2 /* R */;\n                    while (j > start && l == (types[j - 1] != 2 /* R */))\n                        j--;\n                    order.push(new BidiSpan(j, end, l ? 2 : 1));\n                }\n            }\n            else {\n                order.push(new BidiSpan(start, i, 0));\n            }\n        }\n    }\n    else {\n        for (let i = 0; i < len;) {\n            let start = i, rtl = types[i++] == 2 /* R */;\n            while (i < len && rtl == (types[i] == 2 /* R */))\n                i++;\n            order.push(new BidiSpan(start, i, rtl ? 1 : 2));\n        }\n    }\n    return order;\n}\nfunction trivialOrder(length) {\n    return [new BidiSpan(0, length, 0)];\n}\nlet movedOver = \"\";\nfunction moveVisually(line, order, dir, start, forward) {\n    var _a;\n    let startIndex = start.head - line.from, spanI = -1;\n    if (startIndex == 0) {\n        if (!forward || !line.length)\n            return null;\n        if (order[0].level != dir) {\n            startIndex = order[0].side(false, dir);\n            spanI = 0;\n        }\n    }\n    else if (startIndex == line.length) {\n        if (forward)\n            return null;\n        let last = order[order.length - 1];\n        if (last.level != dir) {\n            startIndex = last.side(true, dir);\n            spanI = order.length - 1;\n        }\n    }\n    if (spanI < 0)\n        spanI = BidiSpan.find(order, startIndex, (_a = start.bidiLevel) !== null && _a !== void 0 ? _a : -1, start.assoc);\n    let span = order[spanI];\n    // End of span. (But not end of line--that was checked for above.)\n    if (startIndex == span.side(forward, dir)) {\n        span = order[spanI += forward ? 1 : -1];\n        startIndex = span.side(!forward, dir);\n    }\n    let indexForward = forward == (span.dir == dir);\n    let nextIndex = findClusterBreak(line.text, startIndex, indexForward);\n    movedOver = line.text.slice(Math.min(startIndex, nextIndex), Math.max(startIndex, nextIndex));\n    if (nextIndex != span.side(forward, dir))\n        return EditorSelection.cursor(nextIndex + line.from, indexForward ? -1 : 1, span.level);\n    let nextSpan = spanI == (forward ? order.length - 1 : 0) ? null : order[spanI + (forward ? 1 : -1)];\n    if (!nextSpan && span.level != dir)\n        return EditorSelection.cursor(forward ? line.to : line.from, forward ? -1 : 1, dir);\n    if (nextSpan && nextSpan.level < span.level)\n        return EditorSelection.cursor(nextSpan.side(!forward, dir) + line.from, forward ? 1 : -1, nextSpan.level);\n    return EditorSelection.cursor(nextIndex + line.from, forward ? -1 : 1, span.level);\n}\n\nclass DOMReader {\n    constructor(points, view) {\n        this.points = points;\n        this.view = view;\n        this.text = \"\";\n        this.lineBreak = view.state.lineBreak;\n    }\n    readRange(start, end) {\n        if (!start)\n            return this;\n        let parent = start.parentNode;\n        for (let cur = start;;) {\n            this.findPointBefore(parent, cur);\n            this.readNode(cur);\n            let next = cur.nextSibling;\n            if (next == end)\n                break;\n            let view = ContentView.get(cur), nextView = ContentView.get(next);\n            if (view && nextView ? view.breakAfter :\n                (view ? view.breakAfter : isBlockElement(cur)) ||\n                    (isBlockElement(next) && (cur.nodeName != \"BR\" || cur.cmIgnore)))\n                this.text += this.lineBreak;\n            cur = next;\n        }\n        this.findPointBefore(parent, end);\n        return this;\n    }\n    readNode(node) {\n        if (node.cmIgnore)\n            return;\n        let view = ContentView.get(node);\n        let fromView = view && view.overrideDOMText;\n        let text;\n        if (fromView != null)\n            text = fromView.sliceString(0, undefined, this.lineBreak);\n        else if (node.nodeType == 3)\n            text = node.nodeValue;\n        else if (node.nodeName == \"BR\")\n            text = node.nextSibling ? this.lineBreak : \"\";\n        else if (node.nodeType == 1)\n            this.readRange(node.firstChild, null);\n        if (text != null) {\n            this.findPointIn(node, text.length);\n            this.text += text;\n            // Chrome inserts two newlines when pressing shift-enter at the\n            // end of a line. This drops one of those.\n            if (browser.chrome && this.view.inputState.lastKeyCode == 13 && !node.nextSibling && /\\n\\n$/.test(this.text))\n                this.text = this.text.slice(0, -1);\n        }\n    }\n    findPointBefore(node, next) {\n        for (let point of this.points)\n            if (point.node == node && node.childNodes[point.offset] == next)\n                point.pos = this.text.length;\n    }\n    findPointIn(node, maxLen) {\n        for (let point of this.points)\n            if (point.node == node)\n                point.pos = this.text.length + Math.min(point.offset, maxLen);\n    }\n}\nfunction isBlockElement(node) {\n    return node.nodeType == 1 && /^(DIV|P|LI|UL|OL|BLOCKQUOTE|DD|DT|H\\d|SECTION|PRE)$/.test(node.nodeName);\n}\nclass DOMPoint {\n    constructor(node, offset) {\n        this.node = node;\n        this.offset = offset;\n        this.pos = -1;\n    }\n}\n\nclass DocView extends ContentView {\n    constructor(view) {\n        super();\n        this.view = view;\n        this.compositionDeco = Decoration.none;\n        this.decorations = [];\n        this.pluginDecorationLength = 0;\n        // Track a minimum width for the editor. When measuring sizes in\n        // measureVisibleLineHeights, this is updated to point at the width\n        // of a given element and its extent in the document. When a change\n        // happens in that range, these are reset. That way, once we've seen\n        // a line/element of a given length, we keep the editor wide enough\n        // to fit at least that element, until it is changed, at which point\n        // we forget it again.\n        this.minWidth = 0;\n        this.minWidthFrom = 0;\n        this.minWidthTo = 0;\n        // Track whether the DOM selection was set in a lossy way, so that\n        // we don't mess it up when reading it back it\n        this.impreciseAnchor = null;\n        this.impreciseHead = null;\n        this.forceSelection = false;\n        // Used by the resize observer to ignore resizes that we caused\n        // ourselves\n        this.lastUpdate = Date.now();\n        this.setDOM(view.contentDOM);\n        this.children = [new LineView];\n        this.children[0].setParent(this);\n        this.updateDeco();\n        this.updateInner([new ChangedRange(0, 0, 0, view.state.doc.length)], 0);\n    }\n    get root() { return this.view.root; }\n    get editorView() { return this.view; }\n    get length() { return this.view.state.doc.length; }\n    // Update the document view to a given state. scrollIntoView can be\n    // used as a hint to compute a new viewport that includes that\n    // position, if we know the editor is going to scroll that position\n    // into view.\n    update(update) {\n        let changedRanges = update.changedRanges;\n        if (this.minWidth > 0 && changedRanges.length) {\n            if (!changedRanges.every(({ fromA, toA }) => toA < this.minWidthFrom || fromA > this.minWidthTo)) {\n                this.minWidth = this.minWidthFrom = this.minWidthTo = 0;\n            }\n            else {\n                this.minWidthFrom = update.changes.mapPos(this.minWidthFrom, 1);\n                this.minWidthTo = update.changes.mapPos(this.minWidthTo, 1);\n            }\n        }\n        if (this.view.inputState.composing < 0)\n            this.compositionDeco = Decoration.none;\n        else if (update.transactions.length || this.dirty)\n            this.compositionDeco = computeCompositionDeco(this.view, update.changes);\n        // When the DOM nodes around the selection are moved to another\n        // parent, Chrome sometimes reports a different selection through\n        // getSelection than the one that it actually shows to the user.\n        // This forces a selection update when lines are joined to work\n        // around that. Issue #54\n        if ((browser.ie || browser.chrome) && !this.compositionDeco.size && update &&\n            update.state.doc.lines != update.startState.doc.lines)\n            this.forceSelection = true;\n        let prevDeco = this.decorations, deco = this.updateDeco();\n        let decoDiff = findChangedDeco(prevDeco, deco, update.changes);\n        changedRanges = ChangedRange.extendWithRanges(changedRanges, decoDiff);\n        if (this.dirty == 0 /* Not */ && changedRanges.length == 0) {\n            return false;\n        }\n        else {\n            this.updateInner(changedRanges, update.startState.doc.length);\n            if (update.transactions.length)\n                this.lastUpdate = Date.now();\n            return true;\n        }\n    }\n    // Used by update and the constructor do perform the actual DOM\n    // update\n    updateInner(changes, oldLength) {\n        this.view.viewState.mustMeasureContent = true;\n        this.updateChildren(changes, oldLength);\n        let { observer } = this.view;\n        observer.ignore(() => {\n            // Lock the height during redrawing, since Chrome sometimes\n            // messes with the scroll position during DOM mutation (though\n            // no relayout is triggered and I cannot imagine how it can\n            // recompute the scroll position without a layout)\n            this.dom.style.height = this.view.viewState.contentHeight + \"px\";\n            this.dom.style.minWidth = this.minWidth ? this.minWidth + \"px\" : \"\";\n            // Chrome will sometimes, when DOM mutations occur directly\n            // around the selection, get confused and report a different\n            // selection from the one it displays (issue #218). This tries\n            // to detect that situation.\n            let track = browser.chrome || browser.ios ? { node: observer.selectionRange.focusNode, written: false } : undefined;\n            this.sync(track);\n            this.dirty = 0 /* Not */;\n            if (track && (track.written || observer.selectionRange.focusNode != track.node))\n                this.forceSelection = true;\n            this.dom.style.height = \"\";\n        });\n        let gaps = [];\n        if (this.view.viewport.from || this.view.viewport.to < this.view.state.doc.length)\n            for (let child of this.children)\n                if (child instanceof BlockWidgetView && child.widget instanceof BlockGapWidget)\n                    gaps.push(child.dom);\n        observer.updateGaps(gaps);\n    }\n    updateChildren(changes, oldLength) {\n        let cursor = this.childCursor(oldLength);\n        for (let i = changes.length - 1;; i--) {\n            let next = i >= 0 ? changes[i] : null;\n            if (!next)\n                break;\n            let { fromA, toA, fromB, toB } = next;\n            let { content, breakAtStart, openStart, openEnd } = ContentBuilder.build(this.view.state.doc, fromB, toB, this.decorations, this.pluginDecorationLength);\n            let { i: toI, off: toOff } = cursor.findPos(toA, 1);\n            let { i: fromI, off: fromOff } = cursor.findPos(fromA, -1);\n            replaceRange(this, fromI, fromOff, toI, toOff, content, breakAtStart, openStart, openEnd);\n        }\n    }\n    // Sync the DOM selection to this.state.selection\n    updateSelection(mustRead = false, fromPointer = false) {\n        if (mustRead)\n            this.view.observer.readSelectionRange();\n        if (!(fromPointer || this.mayControlSelection()) ||\n            browser.ios && this.view.inputState.rapidCompositionStart)\n            return;\n        let force = this.forceSelection;\n        this.forceSelection = false;\n        let main = this.view.state.selection.main;\n        // FIXME need to handle the case where the selection falls inside a block range\n        let anchor = this.domAtPos(main.anchor);\n        let head = main.empty ? anchor : this.domAtPos(main.head);\n        // Always reset on Firefox when next to an uneditable node to\n        // avoid invisible cursor bugs (#111)\n        if (browser.gecko && main.empty && betweenUneditable(anchor)) {\n            let dummy = document.createTextNode(\"\");\n            this.view.observer.ignore(() => anchor.node.insertBefore(dummy, anchor.node.childNodes[anchor.offset] || null));\n            anchor = head = new DOMPos(dummy, 0);\n            force = true;\n        }\n        let domSel = this.view.observer.selectionRange;\n        // If the selection is already here, or in an equivalent position, don't touch it\n        if (force || !domSel.focusNode ||\n            !isEquivalentPosition(anchor.node, anchor.offset, domSel.anchorNode, domSel.anchorOffset) ||\n            !isEquivalentPosition(head.node, head.offset, domSel.focusNode, domSel.focusOffset)) {\n            this.view.observer.ignore(() => {\n                // Chrome Android will hide the virtual keyboard when tapping\n                // inside an uneditable node, and not bring it back when we\n                // move the cursor to its proper position. This tries to\n                // restore the keyboard by cycling focus.\n                if (browser.android && browser.chrome && this.dom.contains(domSel.focusNode) &&\n                    inUneditable(domSel.focusNode, this.dom)) {\n                    this.dom.blur();\n                    this.dom.focus({ preventScroll: true });\n                }\n                let rawSel = getSelection(this.root);\n                if (main.empty) {\n                    // Work around https://bugzilla.mozilla.org/show_bug.cgi?id=1612076\n                    if (browser.gecko) {\n                        let nextTo = nextToUneditable(anchor.node, anchor.offset);\n                        if (nextTo && nextTo != (1 /* Before */ | 2 /* After */)) {\n                            let text = nearbyTextNode(anchor.node, anchor.offset, nextTo == 1 /* Before */ ? 1 : -1);\n                            if (text)\n                                anchor = new DOMPos(text, nextTo == 1 /* Before */ ? 0 : text.nodeValue.length);\n                        }\n                    }\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    if (main.bidiLevel != null && domSel.cursorBidiLevel != null)\n                        domSel.cursorBidiLevel = main.bidiLevel;\n                }\n                else if (rawSel.extend) {\n                    // Selection.extend can be used to create an 'inverted' selection\n                    // (one where the focus is before the anchor), but not all\n                    // browsers support it yet.\n                    rawSel.collapse(anchor.node, anchor.offset);\n                    rawSel.extend(head.node, head.offset);\n                }\n                else {\n                    // Primitive (IE) way\n                    let range = document.createRange();\n                    if (main.anchor > main.head)\n                        [anchor, head] = [head, anchor];\n                    range.setEnd(head.node, head.offset);\n                    range.setStart(anchor.node, anchor.offset);\n                    rawSel.removeAllRanges();\n                    rawSel.addRange(range);\n                }\n            });\n            this.view.observer.setSelectionRange(anchor, head);\n        }\n        this.impreciseAnchor = anchor.precise ? null : new DOMPos(domSel.anchorNode, domSel.anchorOffset);\n        this.impreciseHead = head.precise ? null : new DOMPos(domSel.focusNode, domSel.focusOffset);\n    }\n    enforceCursorAssoc() {\n        if (this.compositionDeco.size)\n            return;\n        let cursor = this.view.state.selection.main;\n        let sel = getSelection(this.root);\n        if (!cursor.empty || !cursor.assoc || !sel.modify)\n            return;\n        let line = LineView.find(this, cursor.head);\n        if (!line)\n            return;\n        let lineStart = line.posAtStart;\n        if (cursor.head == lineStart || cursor.head == lineStart + line.length)\n            return;\n        let before = this.coordsAt(cursor.head, -1), after = this.coordsAt(cursor.head, 1);\n        if (!before || !after || before.bottom > after.top)\n            return;\n        let dom = this.domAtPos(cursor.head + cursor.assoc);\n        sel.collapse(dom.node, dom.offset);\n        sel.modify(\"move\", cursor.assoc < 0 ? \"forward\" : \"backward\", \"lineboundary\");\n    }\n    mayControlSelection() {\n        return this.view.state.facet(editable) ? this.root.activeElement == this.dom\n            : hasSelection(this.dom, this.view.observer.selectionRange);\n    }\n    nearest(dom) {\n        for (let cur = dom; cur;) {\n            let domView = ContentView.get(cur);\n            if (domView && domView.rootView == this)\n                return domView;\n            cur = cur.parentNode;\n        }\n        return null;\n    }\n    posFromDOM(node, offset) {\n        let view = this.nearest(node);\n        if (!view)\n            throw new RangeError(\"Trying to find position for a DOM position outside of the document\");\n        return view.localPosFromDOM(node, offset) + view.posAtStart;\n    }\n    domAtPos(pos) {\n        let { i, off } = this.childCursor().findPos(pos, -1);\n        for (; i < this.children.length - 1;) {\n            let child = this.children[i];\n            if (off < child.length || child instanceof LineView)\n                break;\n            i++;\n            off = 0;\n        }\n        return this.children[i].domAtPos(off);\n    }\n    coordsAt(pos, side) {\n        for (let off = this.length, i = this.children.length - 1;; i--) {\n            let child = this.children[i], start = off - child.breakAfter - child.length;\n            if (pos > start ||\n                (pos == start && child.type != BlockType.WidgetBefore && child.type != BlockType.WidgetAfter &&\n                    (!i || side == 2 || this.children[i - 1].breakAfter ||\n                        (this.children[i - 1].type == BlockType.WidgetBefore && side > -2))))\n                return child.coordsAt(pos - start, side);\n            off = start;\n        }\n    }\n    measureVisibleLineHeights() {\n        let result = [], { from, to } = this.view.viewState.viewport;\n        let contentWidth = this.view.contentDOM.clientWidth;\n        let isWider = contentWidth > Math.max(this.view.scrollDOM.clientWidth, this.minWidth) + 1;\n        let widest = -1;\n        for (let pos = 0, i = 0; i < this.children.length; i++) {\n            let child = this.children[i], end = pos + child.length;\n            if (end > to)\n                break;\n            if (pos >= from) {\n                let childRect = child.dom.getBoundingClientRect();\n                result.push(childRect.height);\n                if (isWider) {\n                    let last = child.dom.lastChild;\n                    let rects = last ? clientRectsFor(last) : [];\n                    if (rects.length) {\n                        let rect = rects[rects.length - 1];\n                        let width = this.view.textDirection == Direction.LTR ? rect.right - childRect.left\n                            : childRect.right - rect.left;\n                        if (width > widest) {\n                            widest = width;\n                            this.minWidth = contentWidth;\n                            this.minWidthFrom = pos;\n                            this.minWidthTo = end;\n                        }\n                    }\n                }\n            }\n            pos = end + child.breakAfter;\n        }\n        return result;\n    }\n    measureTextSize() {\n        for (let child of this.children) {\n            if (child instanceof LineView) {\n                let measure = child.measureTextSize();\n                if (measure)\n                    return measure;\n            }\n        }\n        // If no workable line exists, force a layout of a measurable element\n        let dummy = document.createElement(\"div\"), lineHeight, charWidth;\n        dummy.className = \"cm-line\";\n        dummy.textContent = \"abc def ghi jkl mno pqr stu\";\n        this.view.observer.ignore(() => {\n            this.dom.appendChild(dummy);\n            let rect = clientRectsFor(dummy.firstChild)[0];\n            lineHeight = dummy.getBoundingClientRect().height;\n            charWidth = rect ? rect.width / 27 : 7;\n            dummy.remove();\n        });\n        return { lineHeight, charWidth };\n    }\n    childCursor(pos = this.length) {\n        // Move back to start of last element when possible, so that\n        // `ChildCursor.findPos` doesn't have to deal with the edge case\n        // of being after the last element.\n        let i = this.children.length;\n        if (i)\n            pos -= this.children[--i].length;\n        return new ChildCursor(this.children, pos, i);\n    }\n    computeBlockGapDeco() {\n        let deco = [], vs = this.view.viewState;\n        for (let pos = 0, i = 0;; i++) {\n            let next = i == vs.viewports.length ? null : vs.viewports[i];\n            let end = next ? next.from - 1 : this.length;\n            if (end > pos) {\n                let height = vs.lineBlockAt(end).bottom - vs.lineBlockAt(pos).top;\n                deco.push(Decoration.replace({ widget: new BlockGapWidget(height), block: true, inclusive: true }).range(pos, end));\n            }\n            if (!next)\n                break;\n            pos = next.to + 1;\n        }\n        return Decoration.set(deco);\n    }\n    updateDeco() {\n        let pluginDecorations = this.view.pluginField(PluginField.decorations);\n        this.pluginDecorationLength = pluginDecorations.length;\n        return this.decorations = [\n            ...pluginDecorations,\n            ...this.view.state.facet(decorations),\n            this.compositionDeco,\n            this.computeBlockGapDeco(),\n            this.view.viewState.lineGapDeco\n        ];\n    }\n    scrollIntoView(target) {\n        let { range } = target;\n        let rect = this.coordsAt(range.head, range.empty ? range.assoc : range.head > range.anchor ? -1 : 1), other;\n        if (!rect)\n            return;\n        if (!range.empty && (other = this.coordsAt(range.anchor, range.anchor > range.head ? -1 : 1)))\n            rect = { left: Math.min(rect.left, other.left), top: Math.min(rect.top, other.top),\n                right: Math.max(rect.right, other.right), bottom: Math.max(rect.bottom, other.bottom) };\n        let mLeft = 0, mRight = 0, mTop = 0, mBottom = 0;\n        for (let margins of this.view.pluginField(PluginField.scrollMargins))\n            if (margins) {\n                let { left, right, top, bottom } = margins;\n                if (left != null)\n                    mLeft = Math.max(mLeft, left);\n                if (right != null)\n                    mRight = Math.max(mRight, right);\n                if (top != null)\n                    mTop = Math.max(mTop, top);\n                if (bottom != null)\n                    mBottom = Math.max(mBottom, bottom);\n            }\n        let targetRect = {\n            left: rect.left - mLeft, top: rect.top - mTop,\n            right: rect.right + mRight, bottom: rect.bottom + mBottom\n        };\n        scrollRectIntoView(this.view.scrollDOM, targetRect, range.head < range.anchor ? -1 : 1, target.x, target.y, target.xMargin, target.yMargin, this.view.textDirection == Direction.LTR);\n    }\n}\nfunction betweenUneditable(pos) {\n    return pos.node.nodeType == 1 && pos.node.firstChild &&\n        (pos.offset == 0 || pos.node.childNodes[pos.offset - 1].contentEditable == \"false\") &&\n        (pos.offset == pos.node.childNodes.length || pos.node.childNodes[pos.offset].contentEditable == \"false\");\n}\nclass BlockGapWidget extends WidgetType {\n    constructor(height) {\n        super();\n        this.height = height;\n    }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        this.updateDOM(elt);\n        return elt;\n    }\n    eq(other) { return other.height == this.height; }\n    updateDOM(elt) {\n        elt.style.height = this.height + \"px\";\n        return true;\n    }\n    get estimatedHeight() { return this.height; }\n}\nfunction computeCompositionDeco(view, changes) {\n    let sel = view.observer.selectionRange;\n    let textNode = sel.focusNode && nearbyTextNode(sel.focusNode, sel.focusOffset, 0);\n    if (!textNode)\n        return Decoration.none;\n    let cView = view.docView.nearest(textNode);\n    if (!cView)\n        return Decoration.none;\n    let from, to, topNode = textNode;\n    if (cView instanceof LineView) {\n        while (topNode.parentNode != cView.dom)\n            topNode = topNode.parentNode;\n        let prev = topNode.previousSibling;\n        while (prev && !ContentView.get(prev))\n            prev = prev.previousSibling;\n        from = to = prev ? ContentView.get(prev).posAtEnd : cView.posAtStart;\n    }\n    else {\n        for (;;) {\n            let { parent } = cView;\n            if (!parent)\n                return Decoration.none;\n            if (parent instanceof LineView)\n                break;\n            cView = parent;\n        }\n        from = cView.posAtStart;\n        to = from + cView.length;\n        topNode = cView.dom;\n    }\n    let newFrom = changes.mapPos(from, 1), newTo = Math.max(newFrom, changes.mapPos(to, -1));\n    let { state } = view, text = topNode.nodeType == 3 ? topNode.nodeValue :\n        new DOMReader([], view).readRange(topNode.firstChild, null).text;\n    if (newTo - newFrom < text.length) {\n        if (state.sliceDoc(newFrom, Math.min(state.doc.length, newFrom + text.length)) == text)\n            newTo = newFrom + text.length;\n        else if (state.sliceDoc(Math.max(0, newTo - text.length), newTo) == text)\n            newFrom = newTo - text.length;\n        else\n            return Decoration.none;\n    }\n    else if (state.sliceDoc(newFrom, newTo) != text) {\n        return Decoration.none;\n    }\n    return Decoration.set(Decoration.replace({ widget: new CompositionWidget(topNode, textNode) }).range(newFrom, newTo));\n}\nclass CompositionWidget extends WidgetType {\n    constructor(top, text) {\n        super();\n        this.top = top;\n        this.text = text;\n    }\n    eq(other) { return this.top == other.top && this.text == other.text; }\n    toDOM() { return this.top; }\n    ignoreEvent() { return false; }\n    get customView() { return CompositionView; }\n}\nfunction nearbyTextNode(node, offset, side) {\n    for (;;) {\n        if (node.nodeType == 3)\n            return node;\n        if (node.nodeType == 1 && offset > 0 && side <= 0) {\n            node = node.childNodes[offset - 1];\n            offset = maxOffset(node);\n        }\n        else if (node.nodeType == 1 && offset < node.childNodes.length && side >= 0) {\n            node = node.childNodes[offset];\n            offset = 0;\n        }\n        else {\n            return null;\n        }\n    }\n}\nfunction nextToUneditable(node, offset) {\n    if (node.nodeType != 1)\n        return 0;\n    return (offset && node.childNodes[offset - 1].contentEditable == \"false\" ? 1 /* Before */ : 0) |\n        (offset < node.childNodes.length && node.childNodes[offset].contentEditable == \"false\" ? 2 /* After */ : 0);\n}\nclass DecorationComparator$1 {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange(from, to) { addRange(from, to, this.changes); }\n    comparePoint(from, to) { addRange(from, to, this.changes); }\n}\nfunction findChangedDeco(a, b, diff) {\n    let comp = new DecorationComparator$1;\n    RangeSet.compare(a, b, diff, comp);\n    return comp.changes;\n}\nfunction inUneditable(node, inside) {\n    for (let cur = node; cur && cur != inside; cur = cur.assignedSlot || cur.parentNode) {\n        if (cur.nodeType == 1 && cur.contentEditable == 'false') {\n            return true;\n        }\n    }\n    return false;\n}\n\nfunction groupAt(state, pos, bias = 1) {\n    let categorize = state.charCategorizer(pos);\n    let line = state.doc.lineAt(pos), linePos = pos - line.from;\n    if (line.length == 0)\n        return EditorSelection.cursor(pos);\n    if (linePos == 0)\n        bias = 1;\n    else if (linePos == line.length)\n        bias = -1;\n    let from = linePos, to = linePos;\n    if (bias < 0)\n        from = findClusterBreak(line.text, linePos, false);\n    else\n        to = findClusterBreak(line.text, linePos);\n    let cat = categorize(line.text.slice(from, to));\n    while (from > 0) {\n        let prev = findClusterBreak(line.text, from, false);\n        if (categorize(line.text.slice(prev, from)) != cat)\n            break;\n        from = prev;\n    }\n    while (to < line.length) {\n        let next = findClusterBreak(line.text, to);\n        if (categorize(line.text.slice(to, next)) != cat)\n            break;\n        to = next;\n    }\n    return EditorSelection.range(from + line.from, to + line.from);\n}\n// Search the DOM for the {node, offset} position closest to the given\n// coordinates. Very inefficient and crude, but can usually be avoided\n// by calling caret(Position|Range)FromPoint instead.\nfunction getdx(x, rect) {\n    return rect.left > x ? rect.left - x : Math.max(0, x - rect.right);\n}\nfunction getdy(y, rect) {\n    return rect.top > y ? rect.top - y : Math.max(0, y - rect.bottom);\n}\nfunction yOverlap(a, b) {\n    return a.top < b.bottom - 1 && a.bottom > b.top + 1;\n}\nfunction upTop(rect, top) {\n    return top < rect.top ? { top, left: rect.left, right: rect.right, bottom: rect.bottom } : rect;\n}\nfunction upBot(rect, bottom) {\n    return bottom > rect.bottom ? { top: rect.top, left: rect.left, right: rect.right, bottom } : rect;\n}\nfunction domPosAtCoords(parent, x, y) {\n    let closest, closestRect, closestX, closestY;\n    let above, below, aboveRect, belowRect;\n    for (let child = parent.firstChild; child; child = child.nextSibling) {\n        let rects = clientRectsFor(child);\n        for (let i = 0; i < rects.length; i++) {\n            let rect = rects[i];\n            if (closestRect && yOverlap(closestRect, rect))\n                rect = upTop(upBot(rect, closestRect.bottom), closestRect.top);\n            let dx = getdx(x, rect), dy = getdy(y, rect);\n            if (dx == 0 && dy == 0)\n                return child.nodeType == 3 ? domPosInText(child, x, y) : domPosAtCoords(child, x, y);\n            if (!closest || closestY > dy || closestY == dy && closestX > dx) {\n                closest = child;\n                closestRect = rect;\n                closestX = dx;\n                closestY = dy;\n            }\n            if (dx == 0) {\n                if (y > rect.bottom && (!aboveRect || aboveRect.bottom < rect.bottom)) {\n                    above = child;\n                    aboveRect = rect;\n                }\n                else if (y < rect.top && (!belowRect || belowRect.top > rect.top)) {\n                    below = child;\n                    belowRect = rect;\n                }\n            }\n            else if (aboveRect && yOverlap(aboveRect, rect)) {\n                aboveRect = upBot(aboveRect, rect.bottom);\n            }\n            else if (belowRect && yOverlap(belowRect, rect)) {\n                belowRect = upTop(belowRect, rect.top);\n            }\n        }\n    }\n    if (aboveRect && aboveRect.bottom >= y) {\n        closest = above;\n        closestRect = aboveRect;\n    }\n    else if (belowRect && belowRect.top <= y) {\n        closest = below;\n        closestRect = belowRect;\n    }\n    if (!closest)\n        return { node: parent, offset: 0 };\n    let clipX = Math.max(closestRect.left, Math.min(closestRect.right, x));\n    if (closest.nodeType == 3)\n        return domPosInText(closest, clipX, y);\n    if (!closestX && closest.contentEditable == \"true\")\n        return domPosAtCoords(closest, clipX, y);\n    let offset = Array.prototype.indexOf.call(parent.childNodes, closest) +\n        (x >= (closestRect.left + closestRect.right) / 2 ? 1 : 0);\n    return { node: parent, offset };\n}\nfunction domPosInText(node, x, y) {\n    let len = node.nodeValue.length;\n    let closestOffset = -1, closestDY = 1e9, generalSide = 0;\n    for (let i = 0; i < len; i++) {\n        let rects = textRange(node, i, i + 1).getClientRects();\n        for (let j = 0; j < rects.length; j++) {\n            let rect = rects[j];\n            if (rect.top == rect.bottom)\n                continue;\n            if (!generalSide)\n                generalSide = x - rect.left;\n            let dy = (rect.top > y ? rect.top - y : y - rect.bottom) - 1;\n            if (rect.left - 1 <= x && rect.right + 1 >= x && dy < closestDY) {\n                let right = x >= (rect.left + rect.right) / 2, after = right;\n                if (browser.chrome || browser.gecko) {\n                    // Check for RTL on browsers that support getting client\n                    // rects for empty ranges.\n                    let rectBefore = textRange(node, i).getBoundingClientRect();\n                    if (rectBefore.left == rect.right)\n                        after = !right;\n                }\n                if (dy <= 0)\n                    return { node, offset: i + (after ? 1 : 0) };\n                closestOffset = i + (after ? 1 : 0);\n                closestDY = dy;\n            }\n        }\n    }\n    return { node, offset: closestOffset > -1 ? closestOffset : generalSide > 0 ? node.nodeValue.length : 0 };\n}\nfunction posAtCoords(view, { x, y }, precise, bias = -1) {\n    var _a;\n    let content = view.contentDOM.getBoundingClientRect(), docTop = content.top + view.viewState.paddingTop;\n    let block, { docHeight } = view.viewState;\n    let yOffset = Math.max(0, Math.min(y - docTop, docHeight));\n    // Scan for a text block near the queried y position\n    for (let halfLine = view.defaultLineHeight / 2, bounced = false;;) {\n        block = view.elementAtHeight(yOffset);\n        if (block.type == BlockType.Text)\n            break;\n        for (;;) {\n            // Move the y position out of this block\n            yOffset = bias > 0 ? block.bottom + halfLine : block.top - halfLine;\n            if (yOffset >= 0 && yOffset <= docHeight)\n                break;\n            // If the document consists entirely of replaced widgets, we\n            // won't find a text block, so return 0\n            if (bounced)\n                return precise ? null : 0;\n            bounced = true;\n            bias = -bias;\n        }\n    }\n    y = docTop + yOffset;\n    let lineStart = block.from;\n    // If this is outside of the rendered viewport, we can't determine a position\n    if (lineStart < view.viewport.from)\n        return view.viewport.from == 0 ? 0 : precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    if (lineStart > view.viewport.to)\n        return view.viewport.to == view.state.doc.length ? view.state.doc.length :\n            precise ? null : posAtCoordsImprecise(view, content, block, x, y);\n    // Prefer ShadowRootOrDocument.elementFromPoint if present, fall back to document if not\n    let doc = view.dom.ownerDocument;\n    let root = view.root.elementFromPoint ? view.root : doc;\n    let element = root.elementFromPoint(x, y);\n    if (element && !view.contentDOM.contains(element))\n        element = null;\n    // If the element is unexpected, clip x at the sides of the content area and try again\n    if (!element) {\n        x = Math.max(content.left + 1, Math.min(content.right - 1, x));\n        element = root.elementFromPoint(x, y);\n        if (element && !view.contentDOM.contains(element))\n            element = null;\n    }\n    // There's visible editor content under the point, so we can try\n    // using caret(Position|Range)FromPoint as a shortcut\n    let node, offset = -1;\n    if (element && ((_a = view.docView.nearest(element)) === null || _a === void 0 ? void 0 : _a.isEditable) != false) {\n        if (doc.caretPositionFromPoint) {\n            let pos = doc.caretPositionFromPoint(x, y);\n            if (pos)\n                ({ offsetNode: node, offset } = pos);\n        }\n        else if (doc.caretRangeFromPoint) {\n            let range = doc.caretRangeFromPoint(x, y);\n            if (range) {\n                ({ startContainer: node, startOffset: offset } = range);\n                if (browser.safari && isSuspiciousCaretResult(node, offset, x))\n                    node = undefined;\n            }\n        }\n    }\n    // No luck, do our own (potentially expensive) search\n    if (!node || !view.docView.dom.contains(node)) {\n        let line = LineView.find(view.docView, lineStart);\n        if (!line)\n            return yOffset > block.top + block.height / 2 ? block.to : block.from;\n        ({ node, offset } = domPosAtCoords(line.dom, x, y));\n    }\n    return view.docView.posFromDOM(node, offset);\n}\nfunction posAtCoordsImprecise(view, contentRect, block, x, y) {\n    let into = Math.round((x - contentRect.left) * view.defaultCharacterWidth);\n    if (view.lineWrapping && block.height > view.defaultLineHeight * 1.5) {\n        let line = Math.floor((y - block.top) / view.defaultLineHeight);\n        into += line * view.viewState.heightOracle.lineLength;\n    }\n    let content = view.state.sliceDoc(block.from, block.to);\n    return block.from + findColumn(content, into, view.state.tabSize);\n}\n// In case of a high line height, Safari's caretRangeFromPoint treats\n// the space between lines as belonging to the last character of the\n// line before. This is used to detect such a result so that it can be\n// ignored (issue #401).\nfunction isSuspiciousCaretResult(node, offset, x) {\n    let len;\n    if (node.nodeType != 3 || offset != (len = node.nodeValue.length))\n        return false;\n    for (let next = node.nextSibling; next; next = next.nextSibling)\n        if (next.nodeType != 1 || next.nodeName != \"BR\")\n            return false;\n    return textRange(node, len - 1, len).getBoundingClientRect().left > x;\n}\nfunction moveToLineBoundary(view, start, forward, includeWrap) {\n    let line = view.state.doc.lineAt(start.head);\n    let coords = !includeWrap || !view.lineWrapping ? null\n        : view.coordsAtPos(start.assoc < 0 && start.head > line.from ? start.head - 1 : start.head);\n    if (coords) {\n        let editorRect = view.dom.getBoundingClientRect();\n        let pos = view.posAtCoords({ x: forward == (view.textDirection == Direction.LTR) ? editorRect.right - 1 : editorRect.left + 1,\n            y: (coords.top + coords.bottom) / 2 });\n        if (pos != null)\n            return EditorSelection.cursor(pos, forward ? -1 : 1);\n    }\n    let lineView = LineView.find(view.docView, start.head);\n    let end = lineView ? (forward ? lineView.posAtEnd : lineView.posAtStart) : (forward ? line.to : line.from);\n    return EditorSelection.cursor(end, forward ? -1 : 1);\n}\nfunction moveByChar(view, start, forward, by) {\n    let line = view.state.doc.lineAt(start.head), spans = view.bidiSpans(line);\n    for (let cur = start, check = null;;) {\n        let next = moveVisually(line, spans, view.textDirection, cur, forward), char = movedOver;\n        if (!next) {\n            if (line.number == (forward ? view.state.doc.lines : 1))\n                return cur;\n            char = \"\\n\";\n            line = view.state.doc.line(line.number + (forward ? 1 : -1));\n            spans = view.bidiSpans(line);\n            next = EditorSelection.cursor(forward ? line.from : line.to);\n        }\n        if (!check) {\n            if (!by)\n                return next;\n            check = by(char);\n        }\n        else if (!check(char)) {\n            return cur;\n        }\n        cur = next;\n    }\n}\nfunction byGroup(view, pos, start) {\n    let categorize = view.state.charCategorizer(pos);\n    let cat = categorize(start);\n    return (next) => {\n        let nextCat = categorize(next);\n        if (cat == CharCategory.Space)\n            cat = nextCat;\n        return cat == nextCat;\n    };\n}\nfunction moveVertically(view, start, forward, distance) {\n    let startPos = start.head, dir = forward ? 1 : -1;\n    if (startPos == (forward ? view.state.doc.length : 0))\n        return EditorSelection.cursor(startPos);\n    let goal = start.goalColumn, startY;\n    let rect = view.contentDOM.getBoundingClientRect();\n    let startCoords = view.coordsAtPos(startPos), docTop = view.documentTop;\n    if (startCoords) {\n        if (goal == null)\n            goal = startCoords.left - rect.left;\n        startY = dir < 0 ? startCoords.top : startCoords.bottom;\n    }\n    else {\n        let line = view.viewState.lineBlockAt(startPos - docTop);\n        if (goal == null)\n            goal = Math.min(rect.right - rect.left, view.defaultCharacterWidth * (startPos - line.from));\n        startY = (dir < 0 ? line.top : line.bottom) + docTop;\n    }\n    let resolvedGoal = rect.left + goal;\n    let dist = distance !== null && distance !== void 0 ? distance : (view.defaultLineHeight >> 1);\n    for (let extra = 0;; extra += 10) {\n        let curY = startY + (dist + extra) * dir;\n        let pos = posAtCoords(view, { x: resolvedGoal, y: curY }, false, dir);\n        if (curY < rect.top || curY > rect.bottom || (dir < 0 ? pos < startPos : pos > startPos))\n            return EditorSelection.cursor(pos, undefined, undefined, goal);\n    }\n}\nfunction skipAtoms(view, oldPos, pos) {\n    let atoms = view.pluginField(PluginField.atomicRanges);\n    for (;;) {\n        let moved = false;\n        for (let set of atoms) {\n            set.between(pos.from - 1, pos.from + 1, (from, to, value) => {\n                if (pos.from > from && pos.from < to) {\n                    pos = oldPos.from > pos.from ? EditorSelection.cursor(from, 1) : EditorSelection.cursor(to, -1);\n                    moved = true;\n                }\n            });\n        }\n        if (!moved)\n            return pos;\n    }\n}\n\n// This will also be where dragging info and such goes\nclass InputState {\n    constructor(view) {\n        this.lastKeyCode = 0;\n        this.lastKeyTime = 0;\n        // On iOS, some keys need to have their default behavior happen\n        // (after which we retroactively handle them and reset the DOM) to\n        // avoid messing up the virtual keyboard state.\n        this.pendingIOSKey = undefined;\n        this.lastSelectionOrigin = null;\n        this.lastSelectionTime = 0;\n        this.lastEscPress = 0;\n        this.lastContextMenu = 0;\n        this.scrollHandlers = [];\n        this.registeredEvents = [];\n        this.customHandlers = [];\n        // -1 means not in a composition. Otherwise, this counts the number\n        // of changes made during the composition. The count is used to\n        // avoid treating the start state of the composition, before any\n        // changes have been made, as part of the composition.\n        this.composing = -1;\n        // Tracks whether the next change should be marked as starting the\n        // composition (null means no composition, true means next is the\n        // first, false means first has already been marked for this\n        // composition)\n        this.compositionFirstChange = null;\n        this.compositionEndedAt = 0;\n        this.rapidCompositionStart = false;\n        this.mouseSelection = null;\n        for (let type in handlers) {\n            let handler = handlers[type];\n            view.contentDOM.addEventListener(type, (event) => {\n                if (type == \"keydown\" && this.keydown(view, event))\n                    return;\n                if (!eventBelongsToEditor(view, event) || this.ignoreDuringComposition(event))\n                    return;\n                if (this.mustFlushObserver(event))\n                    view.observer.forceFlush();\n                if (this.runCustomHandlers(type, view, event))\n                    event.preventDefault();\n                else\n                    handler(view, event);\n            });\n            this.registeredEvents.push(type);\n        }\n        this.notifiedFocused = view.hasFocus;\n        this.ensureHandlers(view);\n        // On Safari adding an input event handler somehow prevents an\n        // issue where the composition vanishes when you press enter.\n        if (browser.safari)\n            view.contentDOM.addEventListener(\"input\", () => null);\n    }\n    setSelectionOrigin(origin) {\n        this.lastSelectionOrigin = origin;\n        this.lastSelectionTime = Date.now();\n    }\n    ensureHandlers(view) {\n        let handlers = this.customHandlers = view.pluginField(domEventHandlers);\n        for (let set of handlers) {\n            for (let type in set.handlers)\n                if (this.registeredEvents.indexOf(type) < 0 && type != \"scroll\") {\n                    this.registeredEvents.push(type);\n                    view.contentDOM.addEventListener(type, (event) => {\n                        if (!eventBelongsToEditor(view, event))\n                            return;\n                        if (this.runCustomHandlers(type, view, event))\n                            event.preventDefault();\n                    });\n                }\n        }\n    }\n    runCustomHandlers(type, view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers[type];\n            if (handler) {\n                try {\n                    if (handler.call(set.plugin, event, view) || event.defaultPrevented)\n                        return true;\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n        return false;\n    }\n    runScrollHandlers(view, event) {\n        for (let set of this.customHandlers) {\n            let handler = set.handlers.scroll;\n            if (handler) {\n                try {\n                    handler.call(set.plugin, event, view);\n                }\n                catch (e) {\n                    logException(view.state, e);\n                }\n            }\n        }\n    }\n    keydown(view, event) {\n        // Must always run, even if a custom handler handled the event\n        this.lastKeyCode = event.keyCode;\n        this.lastKeyTime = Date.now();\n        if (this.screenKeyEvent(view, event))\n            return true;\n        // Chrome for Android usually doesn't fire proper key events, but\n        // occasionally does, usually surrounded by a bunch of complicated\n        // composition changes. When an enter or backspace key event is\n        // seen, hold off on handling DOM events for a bit, and then\n        // dispatch it.\n        if (browser.android && browser.chrome && !event.synthetic &&\n            (event.keyCode == 13 || event.keyCode == 8)) {\n            view.observer.delayAndroidKey(event.key, event.keyCode);\n            return true;\n        }\n        // Prevent the default behavior of Enter on iOS makes the\n        // virtual keyboard get stuck in the wrong (lowercase)\n        // state. So we let it go through, and then, in\n        // applyDOMChange, notify key handlers of it and reset to\n        // the state they produce.\n        let pending;\n        if (browser.ios && (pending = PendingKeys.find(key => key.keyCode == event.keyCode)) &&\n            !(event.ctrlKey || event.altKey || event.metaKey) && !event.synthetic) {\n            this.pendingIOSKey = pending;\n            setTimeout(() => this.flushIOSKey(view), 250);\n            return true;\n        }\n        return false;\n    }\n    flushIOSKey(view) {\n        let key = this.pendingIOSKey;\n        if (!key)\n            return false;\n        this.pendingIOSKey = undefined;\n        return dispatchKey(view.contentDOM, key.key, key.keyCode);\n    }\n    ignoreDuringComposition(event) {\n        if (!/^key/.test(event.type))\n            return false;\n        if (this.composing > 0)\n            return true;\n        // See https://www.stum.de/2016/06/24/handling-ime-events-in-javascript/.\n        // On some input method editors (IMEs), the Enter key is used to\n        // confirm character selection. On Safari, when Enter is pressed,\n        // compositionend and keydown events are sometimes emitted in the\n        // wrong order. The key event should still be ignored, even when\n        // it happens after the compositionend event.\n        if (browser.safari && Date.now() - this.compositionEndedAt < 500) {\n            this.compositionEndedAt = 0;\n            return true;\n        }\n        return false;\n    }\n    screenKeyEvent(view, event) {\n        let protectedTab = event.keyCode == 9 && Date.now() < this.lastEscPress + 2000;\n        if (event.keyCode == 27)\n            this.lastEscPress = Date.now();\n        else if (modifierCodes.indexOf(event.keyCode) < 0)\n            this.lastEscPress = 0;\n        return protectedTab;\n    }\n    mustFlushObserver(event) {\n        return (event.type == \"keydown\" && event.keyCode != 229) ||\n            event.type == \"compositionend\" && !browser.ios;\n    }\n    startMouseSelection(mouseSelection) {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n        this.mouseSelection = mouseSelection;\n    }\n    update(update) {\n        if (this.mouseSelection)\n            this.mouseSelection.update(update);\n        if (update.transactions.length)\n            this.lastKeyCode = this.lastSelectionTime = 0;\n    }\n    destroy() {\n        if (this.mouseSelection)\n            this.mouseSelection.destroy();\n    }\n}\nconst PendingKeys = [\n    { key: \"Backspace\", keyCode: 8, inputType: \"deleteContentBackward\" },\n    { key: \"Enter\", keyCode: 13, inputType: \"insertParagraph\" },\n    { key: \"Delete\", keyCode: 46, inputType: \"deleteContentForward\" }\n];\n// Key codes for modifier keys\nconst modifierCodes = [16, 17, 18, 20, 91, 92, 224, 225];\nclass MouseSelection {\n    constructor(view, startEvent, style, mustSelect) {\n        this.view = view;\n        this.style = style;\n        this.mustSelect = mustSelect;\n        this.lastEvent = startEvent;\n        let doc = view.contentDOM.ownerDocument;\n        doc.addEventListener(\"mousemove\", this.move = this.move.bind(this));\n        doc.addEventListener(\"mouseup\", this.up = this.up.bind(this));\n        this.extend = startEvent.shiftKey;\n        this.multiple = view.state.facet(EditorState.allowMultipleSelections) && addsSelectionRange(view, startEvent);\n        this.dragMove = dragMovesSelection(view, startEvent);\n        this.dragging = isInPrimarySelection(view, startEvent) && getClickType(startEvent) == 1 ? null : false;\n        // When clicking outside of the selection, immediately apply the\n        // effect of starting the selection\n        if (this.dragging === false) {\n            startEvent.preventDefault();\n            this.select(startEvent);\n        }\n    }\n    move(event) {\n        if (event.buttons == 0)\n            return this.destroy();\n        if (this.dragging !== false)\n            return;\n        this.select(this.lastEvent = event);\n    }\n    up(event) {\n        if (this.dragging == null)\n            this.select(this.lastEvent);\n        if (!this.dragging)\n            event.preventDefault();\n        this.destroy();\n    }\n    destroy() {\n        let doc = this.view.contentDOM.ownerDocument;\n        doc.removeEventListener(\"mousemove\", this.move);\n        doc.removeEventListener(\"mouseup\", this.up);\n        this.view.inputState.mouseSelection = null;\n    }\n    select(event) {\n        let selection = this.style.get(event, this.extend, this.multiple);\n        if (this.mustSelect || !selection.eq(this.view.state.selection) ||\n            selection.main.assoc != this.view.state.selection.main.assoc)\n            this.view.dispatch({\n                selection,\n                userEvent: \"select.pointer\",\n                scrollIntoView: true\n            });\n        this.mustSelect = false;\n    }\n    update(update) {\n        if (update.docChanged && this.dragging)\n            this.dragging = this.dragging.map(update.changes);\n        if (this.style.update(update))\n            setTimeout(() => this.select(this.lastEvent), 20);\n    }\n}\nfunction addsSelectionRange(view, event) {\n    let facet = view.state.facet(clickAddsSelectionRange);\n    return facet.length ? facet[0](event) : browser.mac ? event.metaKey : event.ctrlKey;\n}\nfunction dragMovesSelection(view, event) {\n    let facet = view.state.facet(dragMovesSelection$1);\n    return facet.length ? facet[0](event) : browser.mac ? !event.altKey : !event.ctrlKey;\n}\nfunction isInPrimarySelection(view, event) {\n    let { main } = view.state.selection;\n    if (main.empty)\n        return false;\n    // On boundary clicks, check whether the coordinates are inside the\n    // selection's client rectangles\n    let sel = getSelection(view.root);\n    if (sel.rangeCount == 0)\n        return true;\n    let rects = sel.getRangeAt(0).getClientRects();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        if (rect.left <= event.clientX && rect.right >= event.clientX &&\n            rect.top <= event.clientY && rect.bottom >= event.clientY)\n            return true;\n    }\n    return false;\n}\nfunction eventBelongsToEditor(view, event) {\n    if (!event.bubbles)\n        return true;\n    if (event.defaultPrevented)\n        return false;\n    for (let node = event.target, cView; node != view.contentDOM; node = node.parentNode)\n        if (!node || node.nodeType == 11 || ((cView = ContentView.get(node)) && cView.ignoreEvent(event)))\n            return false;\n    return true;\n}\nconst handlers = /*@__PURE__*/Object.create(null);\n// This is very crude, but unfortunately both these browsers _pretend_\n// that they have a clipboard API—all the objects and methods are\n// there, they just don't work, and they are hard to test.\nconst brokenClipboardAPI = (browser.ie && browser.ie_version < 15) ||\n    (browser.ios && browser.webkit_version < 604);\nfunction capturePaste(view) {\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.focus();\n    setTimeout(() => {\n        view.focus();\n        target.remove();\n        doPaste(view, target.value);\n    }, 50);\n}\nfunction doPaste(view, input) {\n    let { state } = view, changes, i = 1, text = state.toText(input);\n    let byLine = text.lines == state.selection.ranges.length;\n    let linewise = lastLinewiseCopy != null && state.selection.ranges.every(r => r.empty) && lastLinewiseCopy == text.toString();\n    if (linewise) {\n        let lastLine = -1;\n        changes = state.changeByRange(range => {\n            let line = state.doc.lineAt(range.from);\n            if (line.from == lastLine)\n                return { range };\n            lastLine = line.from;\n            let insert = state.toText((byLine ? text.line(i++).text : input) + state.lineBreak);\n            return { changes: { from: line.from, insert },\n                range: EditorSelection.cursor(range.from + insert.length) };\n        });\n    }\n    else if (byLine) {\n        changes = state.changeByRange(range => {\n            let line = text.line(i++);\n            return { changes: { from: range.from, to: range.to, insert: line.text },\n                range: EditorSelection.cursor(range.from + line.length) };\n        });\n    }\n    else {\n        changes = state.replaceSelection(text);\n    }\n    view.dispatch(changes, {\n        userEvent: \"input.paste\",\n        scrollIntoView: true\n    });\n}\nhandlers.keydown = (view, event) => {\n    view.inputState.setSelectionOrigin(\"select\");\n};\nlet lastTouch = 0;\nhandlers.touchstart = (view, e) => {\n    lastTouch = Date.now();\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.touchmove = view => {\n    view.inputState.setSelectionOrigin(\"select.pointer\");\n};\nhandlers.mousedown = (view, event) => {\n    view.observer.flush();\n    if (lastTouch > Date.now() - 2000 && getClickType(event) == 1)\n        return; // Ignore touch interaction\n    let style = null;\n    for (let makeStyle of view.state.facet(mouseSelectionStyle)) {\n        style = makeStyle(view, event);\n        if (style)\n            break;\n    }\n    if (!style && event.button == 0)\n        style = basicMouseSelection(view, event);\n    if (style) {\n        let mustFocus = view.root.activeElement != view.contentDOM;\n        if (mustFocus)\n            view.observer.ignore(() => focusPreventScroll(view.contentDOM));\n        view.inputState.startMouseSelection(new MouseSelection(view, event, style, mustFocus));\n    }\n};\nfunction rangeForClick(view, pos, bias, type) {\n    if (type == 1) { // Single click\n        return EditorSelection.cursor(pos, bias);\n    }\n    else if (type == 2) { // Double click\n        return groupAt(view.state, pos, bias);\n    }\n    else { // Triple click\n        let visual = LineView.find(view.docView, pos), line = view.state.doc.lineAt(visual ? visual.posAtEnd : pos);\n        let from = visual ? visual.posAtStart : line.from, to = visual ? visual.posAtEnd : line.to;\n        if (to < view.state.doc.length && to == line.to)\n            to++;\n        return EditorSelection.range(from, to);\n    }\n}\nlet insideY = (y, rect) => y >= rect.top && y <= rect.bottom;\nlet inside = (x, y, rect) => insideY(y, rect) && x >= rect.left && x <= rect.right;\n// Try to determine, for the given coordinates, associated with the\n// given position, whether they are related to the element before or\n// the element after the position.\nfunction findPositionSide(view, pos, x, y) {\n    let line = LineView.find(view.docView, pos);\n    if (!line)\n        return 1;\n    let off = pos - line.posAtStart;\n    // Line boundaries point into the line\n    if (off == 0)\n        return 1;\n    if (off == line.length)\n        return -1;\n    // Positions on top of an element point at that element\n    let before = line.coordsAt(off, -1);\n    if (before && inside(x, y, before))\n        return -1;\n    let after = line.coordsAt(off, 1);\n    if (after && inside(x, y, after))\n        return 1;\n    // This is probably a line wrap point. Pick before if the point is\n    // beside it.\n    return before && insideY(y, before) ? -1 : 1;\n}\nfunction queryPos(view, event) {\n    let pos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    return { pos, bias: findPositionSide(view, pos, event.clientX, event.clientY) };\n}\nconst BadMouseDetail = browser.ie && browser.ie_version <= 11;\nlet lastMouseDown = null, lastMouseDownCount = 0, lastMouseDownTime = 0;\nfunction getClickType(event) {\n    if (!BadMouseDetail)\n        return event.detail;\n    let last = lastMouseDown, lastTime = lastMouseDownTime;\n    lastMouseDown = event;\n    lastMouseDownTime = Date.now();\n    return lastMouseDownCount = !last || (lastTime > Date.now() - 400 && Math.abs(last.clientX - event.clientX) < 2 &&\n        Math.abs(last.clientY - event.clientY) < 2) ? (lastMouseDownCount + 1) % 3 : 1;\n}\nfunction basicMouseSelection(view, event) {\n    let start = queryPos(view, event), type = getClickType(event);\n    let startSel = view.state.selection;\n    let last = start, lastEvent = event;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                if (start)\n                    start.pos = update.changes.mapPos(start.pos);\n                startSel = startSel.map(update.changes);\n                lastEvent = null;\n            }\n        },\n        get(event, extend, multiple) {\n            let cur;\n            if (lastEvent && event.clientX == lastEvent.clientX && event.clientY == lastEvent.clientY)\n                cur = last;\n            else {\n                cur = last = queryPos(view, event);\n                lastEvent = event;\n            }\n            if (!cur || !start)\n                return startSel;\n            let range = rangeForClick(view, cur.pos, cur.bias, type);\n            if (start.pos != cur.pos && !extend) {\n                let startRange = rangeForClick(view, start.pos, start.bias, type);\n                let from = Math.min(startRange.from, range.from), to = Math.max(startRange.to, range.to);\n                range = from < range.from ? EditorSelection.range(from, to) : EditorSelection.range(to, from);\n            }\n            if (extend)\n                return startSel.replaceRange(startSel.main.extend(range.from, range.to));\n            else if (multiple)\n                return startSel.addRange(range);\n            else\n                return EditorSelection.create([range]);\n        }\n    };\n}\nhandlers.dragstart = (view, event) => {\n    let { selection: { main } } = view.state;\n    let { mouseSelection } = view.inputState;\n    if (mouseSelection)\n        mouseSelection.dragging = main;\n    if (event.dataTransfer) {\n        event.dataTransfer.setData(\"Text\", view.state.sliceDoc(main.from, main.to));\n        event.dataTransfer.effectAllowed = \"copyMove\";\n    }\n};\nfunction dropText(view, event, text, direct) {\n    if (!text)\n        return;\n    let dropPos = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    event.preventDefault();\n    let { mouseSelection } = view.inputState;\n    let del = direct && mouseSelection && mouseSelection.dragging && mouseSelection.dragMove ?\n        { from: mouseSelection.dragging.from, to: mouseSelection.dragging.to } : null;\n    let ins = { from: dropPos, insert: text };\n    let changes = view.state.changes(del ? [del, ins] : ins);\n    view.focus();\n    view.dispatch({\n        changes,\n        selection: { anchor: changes.mapPos(dropPos, -1), head: changes.mapPos(dropPos, 1) },\n        userEvent: del ? \"move.drop\" : \"input.drop\"\n    });\n}\nhandlers.drop = (view, event) => {\n    if (!event.dataTransfer)\n        return;\n    if (view.state.readOnly)\n        return event.preventDefault();\n    let files = event.dataTransfer.files;\n    if (files && files.length) { // For a file drop, read the file's text.\n        event.preventDefault();\n        let text = Array(files.length), read = 0;\n        let finishFile = () => {\n            if (++read == files.length)\n                dropText(view, event, text.filter(s => s != null).join(view.state.lineBreak), false);\n        };\n        for (let i = 0; i < files.length; i++) {\n            let reader = new FileReader;\n            reader.onerror = finishFile;\n            reader.onload = () => {\n                if (!/[\\x00-\\x08\\x0e-\\x1f]{2}/.test(reader.result))\n                    text[i] = reader.result;\n                finishFile();\n            };\n            reader.readAsText(files[i]);\n        }\n    }\n    else {\n        dropText(view, event, event.dataTransfer.getData(\"Text\"), true);\n    }\n};\nhandlers.paste = (view, event) => {\n    if (view.state.readOnly)\n        return event.preventDefault();\n    view.observer.flush();\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        doPaste(view, data.getData(\"text/plain\"));\n        event.preventDefault();\n    }\n    else {\n        capturePaste(view);\n    }\n};\nfunction captureCopy(view, text) {\n    // The extra wrapper is somehow necessary on IE/Edge to prevent the\n    // content from being mangled when it is put onto the clipboard\n    let parent = view.dom.parentNode;\n    if (!parent)\n        return;\n    let target = parent.appendChild(document.createElement(\"textarea\"));\n    target.style.cssText = \"position: fixed; left: -10000px; top: 10px\";\n    target.value = text;\n    target.focus();\n    target.selectionEnd = text.length;\n    target.selectionStart = 0;\n    setTimeout(() => {\n        target.remove();\n        view.focus();\n    }, 50);\n}\nfunction copiedRange(state) {\n    let content = [], ranges = [], linewise = false;\n    for (let range of state.selection.ranges)\n        if (!range.empty) {\n            content.push(state.sliceDoc(range.from, range.to));\n            ranges.push(range);\n        }\n    if (!content.length) {\n        // Nothing selected, do a line-wise copy\n        let upto = -1;\n        for (let { from } of state.selection.ranges) {\n            let line = state.doc.lineAt(from);\n            if (line.number > upto) {\n                content.push(line.text);\n                ranges.push({ from: line.from, to: Math.min(state.doc.length, line.to + 1) });\n            }\n            upto = line.number;\n        }\n        linewise = true;\n    }\n    return { text: content.join(state.lineBreak), ranges, linewise };\n}\nlet lastLinewiseCopy = null;\nhandlers.copy = handlers.cut = (view, event) => {\n    let { text, ranges, linewise } = copiedRange(view.state);\n    if (!text && !linewise)\n        return;\n    lastLinewiseCopy = linewise ? text : null;\n    let data = brokenClipboardAPI ? null : event.clipboardData;\n    if (data) {\n        event.preventDefault();\n        data.clearData();\n        data.setData(\"text/plain\", text);\n    }\n    else {\n        captureCopy(view, text);\n    }\n    if (event.type == \"cut\" && !view.state.readOnly)\n        view.dispatch({\n            changes: ranges,\n            scrollIntoView: true,\n            userEvent: \"delete.cut\"\n        });\n};\nhandlers.focus = handlers.blur = view => {\n    setTimeout(() => {\n        if (view.hasFocus != view.inputState.notifiedFocused)\n            view.update([]);\n    }, 10);\n};\nhandlers.beforeprint = view => {\n    view.viewState.printing = true;\n    view.requestMeasure();\n    setTimeout(() => {\n        view.viewState.printing = false;\n        view.requestMeasure();\n    }, 2000);\n};\nfunction forceClearComposition(view, rapid) {\n    if (view.docView.compositionDeco.size) {\n        view.inputState.rapidCompositionStart = rapid;\n        try {\n            view.update([]);\n        }\n        finally {\n            view.inputState.rapidCompositionStart = false;\n        }\n    }\n}\nhandlers.compositionstart = handlers.compositionupdate = view => {\n    if (view.inputState.compositionFirstChange == null)\n        view.inputState.compositionFirstChange = true;\n    if (view.inputState.composing < 0) {\n        // FIXME possibly set a timeout to clear it again on Android\n        view.inputState.composing = 0;\n        if (view.docView.compositionDeco.size) {\n            view.observer.flush();\n            forceClearComposition(view, true);\n        }\n    }\n};\nhandlers.compositionend = view => {\n    view.inputState.composing = -1;\n    view.inputState.compositionEndedAt = Date.now();\n    view.inputState.compositionFirstChange = null;\n    setTimeout(() => {\n        if (view.inputState.composing < 0)\n            forceClearComposition(view, false);\n    }, 50);\n};\nhandlers.contextmenu = view => {\n    view.inputState.lastContextMenu = Date.now();\n};\nhandlers.beforeinput = (view, event) => {\n    var _a;\n    // Because Chrome Android doesn't fire useful key events, use\n    // beforeinput to detect backspace (and possibly enter and delete,\n    // but those usually don't even seem to fire beforeinput events at\n    // the moment) and fake a key event for it.\n    //\n    // (preventDefault on beforeinput, though supported in the spec,\n    // seems to do nothing at all on Chrome).\n    let pending;\n    if (browser.chrome && browser.android && (pending = PendingKeys.find(key => key.inputType == event.inputType))) {\n        view.observer.delayAndroidKey(pending.key, pending.keyCode);\n        if (pending.key == \"Backspace\" || pending.key == \"Delete\") {\n            let startViewHeight = ((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0;\n            setTimeout(() => {\n                var _a;\n                // Backspacing near uneditable nodes on Chrome Android sometimes\n                // closes the virtual keyboard. This tries to crudely detect\n                // that and refocus to get it back.\n                if ((((_a = window.visualViewport) === null || _a === void 0 ? void 0 : _a.height) || 0) > startViewHeight + 10 && view.hasFocus) {\n                    view.contentDOM.blur();\n                    view.focus();\n                }\n            }, 100);\n        }\n    }\n};\n\nconst wrappingWhiteSpace = [\"pre-wrap\", \"normal\", \"pre-line\", \"break-spaces\"];\nclass HeightOracle {\n    constructor() {\n        this.doc = Text.empty;\n        this.lineWrapping = false;\n        this.direction = Direction.LTR;\n        this.heightSamples = {};\n        this.lineHeight = 14;\n        this.charWidth = 7;\n        this.lineLength = 30;\n        // Used to track, during updateHeight, if any actual heights changed\n        this.heightChanged = false;\n    }\n    heightForGap(from, to) {\n        let lines = this.doc.lineAt(to).number - this.doc.lineAt(from).number + 1;\n        if (this.lineWrapping)\n            lines += Math.ceil(((to - from) - (lines * this.lineLength * 0.5)) / this.lineLength);\n        return this.lineHeight * lines;\n    }\n    heightForLine(length) {\n        if (!this.lineWrapping)\n            return this.lineHeight;\n        let lines = 1 + Math.max(0, Math.ceil((length - this.lineLength) / (this.lineLength - 5)));\n        return lines * this.lineHeight;\n    }\n    setDoc(doc) { this.doc = doc; return this; }\n    mustRefreshForStyle(whiteSpace, direction) {\n        return (wrappingWhiteSpace.indexOf(whiteSpace) > -1) != this.lineWrapping || this.direction != direction;\n    }\n    mustRefreshForHeights(lineHeights) {\n        let newHeight = false;\n        for (let i = 0; i < lineHeights.length; i++) {\n            let h = lineHeights[i];\n            if (h < 0) {\n                i++;\n            }\n            else if (!this.heightSamples[Math.floor(h * 10)]) { // Round to .1 pixels\n                newHeight = true;\n                this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return newHeight;\n    }\n    refresh(whiteSpace, direction, lineHeight, charWidth, lineLength, knownHeights) {\n        let lineWrapping = wrappingWhiteSpace.indexOf(whiteSpace) > -1;\n        let changed = Math.round(lineHeight) != Math.round(this.lineHeight) ||\n            this.lineWrapping != lineWrapping ||\n            this.direction != direction;\n        this.lineWrapping = lineWrapping;\n        this.direction = direction;\n        this.lineHeight = lineHeight;\n        this.charWidth = charWidth;\n        this.lineLength = lineLength;\n        if (changed) {\n            this.heightSamples = {};\n            for (let i = 0; i < knownHeights.length; i++) {\n                let h = knownHeights[i];\n                if (h < 0)\n                    i++;\n                else\n                    this.heightSamples[Math.floor(h * 10)] = true;\n            }\n        }\n        return changed;\n    }\n}\n// This object is used by `updateHeight` to make DOM measurements\n// arrive at the right nides. The `heights` array is a sequence of\n// block heights, starting from position `from`.\nclass MeasuredHeights {\n    constructor(from, heights) {\n        this.from = from;\n        this.heights = heights;\n        this.index = 0;\n    }\n    get more() { return this.index < this.heights.length; }\n}\n/**\nRecord used to represent information about a block-level element\nin the editor view.\n*/\nclass BlockInfo {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The start of the element in the document.\n    */\n    from, \n    /**\n    The length of the element.\n    */\n    length, \n    /**\n    The top position of the element (relative to the top of the\n    document).\n    */\n    top, \n    /**\n    Its height.\n    */\n    height, \n    /**\n    The type of element this is. When querying lines, this may be\n    an array of all the blocks that make up the line.\n    */\n    type) {\n        this.from = from;\n        this.length = length;\n        this.top = top;\n        this.height = height;\n        this.type = type;\n    }\n    /**\n    The end of the element as a document position.\n    */\n    get to() { return this.from + this.length; }\n    /**\n    The bottom position of the element.\n    */\n    get bottom() { return this.top + this.height; }\n    /**\n    @internal\n    */\n    join(other) {\n        let detail = (Array.isArray(this.type) ? this.type : [this])\n            .concat(Array.isArray(other.type) ? other.type : [other]);\n        return new BlockInfo(this.from, this.length + other.length, this.top, this.height + other.height, detail);\n    }\n    /**\n    FIXME remove on next breaking release @internal\n    */\n    moveY(offset) {\n        return !offset ? this : new BlockInfo(this.from, this.length, this.top + offset, this.height, Array.isArray(this.type) ? this.type.map(b => b.moveY(offset)) : this.type);\n    }\n}\nvar QueryType = /*@__PURE__*/(function (QueryType) {\n    QueryType[QueryType[\"ByPos\"] = 0] = \"ByPos\";\n    QueryType[QueryType[\"ByHeight\"] = 1] = \"ByHeight\";\n    QueryType[QueryType[\"ByPosNoHeight\"] = 2] = \"ByPosNoHeight\";\nreturn QueryType})(QueryType || (QueryType = {}));\nconst Epsilon = 1e-3;\nclass HeightMap {\n    constructor(length, // The number of characters covered\n    height, // Height of this part of the document\n    flags = 2 /* Outdated */) {\n        this.length = length;\n        this.height = height;\n        this.flags = flags;\n    }\n    get outdated() { return (this.flags & 2 /* Outdated */) > 0; }\n    set outdated(value) { this.flags = (value ? 2 /* Outdated */ : 0) | (this.flags & ~2 /* Outdated */); }\n    setHeight(oracle, height) {\n        if (this.height != height) {\n            if (Math.abs(this.height - height) > Epsilon)\n                oracle.heightChanged = true;\n            this.height = height;\n        }\n    }\n    // Base case is to replace a leaf node, which simply builds a tree\n    // from the new nodes and returns that (HeightMapBranch and\n    // HeightMapGap override this to actually use from/to)\n    replace(_from, _to, nodes) {\n        return HeightMap.of(nodes);\n    }\n    // Again, these are base cases, and are overridden for branch and gap nodes.\n    decomposeLeft(_to, result) { result.push(this); }\n    decomposeRight(_from, result) { result.push(this); }\n    applyChanges(decorations, oldDoc, oracle, changes) {\n        let me = this;\n        for (let i = changes.length - 1; i >= 0; i--) {\n            let { fromA, toA, fromB, toB } = changes[i];\n            let start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            let end = start.to >= toA ? start : me.lineAt(toA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            toB += end.to - toA;\n            toA = end.to;\n            while (i > 0 && start.from <= changes[i - 1].toA) {\n                fromA = changes[i - 1].fromA;\n                fromB = changes[i - 1].fromB;\n                i--;\n                if (fromA < start.from)\n                    start = me.lineAt(fromA, QueryType.ByPosNoHeight, oldDoc, 0, 0);\n            }\n            fromB += start.from - fromA;\n            fromA = start.from;\n            let nodes = NodeBuilder.build(oracle, decorations, fromB, toB);\n            me = me.replace(fromA, toA, nodes);\n        }\n        return me.updateHeight(oracle, 0);\n    }\n    static empty() { return new HeightMapText(0, 0); }\n    // nodes uses null values to indicate the position of line breaks.\n    // There are never line breaks at the start or end of the array, or\n    // two line breaks next to each other, and the array isn't allowed\n    // to be empty (same restrictions as return value from the builder).\n    static of(nodes) {\n        if (nodes.length == 1)\n            return nodes[0];\n        let i = 0, j = nodes.length, before = 0, after = 0;\n        for (;;) {\n            if (i == j) {\n                if (before > after * 2) {\n                    let split = nodes[i - 1];\n                    if (split.break)\n                        nodes.splice(--i, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(--i, 1, split.left, split.right);\n                    j += 1 + split.break;\n                    before -= split.size;\n                }\n                else if (after > before * 2) {\n                    let split = nodes[j];\n                    if (split.break)\n                        nodes.splice(j, 1, split.left, null, split.right);\n                    else\n                        nodes.splice(j, 1, split.left, split.right);\n                    j += 2 + split.break;\n                    after -= split.size;\n                }\n                else {\n                    break;\n                }\n            }\n            else if (before < after) {\n                let next = nodes[i++];\n                if (next)\n                    before += next.size;\n            }\n            else {\n                let next = nodes[--j];\n                if (next)\n                    after += next.size;\n            }\n        }\n        let brk = 0;\n        if (nodes[i - 1] == null) {\n            brk = 1;\n            i--;\n        }\n        else if (nodes[i] == null) {\n            brk = 1;\n            j++;\n        }\n        return new HeightMapBranch(HeightMap.of(nodes.slice(0, i)), brk, HeightMap.of(nodes.slice(j)));\n    }\n}\nHeightMap.prototype.size = 1;\nclass HeightMapBlock extends HeightMap {\n    constructor(length, height, type) {\n        super(length, height);\n        this.type = type;\n    }\n    blockAt(_height, _doc, top, offset) {\n        return new BlockInfo(offset, this.length, top, this.height, this.type);\n    }\n    lineAt(_value, _type, doc, top, offset) {\n        return this.blockAt(0, doc, top, offset);\n    }\n    forEachLine(_from, _to, doc, top, offset, f) {\n        f(this.blockAt(0, doc, top, offset));\n    }\n    updateHeight(oracle, offset = 0, _force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        this.outdated = false;\n        return this;\n    }\n    toString() { return `block(${this.length})`; }\n}\nclass HeightMapText extends HeightMapBlock {\n    constructor(length, height) {\n        super(length, height, BlockType.Text);\n        this.collapsed = 0; // Amount of collapsed content in the line\n        this.widgetHeight = 0; // Maximum inline widget height\n    }\n    replace(_from, _to, nodes) {\n        let node = nodes[0];\n        if (nodes.length == 1 && (node instanceof HeightMapText || node instanceof HeightMapGap && (node.flags & 4 /* SingleLine */)) &&\n            Math.abs(this.length - node.length) < 10) {\n            if (node instanceof HeightMapGap)\n                node = new HeightMapText(node.length, this.height);\n            else\n                node.height = this.height;\n            if (!this.outdated)\n                node.outdated = false;\n            return node;\n        }\n        else {\n            return HeightMap.of(nodes);\n        }\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        if (measured && measured.from <= offset && measured.more)\n            this.setHeight(oracle, measured.heights[measured.index++]);\n        else if (force || this.outdated)\n            this.setHeight(oracle, Math.max(this.widgetHeight, oracle.heightForLine(this.length - this.collapsed)));\n        this.outdated = false;\n        return this;\n    }\n    toString() {\n        return `line(${this.length}${this.collapsed ? -this.collapsed : \"\"}${this.widgetHeight ? \":\" + this.widgetHeight : \"\"})`;\n    }\n}\nclass HeightMapGap extends HeightMap {\n    constructor(length) { super(length, 0); }\n    lines(doc, offset) {\n        let firstLine = doc.lineAt(offset).number, lastLine = doc.lineAt(offset + this.length).number;\n        return { firstLine, lastLine, lineHeight: this.height / (lastLine - firstLine + 1) };\n    }\n    blockAt(height, doc, top, offset) {\n        let { firstLine, lastLine, lineHeight } = this.lines(doc, offset);\n        let line = Math.max(0, Math.min(lastLine - firstLine, Math.floor((height - top) / lineHeight)));\n        let { from, length } = doc.line(firstLine + line);\n        return new BlockInfo(from, length, top + lineHeight * line, lineHeight, BlockType.Text);\n    }\n    lineAt(value, type, doc, top, offset) {\n        if (type == QueryType.ByHeight)\n            return this.blockAt(value, doc, top, offset);\n        if (type == QueryType.ByPosNoHeight) {\n            let { from, to } = doc.lineAt(value);\n            return new BlockInfo(from, to - from, 0, 0, BlockType.Text);\n        }\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        let { from, length, number } = doc.lineAt(value);\n        return new BlockInfo(from, length, top + lineHeight * (number - firstLine), lineHeight, BlockType.Text);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let { firstLine, lineHeight } = this.lines(doc, offset);\n        for (let pos = Math.max(from, offset), end = Math.min(offset + this.length, to); pos <= end;) {\n            let line = doc.lineAt(pos);\n            if (pos == from)\n                top += lineHeight * (line.number - firstLine);\n            f(new BlockInfo(line.from, line.length, top, lineHeight, BlockType.Text));\n            top += lineHeight;\n            pos = line.to + 1;\n        }\n    }\n    replace(from, to, nodes) {\n        let after = this.length - to;\n        if (after > 0) {\n            let last = nodes[nodes.length - 1];\n            if (last instanceof HeightMapGap)\n                nodes[nodes.length - 1] = new HeightMapGap(last.length + after);\n            else\n                nodes.push(null, new HeightMapGap(after - 1));\n        }\n        if (from > 0) {\n            let first = nodes[0];\n            if (first instanceof HeightMapGap)\n                nodes[0] = new HeightMapGap(from + first.length);\n            else\n                nodes.unshift(new HeightMapGap(from - 1), null);\n        }\n        return HeightMap.of(nodes);\n    }\n    decomposeLeft(to, result) {\n        result.push(new HeightMapGap(to - 1), null);\n    }\n    decomposeRight(from, result) {\n        result.push(null, new HeightMapGap(this.length - from - 1));\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let end = offset + this.length;\n        if (measured && measured.from <= offset + this.length && measured.more) {\n            // Fill in part of this gap with measured lines. We know there\n            // can't be widgets or collapsed ranges in those lines, because\n            // they would already have been added to the heightmap (gaps\n            // only contain plain text).\n            let nodes = [], pos = Math.max(offset, measured.from), singleHeight = -1;\n            let wasChanged = oracle.heightChanged;\n            if (measured.from > offset)\n                nodes.push(new HeightMapGap(measured.from - offset - 1).updateHeight(oracle, offset));\n            while (pos <= end && measured.more) {\n                let len = oracle.doc.lineAt(pos).length;\n                if (nodes.length)\n                    nodes.push(null);\n                let height = measured.heights[measured.index++];\n                if (singleHeight == -1)\n                    singleHeight = height;\n                else if (Math.abs(height - singleHeight) >= Epsilon)\n                    singleHeight = -2;\n                let line = new HeightMapText(len, height);\n                line.outdated = false;\n                nodes.push(line);\n                pos += len + 1;\n            }\n            if (pos <= end)\n                nodes.push(null, new HeightMapGap(end - pos).updateHeight(oracle, pos));\n            let result = HeightMap.of(nodes);\n            oracle.heightChanged = wasChanged || singleHeight < 0 || Math.abs(result.height - this.height) >= Epsilon ||\n                Math.abs(singleHeight - this.lines(oracle.doc, offset).lineHeight) >= Epsilon;\n            return result;\n        }\n        else if (force || this.outdated) {\n            this.setHeight(oracle, oracle.heightForGap(offset, offset + this.length));\n            this.outdated = false;\n        }\n        return this;\n    }\n    toString() { return `gap(${this.length})`; }\n}\nclass HeightMapBranch extends HeightMap {\n    constructor(left, brk, right) {\n        super(left.length + brk + right.length, left.height + right.height, brk | (left.outdated || right.outdated ? 2 /* Outdated */ : 0));\n        this.left = left;\n        this.right = right;\n        this.size = left.size + right.size;\n    }\n    get break() { return this.flags & 1 /* Break */; }\n    blockAt(height, doc, top, offset) {\n        let mid = top + this.left.height;\n        return height < mid ? this.left.blockAt(height, doc, top, offset)\n            : this.right.blockAt(height, doc, mid, offset + this.left.length + this.break);\n    }\n    lineAt(value, type, doc, top, offset) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        let left = type == QueryType.ByHeight ? value < rightTop : value < rightOffset;\n        let base = left ? this.left.lineAt(value, type, doc, top, offset)\n            : this.right.lineAt(value, type, doc, rightTop, rightOffset);\n        if (this.break || (left ? base.to < rightOffset : base.from > rightOffset))\n            return base;\n        let subQuery = type == QueryType.ByPosNoHeight ? QueryType.ByPosNoHeight : QueryType.ByPos;\n        if (left)\n            return base.join(this.right.lineAt(rightOffset, subQuery, doc, rightTop, rightOffset));\n        else\n            return this.left.lineAt(rightOffset, subQuery, doc, top, offset).join(base);\n    }\n    forEachLine(from, to, doc, top, offset, f) {\n        let rightTop = top + this.left.height, rightOffset = offset + this.left.length + this.break;\n        if (this.break) {\n            if (from < rightOffset)\n                this.left.forEachLine(from, to, doc, top, offset, f);\n            if (to >= rightOffset)\n                this.right.forEachLine(from, to, doc, rightTop, rightOffset, f);\n        }\n        else {\n            let mid = this.lineAt(rightOffset, QueryType.ByPos, doc, top, offset);\n            if (from < mid.from)\n                this.left.forEachLine(from, mid.from - 1, doc, top, offset, f);\n            if (mid.to >= from && mid.from <= to)\n                f(mid);\n            if (to > mid.to)\n                this.right.forEachLine(mid.to + 1, to, doc, rightTop, rightOffset, f);\n        }\n    }\n    replace(from, to, nodes) {\n        let rightStart = this.left.length + this.break;\n        if (to < rightStart)\n            return this.balanced(this.left.replace(from, to, nodes), this.right);\n        if (from > this.left.length)\n            return this.balanced(this.left, this.right.replace(from - rightStart, to - rightStart, nodes));\n        let result = [];\n        if (from > 0)\n            this.decomposeLeft(from, result);\n        let left = result.length;\n        for (let node of nodes)\n            result.push(node);\n        if (from > 0)\n            mergeGaps(result, left - 1);\n        if (to < this.length) {\n            let right = result.length;\n            this.decomposeRight(to, result);\n            mergeGaps(result, right);\n        }\n        return HeightMap.of(result);\n    }\n    decomposeLeft(to, result) {\n        let left = this.left.length;\n        if (to <= left)\n            return this.left.decomposeLeft(to, result);\n        result.push(this.left);\n        if (this.break) {\n            left++;\n            if (to >= left)\n                result.push(null);\n        }\n        if (to > left)\n            this.right.decomposeLeft(to - left, result);\n    }\n    decomposeRight(from, result) {\n        let left = this.left.length, right = left + this.break;\n        if (from >= right)\n            return this.right.decomposeRight(from - right, result);\n        if (from < left)\n            this.left.decomposeRight(from, result);\n        if (this.break && from < right)\n            result.push(null);\n        result.push(this.right);\n    }\n    balanced(left, right) {\n        if (left.size > 2 * right.size || right.size > 2 * left.size)\n            return HeightMap.of(this.break ? [left, null, right] : [left, right]);\n        this.left = left;\n        this.right = right;\n        this.height = left.height + right.height;\n        this.outdated = left.outdated || right.outdated;\n        this.size = left.size + right.size;\n        this.length = left.length + this.break + right.length;\n        return this;\n    }\n    updateHeight(oracle, offset = 0, force = false, measured) {\n        let { left, right } = this, rightStart = offset + left.length + this.break, rebalance = null;\n        if (measured && measured.from <= offset + left.length && measured.more)\n            rebalance = left = left.updateHeight(oracle, offset, force, measured);\n        else\n            left.updateHeight(oracle, offset, force);\n        if (measured && measured.from <= rightStart + right.length && measured.more)\n            rebalance = right = right.updateHeight(oracle, rightStart, force, measured);\n        else\n            right.updateHeight(oracle, rightStart, force);\n        if (rebalance)\n            return this.balanced(left, right);\n        this.height = this.left.height + this.right.height;\n        this.outdated = false;\n        return this;\n    }\n    toString() { return this.left + (this.break ? \" \" : \"-\") + this.right; }\n}\nfunction mergeGaps(nodes, around) {\n    let before, after;\n    if (nodes[around] == null &&\n        (before = nodes[around - 1]) instanceof HeightMapGap &&\n        (after = nodes[around + 1]) instanceof HeightMapGap)\n        nodes.splice(around - 1, 3, new HeightMapGap(before.length + 1 + after.length));\n}\nconst relevantWidgetHeight = 5;\nclass NodeBuilder {\n    constructor(pos, oracle) {\n        this.pos = pos;\n        this.oracle = oracle;\n        this.nodes = [];\n        this.lineStart = -1;\n        this.lineEnd = -1;\n        this.covering = null;\n        this.writtenTo = pos;\n    }\n    get isCovered() {\n        return this.covering && this.nodes[this.nodes.length - 1] == this.covering;\n    }\n    span(_from, to) {\n        if (this.lineStart > -1) {\n            let end = Math.min(to, this.lineEnd), last = this.nodes[this.nodes.length - 1];\n            if (last instanceof HeightMapText)\n                last.length += end - this.pos;\n            else if (end > this.pos || !this.isCovered)\n                this.nodes.push(new HeightMapText(end - this.pos, -1));\n            this.writtenTo = end;\n            if (to > end) {\n                this.nodes.push(null);\n                this.writtenTo++;\n                this.lineStart = -1;\n            }\n        }\n        this.pos = to;\n    }\n    point(from, to, deco) {\n        if (from < to || deco.heightRelevant) {\n            let height = deco.widget ? deco.widget.estimatedHeight : 0;\n            if (height < 0)\n                height = this.oracle.lineHeight;\n            let len = to - from;\n            if (deco.block) {\n                this.addBlock(new HeightMapBlock(len, height, deco.type));\n            }\n            else if (len || height >= relevantWidgetHeight) {\n                this.addLineDeco(height, len);\n            }\n        }\n        else if (to > from) {\n            this.span(from, to);\n        }\n        if (this.lineEnd > -1 && this.lineEnd < this.pos)\n            this.lineEnd = this.oracle.doc.lineAt(this.pos).to;\n    }\n    enterLine() {\n        if (this.lineStart > -1)\n            return;\n        let { from, to } = this.oracle.doc.lineAt(this.pos);\n        this.lineStart = from;\n        this.lineEnd = to;\n        if (this.writtenTo < from) {\n            if (this.writtenTo < from - 1 || this.nodes[this.nodes.length - 1] == null)\n                this.nodes.push(this.blankContent(this.writtenTo, from - 1));\n            this.nodes.push(null);\n        }\n        if (this.pos > from)\n            this.nodes.push(new HeightMapText(this.pos - from, -1));\n        this.writtenTo = this.pos;\n    }\n    blankContent(from, to) {\n        let gap = new HeightMapGap(to - from);\n        if (this.oracle.doc.lineAt(from).to == to)\n            gap.flags |= 4 /* SingleLine */;\n        return gap;\n    }\n    ensureLine() {\n        this.enterLine();\n        let last = this.nodes.length ? this.nodes[this.nodes.length - 1] : null;\n        if (last instanceof HeightMapText)\n            return last;\n        let line = new HeightMapText(0, -1);\n        this.nodes.push(line);\n        return line;\n    }\n    addBlock(block) {\n        this.enterLine();\n        if (block.type == BlockType.WidgetAfter && !this.isCovered)\n            this.ensureLine();\n        this.nodes.push(block);\n        this.writtenTo = this.pos = this.pos + block.length;\n        if (block.type != BlockType.WidgetBefore)\n            this.covering = block;\n    }\n    addLineDeco(height, length) {\n        let line = this.ensureLine();\n        line.length += length;\n        line.collapsed += length;\n        line.widgetHeight = Math.max(line.widgetHeight, height);\n        this.writtenTo = this.pos = this.pos + length;\n    }\n    finish(from) {\n        let last = this.nodes.length == 0 ? null : this.nodes[this.nodes.length - 1];\n        if (this.lineStart > -1 && !(last instanceof HeightMapText) && !this.isCovered)\n            this.nodes.push(new HeightMapText(0, -1));\n        else if (this.writtenTo < this.pos || last == null)\n            this.nodes.push(this.blankContent(this.writtenTo, this.pos));\n        let pos = from;\n        for (let node of this.nodes) {\n            if (node instanceof HeightMapText)\n                node.updateHeight(this.oracle, pos);\n            pos += node ? node.length : 1;\n        }\n        return this.nodes;\n    }\n    // Always called with a region that on both sides either stretches\n    // to a line break or the end of the document.\n    // The returned array uses null to indicate line breaks, but never\n    // starts or ends in a line break, or has multiple line breaks next\n    // to each other.\n    static build(oracle, decorations, from, to) {\n        let builder = new NodeBuilder(from, oracle);\n        RangeSet.spans(decorations, from, to, builder, 0);\n        return builder.finish(from);\n    }\n}\nfunction heightRelevantDecoChanges(a, b, diff) {\n    let comp = new DecorationComparator;\n    RangeSet.compare(a, b, diff, comp, 0);\n    return comp.changes;\n}\nclass DecorationComparator {\n    constructor() {\n        this.changes = [];\n    }\n    compareRange() { }\n    comparePoint(from, to, a, b) {\n        if (from < to || a && a.heightRelevant || b && b.heightRelevant)\n            addRange(from, to, this.changes, 5);\n    }\n}\n\nfunction visiblePixelRange(dom, paddingTop) {\n    let rect = dom.getBoundingClientRect();\n    let left = Math.max(0, rect.left), right = Math.min(innerWidth, rect.right);\n    let top = Math.max(0, rect.top), bottom = Math.min(innerHeight, rect.bottom);\n    let body = dom.ownerDocument.body;\n    for (let parent = dom.parentNode; parent && parent != body;) {\n        if (parent.nodeType == 1) {\n            let elt = parent;\n            let style = window.getComputedStyle(elt);\n            if ((elt.scrollHeight > elt.clientHeight || elt.scrollWidth > elt.clientWidth) &&\n                style.overflow != \"visible\") {\n                let parentRect = elt.getBoundingClientRect();\n                left = Math.max(left, parentRect.left);\n                right = Math.min(right, parentRect.right);\n                top = Math.max(top, parentRect.top);\n                bottom = Math.min(bottom, parentRect.bottom);\n            }\n            parent = style.position == \"absolute\" || style.position == \"fixed\" ? elt.offsetParent : elt.parentNode;\n        }\n        else if (parent.nodeType == 11) { // Shadow root\n            parent = parent.host;\n        }\n        else {\n            break;\n        }\n    }\n    return { left: left - rect.left, right: Math.max(left, right) - rect.left,\n        top: top - (rect.top + paddingTop), bottom: Math.max(top, bottom) - (rect.top + paddingTop) };\n}\n// Line gaps are placeholder widgets used to hide pieces of overlong\n// lines within the viewport, as a kludge to keep the editor\n// responsive when a ridiculously long line is loaded into it.\nclass LineGap {\n    constructor(from, to, size) {\n        this.from = from;\n        this.to = to;\n        this.size = size;\n    }\n    static same(a, b) {\n        if (a.length != b.length)\n            return false;\n        for (let i = 0; i < a.length; i++) {\n            let gA = a[i], gB = b[i];\n            if (gA.from != gB.from || gA.to != gB.to || gA.size != gB.size)\n                return false;\n        }\n        return true;\n    }\n    draw(wrapping) {\n        return Decoration.replace({ widget: new LineGapWidget(this.size, wrapping) }).range(this.from, this.to);\n    }\n}\nclass LineGapWidget extends WidgetType {\n    constructor(size, vertical) {\n        super();\n        this.size = size;\n        this.vertical = vertical;\n    }\n    eq(other) { return other.size == this.size && other.vertical == this.vertical; }\n    toDOM() {\n        let elt = document.createElement(\"div\");\n        if (this.vertical) {\n            elt.style.height = this.size + \"px\";\n        }\n        else {\n            elt.style.width = this.size + \"px\";\n            elt.style.height = \"2px\";\n            elt.style.display = \"inline-block\";\n        }\n        return elt;\n    }\n    get estimatedHeight() { return this.vertical ? this.size : -1; }\n}\nclass ViewState {\n    constructor(state) {\n        this.state = state;\n        // These are contentDOM-local coordinates\n        this.pixelViewport = { left: 0, right: window.innerWidth, top: 0, bottom: 0 };\n        this.inView = true;\n        this.paddingTop = 0;\n        this.paddingBottom = 0;\n        this.contentDOMWidth = 0;\n        this.contentDOMHeight = 0;\n        this.editorHeight = 0;\n        this.heightOracle = new HeightOracle;\n        // See VP.MaxDOMHeight\n        this.scaler = IdScaler;\n        this.scrollTarget = null;\n        // Briefly set to true when printing, to disable viewport limiting\n        this.printing = false;\n        // Flag set when editor content was redrawn, so that the next\n        // measure stage knows it must read DOM layout\n        this.mustMeasureContent = true;\n        this.visibleRanges = [];\n        // Cursor 'assoc' is only significant when the cursor is on a line\n        // wrap point, where it must stick to the character that it is\n        // associated with. Since browsers don't provide a reasonable\n        // interface to set or query this, when a selection is set that\n        // might cause this to be significant, this flag is set. The next\n        // measure phase will check whether the cursor is on a line-wrapping\n        // boundary and, if so, reset it to make sure it is positioned in\n        // the right place.\n        this.mustEnforceCursorAssoc = false;\n        this.heightMap = HeightMap.empty().applyChanges(state.facet(decorations), Text.empty, this.heightOracle.setDoc(state.doc), [new ChangedRange(0, 0, 0, state.doc.length)]);\n        this.viewport = this.getViewport(0, null);\n        this.updateViewportLines();\n        this.updateForViewport();\n        this.lineGaps = this.ensureLineGaps([]);\n        this.lineGapDeco = Decoration.set(this.lineGaps.map(gap => gap.draw(false)));\n        this.computeVisibleRanges();\n    }\n    updateForViewport() {\n        let viewports = [this.viewport], { main } = this.state.selection;\n        for (let i = 0; i <= 1; i++) {\n            let pos = i ? main.head : main.anchor;\n            if (!viewports.some(({ from, to }) => pos >= from && pos <= to)) {\n                let { from, to } = this.lineBlockAt(pos);\n                viewports.push(new Viewport(from, to));\n            }\n        }\n        this.viewports = viewports.sort((a, b) => a.from - b.from);\n        this.scaler = this.heightMap.height <= 7000000 /* MaxDOMHeight */ ? IdScaler :\n            new BigScaler(this.heightOracle.doc, this.heightMap, this.viewports);\n    }\n    updateViewportLines() {\n        this.viewportLines = [];\n        this.heightMap.forEachLine(this.viewport.from, this.viewport.to, this.state.doc, 0, 0, block => {\n            this.viewportLines.push(this.scaler.scale == 1 ? block : scaleBlock(block, this.scaler));\n        });\n    }\n    update(update, scrollTarget = null) {\n        let prev = this.state;\n        this.state = update.state;\n        let newDeco = this.state.facet(decorations);\n        let contentChanges = update.changedRanges;\n        let heightChanges = ChangedRange.extendWithRanges(contentChanges, heightRelevantDecoChanges(update.startState.facet(decorations), newDeco, update ? update.changes : ChangeSet.empty(this.state.doc.length)));\n        let prevHeight = this.heightMap.height;\n        this.heightMap = this.heightMap.applyChanges(newDeco, prev.doc, this.heightOracle.setDoc(this.state.doc), heightChanges);\n        if (this.heightMap.height != prevHeight)\n            update.flags |= 2 /* Height */;\n        let viewport = heightChanges.length ? this.mapViewport(this.viewport, update.changes) : this.viewport;\n        if (scrollTarget && (scrollTarget.range.head < viewport.from || scrollTarget.range.head > viewport.to) ||\n            !this.viewportIsAppropriate(viewport))\n            viewport = this.getViewport(0, scrollTarget);\n        let updateLines = !update.changes.empty || (update.flags & 2 /* Height */) ||\n            viewport.from != this.viewport.from || viewport.to != this.viewport.to;\n        this.viewport = viewport;\n        this.updateForViewport();\n        if (updateLines)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 4000 /* DoubleMargin */)\n            this.updateLineGaps(this.ensureLineGaps(this.mapLineGaps(this.lineGaps, update.changes)));\n        update.flags |= this.computeVisibleRanges();\n        if (scrollTarget)\n            this.scrollTarget = scrollTarget;\n        if (!this.mustEnforceCursorAssoc && update.selectionSet && update.view.lineWrapping &&\n            update.state.selection.main.empty && update.state.selection.main.assoc)\n            this.mustEnforceCursorAssoc = true;\n    }\n    measure(view) {\n        let dom = view.contentDOM, style = window.getComputedStyle(dom);\n        let oracle = this.heightOracle;\n        let whiteSpace = style.whiteSpace, direction = style.direction == \"rtl\" ? Direction.RTL : Direction.LTR;\n        let refresh = this.heightOracle.mustRefreshForStyle(whiteSpace, direction);\n        let measureContent = refresh || this.mustMeasureContent || this.contentDOMHeight != dom.clientHeight;\n        let result = 0, bias = 0;\n        if (measureContent) {\n            this.mustMeasureContent = false;\n            this.contentDOMHeight = dom.clientHeight;\n            // Vertical padding\n            let paddingTop = parseInt(style.paddingTop) || 0, paddingBottom = parseInt(style.paddingBottom) || 0;\n            if (this.paddingTop != paddingTop || this.paddingBottom != paddingBottom) {\n                result |= 8 /* Geometry */;\n                this.paddingTop = paddingTop;\n                this.paddingBottom = paddingBottom;\n            }\n        }\n        // Pixel viewport\n        let pixelViewport = this.printing ? { top: -1e8, bottom: 1e8, left: -1e8, right: 1e8 } : visiblePixelRange(dom, this.paddingTop);\n        let dTop = pixelViewport.top - this.pixelViewport.top, dBottom = pixelViewport.bottom - this.pixelViewport.bottom;\n        this.pixelViewport = pixelViewport;\n        let inView = this.pixelViewport.bottom > this.pixelViewport.top && this.pixelViewport.right > this.pixelViewport.left;\n        if (inView != this.inView) {\n            this.inView = inView;\n            if (inView)\n                measureContent = true;\n        }\n        if (!this.inView)\n            return 0;\n        if (measureContent) {\n            let lineHeights = view.docView.measureVisibleLineHeights();\n            if (oracle.mustRefreshForHeights(lineHeights))\n                refresh = true;\n            let contentWidth = dom.clientWidth;\n            if (refresh || oracle.lineWrapping && Math.abs(contentWidth - this.contentDOMWidth) > oracle.charWidth) {\n                let { lineHeight, charWidth } = view.docView.measureTextSize();\n                refresh = oracle.refresh(whiteSpace, direction, lineHeight, charWidth, contentWidth / charWidth, lineHeights);\n                if (refresh) {\n                    view.docView.minWidth = 0;\n                    result |= 8 /* Geometry */;\n                }\n            }\n            if (this.contentDOMWidth != contentWidth) {\n                this.contentDOMWidth = contentWidth;\n                result |= 8 /* Geometry */;\n            }\n            if (this.editorHeight != view.scrollDOM.clientHeight) {\n                this.editorHeight = view.scrollDOM.clientHeight;\n                result |= 8 /* Geometry */;\n            }\n            if (dTop > 0 && dBottom > 0)\n                bias = Math.max(dTop, dBottom);\n            else if (dTop < 0 && dBottom < 0)\n                bias = Math.min(dTop, dBottom);\n            oracle.heightChanged = false;\n            this.heightMap = this.heightMap.updateHeight(oracle, 0, refresh, new MeasuredHeights(this.viewport.from, lineHeights));\n            if (oracle.heightChanged)\n                result |= 2 /* Height */;\n        }\n        let viewportChange = !this.viewportIsAppropriate(this.viewport, bias) ||\n            this.scrollTarget && (this.scrollTarget.range.head < this.viewport.from || this.scrollTarget.range.head > this.viewport.to);\n        if (viewportChange)\n            this.viewport = this.getViewport(bias, this.scrollTarget);\n        this.updateForViewport();\n        if ((result & 2 /* Height */) || viewportChange)\n            this.updateViewportLines();\n        if (this.lineGaps.length || this.viewport.to - this.viewport.from > 4000 /* DoubleMargin */)\n            this.updateLineGaps(this.ensureLineGaps(refresh ? [] : this.lineGaps));\n        result |= this.computeVisibleRanges();\n        if (this.mustEnforceCursorAssoc) {\n            this.mustEnforceCursorAssoc = false;\n            // This is done in the read stage, because moving the selection\n            // to a line end is going to trigger a layout anyway, so it\n            // can't be a pure write. It should be rare that it does any\n            // writing.\n            view.docView.enforceCursorAssoc();\n        }\n        return result;\n    }\n    get visibleTop() { return this.scaler.fromDOM(this.pixelViewport.top); }\n    get visibleBottom() { return this.scaler.fromDOM(this.pixelViewport.bottom); }\n    getViewport(bias, scrollTarget) {\n        // This will divide VP.Margin between the top and the\n        // bottom, depending on the bias (the change in viewport position\n        // since the last update). It'll hold a number between 0 and 1\n        let marginTop = 0.5 - Math.max(-0.5, Math.min(0.5, bias / 1000 /* Margin */ / 2));\n        let map = this.heightMap, doc = this.state.doc, { visibleTop, visibleBottom } = this;\n        let viewport = new Viewport(map.lineAt(visibleTop - marginTop * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(visibleBottom + (1 - marginTop) * 1000 /* Margin */, QueryType.ByHeight, doc, 0, 0).to);\n        // If scrollTarget is given, make sure the viewport includes that position\n        if (scrollTarget) {\n            let { head } = scrollTarget.range, viewHeight = this.editorHeight;\n            if (head < viewport.from || head > viewport.to) {\n                let block = map.lineAt(head, QueryType.ByPos, doc, 0, 0), topPos;\n                if (scrollTarget.y == \"center\")\n                    topPos = (block.top + block.bottom) / 2 - viewHeight / 2;\n                else if (scrollTarget.y == \"start\" || scrollTarget.y == \"nearest\" && head < viewport.from)\n                    topPos = block.top;\n                else\n                    topPos = block.bottom - viewHeight;\n                viewport = new Viewport(map.lineAt(topPos - 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).from, map.lineAt(topPos + viewHeight + 1000 /* Margin */ / 2, QueryType.ByHeight, doc, 0, 0).to);\n            }\n        }\n        return viewport;\n    }\n    mapViewport(viewport, changes) {\n        let from = changes.mapPos(viewport.from, -1), to = changes.mapPos(viewport.to, 1);\n        return new Viewport(this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0).from, this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0).to);\n    }\n    // Checks if a given viewport covers the visible part of the\n    // document and not too much beyond that.\n    viewportIsAppropriate({ from, to }, bias = 0) {\n        if (!this.inView)\n            return true;\n        let { top } = this.heightMap.lineAt(from, QueryType.ByPos, this.state.doc, 0, 0);\n        let { bottom } = this.heightMap.lineAt(to, QueryType.ByPos, this.state.doc, 0, 0);\n        let { visibleTop, visibleBottom } = this;\n        return (from == 0 || top <= visibleTop - Math.max(10 /* MinCoverMargin */, Math.min(-bias, 250 /* MaxCoverMargin */))) &&\n            (to == this.state.doc.length ||\n                bottom >= visibleBottom + Math.max(10 /* MinCoverMargin */, Math.min(bias, 250 /* MaxCoverMargin */))) &&\n            (top > visibleTop - 2 * 1000 /* Margin */ && bottom < visibleBottom + 2 * 1000 /* Margin */);\n    }\n    mapLineGaps(gaps, changes) {\n        if (!gaps.length || changes.empty)\n            return gaps;\n        let mapped = [];\n        for (let gap of gaps)\n            if (!changes.touchesRange(gap.from, gap.to))\n                mapped.push(new LineGap(changes.mapPos(gap.from), changes.mapPos(gap.to), gap.size));\n        return mapped;\n    }\n    // Computes positions in the viewport where the start or end of a\n    // line should be hidden, trying to reuse existing line gaps when\n    // appropriate to avoid unneccesary redraws.\n    // Uses crude character-counting for the positioning and sizing,\n    // since actual DOM coordinates aren't always available and\n    // predictable. Relies on generous margins (see LG.Margin) to hide\n    // the artifacts this might produce from the user.\n    ensureLineGaps(current) {\n        let gaps = [];\n        // This won't work at all in predominantly right-to-left text.\n        if (this.heightOracle.direction != Direction.LTR)\n            return gaps;\n        for (let line of this.viewportLines) {\n            if (line.length < 4000 /* DoubleMargin */)\n                continue;\n            let structure = lineStructure(line.from, line.to, this.state);\n            if (structure.total < 4000 /* DoubleMargin */)\n                continue;\n            let viewFrom, viewTo;\n            if (this.heightOracle.lineWrapping) {\n                let marginHeight = (2000 /* Margin */ / this.heightOracle.lineLength) * this.heightOracle.lineHeight;\n                viewFrom = findPosition(structure, (this.visibleTop - line.top - marginHeight) / line.height);\n                viewTo = findPosition(structure, (this.visibleBottom - line.top + marginHeight) / line.height);\n            }\n            else {\n                let totalWidth = structure.total * this.heightOracle.charWidth;\n                let marginWidth = 2000 /* Margin */ * this.heightOracle.charWidth;\n                viewFrom = findPosition(structure, (this.pixelViewport.left - marginWidth) / totalWidth);\n                viewTo = findPosition(structure, (this.pixelViewport.right + marginWidth) / totalWidth);\n            }\n            let outside = [];\n            if (viewFrom > line.from)\n                outside.push({ from: line.from, to: viewFrom });\n            if (viewTo < line.to)\n                outside.push({ from: viewTo, to: line.to });\n            let sel = this.state.selection.main;\n            // Make sure the gaps don't cover a selection end\n            if (sel.from >= line.from && sel.from <= line.to)\n                cutRange(outside, sel.from - 10 /* SelectionMargin */, sel.from + 10 /* SelectionMargin */);\n            if (!sel.empty && sel.to >= line.from && sel.to <= line.to)\n                cutRange(outside, sel.to - 10 /* SelectionMargin */, sel.to + 10 /* SelectionMargin */);\n            for (let { from, to } of outside)\n                if (to - from > 1000 /* HalfMargin */) {\n                    gaps.push(find(current, gap => gap.from >= line.from && gap.to <= line.to &&\n                        Math.abs(gap.from - from) < 1000 /* HalfMargin */ && Math.abs(gap.to - to) < 1000 /* HalfMargin */) ||\n                        new LineGap(from, to, this.gapSize(line, from, to, structure)));\n                }\n        }\n        return gaps;\n    }\n    gapSize(line, from, to, structure) {\n        let fraction = findFraction(structure, to) - findFraction(structure, from);\n        if (this.heightOracle.lineWrapping) {\n            return line.height * fraction;\n        }\n        else {\n            return structure.total * this.heightOracle.charWidth * fraction;\n        }\n    }\n    updateLineGaps(gaps) {\n        if (!LineGap.same(gaps, this.lineGaps)) {\n            this.lineGaps = gaps;\n            this.lineGapDeco = Decoration.set(gaps.map(gap => gap.draw(this.heightOracle.lineWrapping)));\n        }\n    }\n    computeVisibleRanges() {\n        let deco = this.state.facet(decorations);\n        if (this.lineGaps.length)\n            deco = deco.concat(this.lineGapDeco);\n        let ranges = [];\n        RangeSet.spans(deco, this.viewport.from, this.viewport.to, {\n            span(from, to) { ranges.push({ from, to }); },\n            point() { }\n        }, 20);\n        let changed = ranges.length != this.visibleRanges.length ||\n            this.visibleRanges.some((r, i) => r.from != ranges[i].from || r.to != ranges[i].to);\n        this.visibleRanges = ranges;\n        return changed ? 4 /* Viewport */ : 0;\n    }\n    lineBlockAt(pos) {\n        return (pos >= this.viewport.from && pos <= this.viewport.to && this.viewportLines.find(b => b.from <= pos && b.to >= pos)) ||\n            scaleBlock(this.heightMap.lineAt(pos, QueryType.ByPos, this.state.doc, 0, 0), this.scaler);\n    }\n    lineBlockAtHeight(height) {\n        return scaleBlock(this.heightMap.lineAt(this.scaler.fromDOM(height), QueryType.ByHeight, this.state.doc, 0, 0), this.scaler);\n    }\n    elementAtHeight(height) {\n        return scaleBlock(this.heightMap.blockAt(this.scaler.fromDOM(height), this.state.doc, 0, 0), this.scaler);\n    }\n    get docHeight() {\n        return this.scaler.toDOM(this.heightMap.height);\n    }\n    get contentHeight() {\n        return this.docHeight + this.paddingTop + this.paddingBottom;\n    }\n}\nclass Viewport {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\nfunction lineStructure(from, to, state) {\n    let ranges = [], pos = from, total = 0;\n    RangeSet.spans(state.facet(decorations), from, to, {\n        span() { },\n        point(from, to) {\n            if (from > pos) {\n                ranges.push({ from: pos, to: from });\n                total += from - pos;\n            }\n            pos = to;\n        }\n    }, 20); // We're only interested in collapsed ranges of a significant size\n    if (pos < to) {\n        ranges.push({ from: pos, to });\n        total += to - pos;\n    }\n    return { total, ranges };\n}\nfunction findPosition({ total, ranges }, ratio) {\n    if (ratio <= 0)\n        return ranges[0].from;\n    if (ratio >= 1)\n        return ranges[ranges.length - 1].to;\n    let dist = Math.floor(total * ratio);\n    for (let i = 0;; i++) {\n        let { from, to } = ranges[i], size = to - from;\n        if (dist <= size)\n            return from + dist;\n        dist -= size;\n    }\n}\nfunction findFraction(structure, pos) {\n    let counted = 0;\n    for (let { from, to } of structure.ranges) {\n        if (pos <= to) {\n            counted += pos - from;\n            break;\n        }\n        counted += to - from;\n    }\n    return counted / structure.total;\n}\nfunction cutRange(ranges, from, to) {\n    for (let i = 0; i < ranges.length; i++) {\n        let r = ranges[i];\n        if (r.from < to && r.to > from) {\n            let pieces = [];\n            if (r.from < from)\n                pieces.push({ from: r.from, to: from });\n            if (r.to > to)\n                pieces.push({ from: to, to: r.to });\n            ranges.splice(i, 1, ...pieces);\n            i += pieces.length - 1;\n        }\n    }\n}\nfunction find(array, f) {\n    for (let val of array)\n        if (f(val))\n            return val;\n    return undefined;\n}\n// Don't scale when the document height is within the range of what\n// the DOM can handle.\nconst IdScaler = {\n    toDOM(n) { return n; },\n    fromDOM(n) { return n; },\n    scale: 1\n};\n// When the height is too big (> VP.MaxDOMHeight), scale down the\n// regions outside the viewports so that the total height is\n// VP.MaxDOMHeight.\nclass BigScaler {\n    constructor(doc, heightMap, viewports) {\n        let vpHeight = 0, base = 0, domBase = 0;\n        this.viewports = viewports.map(({ from, to }) => {\n            let top = heightMap.lineAt(from, QueryType.ByPos, doc, 0, 0).top;\n            let bottom = heightMap.lineAt(to, QueryType.ByPos, doc, 0, 0).bottom;\n            vpHeight += bottom - top;\n            return { from, to, top, bottom, domTop: 0, domBottom: 0 };\n        });\n        this.scale = (7000000 /* MaxDOMHeight */ - vpHeight) / (heightMap.height - vpHeight);\n        for (let obj of this.viewports) {\n            obj.domTop = domBase + (obj.top - base) * this.scale;\n            domBase = obj.domBottom = obj.domTop + (obj.bottom - obj.top);\n            base = obj.bottom;\n        }\n    }\n    toDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.top)\n                return domBase + (n - base) * this.scale;\n            if (n <= vp.bottom)\n                return vp.domTop + (n - vp.top);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n    fromDOM(n) {\n        for (let i = 0, base = 0, domBase = 0;; i++) {\n            let vp = i < this.viewports.length ? this.viewports[i] : null;\n            if (!vp || n < vp.domTop)\n                return base + (n - domBase) / this.scale;\n            if (n <= vp.domBottom)\n                return vp.top + (n - vp.domTop);\n            base = vp.bottom;\n            domBase = vp.domBottom;\n        }\n    }\n}\nfunction scaleBlock(block, scaler) {\n    if (scaler.scale == 1)\n        return block;\n    let bTop = scaler.toDOM(block.top), bBottom = scaler.toDOM(block.bottom);\n    return new BlockInfo(block.from, block.length, bTop, bBottom - bTop, Array.isArray(block.type) ? block.type.map(b => scaleBlock(b, scaler)) : block.type);\n}\n\nconst theme = /*@__PURE__*/Facet.define({ combine: strs => strs.join(\" \") });\nconst darkTheme = /*@__PURE__*/Facet.define({ combine: values => values.indexOf(true) > -1 });\nconst baseThemeID = /*@__PURE__*/StyleModule.newName(), baseLightID = /*@__PURE__*/StyleModule.newName(), baseDarkID = /*@__PURE__*/StyleModule.newName();\nconst lightDarkIDs = { \"&light\": \".\" + baseLightID, \"&dark\": \".\" + baseDarkID };\nfunction buildTheme(main, spec, scopes) {\n    return new StyleModule(spec, {\n        finish(sel) {\n            return /&/.test(sel) ? sel.replace(/&\\w*/, m => {\n                if (m == \"&\")\n                    return main;\n                if (!scopes || !scopes[m])\n                    throw new RangeError(`Unsupported selector: ${m}`);\n                return scopes[m];\n            }) : main + \" \" + sel;\n        }\n    });\n}\nconst baseTheme = /*@__PURE__*/buildTheme(\".\" + baseThemeID, {\n    \"&.cm-editor\": {\n        position: \"relative !important\",\n        boxSizing: \"border-box\",\n        \"&.cm-focused\": {\n            // Provide a simple default outline to make sure a focused\n            // editor is visually distinct. Can't leave the default behavior\n            // because that will apply to the content element, which is\n            // inside the scrollable container and doesn't include the\n            // gutters. We also can't use an 'auto' outline, since those\n            // are, for some reason, drawn behind the element content, which\n            // will cause things like the active line background to cover\n            // the outline (#297).\n            outline: \"1px dotted #212121\"\n        },\n        display: \"flex !important\",\n        flexDirection: \"column\"\n    },\n    \".cm-scroller\": {\n        display: \"flex !important\",\n        alignItems: \"flex-start !important\",\n        fontFamily: \"monospace\",\n        lineHeight: 1.4,\n        height: \"100%\",\n        overflowX: \"auto\",\n        position: \"relative\",\n        zIndex: 0\n    },\n    \".cm-content\": {\n        margin: 0,\n        flexGrow: 2,\n        minHeight: \"100%\",\n        display: \"block\",\n        whiteSpace: \"pre\",\n        wordWrap: \"normal\",\n        boxSizing: \"border-box\",\n        padding: \"4px 0\",\n        outline: \"none\",\n        \"&[contenteditable=true]\": {\n            WebkitUserModify: \"read-write-plaintext-only\",\n        }\n    },\n    \".cm-lineWrapping\": {\n        whiteSpace_fallback: \"pre-wrap\",\n        whiteSpace: \"break-spaces\",\n        wordBreak: \"break-word\",\n        overflowWrap: \"anywhere\"\n    },\n    \"&light .cm-content\": { caretColor: \"black\" },\n    \"&dark .cm-content\": { caretColor: \"white\" },\n    \".cm-line\": {\n        display: \"block\",\n        padding: \"0 2px 0 4px\"\n    },\n    \".cm-selectionLayer\": {\n        zIndex: -1,\n        contain: \"size style\"\n    },\n    \".cm-selectionBackground\": {\n        position: \"absolute\",\n    },\n    \"&light .cm-selectionBackground\": {\n        background: \"#d9d9d9\"\n    },\n    \"&dark .cm-selectionBackground\": {\n        background: \"#222\"\n    },\n    \"&light.cm-focused .cm-selectionBackground\": {\n        background: \"#d7d4f0\"\n    },\n    \"&dark.cm-focused .cm-selectionBackground\": {\n        background: \"#233\"\n    },\n    \".cm-cursorLayer\": {\n        zIndex: 100,\n        contain: \"size style\",\n        pointerEvents: \"none\"\n    },\n    \"&.cm-focused .cm-cursorLayer\": {\n        animation: \"steps(1) cm-blink 1.2s infinite\"\n    },\n    // Two animations defined so that we can switch between them to\n    // restart the animation without forcing another style\n    // recomputation.\n    \"@keyframes cm-blink\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \"@keyframes cm-blink2\": { \"0%\": {}, \"50%\": { visibility: \"hidden\" }, \"100%\": {} },\n    \".cm-cursor, .cm-dropCursor\": {\n        position: \"absolute\",\n        borderLeft: \"1.2px solid black\",\n        marginLeft: \"-0.6px\",\n        pointerEvents: \"none\",\n    },\n    \".cm-cursor\": {\n        display: \"none\"\n    },\n    \"&dark .cm-cursor\": {\n        borderLeftColor: \"#444\"\n    },\n    \"&.cm-focused .cm-cursor\": {\n        display: \"block\"\n    },\n    \"&light .cm-activeLine\": { backgroundColor: \"#f3f9ff\" },\n    \"&dark .cm-activeLine\": { backgroundColor: \"#223039\" },\n    \"&light .cm-specialChar\": { color: \"red\" },\n    \"&dark .cm-specialChar\": { color: \"#f78\" },\n    \".cm-tab\": {\n        display: \"inline-block\",\n        overflow: \"hidden\",\n        verticalAlign: \"bottom\"\n    },\n    \".cm-placeholder\": {\n        color: \"#888\",\n        display: \"inline-block\",\n        verticalAlign: \"top\",\n    },\n    \".cm-button\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        padding: \".2em 1em\",\n        borderRadius: \"1px\"\n    },\n    \"&light .cm-button\": {\n        backgroundImage: \"linear-gradient(#eff1f5, #d9d9df)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#b4b4b4, #d0d3d6)\"\n        }\n    },\n    \"&dark .cm-button\": {\n        backgroundImage: \"linear-gradient(#393939, #111)\",\n        border: \"1px solid #888\",\n        \"&:active\": {\n            backgroundImage: \"linear-gradient(#111, #333)\"\n        }\n    },\n    \".cm-textfield\": {\n        verticalAlign: \"middle\",\n        color: \"inherit\",\n        fontSize: \"70%\",\n        border: \"1px solid silver\",\n        padding: \".2em .5em\"\n    },\n    \"&light .cm-textfield\": {\n        backgroundColor: \"white\"\n    },\n    \"&dark .cm-textfield\": {\n        border: \"1px solid #555\",\n        backgroundColor: \"inherit\"\n    }\n}, lightDarkIDs);\n\nconst observeOptions = {\n    childList: true,\n    characterData: true,\n    subtree: true,\n    attributes: true,\n    characterDataOldValue: true\n};\n// IE11 has very broken mutation observers, so we also listen to\n// DOMCharacterDataModified there\nconst useCharData = browser.ie && browser.ie_version <= 11;\nclass DOMObserver {\n    constructor(view, onChange, onScrollChanged) {\n        this.view = view;\n        this.onChange = onChange;\n        this.onScrollChanged = onScrollChanged;\n        this.active = false;\n        // The known selection. Kept in our own object, as opposed to just\n        // directly accessing the selection because:\n        //  - Safari doesn't report the right selection in shadow DOM\n        //  - Reading from the selection forces a DOM layout\n        //  - This way, we can ignore selectionchange events if we have\n        //    already seen the 'new' selection\n        this.selectionRange = new DOMSelectionState;\n        // Set when a selection change is detected, cleared on flush\n        this.selectionChanged = false;\n        this.delayedFlush = -1;\n        this.resizeTimeout = -1;\n        this.queue = [];\n        this.delayedAndroidKey = null;\n        this.scrollTargets = [];\n        this.intersection = null;\n        this.resize = null;\n        this.intersecting = false;\n        this.gapIntersection = null;\n        this.gaps = [];\n        // Timeout for scheduling check of the parents that need scroll handlers\n        this.parentCheck = -1;\n        this.dom = view.contentDOM;\n        this.observer = new MutationObserver(mutations => {\n            for (let mut of mutations)\n                this.queue.push(mut);\n            // IE11 will sometimes (on typing over a selection or\n            // backspacing out a single character text node) call the\n            // observer callback before actually updating the DOM.\n            //\n            // Unrelatedly, iOS Safari will, when ending a composition,\n            // sometimes first clear it, deliver the mutations, and then\n            // reinsert the finished text. CodeMirror's handling of the\n            // deletion will prevent the reinsertion from happening,\n            // breaking composition.\n            if ((browser.ie && browser.ie_version <= 11 || browser.ios && view.composing) &&\n                mutations.some(m => m.type == \"childList\" && m.removedNodes.length ||\n                    m.type == \"characterData\" && m.oldValue.length > m.target.nodeValue.length))\n                this.flushSoon();\n            else\n                this.flush();\n        });\n        if (useCharData)\n            this.onCharData = (event) => {\n                this.queue.push({ target: event.target,\n                    type: \"characterData\",\n                    oldValue: event.prevValue });\n                this.flushSoon();\n            };\n        this.onSelectionChange = this.onSelectionChange.bind(this);\n        if (typeof ResizeObserver == \"function\") {\n            this.resize = new ResizeObserver(() => {\n                if (this.view.docView.lastUpdate < Date.now() - 75 && this.resizeTimeout < 0)\n                    this.resizeTimeout = setTimeout(() => {\n                        this.resizeTimeout = -1;\n                        this.view.requestMeasure();\n                    }, 50);\n            });\n            this.resize.observe(view.scrollDOM);\n        }\n        this.start();\n        this.onScroll = this.onScroll.bind(this);\n        window.addEventListener(\"scroll\", this.onScroll);\n        if (typeof IntersectionObserver == \"function\") {\n            this.intersection = new IntersectionObserver(entries => {\n                if (this.parentCheck < 0)\n                    this.parentCheck = setTimeout(this.listenForScroll.bind(this), 1000);\n                if (entries.length > 0 && (entries[entries.length - 1].intersectionRatio > 0) != this.intersecting) {\n                    this.intersecting = !this.intersecting;\n                    if (this.intersecting != this.view.inView)\n                        this.onScrollChanged(document.createEvent(\"Event\"));\n                }\n            }, {});\n            this.intersection.observe(this.dom);\n            this.gapIntersection = new IntersectionObserver(entries => {\n                if (entries.length > 0 && entries[entries.length - 1].intersectionRatio > 0)\n                    this.onScrollChanged(document.createEvent(\"Event\"));\n            }, {});\n        }\n        this.listenForScroll();\n        this.readSelectionRange();\n        this.dom.ownerDocument.addEventListener(\"selectionchange\", this.onSelectionChange);\n    }\n    onScroll(e) {\n        if (this.intersecting)\n            this.flush(false);\n        this.onScrollChanged(e);\n    }\n    updateGaps(gaps) {\n        if (this.gapIntersection && (gaps.length != this.gaps.length || this.gaps.some((g, i) => g != gaps[i]))) {\n            this.gapIntersection.disconnect();\n            for (let gap of gaps)\n                this.gapIntersection.observe(gap);\n            this.gaps = gaps;\n        }\n    }\n    onSelectionChange(event) {\n        if (!this.readSelectionRange() || this.delayedAndroidKey)\n            return;\n        let { view } = this, sel = this.selectionRange;\n        if (view.state.facet(editable) ? view.root.activeElement != this.dom : !hasSelection(view.dom, sel))\n            return;\n        let context = sel.anchorNode && view.docView.nearest(sel.anchorNode);\n        if (context && context.ignoreEvent(event))\n            return;\n        // Deletions on IE11 fire their events in the wrong order, giving\n        // us a selection change event before the DOM changes are\n        // reported.\n        // Chrome Android has a similar issue when backspacing out a\n        // selection (#645).\n        if ((browser.ie && browser.ie_version <= 11 || browser.android && browser.chrome) && !view.state.selection.main.empty &&\n            // (Selection.isCollapsed isn't reliable on IE)\n            sel.focusNode && isEquivalentPosition(sel.focusNode, sel.focusOffset, sel.anchorNode, sel.anchorOffset))\n            this.flushSoon();\n        else\n            this.flush(false);\n    }\n    readSelectionRange() {\n        let { root } = this.view, domSel = getSelection(root);\n        // The Selection object is broken in shadow roots in Safari. See\n        // https://github.com/codemirror/codemirror.next/issues/414\n        let range = browser.safari && root.nodeType == 11 && deepActiveElement() == this.view.contentDOM &&\n            safariSelectionRangeHack(this.view) || domSel;\n        if (this.selectionRange.eq(range))\n            return false;\n        this.selectionRange.setRange(range);\n        return this.selectionChanged = true;\n    }\n    setSelectionRange(anchor, head) {\n        this.selectionRange.set(anchor.node, anchor.offset, head.node, head.offset);\n        this.selectionChanged = false;\n    }\n    listenForScroll() {\n        this.parentCheck = -1;\n        let i = 0, changed = null;\n        for (let dom = this.dom; dom;) {\n            if (dom.nodeType == 1) {\n                if (!changed && i < this.scrollTargets.length && this.scrollTargets[i] == dom)\n                    i++;\n                else if (!changed)\n                    changed = this.scrollTargets.slice(0, i);\n                if (changed)\n                    changed.push(dom);\n                dom = dom.assignedSlot || dom.parentNode;\n            }\n            else if (dom.nodeType == 11) { // Shadow root\n                dom = dom.host;\n            }\n            else {\n                break;\n            }\n        }\n        if (i < this.scrollTargets.length && !changed)\n            changed = this.scrollTargets.slice(0, i);\n        if (changed) {\n            for (let dom of this.scrollTargets)\n                dom.removeEventListener(\"scroll\", this.onScroll);\n            for (let dom of this.scrollTargets = changed)\n                dom.addEventListener(\"scroll\", this.onScroll);\n        }\n    }\n    ignore(f) {\n        if (!this.active)\n            return f();\n        try {\n            this.stop();\n            return f();\n        }\n        finally {\n            this.start();\n            this.clear();\n        }\n    }\n    start() {\n        if (this.active)\n            return;\n        this.observer.observe(this.dom, observeOptions);\n        if (useCharData)\n            this.dom.addEventListener(\"DOMCharacterDataModified\", this.onCharData);\n        this.active = true;\n    }\n    stop() {\n        if (!this.active)\n            return;\n        this.active = false;\n        this.observer.disconnect();\n        if (useCharData)\n            this.dom.removeEventListener(\"DOMCharacterDataModified\", this.onCharData);\n    }\n    // Throw away any pending changes\n    clear() {\n        this.observer.takeRecords();\n        this.queue.length = 0;\n        this.selectionChanged = false;\n    }\n    // Chrome Android, especially in combination with GBoard, not only\n    // doesn't reliably fire regular key events, but also often\n    // surrounds the effect of enter or backspace with a bunch of\n    // composition events that, when interrupted, cause text duplication\n    // or other kinds of corruption. This hack makes the editor back off\n    // from handling DOM changes for a moment when such a key is\n    // detected (via beforeinput or keydown), and then dispatches the\n    // key event, throwing away the DOM changes if it gets handled.\n    delayAndroidKey(key, keyCode) {\n        if (!this.delayedAndroidKey)\n            requestAnimationFrame(() => {\n                let key = this.delayedAndroidKey;\n                this.delayedAndroidKey = null;\n                let startState = this.view.state;\n                if (dispatchKey(this.view.contentDOM, key.key, key.keyCode))\n                    this.processRecords();\n                else\n                    this.flush();\n                if (this.view.state == startState)\n                    this.view.update([]);\n            });\n        // Since backspace beforeinput is sometimes signalled spuriously,\n        // Enter always takes precedence.\n        if (!this.delayedAndroidKey || key == \"Enter\")\n            this.delayedAndroidKey = { key, keyCode };\n    }\n    flushSoon() {\n        if (this.delayedFlush < 0)\n            this.delayedFlush = window.setTimeout(() => { this.delayedFlush = -1; this.flush(); }, 20);\n    }\n    forceFlush() {\n        if (this.delayedFlush >= 0) {\n            window.clearTimeout(this.delayedFlush);\n            this.delayedFlush = -1;\n            this.flush();\n        }\n    }\n    processRecords() {\n        let records = this.queue;\n        for (let mut of this.observer.takeRecords())\n            records.push(mut);\n        if (records.length)\n            this.queue = [];\n        let from = -1, to = -1, typeOver = false;\n        for (let record of records) {\n            let range = this.readMutation(record);\n            if (!range)\n                continue;\n            if (range.typeOver)\n                typeOver = true;\n            if (from == -1) {\n                ({ from, to } = range);\n            }\n            else {\n                from = Math.min(range.from, from);\n                to = Math.max(range.to, to);\n            }\n        }\n        return { from, to, typeOver };\n    }\n    // Apply pending changes, if any\n    flush(readSelection = true) {\n        // Completely hold off flushing when pending keys are set—the code\n        // managing those will make sure processRecords is called and the\n        // view is resynchronized after\n        if (this.delayedFlush >= 0 || this.delayedAndroidKey)\n            return;\n        if (readSelection)\n            this.readSelectionRange();\n        let { from, to, typeOver } = this.processRecords();\n        let newSel = this.selectionChanged && hasSelection(this.dom, this.selectionRange);\n        if (from < 0 && !newSel)\n            return;\n        this.selectionChanged = false;\n        let startState = this.view.state;\n        this.onChange(from, to, typeOver);\n        // The view wasn't updated\n        if (this.view.state == startState)\n            this.view.update([]);\n    }\n    readMutation(rec) {\n        let cView = this.view.docView.nearest(rec.target);\n        if (!cView || cView.ignoreMutation(rec))\n            return null;\n        cView.markDirty(rec.type == \"attributes\");\n        if (rec.type == \"attributes\")\n            cView.dirty |= 4 /* Attrs */;\n        if (rec.type == \"childList\") {\n            let childBefore = findChild(cView, rec.previousSibling || rec.target.previousSibling, -1);\n            let childAfter = findChild(cView, rec.nextSibling || rec.target.nextSibling, 1);\n            return { from: childBefore ? cView.posAfter(childBefore) : cView.posAtStart,\n                to: childAfter ? cView.posBefore(childAfter) : cView.posAtEnd, typeOver: false };\n        }\n        else if (rec.type == \"characterData\") {\n            return { from: cView.posAtStart, to: cView.posAtEnd, typeOver: rec.target.nodeValue == rec.oldValue };\n        }\n        else {\n            return null;\n        }\n    }\n    destroy() {\n        var _a, _b, _c;\n        this.stop();\n        (_a = this.intersection) === null || _a === void 0 ? void 0 : _a.disconnect();\n        (_b = this.gapIntersection) === null || _b === void 0 ? void 0 : _b.disconnect();\n        (_c = this.resize) === null || _c === void 0 ? void 0 : _c.disconnect();\n        for (let dom of this.scrollTargets)\n            dom.removeEventListener(\"scroll\", this.onScroll);\n        window.removeEventListener(\"scroll\", this.onScroll);\n        this.dom.ownerDocument.removeEventListener(\"selectionchange\", this.onSelectionChange);\n        clearTimeout(this.parentCheck);\n        clearTimeout(this.resizeTimeout);\n    }\n}\nfunction findChild(cView, dom, dir) {\n    while (dom) {\n        let curView = ContentView.get(dom);\n        if (curView && curView.parent == cView)\n            return curView;\n        let parent = dom.parentNode;\n        dom = parent != cView.dom ? parent : dir > 0 ? dom.nextSibling : dom.previousSibling;\n    }\n    return null;\n}\n// Used to work around a Safari Selection/shadow DOM bug (#414)\nfunction safariSelectionRangeHack(view) {\n    let found = null;\n    // Because Safari (at least in 2018-2021) doesn't provide regular\n    // access to the selection inside a shadowroot, we have to perform a\n    // ridiculous hack to get at it—using `execCommand` to trigger a\n    // `beforeInput` event so that we can read the target range from the\n    // event.\n    function read(event) {\n        event.preventDefault();\n        event.stopImmediatePropagation();\n        found = event.getTargetRanges()[0];\n    }\n    view.contentDOM.addEventListener(\"beforeinput\", read, true);\n    document.execCommand(\"indent\");\n    view.contentDOM.removeEventListener(\"beforeinput\", read, true);\n    if (!found)\n        return null;\n    let anchorNode = found.startContainer, anchorOffset = found.startOffset;\n    let focusNode = found.endContainer, focusOffset = found.endOffset;\n    let curAnchor = view.docView.domAtPos(view.state.selection.main.anchor);\n    // Since such a range doesn't distinguish between anchor and head,\n    // use a heuristic that flips it around if its end matches the\n    // current anchor.\n    if (isEquivalentPosition(curAnchor.node, curAnchor.offset, focusNode, focusOffset))\n        [anchorNode, anchorOffset, focusNode, focusOffset] = [focusNode, focusOffset, anchorNode, anchorOffset];\n    return { anchorNode, anchorOffset, focusNode, focusOffset };\n}\n\nfunction applyDOMChange(view, start, end, typeOver) {\n    let change, newSel;\n    let sel = view.state.selection.main;\n    if (start > -1) {\n        let bounds = view.docView.domBoundsAround(start, end, 0);\n        if (!bounds || view.state.readOnly)\n            return;\n        let { from, to } = bounds;\n        let selPoints = view.docView.impreciseHead || view.docView.impreciseAnchor ? [] : selectionPoints(view);\n        let reader = new DOMReader(selPoints, view);\n        reader.readRange(bounds.startDOM, bounds.endDOM);\n        newSel = selectionFromPoints(selPoints, from);\n        let preferredPos = sel.from, preferredSide = null;\n        // Prefer anchoring to end when Backspace is pressed (or, on\n        // Android, when something was deleted)\n        if (view.inputState.lastKeyCode === 8 && view.inputState.lastKeyTime > Date.now() - 100 ||\n            browser.android && reader.text.length < to - from) {\n            preferredPos = sel.to;\n            preferredSide = \"end\";\n        }\n        let diff = findDiff(view.state.sliceDoc(from, to), reader.text, preferredPos - from, preferredSide);\n        if (diff)\n            change = { from: from + diff.from, to: from + diff.toA,\n                insert: view.state.toText(reader.text.slice(diff.from, diff.toB)) };\n    }\n    else if (view.hasFocus || !view.state.facet(editable)) {\n        let domSel = view.observer.selectionRange;\n        let { impreciseHead: iHead, impreciseAnchor: iAnchor } = view.docView;\n        let head = iHead && iHead.node == domSel.focusNode && iHead.offset == domSel.focusOffset ||\n            !contains(view.contentDOM, domSel.focusNode)\n            ? view.state.selection.main.head\n            : view.docView.posFromDOM(domSel.focusNode, domSel.focusOffset);\n        let anchor = iAnchor && iAnchor.node == domSel.anchorNode && iAnchor.offset == domSel.anchorOffset ||\n            !contains(view.contentDOM, domSel.anchorNode)\n            ? view.state.selection.main.anchor\n            : view.docView.posFromDOM(domSel.anchorNode, domSel.anchorOffset);\n        if (head != sel.head || anchor != sel.anchor)\n            newSel = EditorSelection.single(anchor, head);\n    }\n    if (!change && !newSel)\n        return;\n    // Heuristic to notice typing over a selected character\n    if (!change && typeOver && !sel.empty && newSel && newSel.main.empty)\n        change = { from: sel.from, to: sel.to, insert: view.state.doc.slice(sel.from, sel.to) };\n    // If the change is inside the selection and covers most of it,\n    // assume it is a selection replace (with identical characters at\n    // the start/end not included in the diff)\n    else if (change && change.from >= sel.from && change.to <= sel.to &&\n        (change.from != sel.from || change.to != sel.to) &&\n        (sel.to - sel.from) - (change.to - change.from) <= 4)\n        change = {\n            from: sel.from, to: sel.to,\n            insert: view.state.doc.slice(sel.from, change.from).append(change.insert).append(view.state.doc.slice(change.to, sel.to))\n        };\n    if (change) {\n        let startState = view.state;\n        if (browser.ios && view.inputState.flushIOSKey(view))\n            return;\n        // Android browsers don't fire reasonable key events for enter,\n        // backspace, or delete. So this detects changes that look like\n        // they're caused by those keys, and reinterprets them as key\n        // events. (Some of these keys are also handled by beforeinput\n        // events and the pendingAndroidKey mechanism, but that's not\n        // reliable in all situations.)\n        if (browser.android &&\n            ((change.from == sel.from && change.to == sel.to &&\n                change.insert.length == 1 && change.insert.lines == 2 &&\n                dispatchKey(view.contentDOM, \"Enter\", 13)) ||\n                (change.from == sel.from - 1 && change.to == sel.to && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Backspace\", 8)) ||\n                (change.from == sel.from && change.to == sel.to + 1 && change.insert.length == 0 &&\n                    dispatchKey(view.contentDOM, \"Delete\", 46))))\n            return;\n        let text = change.insert.toString();\n        if (view.state.facet(inputHandler).some(h => h(view, change.from, change.to, text)))\n            return;\n        if (view.inputState.composing >= 0)\n            view.inputState.composing++;\n        let tr;\n        if (change.from >= sel.from && change.to <= sel.to && change.to - change.from >= (sel.to - sel.from) / 3 &&\n            (!newSel || newSel.main.empty && newSel.main.from == change.from + change.insert.length)) {\n            let before = sel.from < change.from ? startState.sliceDoc(sel.from, change.from) : \"\";\n            let after = sel.to > change.to ? startState.sliceDoc(change.to, sel.to) : \"\";\n            tr = startState.replaceSelection(view.state.toText(before + change.insert.sliceString(0, undefined, view.state.lineBreak) +\n                after));\n        }\n        else {\n            let changes = startState.changes(change);\n            tr = {\n                changes,\n                selection: newSel && !startState.selection.main.eq(newSel.main) && newSel.main.to <= changes.newLength\n                    ? startState.selection.replaceRange(newSel.main) : undefined\n            };\n        }\n        let userEvent = \"input.type\";\n        if (view.composing) {\n            userEvent += \".compose\";\n            if (view.inputState.compositionFirstChange) {\n                userEvent += \".start\";\n                view.inputState.compositionFirstChange = false;\n            }\n        }\n        view.dispatch(tr, { scrollIntoView: true, userEvent });\n    }\n    else if (newSel && !newSel.main.eq(sel)) {\n        let scrollIntoView = false, userEvent = \"select\";\n        if (view.inputState.lastSelectionTime > Date.now() - 50) {\n            if (view.inputState.lastSelectionOrigin == \"select\")\n                scrollIntoView = true;\n            userEvent = view.inputState.lastSelectionOrigin;\n        }\n        view.dispatch({ selection: newSel, scrollIntoView, userEvent });\n    }\n}\nfunction findDiff(a, b, preferredPos, preferredSide) {\n    let minLen = Math.min(a.length, b.length);\n    let from = 0;\n    while (from < minLen && a.charCodeAt(from) == b.charCodeAt(from))\n        from++;\n    if (from == minLen && a.length == b.length)\n        return null;\n    let toA = a.length, toB = b.length;\n    while (toA > 0 && toB > 0 && a.charCodeAt(toA - 1) == b.charCodeAt(toB - 1)) {\n        toA--;\n        toB--;\n    }\n    if (preferredSide == \"end\") {\n        let adjust = Math.max(0, from - Math.min(toA, toB));\n        preferredPos -= toA + adjust - from;\n    }\n    if (toA < from && a.length < b.length) {\n        let move = preferredPos <= from && preferredPos >= toA ? from - preferredPos : 0;\n        from -= move;\n        toB = from + (toB - toA);\n        toA = from;\n    }\n    else if (toB < from) {\n        let move = preferredPos <= from && preferredPos >= toB ? from - preferredPos : 0;\n        from -= move;\n        toA = from + (toA - toB);\n        toB = from;\n    }\n    return { from, toA, toB };\n}\nfunction selectionPoints(view) {\n    let result = [];\n    if (view.root.activeElement != view.contentDOM)\n        return result;\n    let { anchorNode, anchorOffset, focusNode, focusOffset } = view.observer.selectionRange;\n    if (anchorNode) {\n        result.push(new DOMPoint(anchorNode, anchorOffset));\n        if (focusNode != anchorNode || focusOffset != anchorOffset)\n            result.push(new DOMPoint(focusNode, focusOffset));\n    }\n    return result;\n}\nfunction selectionFromPoints(points, base) {\n    if (points.length == 0)\n        return null;\n    let anchor = points[0].pos, head = points.length == 2 ? points[1].pos : anchor;\n    return anchor > -1 && head > -1 ? EditorSelection.single(anchor + base, head + base) : null;\n}\n\n// The editor's update state machine looks something like this:\n//\n//     Idle → Updating ⇆ Idle (unchecked) → Measuring → Idle\n//                                         ↑      ↓\n//                                         Updating (measure)\n//\n// The difference between 'Idle' and 'Idle (unchecked)' lies in\n// whether a layout check has been scheduled. A regular update through\n// the `update` method updates the DOM in a write-only fashion, and\n// relies on a check (scheduled with `requestAnimationFrame`) to make\n// sure everything is where it should be and the viewport covers the\n// visible code. That check continues to measure and then optionally\n// update until it reaches a coherent state.\n/**\nAn editor view represents the editor's user interface. It holds\nthe editable DOM surface, and possibly other elements such as the\nline number gutter. It handles events and dispatches state\ntransactions for editing actions.\n*/\nclass EditorView {\n    /**\n    Construct a new view. You'll usually want to put `view.dom` into\n    your document after creating a view, so that the user can see\n    it.\n    */\n    constructor(\n    /**\n    Initialization options.\n    */\n    config = {}) {\n        this.plugins = [];\n        this.pluginMap = new Map;\n        this.editorAttrs = {};\n        this.contentAttrs = {};\n        this.bidiCache = [];\n        this.destroyed = false;\n        /**\n        @internal\n        */\n        this.updateState = 2 /* Updating */;\n        /**\n        @internal\n        */\n        this.measureScheduled = -1;\n        /**\n        @internal\n        */\n        this.measureRequests = [];\n        this.contentDOM = document.createElement(\"div\");\n        this.scrollDOM = document.createElement(\"div\");\n        this.scrollDOM.tabIndex = -1;\n        this.scrollDOM.className = \"cm-scroller\";\n        this.scrollDOM.appendChild(this.contentDOM);\n        this.announceDOM = document.createElement(\"div\");\n        this.announceDOM.style.cssText = \"position: absolute; top: -10000px\";\n        this.announceDOM.setAttribute(\"aria-live\", \"polite\");\n        this.dom = document.createElement(\"div\");\n        this.dom.appendChild(this.announceDOM);\n        this.dom.appendChild(this.scrollDOM);\n        this._dispatch = config.dispatch || ((tr) => this.update([tr]));\n        this.dispatch = this.dispatch.bind(this);\n        this.root = (config.root || getRoot(config.parent) || document);\n        this.viewState = new ViewState(config.state || EditorState.create());\n        this.plugins = this.state.facet(viewPlugin).map(spec => new PluginInstance(spec));\n        for (let plugin of this.plugins)\n            plugin.update(this);\n        this.observer = new DOMObserver(this, (from, to, typeOver) => {\n            applyDOMChange(this, from, to, typeOver);\n        }, event => {\n            this.inputState.runScrollHandlers(this, event);\n            if (this.observer.intersecting)\n                this.measure();\n        });\n        this.inputState = new InputState(this);\n        this.docView = new DocView(this);\n        this.mountStyles();\n        this.updateAttrs();\n        this.updateState = 0 /* Idle */;\n        ensureGlobalHandler();\n        this.requestMeasure();\n        if (config.parent)\n            config.parent.appendChild(this.dom);\n    }\n    /**\n    The current editor state.\n    */\n    get state() { return this.viewState.state; }\n    /**\n    To be able to display large documents without consuming too much\n    memory or overloading the browser, CodeMirror only draws the\n    code that is visible (plus a margin around it) to the DOM. This\n    property tells you the extent of the current drawn viewport, in\n    document positions.\n    */\n    get viewport() { return this.viewState.viewport; }\n    /**\n    When there are, for example, large collapsed ranges in the\n    viewport, its size can be a lot bigger than the actual visible\n    content. Thus, if you are doing something like styling the\n    content in the viewport, it is preferable to only do so for\n    these ranges, which are the subset of the viewport that is\n    actually drawn.\n    */\n    get visibleRanges() { return this.viewState.visibleRanges; }\n    /**\n    Returns false when the editor is entirely scrolled out of view\n    or otherwise hidden.\n    */\n    get inView() { return this.viewState.inView; }\n    /**\n    Indicates whether the user is currently composing text via\n    [IME](https://en.wikipedia.org/wiki/Input_method).\n    */\n    get composing() { return this.inputState.composing > 0; }\n    dispatch(...input) {\n        this._dispatch(input.length == 1 && input[0] instanceof Transaction ? input[0]\n            : this.state.update(...input));\n    }\n    /**\n    Update the view for the given array of transactions. This will\n    update the visible document and selection to match the state\n    produced by the transactions, and notify view plugins of the\n    change. You should usually call\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead, which uses this\n    as a primitive.\n    */\n    update(transactions) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.update are not allowed while an update is in progress\");\n        let redrawn = false, update;\n        let state = this.state;\n        for (let tr of transactions) {\n            if (tr.startState != state)\n                throw new RangeError(\"Trying to update state with a transaction that doesn't start from the previous state.\");\n            state = tr.state;\n        }\n        if (this.destroyed) {\n            this.viewState.state = state;\n            return;\n        }\n        // When the phrases change, redraw the editor\n        if (state.facet(EditorState.phrases) != this.state.facet(EditorState.phrases))\n            return this.setState(state);\n        update = new ViewUpdate(this, state, transactions);\n        let scrollTarget = null;\n        try {\n            this.updateState = 2 /* Updating */;\n            for (let tr of transactions) {\n                if (scrollTarget)\n                    scrollTarget = scrollTarget.map(tr.changes);\n                if (tr.scrollIntoView) {\n                    let { main } = tr.state.selection;\n                    scrollTarget = new ScrollTarget(main.empty ? main : EditorSelection.cursor(main.head, main.head > main.anchor ? -1 : 1));\n                }\n                for (let e of tr.effects) {\n                    if (e.is(scrollTo))\n                        scrollTarget = new ScrollTarget(e.value);\n                    else if (e.is(centerOn))\n                        scrollTarget = new ScrollTarget(e.value, \"center\");\n                    else if (e.is(scrollIntoView))\n                        scrollTarget = e.value;\n                }\n            }\n            this.viewState.update(update, scrollTarget);\n            this.bidiCache = CachedOrder.update(this.bidiCache, update.changes);\n            if (!update.empty) {\n                this.updatePlugins(update);\n                this.inputState.update(update);\n            }\n            redrawn = this.docView.update(update);\n            if (this.state.facet(styleModule) != this.styleModules)\n                this.mountStyles();\n            this.updateAttrs();\n            this.showAnnouncements(transactions);\n            this.docView.updateSelection(redrawn, transactions.some(tr => tr.isUserEvent(\"select.pointer\")));\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        if (redrawn || scrollTarget || this.viewState.mustEnforceCursorAssoc)\n            this.requestMeasure();\n        if (!update.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(update);\n    }\n    /**\n    Reset the view to the given state. (This will cause the entire\n    document to be redrawn and all view plugins to be reinitialized,\n    so you should probably only use it when the new state isn't\n    derived from the old state. Otherwise, use\n    [`dispatch`](https://codemirror.net/6/docs/ref/#view.EditorView.dispatch) instead.)\n    */\n    setState(newState) {\n        if (this.updateState != 0 /* Idle */)\n            throw new Error(\"Calls to EditorView.setState are not allowed while an update is in progress\");\n        if (this.destroyed) {\n            this.viewState.state = newState;\n            return;\n        }\n        this.updateState = 2 /* Updating */;\n        try {\n            for (let plugin of this.plugins)\n                plugin.destroy(this);\n            this.viewState = new ViewState(newState);\n            this.plugins = newState.facet(viewPlugin).map(spec => new PluginInstance(spec));\n            this.pluginMap.clear();\n            for (let plugin of this.plugins)\n                plugin.update(this);\n            this.docView = new DocView(this);\n            this.inputState.ensureHandlers(this);\n            this.mountStyles();\n            this.updateAttrs();\n            this.bidiCache = [];\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n        }\n        this.requestMeasure();\n    }\n    updatePlugins(update) {\n        let prevSpecs = update.startState.facet(viewPlugin), specs = update.state.facet(viewPlugin);\n        if (prevSpecs != specs) {\n            let newPlugins = [];\n            for (let spec of specs) {\n                let found = prevSpecs.indexOf(spec);\n                if (found < 0) {\n                    newPlugins.push(new PluginInstance(spec));\n                }\n                else {\n                    let plugin = this.plugins[found];\n                    plugin.mustUpdate = update;\n                    newPlugins.push(plugin);\n                }\n            }\n            for (let plugin of this.plugins)\n                if (plugin.mustUpdate != update)\n                    plugin.destroy(this);\n            this.plugins = newPlugins;\n            this.pluginMap.clear();\n            this.inputState.ensureHandlers(this);\n        }\n        else {\n            for (let p of this.plugins)\n                p.mustUpdate = update;\n        }\n        for (let i = 0; i < this.plugins.length; i++)\n            this.plugins[i].update(this);\n    }\n    /**\n    @internal\n    */\n    measure(flush = true) {\n        if (this.destroyed)\n            return;\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.measureScheduled = 0; // Prevent requestMeasure calls from scheduling another animation frame\n        if (flush)\n            this.observer.flush();\n        let updated = null;\n        try {\n            for (let i = 0;; i++) {\n                this.updateState = 1 /* Measuring */;\n                let oldViewport = this.viewport;\n                let changed = this.viewState.measure(this);\n                if (!changed && !this.measureRequests.length && this.viewState.scrollTarget == null)\n                    break;\n                if (i > 5) {\n                    console.warn(this.measureRequests.length\n                        ? \"Measure loop restarted more than 5 times\"\n                        : \"Viewport failed to stabilize\");\n                    break;\n                }\n                let measuring = [];\n                // Only run measure requests in this cycle when the viewport didn't change\n                if (!(changed & 4 /* Viewport */))\n                    [this.measureRequests, measuring] = [measuring, this.measureRequests];\n                let measured = measuring.map(m => {\n                    try {\n                        return m.read(this);\n                    }\n                    catch (e) {\n                        logException(this.state, e);\n                        return BadMeasure;\n                    }\n                });\n                let update = new ViewUpdate(this, this.state), redrawn = false;\n                update.flags |= changed;\n                if (!updated)\n                    updated = update;\n                else\n                    updated.flags |= changed;\n                this.updateState = 2 /* Updating */;\n                if (!update.empty) {\n                    this.updatePlugins(update);\n                    this.inputState.update(update);\n                    this.updateAttrs();\n                    redrawn = this.docView.update(update);\n                }\n                for (let i = 0; i < measuring.length; i++)\n                    if (measured[i] != BadMeasure) {\n                        try {\n                            let m = measuring[i];\n                            if (m.write)\n                                m.write(measured[i], this);\n                        }\n                        catch (e) {\n                            logException(this.state, e);\n                        }\n                    }\n                if (this.viewState.scrollTarget) {\n                    this.docView.scrollIntoView(this.viewState.scrollTarget);\n                    this.viewState.scrollTarget = null;\n                }\n                if (redrawn)\n                    this.docView.updateSelection(true);\n                if (this.viewport.from == oldViewport.from && this.viewport.to == oldViewport.to &&\n                    this.measureRequests.length == 0)\n                    break;\n            }\n        }\n        finally {\n            this.updateState = 0 /* Idle */;\n            this.measureScheduled = -1;\n        }\n        if (updated && !updated.empty)\n            for (let listener of this.state.facet(updateListener))\n                listener(updated);\n    }\n    /**\n    Get the CSS classes for the currently active editor themes.\n    */\n    get themeClasses() {\n        return baseThemeID + \" \" +\n            (this.state.facet(darkTheme) ? baseDarkID : baseLightID) + \" \" +\n            this.state.facet(theme);\n    }\n    updateAttrs() {\n        let editorAttrs = attrsFromFacet(this, editorAttributes, {\n            class: \"cm-editor\" + (this.hasFocus ? \" cm-focused \" : \" \") + this.themeClasses\n        });\n        let contentAttrs = {\n            spellcheck: \"false\",\n            autocorrect: \"off\",\n            autocapitalize: \"off\",\n            translate: \"no\",\n            contenteditable: !this.state.facet(editable) ? \"false\" : \"true\",\n            class: \"cm-content\",\n            style: `${browser.tabSize}: ${this.state.tabSize}`,\n            role: \"textbox\",\n            \"aria-multiline\": \"true\"\n        };\n        if (this.state.readOnly)\n            contentAttrs[\"aria-readonly\"] = \"true\";\n        attrsFromFacet(this, contentAttributes, contentAttrs);\n        this.observer.ignore(() => {\n            updateAttrs(this.contentDOM, this.contentAttrs, contentAttrs);\n            updateAttrs(this.dom, this.editorAttrs, editorAttrs);\n        });\n        this.editorAttrs = editorAttrs;\n        this.contentAttrs = contentAttrs;\n    }\n    showAnnouncements(trs) {\n        let first = true;\n        for (let tr of trs)\n            for (let effect of tr.effects)\n                if (effect.is(EditorView.announce)) {\n                    if (first)\n                        this.announceDOM.textContent = \"\";\n                    first = false;\n                    let div = this.announceDOM.appendChild(document.createElement(\"div\"));\n                    div.textContent = effect.value;\n                }\n    }\n    mountStyles() {\n        this.styleModules = this.state.facet(styleModule);\n        StyleModule.mount(this.root, this.styleModules.concat(baseTheme).reverse());\n    }\n    readMeasured() {\n        if (this.updateState == 2 /* Updating */)\n            throw new Error(\"Reading the editor layout isn't allowed during an update\");\n        if (this.updateState == 0 /* Idle */ && this.measureScheduled > -1)\n            this.measure(false);\n    }\n    /**\n    Schedule a layout measurement, optionally providing callbacks to\n    do custom DOM measuring followed by a DOM write phase. Using\n    this is preferable reading DOM layout directly from, for\n    example, an event handler, because it'll make sure measuring and\n    drawing done by other components is synchronized, avoiding\n    unnecessary DOM layout computations.\n    */\n    requestMeasure(request) {\n        if (this.measureScheduled < 0)\n            this.measureScheduled = requestAnimationFrame(() => this.measure());\n        if (request) {\n            if (request.key != null)\n                for (let i = 0; i < this.measureRequests.length; i++) {\n                    if (this.measureRequests[i].key === request.key) {\n                        this.measureRequests[i] = request;\n                        return;\n                    }\n                }\n            this.measureRequests.push(request);\n        }\n    }\n    /**\n    Collect all values provided by the active plugins for a given\n    field.\n    */\n    pluginField(field) {\n        let result = [];\n        for (let plugin of this.plugins)\n            plugin.update(this).takeField(field, result);\n        return result;\n    }\n    /**\n    Get the value of a specific plugin, if present. Note that\n    plugins that crash can be dropped from a view, so even when you\n    know you registered a given plugin, it is recommended to check\n    the return value of this method.\n    */\n    plugin(plugin) {\n        let known = this.pluginMap.get(plugin);\n        if (known === undefined || known && known.spec != plugin)\n            this.pluginMap.set(plugin, known = this.plugins.find(p => p.spec == plugin) || null);\n        return known && known.update(this).value;\n    }\n    /**\n    The top position of the document, in screen coordinates. This\n    may be negative when the editor is scrolled down. Points\n    directly to the top of the first line, not above the padding.\n    */\n    get documentTop() {\n        return this.contentDOM.getBoundingClientRect().top + this.viewState.paddingTop;\n    }\n    /**\n    Reports the padding above and below the document.\n    */\n    get documentPadding() {\n        return { top: this.viewState.paddingTop, bottom: this.viewState.paddingBottom };\n    }\n    /**\n    Find the line or block widget at the given vertical position.\n    \n    By default, this position is interpreted as a screen position,\n    meaning `docTop` is set to the DOM top position of the editor\n    content (forcing a layout). You can pass a different `docTop`\n    value—for example 0 to interpret `height` as a document-relative\n    position, or a precomputed document top\n    (`view.contentDOM.getBoundingClientRect().top`) to limit layout\n    queries.\n    \n    *Deprecated: use `blockAtHeight` instead.*\n    */\n    blockAtHeight(height, docTop) {\n        let top = ensureTop(docTop, this);\n        return this.elementAtHeight(height - top).moveY(top);\n    }\n    /**\n    Find the text line or block widget at the given vertical\n    position (which is interpreted as relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop)\n    */\n    elementAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.elementAtHeight(height);\n    }\n    /**\n    Find information for the visual line (see\n    [`visualLineAt`](https://codemirror.net/6/docs/ref/#view.EditorView.visualLineAt)) at the given\n    vertical position. The resulting block info might hold another\n    array of block info structs in its `type` field if this line\n    consists of more than one block.\n    \n    Defaults to treating `height` as a screen position. See\n    [`blockAtHeight`](https://codemirror.net/6/docs/ref/#view.EditorView.blockAtHeight) for the\n    interpretation of the `docTop` parameter.\n    \n    *Deprecated: use `lineBlockAtHeight` instead.*\n    */\n    visualLineAtHeight(height, docTop) {\n        let top = ensureTop(docTop, this);\n        return this.lineBlockAtHeight(height - top).moveY(top);\n    }\n    /**\n    Find the line block (see\n    [`lineBlockAt`](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) at the given\n    height.\n    */\n    lineBlockAtHeight(height) {\n        this.readMeasured();\n        return this.viewState.lineBlockAtHeight(height);\n    }\n    /**\n    Iterate over the height information of the visual lines in the\n    viewport. The heights of lines are reported relative to the\n    given document top, which defaults to the screen position of the\n    document (forcing a layout).\n    \n    *Deprecated: use `viewportLineBlocks` instead.*\n    */\n    viewportLines(f, docTop) {\n        let top = ensureTop(docTop, this);\n        for (let line of this.viewportLineBlocks)\n            f(line.moveY(top));\n    }\n    /**\n    Get the extent and vertical position of all [line\n    blocks](https://codemirror.net/6/docs/ref/#view.EditorView.lineBlockAt) in the viewport. Positions\n    are relative to the [top of the\n    document](https://codemirror.net/6/docs/ref/#view.EditorView.documentTop);\n    */\n    get viewportLineBlocks() {\n        return this.viewState.viewportLines;\n    }\n    /**\n    Find the extent and height of the visual line (a range delimited\n    on both sides by either non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^range)\n    line breaks, or the start/end of the document) at the given position.\n    \n    Vertical positions are computed relative to the `docTop`\n    argument, which defaults to 0 for this method. You can pass\n    `view.contentDOM.getBoundingClientRect().top` here to get screen\n    coordinates.\n    \n    *Deprecated: use `lineBlockAt` instead.*\n    */\n    visualLineAt(pos, docTop = 0) {\n        return this.lineBlockAt(pos).moveY(docTop + this.viewState.paddingTop);\n    }\n    /**\n    Find the line block around the given document position. A line\n    block is a range delimited on both sides by either a\n    non-[hidden](https://codemirror.net/6/docs/ref/#view.Decoration^range) line breaks, or the\n    start/end of the document. It will usually just hold a line of\n    text, but may be broken into multiple textblocks by block\n    widgets.\n    */\n    lineBlockAt(pos) {\n        return this.viewState.lineBlockAt(pos);\n    }\n    /**\n    The editor's total content height.\n    */\n    get contentHeight() {\n        return this.viewState.contentHeight;\n    }\n    /**\n    Move a cursor position by [grapheme\n    cluster](https://codemirror.net/6/docs/ref/#text.findClusterBreak). `forward` determines whether\n    the motion is away from the line start, or towards it. Motion in\n    bidirectional text is in visual order, in the editor's [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection). When the start\n    position was the last one on the line, the returned position\n    will be across the line break. If there is no further line, the\n    original position is returned.\n    \n    By default, this method moves over a single cluster. The\n    optional `by` argument can be used to move across more. It will\n    be called with the first cluster as argument, and should return\n    a predicate that determines, for each subsequent cluster,\n    whether it should also be moved over.\n    */\n    moveByChar(start, forward, by) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, by));\n    }\n    /**\n    Move a cursor position across the next group of either\n    [letters](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer) or non-letter\n    non-whitespace characters.\n    */\n    moveByGroup(start, forward) {\n        return skipAtoms(this, start, moveByChar(this, start, forward, initial => byGroup(this, start.head, initial)));\n    }\n    /**\n    Move to the next line boundary in the given direction. If\n    `includeWrap` is true, line wrapping is on, and there is a\n    further wrap point on the current line, the wrap point will be\n    returned. Otherwise this function will return the start or end\n    of the line.\n    */\n    moveToLineBoundary(start, forward, includeWrap = true) {\n        return moveToLineBoundary(this, start, forward, includeWrap);\n    }\n    /**\n    Move a cursor position vertically. When `distance` isn't given,\n    it defaults to moving to the next line (including wrapped\n    lines). Otherwise, `distance` should provide a positive distance\n    in pixels.\n    \n    When `start` has a\n    [`goalColumn`](https://codemirror.net/6/docs/ref/#state.SelectionRange.goalColumn), the vertical\n    motion will use that as a target horizontal position. Otherwise,\n    the cursor's own horizontal position is used. The returned\n    cursor will have its goal column set to whichever column was\n    used.\n    */\n    moveVertically(start, forward, distance) {\n        return skipAtoms(this, start, moveVertically(this, start, forward, distance));\n    }\n    // FIXME remove on next major version\n    scrollPosIntoView(pos) {\n        this.dispatch({ effects: scrollTo.of(EditorSelection.cursor(pos)) });\n    }\n    /**\n    Find the DOM parent node and offset (child offset if `node` is\n    an element, character offset when it is a text node) at the\n    given document position.\n    \n    Note that for positions that aren't currently in\n    `visibleRanges`, the resulting DOM position isn't necessarily\n    meaningful (it may just point before or after a placeholder\n    element).\n    */\n    domAtPos(pos) {\n        return this.docView.domAtPos(pos);\n    }\n    /**\n    Find the document position at the given DOM node. Can be useful\n    for associating positions with DOM events. Will raise an error\n    when `node` isn't part of the editor content.\n    */\n    posAtDOM(node, offset = 0) {\n        return this.docView.posFromDOM(node, offset);\n    }\n    posAtCoords(coords, precise = true) {\n        this.readMeasured();\n        return posAtCoords(this, coords, precise);\n    }\n    /**\n    Get the screen coordinates at the given document position.\n    `side` determines whether the coordinates are based on the\n    element before (-1) or after (1) the position (if no element is\n    available on the given side, the method will transparently use\n    another strategy to get reasonable coordinates).\n    */\n    coordsAtPos(pos, side = 1) {\n        this.readMeasured();\n        let rect = this.docView.coordsAt(pos, side);\n        if (!rect || rect.left == rect.right)\n            return rect;\n        let line = this.state.doc.lineAt(pos), order = this.bidiSpans(line);\n        let span = order[BidiSpan.find(order, pos - line.from, -1, side)];\n        return flattenRect(rect, (span.dir == Direction.LTR) == (side > 0));\n    }\n    /**\n    The default width of a character in the editor. May not\n    accurately reflect the width of all characters (given variable\n    width fonts or styling of invididual ranges).\n    */\n    get defaultCharacterWidth() { return this.viewState.heightOracle.charWidth; }\n    /**\n    The default height of a line in the editor. May not be accurate\n    for all lines.\n    */\n    get defaultLineHeight() { return this.viewState.heightOracle.lineHeight; }\n    /**\n    The text direction\n    ([`direction`](https://developer.mozilla.org/en-US/docs/Web/CSS/direction)\n    CSS property) of the editor.\n    */\n    get textDirection() { return this.viewState.heightOracle.direction; }\n    /**\n    Whether this editor [wraps lines](https://codemirror.net/6/docs/ref/#view.EditorView.lineWrapping)\n    (as determined by the\n    [`white-space`](https://developer.mozilla.org/en-US/docs/Web/CSS/white-space)\n    CSS property of its content element).\n    */\n    get lineWrapping() { return this.viewState.heightOracle.lineWrapping; }\n    /**\n    Returns the bidirectional text structure of the given line\n    (which should be in the current document) as an array of span\n    objects. The order of these spans matches the [text\n    direction](https://codemirror.net/6/docs/ref/#view.EditorView.textDirection)—if that is\n    left-to-right, the leftmost spans come first, otherwise the\n    rightmost spans come first.\n    */\n    bidiSpans(line) {\n        if (line.length > MaxBidiLine)\n            return trivialOrder(line.length);\n        let dir = this.textDirection;\n        for (let entry of this.bidiCache)\n            if (entry.from == line.from && entry.dir == dir)\n                return entry.order;\n        let order = computeOrder(line.text, this.textDirection);\n        this.bidiCache.push(new CachedOrder(line.from, line.to, dir, order));\n        return order;\n    }\n    /**\n    Check whether the editor has focus.\n    */\n    get hasFocus() {\n        var _a;\n        // Safari return false for hasFocus when the context menu is open\n        // or closing, which leads us to ignore selection changes from the\n        // context menu because it looks like the editor isn't focused.\n        // This kludges around that.\n        return (document.hasFocus() || browser.safari && ((_a = this.inputState) === null || _a === void 0 ? void 0 : _a.lastContextMenu) > Date.now() - 3e4) &&\n            this.root.activeElement == this.contentDOM;\n    }\n    /**\n    Put focus on the editor.\n    */\n    focus() {\n        this.observer.ignore(() => {\n            focusPreventScroll(this.contentDOM);\n            this.docView.updateSelection();\n        });\n    }\n    /**\n    Clean up this editor view, removing its element from the\n    document, unregistering event handlers, and notifying\n    plugins. The view instance can no longer be used after\n    calling this.\n    */\n    destroy() {\n        for (let plugin of this.plugins)\n            plugin.destroy(this);\n        this.plugins = [];\n        this.inputState.destroy();\n        this.dom.remove();\n        this.observer.destroy();\n        if (this.measureScheduled > -1)\n            cancelAnimationFrame(this.measureScheduled);\n        this.destroyed = true;\n    }\n    /**\n    Returns an effect that can be\n    [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a transaction to\n    cause it to scroll the given position or range into view.\n    */\n    static scrollIntoView(pos, options = {}) {\n        return scrollIntoView.of(new ScrollTarget(typeof pos == \"number\" ? EditorSelection.cursor(pos) : pos, options.y, options.x, options.yMargin, options.xMargin));\n    }\n    /**\n    Facet that can be used to add DOM event handlers. The value\n    should be an object mapping event names to handler functions. The\n    first such function to return true will be assumed to have handled\n    that event, and no other handlers or built-in behavior will be\n    activated for it.\n    These are registered on the [content\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.contentDOM), except for `scroll`\n    handlers, which will be called any time the editor's [scroll\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.scrollDOM) or one of its parent nodes\n    is scrolled.\n    */\n    static domEventHandlers(handlers) {\n        return ViewPlugin.define(() => ({}), { eventHandlers: handlers });\n    }\n    /**\n    Create a theme extension. The first argument can be a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)\n    style spec providing the styles for the theme. These will be\n    prefixed with a generated class for the style.\n    \n    Because the selectors will be prefixed with a scope class, rule\n    that directly match the editor's [wrapper\n    element](https://codemirror.net/6/docs/ref/#view.EditorView.dom)—to which the scope class will be\n    added—need to be explicitly differentiated by adding an `&` to\n    the selector for that element—for example\n    `&.cm-focused`.\n    \n    When `dark` is set to true, the theme will be marked as dark,\n    which will cause the `&dark` rules from [base\n    themes](https://codemirror.net/6/docs/ref/#view.EditorView^baseTheme) to be used (as opposed to\n    `&light` when a light theme is active).\n    */\n    static theme(spec, options) {\n        let prefix = StyleModule.newName();\n        let result = [theme.of(prefix), styleModule.of(buildTheme(`.${prefix}`, spec))];\n        if (options && options.dark)\n            result.push(darkTheme.of(true));\n        return result;\n    }\n    /**\n    Create an extension that adds styles to the base theme. Like\n    with [`theme`](https://codemirror.net/6/docs/ref/#view.EditorView^theme), use `&` to indicate the\n    place of the editor wrapper element when directly targeting\n    that. You can also use `&dark` or `&light` instead to only\n    target editors with a dark or light theme.\n    */\n    static baseTheme(spec) {\n        return Prec.lowest(styleModule.of(buildTheme(\".\" + baseThemeID, spec, lightDarkIDs)));\n    }\n}\n/**\nEffect that can be [added](https://codemirror.net/6/docs/ref/#state.TransactionSpec.effects) to a\ntransaction to make it scroll the given range into view.\n\n*Deprecated*. Use [`scrollIntoView`](https://codemirror.net/6/docs/ref/#view.EditorView^scrollIntoView) instead.\n*/\nEditorView.scrollTo = scrollTo;\n/**\nEffect that makes the editor scroll the given range to the\ncenter of the visible view.\n\n*Deprecated*. Use [`scrollIntoView`](https://codemirror.net/6/docs/ref/#view.EditorView^scrollIntoView) instead.\n*/\nEditorView.centerOn = centerOn;\n/**\nFacet to add a [style\nmodule](https://github.com/marijnh/style-mod#documentation) to\nan editor view. The view will ensure that the module is\nmounted in its [document\nroot](https://codemirror.net/6/docs/ref/#view.EditorView.constructor^config.root).\n*/\nEditorView.styleModule = styleModule;\n/**\nAn input handler can override the way changes to the editable\nDOM content are handled. Handlers are passed the document\npositions between which the change was found, and the new\ncontent. When one returns true, no further input handlers are\ncalled and the default behavior is prevented.\n*/\nEditorView.inputHandler = inputHandler;\n/**\nAllows you to provide a function that should be called when the\nlibrary catches an exception from an extension (mostly from view\nplugins, but may be used by other extensions to route exceptions\nfrom user-code-provided callbacks). This is mostly useful for\ndebugging and logging. See [`logException`](https://codemirror.net/6/docs/ref/#view.logException).\n*/\nEditorView.exceptionSink = exceptionSink;\n/**\nA facet that can be used to register a function to be called\nevery time the view updates.\n*/\nEditorView.updateListener = updateListener;\n/**\nFacet that controls whether the editor content DOM is editable.\nWhen its highest-precedence value is `false`, the element will\nnot longer have its `contenteditable` attribute set. (Note that\nthis doesn't affect API calls that change the editor content,\neven when those are bound to keys or buttons. See the\n[`readOnly`](https://codemirror.net/6/docs/ref/#state.EditorState.readOnly) facet for that.)\n*/\nEditorView.editable = editable;\n/**\nAllows you to influence the way mouse selection happens. The\nfunctions in this facet will be called for a `mousedown` event\non the editor, and can return an object that overrides the way a\nselection is computed from that mouse click or drag.\n*/\nEditorView.mouseSelectionStyle = mouseSelectionStyle;\n/**\nFacet used to configure whether a given selection drag event\nshould move or copy the selection. The given predicate will be\ncalled with the `mousedown` event, and can return `true` when\nthe drag should move the content.\n*/\nEditorView.dragMovesSelection = dragMovesSelection$1;\n/**\nFacet used to configure whether a given selecting click adds\na new range to the existing selection or replaces it entirely.\n*/\nEditorView.clickAddsSelectionRange = clickAddsSelectionRange;\n/**\nA facet that determines which [decorations](https://codemirror.net/6/docs/ref/#view.Decoration)\nare shown in the view. See also [view\nplugins](https://codemirror.net/6/docs/ref/#view.EditorView^decorations), which have a separate\nmechanism for providing decorations.\n*/\nEditorView.decorations = decorations;\n/**\nFacet that provides additional DOM attributes for the editor's\neditable DOM element.\n*/\nEditorView.contentAttributes = contentAttributes;\n/**\nFacet that provides DOM attributes for the editor's outer\nelement.\n*/\nEditorView.editorAttributes = editorAttributes;\n/**\nAn extension that enables line wrapping in the editor (by\nsetting CSS `white-space` to `pre-wrap` in the content).\n*/\nEditorView.lineWrapping = /*@__PURE__*/EditorView.contentAttributes.of({ \"class\": \"cm-lineWrapping\" });\n/**\nState effect used to include screen reader announcements in a\ntransaction. These will be added to the DOM in a visually hidden\nelement with `aria-live=\"polite\"` set, and should be used to\ndescribe effects that are visually obvious but may not be\nnoticed by screen reader users (such as moving to the next\nsearch match).\n*/\nEditorView.announce = /*@__PURE__*/StateEffect.define();\n// Maximum line length for which we compute accurate bidi info\nconst MaxBidiLine = 4096;\n// FIXME remove this and its callers on next breaking release\nfunction ensureTop(given, view) {\n    return (given == null ? view.contentDOM.getBoundingClientRect().top : given) + view.viewState.paddingTop;\n}\nlet resizeDebounce = -1;\nfunction ensureGlobalHandler() {\n    window.addEventListener(\"resize\", () => {\n        if (resizeDebounce == -1)\n            resizeDebounce = setTimeout(handleResize, 50);\n    });\n}\nfunction handleResize() {\n    resizeDebounce = -1;\n    let found = document.querySelectorAll(\".cm-content\");\n    for (let i = 0; i < found.length; i++) {\n        let docView = ContentView.get(found[i]);\n        if (docView)\n            docView.editorView.requestMeasure();\n    }\n}\nconst BadMeasure = {};\nclass CachedOrder {\n    constructor(from, to, dir, order) {\n        this.from = from;\n        this.to = to;\n        this.dir = dir;\n        this.order = order;\n    }\n    static update(cache, changes) {\n        if (changes.empty)\n            return cache;\n        let result = [], lastDir = cache.length ? cache[cache.length - 1].dir : Direction.LTR;\n        for (let i = Math.max(0, cache.length - 10); i < cache.length; i++) {\n            let entry = cache[i];\n            if (entry.dir == lastDir && !changes.touchesRange(entry.from, entry.to))\n                result.push(new CachedOrder(changes.mapPos(entry.from, 1), changes.mapPos(entry.to, -1), entry.dir, entry.order));\n        }\n        return result;\n    }\n}\nfunction attrsFromFacet(view, facet, base) {\n    for (let sources = view.state.facet(facet), i = sources.length - 1; i >= 0; i--) {\n        let source = sources[i], value = typeof source == \"function\" ? source(view) : source;\n        if (value)\n            combineAttrs(value, base);\n    }\n    return base;\n}\n\nconst currentPlatform = browser.mac ? \"mac\" : browser.windows ? \"win\" : browser.linux ? \"linux\" : \"key\";\nfunction normalizeKeyName(name, platform) {\n    const parts = name.split(/-(?!$)/);\n    let result = parts[parts.length - 1];\n    if (result == \"Space\")\n        result = \" \";\n    let alt, ctrl, shift, meta;\n    for (let i = 0; i < parts.length - 1; ++i) {\n        const mod = parts[i];\n        if (/^(cmd|meta|m)$/i.test(mod))\n            meta = true;\n        else if (/^a(lt)?$/i.test(mod))\n            alt = true;\n        else if (/^(c|ctrl|control)$/i.test(mod))\n            ctrl = true;\n        else if (/^s(hift)?$/i.test(mod))\n            shift = true;\n        else if (/^mod$/i.test(mod)) {\n            if (platform == \"mac\")\n                meta = true;\n            else\n                ctrl = true;\n        }\n        else\n            throw new Error(\"Unrecognized modifier name: \" + mod);\n    }\n    if (alt)\n        result = \"Alt-\" + result;\n    if (ctrl)\n        result = \"Ctrl-\" + result;\n    if (meta)\n        result = \"Meta-\" + result;\n    if (shift)\n        result = \"Shift-\" + result;\n    return result;\n}\nfunction modifiers(name, event, shift) {\n    if (event.altKey)\n        name = \"Alt-\" + name;\n    if (event.ctrlKey)\n        name = \"Ctrl-\" + name;\n    if (event.metaKey)\n        name = \"Meta-\" + name;\n    if (shift !== false && event.shiftKey)\n        name = \"Shift-\" + name;\n    return name;\n}\nconst handleKeyEvents = /*@__PURE__*/EditorView.domEventHandlers({\n    keydown(event, view) {\n        return runHandlers(getKeymap(view.state), event, view, \"editor\");\n    }\n});\n/**\nFacet used for registering keymaps.\n\nYou can add multiple keymaps to an editor. Their priorities\ndetermine their precedence (the ones specified early or with high\npriority get checked first). When a handler has returned `true`\nfor a given key, no further handlers are called.\n*/\nconst keymap = /*@__PURE__*/Facet.define({ enables: handleKeyEvents });\nconst Keymaps = /*@__PURE__*/new WeakMap();\n// This is hidden behind an indirection, rather than directly computed\n// by the facet, to keep internal types out of the facet's type.\nfunction getKeymap(state) {\n    let bindings = state.facet(keymap);\n    let map = Keymaps.get(bindings);\n    if (!map)\n        Keymaps.set(bindings, map = buildKeymap(bindings.reduce((a, b) => a.concat(b), [])));\n    return map;\n}\n/**\nRun the key handlers registered for a given scope. The event\nobject should be `\"keydown\"` event. Returns true if any of the\nhandlers handled it.\n*/\nfunction runScopeHandlers(view, event, scope) {\n    return runHandlers(getKeymap(view.state), event, view, scope);\n}\nlet storedPrefix = null;\nconst PrefixTimeout = 4000;\nfunction buildKeymap(bindings, platform = currentPlatform) {\n    let bound = Object.create(null);\n    let isPrefix = Object.create(null);\n    let checkPrefix = (name, is) => {\n        let current = isPrefix[name];\n        if (current == null)\n            isPrefix[name] = is;\n        else if (current != is)\n            throw new Error(\"Key binding \" + name + \" is used both as a regular binding and as a multi-stroke prefix\");\n    };\n    let add = (scope, key, command, preventDefault) => {\n        let scopeObj = bound[scope] || (bound[scope] = Object.create(null));\n        let parts = key.split(/ (?!$)/).map(k => normalizeKeyName(k, platform));\n        for (let i = 1; i < parts.length; i++) {\n            let prefix = parts.slice(0, i).join(\" \");\n            checkPrefix(prefix, true);\n            if (!scopeObj[prefix])\n                scopeObj[prefix] = {\n                    preventDefault: true,\n                    commands: [(view) => {\n                            let ourObj = storedPrefix = { view, prefix, scope };\n                            setTimeout(() => { if (storedPrefix == ourObj)\n                                storedPrefix = null; }, PrefixTimeout);\n                            return true;\n                        }]\n                };\n        }\n        let full = parts.join(\" \");\n        checkPrefix(full, false);\n        let binding = scopeObj[full] || (scopeObj[full] = { preventDefault: false, commands: [] });\n        binding.commands.push(command);\n        if (preventDefault)\n            binding.preventDefault = true;\n    };\n    for (let b of bindings) {\n        let name = b[platform] || b.key;\n        if (!name)\n            continue;\n        for (let scope of b.scope ? b.scope.split(\" \") : [\"editor\"]) {\n            add(scope, name, b.run, b.preventDefault);\n            if (b.shift)\n                add(scope, \"Shift-\" + name, b.shift, b.preventDefault);\n        }\n    }\n    return bound;\n}\nfunction runHandlers(map, event, view, scope) {\n    let name = keyName(event), isChar = name.length == 1 && name != \" \";\n    let prefix = \"\", fallthrough = false;\n    if (storedPrefix && storedPrefix.view == view && storedPrefix.scope == scope) {\n        prefix = storedPrefix.prefix + \" \";\n        if (fallthrough = modifierCodes.indexOf(event.keyCode) < 0)\n            storedPrefix = null;\n    }\n    let runFor = (binding) => {\n        if (binding) {\n            for (let cmd of binding.commands)\n                if (cmd(view))\n                    return true;\n            if (binding.preventDefault)\n                fallthrough = true;\n        }\n        return false;\n    };\n    let scopeObj = map[scope], baseName;\n    if (scopeObj) {\n        if (runFor(scopeObj[prefix + modifiers(name, event, !isChar)]))\n            return true;\n        if (isChar && (event.shiftKey || event.altKey || event.metaKey) &&\n            (baseName = base[event.keyCode]) && baseName != name) {\n            if (runFor(scopeObj[prefix + modifiers(baseName, event, true)]))\n                return true;\n        }\n        else if (isChar && event.shiftKey) {\n            if (runFor(scopeObj[prefix + modifiers(name, event, true)]))\n                return true;\n        }\n    }\n    return fallthrough;\n}\n\nconst CanHidePrimary = !browser.ios; // FIXME test IE\nconst selectionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            cursorBlinkRate: 1200,\n            drawRangeCursor: true\n        }, {\n            cursorBlinkRate: (a, b) => Math.min(a, b),\n            drawRangeCursor: (a, b) => a || b\n        });\n    }\n});\n/**\nReturns an extension that hides the browser's native selection and\ncursor, replacing the selection with a background behind the text\n(with the `cm-selectionBackground` class), and the\ncursors with elements overlaid over the code (using\n`cm-cursor-primary` and `cm-cursor-secondary`).\n\nThis allows the editor to display secondary selection ranges, and\ntends to produce a type of selection more in line with that users\nexpect in a text editor (the native selection styling will often\nleave gaps between lines and won't fill the horizontal space after\na line when the selection continues past it).\n\nIt does have a performance cost, in that it requires an extra DOM\nlayout cycle for many updates (the selection is drawn based on DOM\nlayout information that's only available after laying out the\ncontent).\n*/\nfunction drawSelection(config = {}) {\n    return [\n        selectionConfig.of(config),\n        drawSelectionPlugin,\n        hideNativeSelection\n    ];\n}\nclass Piece {\n    constructor(left, top, width, height, className) {\n        this.left = left;\n        this.top = top;\n        this.width = width;\n        this.height = height;\n        this.className = className;\n    }\n    draw() {\n        let elt = document.createElement(\"div\");\n        elt.className = this.className;\n        this.adjust(elt);\n        return elt;\n    }\n    adjust(elt) {\n        elt.style.left = this.left + \"px\";\n        elt.style.top = this.top + \"px\";\n        if (this.width >= 0)\n            elt.style.width = this.width + \"px\";\n        elt.style.height = this.height + \"px\";\n    }\n    eq(p) {\n        return this.left == p.left && this.top == p.top && this.width == p.width && this.height == p.height &&\n            this.className == p.className;\n    }\n}\nconst drawSelectionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.rangePieces = [];\n        this.cursors = [];\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawSel.bind(this) };\n        this.selectionLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.selectionLayer.className = \"cm-selectionLayer\";\n        this.selectionLayer.setAttribute(\"aria-hidden\", \"true\");\n        this.cursorLayer = view.scrollDOM.appendChild(document.createElement(\"div\"));\n        this.cursorLayer.className = \"cm-cursorLayer\";\n        this.cursorLayer.setAttribute(\"aria-hidden\", \"true\");\n        view.requestMeasure(this.measureReq);\n        this.setBlinkRate();\n    }\n    setBlinkRate() {\n        this.cursorLayer.style.animationDuration = this.view.state.facet(selectionConfig).cursorBlinkRate + \"ms\";\n    }\n    update(update) {\n        let confChanged = update.startState.facet(selectionConfig) != update.state.facet(selectionConfig);\n        if (confChanged || update.selectionSet || update.geometryChanged || update.viewportChanged)\n            this.view.requestMeasure(this.measureReq);\n        if (update.transactions.some(tr => tr.scrollIntoView))\n            this.cursorLayer.style.animationName = this.cursorLayer.style.animationName == \"cm-blink\" ? \"cm-blink2\" : \"cm-blink\";\n        if (confChanged)\n            this.setBlinkRate();\n    }\n    readPos() {\n        let { state } = this.view, conf = state.facet(selectionConfig);\n        let rangePieces = state.selection.ranges.map(r => r.empty ? [] : measureRange(this.view, r)).reduce((a, b) => a.concat(b));\n        let cursors = [];\n        for (let r of state.selection.ranges) {\n            let prim = r == state.selection.main;\n            if (r.empty ? !prim || CanHidePrimary : conf.drawRangeCursor) {\n                let piece = measureCursor(this.view, r, prim);\n                if (piece)\n                    cursors.push(piece);\n            }\n        }\n        return { rangePieces, cursors };\n    }\n    drawSel({ rangePieces, cursors }) {\n        if (rangePieces.length != this.rangePieces.length || rangePieces.some((p, i) => !p.eq(this.rangePieces[i]))) {\n            this.selectionLayer.textContent = \"\";\n            for (let p of rangePieces)\n                this.selectionLayer.appendChild(p.draw());\n            this.rangePieces = rangePieces;\n        }\n        if (cursors.length != this.cursors.length || cursors.some((c, i) => !c.eq(this.cursors[i]))) {\n            let oldCursors = this.cursorLayer.children;\n            if (oldCursors.length !== cursors.length) {\n                this.cursorLayer.textContent = \"\";\n                for (const c of cursors)\n                    this.cursorLayer.appendChild(c.draw());\n            }\n            else {\n                cursors.forEach((c, idx) => c.adjust(oldCursors[idx]));\n            }\n            this.cursors = cursors;\n        }\n    }\n    destroy() {\n        this.selectionLayer.remove();\n        this.cursorLayer.remove();\n    }\n});\nconst themeSpec = {\n    \".cm-line\": {\n        \"& ::selection\": { backgroundColor: \"transparent !important\" },\n        \"&::selection\": { backgroundColor: \"transparent !important\" }\n    }\n};\nif (CanHidePrimary)\n    themeSpec[\".cm-line\"].caretColor = \"transparent !important\";\nconst hideNativeSelection = /*@__PURE__*/Prec.highest(/*@__PURE__*/EditorView.theme(themeSpec));\nfunction getBase(view) {\n    let rect = view.scrollDOM.getBoundingClientRect();\n    let left = view.textDirection == Direction.LTR ? rect.left : rect.right - view.scrollDOM.clientWidth;\n    return { left: left - view.scrollDOM.scrollLeft, top: rect.top - view.scrollDOM.scrollTop };\n}\nfunction wrappedLine(view, pos, inside) {\n    let range = EditorSelection.cursor(pos);\n    return { from: Math.max(inside.from, view.moveToLineBoundary(range, false, true).from),\n        to: Math.min(inside.to, view.moveToLineBoundary(range, true, true).from),\n        type: BlockType.Text };\n}\nfunction blockAt(view, pos) {\n    let line = view.lineBlockAt(pos);\n    if (Array.isArray(line.type))\n        for (let l of line.type) {\n            if (l.to > pos || l.to == pos && (l.to == line.to || l.type == BlockType.Text))\n                return l;\n        }\n    return line;\n}\nfunction measureRange(view, range) {\n    if (range.to <= view.viewport.from || range.from >= view.viewport.to)\n        return [];\n    let from = Math.max(range.from, view.viewport.from), to = Math.min(range.to, view.viewport.to);\n    let ltr = view.textDirection == Direction.LTR;\n    let content = view.contentDOM, contentRect = content.getBoundingClientRect(), base = getBase(view);\n    let lineStyle = window.getComputedStyle(content.firstChild);\n    let leftSide = contentRect.left + parseInt(lineStyle.paddingLeft) + Math.min(0, parseInt(lineStyle.textIndent));\n    let rightSide = contentRect.right - parseInt(lineStyle.paddingRight);\n    let startBlock = blockAt(view, from), endBlock = blockAt(view, to);\n    let visualStart = startBlock.type == BlockType.Text ? startBlock : null;\n    let visualEnd = endBlock.type == BlockType.Text ? endBlock : null;\n    if (view.lineWrapping) {\n        if (visualStart)\n            visualStart = wrappedLine(view, from, visualStart);\n        if (visualEnd)\n            visualEnd = wrappedLine(view, to, visualEnd);\n    }\n    if (visualStart && visualEnd && visualStart.from == visualEnd.from) {\n        return pieces(drawForLine(range.from, range.to, visualStart));\n    }\n    else {\n        let top = visualStart ? drawForLine(range.from, null, visualStart) : drawForWidget(startBlock, false);\n        let bottom = visualEnd ? drawForLine(null, range.to, visualEnd) : drawForWidget(endBlock, true);\n        let between = [];\n        if ((visualStart || startBlock).to < (visualEnd || endBlock).from - 1)\n            between.push(piece(leftSide, top.bottom, rightSide, bottom.top));\n        else if (top.bottom < bottom.top && view.elementAtHeight((top.bottom + bottom.top) / 2).type == BlockType.Text)\n            top.bottom = bottom.top = (top.bottom + bottom.top) / 2;\n        return pieces(top).concat(between).concat(pieces(bottom));\n    }\n    function piece(left, top, right, bottom) {\n        return new Piece(left - base.left, top - base.top, right - left, bottom - top, \"cm-selectionBackground\");\n    }\n    function pieces({ top, bottom, horizontal }) {\n        let pieces = [];\n        for (let i = 0; i < horizontal.length; i += 2)\n            pieces.push(piece(horizontal[i], top, horizontal[i + 1], bottom));\n        return pieces;\n    }\n    // Gets passed from/to in line-local positions\n    function drawForLine(from, to, line) {\n        let top = 1e9, bottom = -1e9, horizontal = [];\n        function addSpan(from, fromOpen, to, toOpen, dir) {\n            // Passing 2/-2 is a kludge to force the view to return\n            // coordinates on the proper side of block widgets, since\n            // normalizing the side there, though appropriate for most\n            // coordsAtPos queries, would break selection drawing.\n            let fromCoords = view.coordsAtPos(from, (from == line.to ? -2 : 2));\n            let toCoords = view.coordsAtPos(to, (to == line.from ? 2 : -2));\n            top = Math.min(fromCoords.top, toCoords.top, top);\n            bottom = Math.max(fromCoords.bottom, toCoords.bottom, bottom);\n            if (dir == Direction.LTR)\n                horizontal.push(ltr && fromOpen ? leftSide : fromCoords.left, ltr && toOpen ? rightSide : toCoords.right);\n            else\n                horizontal.push(!ltr && toOpen ? leftSide : toCoords.left, !ltr && fromOpen ? rightSide : fromCoords.right);\n        }\n        let start = from !== null && from !== void 0 ? from : line.from, end = to !== null && to !== void 0 ? to : line.to;\n        // Split the range by visible range and document line\n        for (let r of view.visibleRanges)\n            if (r.to > start && r.from < end) {\n                for (let pos = Math.max(r.from, start), endPos = Math.min(r.to, end);;) {\n                    let docLine = view.state.doc.lineAt(pos);\n                    for (let span of view.bidiSpans(docLine)) {\n                        let spanFrom = span.from + docLine.from, spanTo = span.to + docLine.from;\n                        if (spanFrom >= endPos)\n                            break;\n                        if (spanTo > pos)\n                            addSpan(Math.max(spanFrom, pos), from == null && spanFrom <= start, Math.min(spanTo, endPos), to == null && spanTo >= end, span.dir);\n                    }\n                    pos = docLine.to + 1;\n                    if (pos >= endPos)\n                        break;\n                }\n            }\n        if (horizontal.length == 0)\n            addSpan(start, from == null, end, to == null, view.textDirection);\n        return { top, bottom, horizontal };\n    }\n    function drawForWidget(block, top) {\n        let y = contentRect.top + (top ? block.top : block.bottom);\n        return { top: y, bottom: y, horizontal: [] };\n    }\n}\nfunction measureCursor(view, cursor, primary) {\n    let pos = view.coordsAtPos(cursor.head, cursor.assoc || 1);\n    if (!pos)\n        return null;\n    let base = getBase(view);\n    return new Piece(pos.left - base.left, pos.top - base.top, -1, pos.bottom - pos.top, primary ? \"cm-cursor cm-cursor-primary\" : \"cm-cursor cm-cursor-secondary\");\n}\n\nconst setDropCursorPos = /*@__PURE__*/StateEffect.define({\n    map(pos, mapping) { return pos == null ? null : mapping.mapPos(pos); }\n});\nconst dropCursorPos = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(pos, tr) {\n        if (pos != null)\n            pos = tr.changes.mapPos(pos);\n        return tr.effects.reduce((pos, e) => e.is(setDropCursorPos) ? e.value : pos, pos);\n    }\n});\nconst drawDropCursor = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.cursor = null;\n        this.measureReq = { read: this.readPos.bind(this), write: this.drawCursor.bind(this) };\n    }\n    update(update) {\n        var _a;\n        let cursorPos = update.state.field(dropCursorPos);\n        if (cursorPos == null) {\n            if (this.cursor != null) {\n                (_a = this.cursor) === null || _a === void 0 ? void 0 : _a.remove();\n                this.cursor = null;\n            }\n        }\n        else {\n            if (!this.cursor) {\n                this.cursor = this.view.scrollDOM.appendChild(document.createElement(\"div\"));\n                this.cursor.className = \"cm-dropCursor\";\n            }\n            if (update.startState.field(dropCursorPos) != cursorPos || update.docChanged || update.geometryChanged)\n                this.view.requestMeasure(this.measureReq);\n        }\n    }\n    readPos() {\n        let pos = this.view.state.field(dropCursorPos);\n        let rect = pos != null && this.view.coordsAtPos(pos);\n        if (!rect)\n            return null;\n        let outer = this.view.scrollDOM.getBoundingClientRect();\n        return {\n            left: rect.left - outer.left + this.view.scrollDOM.scrollLeft,\n            top: rect.top - outer.top + this.view.scrollDOM.scrollTop,\n            height: rect.bottom - rect.top\n        };\n    }\n    drawCursor(pos) {\n        if (this.cursor) {\n            if (pos) {\n                this.cursor.style.left = pos.left + \"px\";\n                this.cursor.style.top = pos.top + \"px\";\n                this.cursor.style.height = pos.height + \"px\";\n            }\n            else {\n                this.cursor.style.left = \"-100000px\";\n            }\n        }\n    }\n    destroy() {\n        if (this.cursor)\n            this.cursor.remove();\n    }\n    setDropPos(pos) {\n        if (this.view.state.field(dropCursorPos) != pos)\n            this.view.dispatch({ effects: setDropCursorPos.of(pos) });\n    }\n}, {\n    eventHandlers: {\n        dragover(event) {\n            this.setDropPos(this.view.posAtCoords({ x: event.clientX, y: event.clientY }));\n        },\n        dragleave(event) {\n            if (event.target == this.view.contentDOM || !this.view.contentDOM.contains(event.relatedTarget))\n                this.setDropPos(null);\n        },\n        dragend() {\n            this.setDropPos(null);\n        },\n        drop() {\n            this.setDropPos(null);\n        }\n    }\n});\n/**\nDraws a cursor at the current drop position when something is\ndragged over the editor.\n*/\nfunction dropCursor() {\n    return [dropCursorPos, drawDropCursor];\n}\n\nfunction iterMatches(doc, re, from, to, f) {\n    re.lastIndex = 0;\n    for (let cursor = doc.iterRange(from, to), pos = from, m; !cursor.next().done; pos += cursor.value.length) {\n        if (!cursor.lineBreak)\n            while (m = re.exec(cursor.value))\n                f(pos + m.index, pos + m.index + m[0].length, m);\n    }\n}\nfunction matchRanges(view, maxLength) {\n    let visible = view.visibleRanges;\n    if (visible.length == 1 && visible[0].from == view.viewport.from &&\n        visible[0].to == view.viewport.to)\n        return visible;\n    let result = [];\n    for (let { from, to } of visible) {\n        from = Math.max(view.state.doc.lineAt(from).from, from - maxLength);\n        to = Math.min(view.state.doc.lineAt(to).to, to + maxLength);\n        if (result.length && result[result.length - 1].to >= from)\n            result[result.length - 1].to = to;\n        else\n            result.push({ from, to });\n    }\n    return result;\n}\n/**\nHelper class used to make it easier to maintain decorations on\nvisible code that matches a given regular expression. To be used\nin a [view plugin](https://codemirror.net/6/docs/ref/#view.ViewPlugin). Instances of this object\nrepresent a matching configuration.\n*/\nclass MatchDecorator {\n    /**\n    Create a decorator.\n    */\n    constructor(config) {\n        let { regexp, decoration, boundary, maxLength = 1000 } = config;\n        if (!regexp.global)\n            throw new RangeError(\"The regular expression given to MatchDecorator should have its 'g' flag set\");\n        this.regexp = regexp;\n        this.getDeco = typeof decoration == \"function\" ? decoration : () => decoration;\n        this.boundary = boundary;\n        this.maxLength = maxLength;\n    }\n    /**\n    Compute the full set of decorations for matches in the given\n    view's viewport. You'll want to call this when initializing your\n    plugin.\n    */\n    createDeco(view) {\n        let build = new RangeSetBuilder();\n        for (let { from, to } of matchRanges(view, this.maxLength))\n            iterMatches(view.state.doc, this.regexp, from, to, (a, b, m) => build.add(a, b, this.getDeco(m, view, a)));\n        return build.finish();\n    }\n    /**\n    Update a set of decorations for a view update. `deco` _must_ be\n    the set of decorations produced by _this_ `MatchDecorator` for\n    the view state before the update.\n    */\n    updateDeco(update, deco) {\n        let changeFrom = 1e9, changeTo = -1;\n        if (update.docChanged)\n            update.changes.iterChanges((_f, _t, from, to) => {\n                if (to > update.view.viewport.from && from < update.view.viewport.to) {\n                    changeFrom = Math.min(from, changeFrom);\n                    changeTo = Math.max(to, changeTo);\n                }\n            });\n        if (update.viewportChanged || changeTo - changeFrom > 1000)\n            return this.createDeco(update.view);\n        if (changeTo > -1)\n            return this.updateRange(update.view, deco.map(update.changes), changeFrom, changeTo);\n        return deco;\n    }\n    updateRange(view, deco, updateFrom, updateTo) {\n        for (let r of view.visibleRanges) {\n            let from = Math.max(r.from, updateFrom), to = Math.min(r.to, updateTo);\n            if (to > from) {\n                let fromLine = view.state.doc.lineAt(from), toLine = fromLine.to < to ? view.state.doc.lineAt(to) : fromLine;\n                let start = Math.max(r.from, fromLine.from), end = Math.min(r.to, toLine.to);\n                if (this.boundary) {\n                    for (; from > fromLine.from; from--)\n                        if (this.boundary.test(fromLine.text[from - 1 - fromLine.from])) {\n                            start = from;\n                            break;\n                        }\n                    for (; to < toLine.to; to++)\n                        if (this.boundary.test(toLine.text[to - toLine.from])) {\n                            end = to;\n                            break;\n                        }\n                }\n                let ranges = [], m;\n                if (fromLine == toLine) {\n                    this.regexp.lastIndex = start - fromLine.from;\n                    while ((m = this.regexp.exec(fromLine.text)) && m.index < end - fromLine.from) {\n                        let pos = m.index + fromLine.from;\n                        ranges.push(this.getDeco(m, view, pos).range(pos, pos + m[0].length));\n                    }\n                }\n                else {\n                    iterMatches(view.state.doc, this.regexp, start, end, (from, to, m) => ranges.push(this.getDeco(m, view, from).range(from, to)));\n                }\n                deco = deco.update({ filterFrom: start, filterTo: end, filter: (from, to) => from < start || to > end, add: ranges });\n            }\n        }\n        return deco;\n    }\n}\n\nconst UnicodeRegexpSupport = /x/.unicode != null ? \"gu\" : \"g\";\nconst Specials = /*@__PURE__*/new RegExp(\"[\\u0000-\\u0008\\u000a-\\u001f\\u007f-\\u009f\\u00ad\\u061c\\u200b\\u200e\\u200f\\u2028\\u2029\\u202d\\u202e\\ufeff\\ufff9-\\ufffc]\", UnicodeRegexpSupport);\nconst Names = {\n    0: \"null\",\n    7: \"bell\",\n    8: \"backspace\",\n    10: \"newline\",\n    11: \"vertical tab\",\n    13: \"carriage return\",\n    27: \"escape\",\n    8203: \"zero width space\",\n    8204: \"zero width non-joiner\",\n    8205: \"zero width joiner\",\n    8206: \"left-to-right mark\",\n    8207: \"right-to-left mark\",\n    8232: \"line separator\",\n    8237: \"left-to-right override\",\n    8238: \"right-to-left override\",\n    8233: \"paragraph separator\",\n    65279: \"zero width no-break space\",\n    65532: \"object replacement\"\n};\nlet _supportsTabSize = null;\nfunction supportsTabSize() {\n    var _a;\n    if (_supportsTabSize == null && typeof document != \"undefined\" && document.body) {\n        let styles = document.body.style;\n        _supportsTabSize = ((_a = styles.tabSize) !== null && _a !== void 0 ? _a : styles.MozTabSize) != null;\n    }\n    return _supportsTabSize || false;\n}\nconst specialCharConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let config = combineConfig(configs, {\n            render: null,\n            specialChars: Specials,\n            addSpecialChars: null\n        });\n        if (config.replaceTabs = !supportsTabSize())\n            config.specialChars = new RegExp(\"\\t|\" + config.specialChars.source, UnicodeRegexpSupport);\n        if (config.addSpecialChars)\n            config.specialChars = new RegExp(config.specialChars.source + \"|\" + config.addSpecialChars.source, UnicodeRegexpSupport);\n        return config;\n    }\n});\n/**\nReturns an extension that installs highlighting of special\ncharacters.\n*/\nfunction highlightSpecialChars(\n/**\nConfiguration options.\n*/\nconfig = {}) {\n    return [specialCharConfig.of(config), specialCharPlugin()];\n}\nlet _plugin = null;\nfunction specialCharPlugin() {\n    return _plugin || (_plugin = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.decorations = Decoration.none;\n            this.decorationCache = Object.create(null);\n            this.decorator = this.makeDecorator(view.state.facet(specialCharConfig));\n            this.decorations = this.decorator.createDeco(view);\n        }\n        makeDecorator(conf) {\n            return new MatchDecorator({\n                regexp: conf.specialChars,\n                decoration: (m, view, pos) => {\n                    let { doc } = view.state;\n                    let code = codePointAt(m[0], 0);\n                    if (code == 9) {\n                        let line = doc.lineAt(pos);\n                        let size = view.state.tabSize, col = countColumn(line.text, size, pos - line.from);\n                        return Decoration.replace({ widget: new TabWidget((size - (col % size)) * this.view.defaultCharacterWidth) });\n                    }\n                    return this.decorationCache[code] ||\n                        (this.decorationCache[code] = Decoration.replace({ widget: new SpecialCharWidget(conf, code) }));\n                },\n                boundary: conf.replaceTabs ? undefined : /[^]/\n            });\n        }\n        update(update) {\n            let conf = update.state.facet(specialCharConfig);\n            if (update.startState.facet(specialCharConfig) != conf) {\n                this.decorator = this.makeDecorator(conf);\n                this.decorations = this.decorator.createDeco(update.view);\n            }\n            else {\n                this.decorations = this.decorator.updateDeco(update, this.decorations);\n            }\n        }\n    }, {\n        decorations: v => v.decorations\n    }));\n}\nconst DefaultPlaceholder = \"\\u2022\";\n// Assigns placeholder characters from the Control Pictures block to\n// ASCII control characters\nfunction placeholder$1(code) {\n    if (code >= 32)\n        return DefaultPlaceholder;\n    if (code == 10)\n        return \"\\u2424\";\n    return String.fromCharCode(9216 + code);\n}\nclass SpecialCharWidget extends WidgetType {\n    constructor(options, code) {\n        super();\n        this.options = options;\n        this.code = code;\n    }\n    eq(other) { return other.code == this.code; }\n    toDOM(view) {\n        let ph = placeholder$1(this.code);\n        let desc = view.state.phrase(\"Control character\") + \" \" + (Names[this.code] || \"0x\" + this.code.toString(16));\n        let custom = this.options.render && this.options.render(this.code, desc, ph);\n        if (custom)\n            return custom;\n        let span = document.createElement(\"span\");\n        span.textContent = ph;\n        span.title = desc;\n        span.setAttribute(\"aria-label\", desc);\n        span.className = \"cm-specialChar\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\nclass TabWidget extends WidgetType {\n    constructor(width) {\n        super();\n        this.width = width;\n    }\n    eq(other) { return other.width == this.width; }\n    toDOM() {\n        let span = document.createElement(\"span\");\n        span.textContent = \"\\t\";\n        span.className = \"cm-tab\";\n        span.style.width = this.width + \"px\";\n        return span;\n    }\n    ignoreEvent() { return false; }\n}\n\nconst plugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor() {\n        this.height = 1000;\n        this.attrs = { style: \"padding-bottom: 1000px\" };\n    }\n    update(update) {\n        let height = update.view.viewState.editorHeight - update.view.defaultLineHeight;\n        if (height != this.height) {\n            this.height = height;\n            this.attrs = { style: `padding-bottom: ${height}px` };\n        }\n    }\n});\n/**\nReturns an extension that makes sure the content has a bottom\nmargin equivalent to the height of the editor, minus one line\nheight, so that every line in the document can be scrolled to the\ntop of the editor.\n\nThis is only meaningful when the editor is scrollable, and should\nnot be enabled in editors that take the size of their content.\n*/\nfunction scrollPastEnd() {\n    return [plugin, contentAttributes.of(view => { var _a; return ((_a = view.plugin(plugin)) === null || _a === void 0 ? void 0 : _a.attrs) || null; })];\n}\n\n/**\nMark lines that have a cursor on them with the `\"cm-activeLine\"`\nDOM class.\n*/\nfunction highlightActiveLine() {\n    return activeLineHighlighter;\n}\nconst lineDeco = /*@__PURE__*/Decoration.line({ class: \"cm-activeLine\" });\nconst activeLineHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.docChanged || update.selectionSet)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let lastLineStart = -1, deco = [];\n        for (let r of view.state.selection.ranges) {\n            if (!r.empty)\n                return Decoration.none;\n            let line = view.lineBlockAt(r.head);\n            if (line.from > lastLineStart) {\n                deco.push(lineDeco.range(line.from));\n                lastLineStart = line.from;\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\n\nclass Placeholder extends WidgetType {\n    constructor(content) {\n        super();\n        this.content = content;\n    }\n    toDOM() {\n        let wrap = document.createElement(\"span\");\n        wrap.className = \"cm-placeholder\";\n        wrap.style.pointerEvents = \"none\";\n        wrap.appendChild(typeof this.content == \"string\" ? document.createTextNode(this.content) : this.content);\n        if (typeof this.content == \"string\")\n            wrap.setAttribute(\"aria-label\", \"placeholder \" + this.content);\n        else\n            wrap.setAttribute(\"aria-hidden\", \"true\");\n        return wrap;\n    }\n    ignoreEvent() { return false; }\n}\n/**\nExtension that enables a placeholder—a piece of example content\nto show when the editor is empty.\n*/\nfunction placeholder(content) {\n    return ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.view = view;\n            this.placeholder = Decoration.set([Decoration.widget({ widget: new Placeholder(content), side: 1 }).range(0)]);\n        }\n        get decorations() { return this.view.state.doc.length ? Decoration.none : this.placeholder; }\n    }, { decorations: v => v.decorations });\n}\n\n/**\n@internal\n*/\nconst __test = { HeightMap, HeightOracle, MeasuredHeights, QueryType, ChangedRange, computeOrder, moveVisually };\n\nexport { BidiSpan, BlockInfo, BlockType, Decoration, Direction, EditorView, MatchDecorator, PluginField, PluginFieldProvider, ViewPlugin, ViewUpdate, WidgetType, __test, drawSelection, dropCursor, highlightActiveLine, highlightSpecialChars, keymap, logException, placeholder, runScopeHandlers, scrollPastEnd };\n","import { Annotation, Facet, combineConfig, StateField, Transaction, ChangeSet, ChangeDesc, EditorSelection, StateEffect } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\n\nconst fromHistory = /*@__PURE__*/Annotation.define();\n/**\nTransaction annotation that will prevent that transaction from\nbeing combined with other transactions in the undo history. Given\n`\"before\"`, it'll prevent merging with previous transactions. With\n`\"after\"`, subsequent transactions won't be combined with this\none. With `\"full\"`, the transaction is isolated on both sides.\n*/\nconst isolateHistory = /*@__PURE__*/Annotation.define();\n/**\nThis facet provides a way to register functions that, given a\ntransaction, provide a set of effects that the history should\nstore when inverting the transaction. This can be used to\nintegrate some kinds of effects in the history, so that they can\nbe undone (and redone again).\n*/\nconst invertedEffects = /*@__PURE__*/Facet.define();\nconst historyConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            minDepth: 100,\n            newGroupDelay: 500\n        }, { minDepth: Math.max, newGroupDelay: Math.min });\n    }\n});\nconst historyField_ = /*@__PURE__*/StateField.define({\n    create() {\n        return HistoryState.empty;\n    },\n    update(state, tr) {\n        let config = tr.state.facet(historyConfig);\n        let fromHist = tr.annotation(fromHistory);\n        if (fromHist) {\n            let item = HistEvent.fromTransaction(tr), from = fromHist.side;\n            let other = from == 0 /* Done */ ? state.undone : state.done;\n            if (item)\n                other = updateBranch(other, other.length, config.minDepth, item);\n            else\n                other = addSelection(other, tr.startState.selection);\n            return new HistoryState(from == 0 /* Done */ ? fromHist.rest : other, from == 0 /* Done */ ? other : fromHist.rest);\n        }\n        let isolate = tr.annotation(isolateHistory);\n        if (isolate == \"full\" || isolate == \"before\")\n            state = state.isolate();\n        if (tr.annotation(Transaction.addToHistory) === false)\n            return !tr.changes.empty ? state.addMapping(tr.changes.desc) : state;\n        let event = HistEvent.fromTransaction(tr);\n        let time = tr.annotation(Transaction.time), userEvent = tr.annotation(Transaction.userEvent);\n        if (event)\n            state = state.addChanges(event, time, userEvent, config.newGroupDelay, config.minDepth);\n        else if (tr.selection)\n            state = state.addSelection(tr.startState.selection, time, userEvent, config.newGroupDelay);\n        if (isolate == \"full\" || isolate == \"after\")\n            state = state.isolate();\n        return state;\n    },\n    toJSON(value) {\n        return { done: value.done.map(e => e.toJSON()), undone: value.undone.map(e => e.toJSON()) };\n    },\n    fromJSON(json) {\n        return new HistoryState(json.done.map(HistEvent.fromJSON), json.undone.map(HistEvent.fromJSON));\n    }\n});\n/**\nCreate a history extension with the given configuration.\n*/\nfunction history(config = {}) {\n    return [\n        historyField_,\n        historyConfig.of(config),\n        EditorView.domEventHandlers({\n            beforeinput(e, view) {\n                let command = e.inputType == \"historyUndo\" ? undo : e.inputType == \"historyRedo\" ? redo : null;\n                if (!command)\n                    return false;\n                e.preventDefault();\n                return command(view);\n            }\n        })\n    ];\n}\n/**\nThe state field used to store the history data. Should probably\nonly be used when you want to\n[serialize](https://codemirror.net/6/docs/ref/#state.EditorState.toJSON) or\n[deserialize](https://codemirror.net/6/docs/ref/#state.EditorState^fromJSON) state objects in a way\nthat preserves history.\n*/\nconst historyField = historyField_;\nfunction cmd(side, selection) {\n    return function ({ state, dispatch }) {\n        if (!selection && state.readOnly)\n            return false;\n        let historyState = state.field(historyField_, false);\n        if (!historyState)\n            return false;\n        let tr = historyState.pop(side, state, selection);\n        if (!tr)\n            return false;\n        dispatch(tr);\n        return true;\n    };\n}\n/**\nUndo a single group of history events. Returns false if no group\nwas available.\n*/\nconst undo = /*@__PURE__*/cmd(0 /* Done */, false);\n/**\nRedo a group of history events. Returns false if no group was\navailable.\n*/\nconst redo = /*@__PURE__*/cmd(1 /* Undone */, false);\n/**\nUndo a selection change.\n*/\nconst undoSelection = /*@__PURE__*/cmd(0 /* Done */, true);\n/**\nRedo a selection change.\n*/\nconst redoSelection = /*@__PURE__*/cmd(1 /* Undone */, true);\nfunction depth(side) {\n    return function (state) {\n        let histState = state.field(historyField_, false);\n        if (!histState)\n            return 0;\n        let branch = side == 0 /* Done */ ? histState.done : histState.undone;\n        return branch.length - (branch.length && !branch[0].changes ? 1 : 0);\n    };\n}\n/**\nThe amount of undoable change events available in a given state.\n*/\nconst undoDepth = /*@__PURE__*/depth(0 /* Done */);\n/**\nThe amount of redoable change events available in a given state.\n*/\nconst redoDepth = /*@__PURE__*/depth(1 /* Undone */);\n// History events store groups of changes or effects that need to be\n// undone/redone together.\nclass HistEvent {\n    constructor(\n    // The changes in this event. Normal events hold at least one\n    // change or effect. But it may be necessary to store selection\n    // events before the first change, in which case a special type of\n    // instance is created which doesn't hold any changes, with\n    // changes == startSelection == undefined\n    changes, \n    // The effects associated with this event\n    effects, mapped, \n    // The selection before this event\n    startSelection, \n    // Stores selection changes after this event, to be used for\n    // selection undo/redo.\n    selectionsAfter) {\n        this.changes = changes;\n        this.effects = effects;\n        this.mapped = mapped;\n        this.startSelection = startSelection;\n        this.selectionsAfter = selectionsAfter;\n    }\n    setSelAfter(after) {\n        return new HistEvent(this.changes, this.effects, this.mapped, this.startSelection, after);\n    }\n    toJSON() {\n        var _a, _b, _c;\n        return {\n            changes: (_a = this.changes) === null || _a === void 0 ? void 0 : _a.toJSON(),\n            mapped: (_b = this.mapped) === null || _b === void 0 ? void 0 : _b.toJSON(),\n            startSelection: (_c = this.startSelection) === null || _c === void 0 ? void 0 : _c.toJSON(),\n            selectionsAfter: this.selectionsAfter.map(s => s.toJSON())\n        };\n    }\n    static fromJSON(json) {\n        return new HistEvent(json.changes && ChangeSet.fromJSON(json.changes), [], json.mapped && ChangeDesc.fromJSON(json.mapped), json.startSelection && EditorSelection.fromJSON(json.startSelection), json.selectionsAfter.map(EditorSelection.fromJSON));\n    }\n    // This does not check `addToHistory` and such, it assumes the\n    // transaction needs to be converted to an item. Returns null when\n    // there are no changes or effects in the transaction.\n    static fromTransaction(tr) {\n        let effects = none;\n        for (let invert of tr.startState.facet(invertedEffects)) {\n            let result = invert(tr);\n            if (result.length)\n                effects = effects.concat(result);\n        }\n        if (!effects.length && tr.changes.empty)\n            return null;\n        return new HistEvent(tr.changes.invert(tr.startState.doc), effects, undefined, tr.startState.selection, none);\n    }\n    static selection(selections) {\n        return new HistEvent(undefined, none, undefined, undefined, selections);\n    }\n}\nfunction updateBranch(branch, to, maxLen, newEvent) {\n    let start = to + 1 > maxLen + 20 ? to - maxLen - 1 : 0;\n    let newBranch = branch.slice(start, to);\n    newBranch.push(newEvent);\n    return newBranch;\n}\nfunction isAdjacent(a, b) {\n    let ranges = [], isAdjacent = false;\n    a.iterChangedRanges((f, t) => ranges.push(f, t));\n    b.iterChangedRanges((_f, _t, f, t) => {\n        for (let i = 0; i < ranges.length;) {\n            let from = ranges[i++], to = ranges[i++];\n            if (t >= from && f <= to)\n                isAdjacent = true;\n        }\n    });\n    return isAdjacent;\n}\nfunction eqSelectionShape(a, b) {\n    return a.ranges.length == b.ranges.length &&\n        a.ranges.filter((r, i) => r.empty != b.ranges[i].empty).length === 0;\n}\nfunction conc(a, b) {\n    return !a.length ? b : !b.length ? a : a.concat(b);\n}\nconst none = [];\nconst MaxSelectionsPerEvent = 200;\nfunction addSelection(branch, selection) {\n    if (!branch.length) {\n        return [HistEvent.selection([selection])];\n    }\n    else {\n        let lastEvent = branch[branch.length - 1];\n        let sels = lastEvent.selectionsAfter.slice(Math.max(0, lastEvent.selectionsAfter.length - MaxSelectionsPerEvent));\n        if (sels.length && sels[sels.length - 1].eq(selection))\n            return branch;\n        sels.push(selection);\n        return updateBranch(branch, branch.length - 1, 1e9, lastEvent.setSelAfter(sels));\n    }\n}\n// Assumes the top item has one or more selectionAfter values\nfunction popSelection(branch) {\n    let last = branch[branch.length - 1];\n    let newBranch = branch.slice();\n    newBranch[branch.length - 1] = last.setSelAfter(last.selectionsAfter.slice(0, last.selectionsAfter.length - 1));\n    return newBranch;\n}\n// Add a mapping to the top event in the given branch. If this maps\n// away all the changes and effects in that item, drop it and\n// propagate the mapping to the next item.\nfunction addMappingToBranch(branch, mapping) {\n    if (!branch.length)\n        return branch;\n    let length = branch.length, selections = none;\n    while (length) {\n        let event = mapEvent(branch[length - 1], mapping, selections);\n        if (event.changes && !event.changes.empty || event.effects.length) { // Event survived mapping\n            let result = branch.slice(0, length);\n            result[length - 1] = event;\n            return result;\n        }\n        else { // Drop this event, since there's no changes or effects left\n            mapping = event.mapped;\n            length--;\n            selections = event.selectionsAfter;\n        }\n    }\n    return selections.length ? [HistEvent.selection(selections)] : none;\n}\nfunction mapEvent(event, mapping, extraSelections) {\n    let selections = conc(event.selectionsAfter.length ? event.selectionsAfter.map(s => s.map(mapping)) : none, extraSelections);\n    // Change-less events don't store mappings (they are always the last event in a branch)\n    if (!event.changes)\n        return HistEvent.selection(selections);\n    let mappedChanges = event.changes.map(mapping), before = mapping.mapDesc(event.changes, true);\n    let fullMapping = event.mapped ? event.mapped.composeDesc(before) : before;\n    return new HistEvent(mappedChanges, StateEffect.mapEffects(event.effects, mapping), fullMapping, event.startSelection.map(before), selections);\n}\nconst joinableUserEvent = /^(input\\.type|delete)($|\\.)/;\nclass HistoryState {\n    constructor(done, undone, prevTime = 0, prevUserEvent = undefined) {\n        this.done = done;\n        this.undone = undone;\n        this.prevTime = prevTime;\n        this.prevUserEvent = prevUserEvent;\n    }\n    isolate() {\n        return this.prevTime ? new HistoryState(this.done, this.undone) : this;\n    }\n    addChanges(event, time, userEvent, newGroupDelay, maxLen) {\n        let done = this.done, lastEvent = done[done.length - 1];\n        if (lastEvent && lastEvent.changes && !lastEvent.changes.empty && event.changes &&\n            (!userEvent || joinableUserEvent.test(userEvent)) &&\n            ((!lastEvent.selectionsAfter.length &&\n                time - this.prevTime < newGroupDelay &&\n                isAdjacent(lastEvent.changes, event.changes)) ||\n                // For compose (but not compose.start) events, always join with previous event\n                userEvent == \"input.type.compose\")) {\n            done = updateBranch(done, done.length - 1, maxLen, new HistEvent(event.changes.compose(lastEvent.changes), conc(event.effects, lastEvent.effects), lastEvent.mapped, lastEvent.startSelection, none));\n        }\n        else {\n            done = updateBranch(done, done.length, maxLen, event);\n        }\n        return new HistoryState(done, none, time, userEvent);\n    }\n    addSelection(selection, time, userEvent, newGroupDelay) {\n        let last = this.done.length ? this.done[this.done.length - 1].selectionsAfter : none;\n        if (last.length > 0 &&\n            time - this.prevTime < newGroupDelay &&\n            userEvent == this.prevUserEvent && userEvent && /^select($|\\.)/.test(userEvent) &&\n            eqSelectionShape(last[last.length - 1], selection))\n            return this;\n        return new HistoryState(addSelection(this.done, selection), this.undone, time, userEvent);\n    }\n    addMapping(mapping) {\n        return new HistoryState(addMappingToBranch(this.done, mapping), addMappingToBranch(this.undone, mapping), this.prevTime, this.prevUserEvent);\n    }\n    pop(side, state, selection) {\n        let branch = side == 0 /* Done */ ? this.done : this.undone;\n        if (branch.length == 0)\n            return null;\n        let event = branch[branch.length - 1];\n        if (selection && event.selectionsAfter.length) {\n            return state.update({\n                selection: event.selectionsAfter[event.selectionsAfter.length - 1],\n                annotations: fromHistory.of({ side, rest: popSelection(branch) }),\n                userEvent: side == 0 /* Done */ ? \"select.undo\" : \"select.redo\",\n                scrollIntoView: true\n            });\n        }\n        else if (!event.changes) {\n            return null;\n        }\n        else {\n            let rest = branch.length == 1 ? none : branch.slice(0, branch.length - 1);\n            if (event.mapped)\n                rest = addMappingToBranch(rest, event.mapped);\n            return state.update({\n                changes: event.changes,\n                selection: event.startSelection,\n                effects: event.effects,\n                annotations: fromHistory.of({ side, rest }),\n                filter: false,\n                userEvent: side == 0 /* Done */ ? \"undo\" : \"redo\",\n                scrollIntoView: true\n            });\n        }\n    }\n}\nHistoryState.empty = /*@__PURE__*/new HistoryState(none, none);\n/**\nDefault key bindings for the undo history.\n\n- Mod-z: [`undo`](https://codemirror.net/6/docs/ref/#history.undo).\n- Mod-y (Mod-Shift-z on macOS): [`redo`](https://codemirror.net/6/docs/ref/#history.redo).\n- Mod-u: [`undoSelection`](https://codemirror.net/6/docs/ref/#history.undoSelection).\n- Alt-u (Mod-Shift-u on macOS): [`redoSelection`](https://codemirror.net/6/docs/ref/#history.redoSelection).\n*/\nconst historyKeymap = [\n    { key: \"Mod-z\", run: undo, preventDefault: true },\n    { key: \"Mod-y\", mac: \"Mod-Shift-z\", run: redo, preventDefault: true },\n    { key: \"Mod-u\", run: undoSelection, preventDefault: true },\n    { key: \"Alt-u\", mac: \"Mod-Shift-u\", run: redoSelection, preventDefault: true }\n];\n\nexport { history, historyField, historyKeymap, invertedEffects, isolateHistory, redo, redoDepth, redoSelection, undo, undoDepth, undoSelection };\n","// FIXME profile adding a per-Tree TreeNode cache, validating it by\n// parent pointer\n/// The default maximum length of a `TreeBuffer` node (1024).\nconst DefaultBufferLength = 1024;\nlet nextPropID = 0;\nclass Range {\n    constructor(from, to) {\n        this.from = from;\n        this.to = to;\n    }\n}\n/// Each [node type](#common.NodeType) or [individual tree](#common.Tree)\n/// can have metadata associated with it in props. Instances of this\n/// class represent prop names.\nclass NodeProp {\n    /// Create a new node prop type.\n    constructor(config = {}) {\n        this.id = nextPropID++;\n        this.perNode = !!config.perNode;\n        this.deserialize = config.deserialize || (() => {\n            throw new Error(\"This node type doesn't define a deserialize function\");\n        });\n    }\n    /// This is meant to be used with\n    /// [`NodeSet.extend`](#common.NodeSet.extend) or\n    /// [`LRParser.configure`](#lr.ParserConfig.props) to compute\n    /// prop values for each node type in the set. Takes a [match\n    /// object](#common.NodeType^match) or function that returns undefined\n    /// if the node type doesn't get this prop, and the prop's value if\n    /// it does.\n    add(match) {\n        if (this.perNode)\n            throw new RangeError(\"Can't add per-node props to node types\");\n        if (typeof match != \"function\")\n            match = NodeType.match(match);\n        return (type) => {\n            let result = match(type);\n            return result === undefined ? null : [this, result];\n        };\n    }\n}\n/// Prop that is used to describe matching delimiters. For opening\n/// delimiters, this holds an array of node names (written as a\n/// space-separated string when declaring this prop in a grammar)\n/// for the node types of closing delimiters that match it.\nNodeProp.closedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The inverse of [`closedBy`](#common.NodeProp^closedBy). This is\n/// attached to closing delimiters, holding an array of node names\n/// of types of matching opening delimiters.\nNodeProp.openedBy = new NodeProp({ deserialize: str => str.split(\" \") });\n/// Used to assign node types to groups (for example, all node\n/// types that represent an expression could be tagged with an\n/// `\"Expression\"` group).\nNodeProp.group = new NodeProp({ deserialize: str => str.split(\" \") });\n/// The hash of the [context](#lr.ContextTracker.constructor)\n/// that the node was parsed in, if any. Used to limit reuse of\n/// contextual nodes.\nNodeProp.contextHash = new NodeProp({ perNode: true });\n/// The distance beyond the end of the node that the tokenizer\n/// looked ahead for any of the tokens inside the node. (The LR\n/// parser only stores this when it is larger than 25, for\n/// efficiency reasons.)\nNodeProp.lookAhead = new NodeProp({ perNode: true });\n/// This per-node prop is used to replace a given node, or part of a\n/// node, with another tree. This is useful to include trees from\n/// different languages.\nNodeProp.mounted = new NodeProp({ perNode: true });\n/// A mounted tree, which can be [stored](#common.NodeProp^mounted) on\n/// a tree node to indicate that parts of its content are\n/// represented by another tree.\nclass MountedTree {\n    constructor(\n    /// The inner tree.\n    tree, \n    /// If this is null, this tree replaces the entire node (it will\n    /// be included in the regular iteration instead of its host\n    /// node). If not, only the given ranges are considered to be\n    /// covered by this tree. This is used for trees that are mixed in\n    /// a way that isn't strictly hierarchical. Such mounted trees are\n    /// only entered by [`resolveInner`](#common.Tree.resolveInner)\n    /// and [`enter`](#common.SyntaxNode.enter).\n    overlay, \n    /// The parser used to create this subtree.\n    parser) {\n        this.tree = tree;\n        this.overlay = overlay;\n        this.parser = parser;\n    }\n}\nconst noProps = Object.create(null);\n/// Each node in a syntax tree has a node type associated with it.\nclass NodeType {\n    /// @internal\n    constructor(\n    /// The name of the node type. Not necessarily unique, but if the\n    /// grammar was written properly, different node types with the\n    /// same name within a node set should play the same semantic\n    /// role.\n    name, \n    /// @internal\n    props, \n    /// The id of this node in its set. Corresponds to the term ids\n    /// used in the parser.\n    id, \n    /// @internal\n    flags = 0) {\n        this.name = name;\n        this.props = props;\n        this.id = id;\n        this.flags = flags;\n    }\n    static define(spec) {\n        let props = spec.props && spec.props.length ? Object.create(null) : noProps;\n        let flags = (spec.top ? 1 /* Top */ : 0) | (spec.skipped ? 2 /* Skipped */ : 0) |\n            (spec.error ? 4 /* Error */ : 0) | (spec.name == null ? 8 /* Anonymous */ : 0);\n        let type = new NodeType(spec.name || \"\", props, spec.id, flags);\n        if (spec.props)\n            for (let src of spec.props) {\n                if (!Array.isArray(src))\n                    src = src(type);\n                if (src) {\n                    if (src[0].perNode)\n                        throw new RangeError(\"Can't store a per-node prop on a node type\");\n                    props[src[0].id] = src[1];\n                }\n            }\n        return type;\n    }\n    /// Retrieves a node prop for this type. Will return `undefined` if\n    /// the prop isn't present on this node.\n    prop(prop) { return this.props[prop.id]; }\n    /// True when this is the top node of a grammar.\n    get isTop() { return (this.flags & 1 /* Top */) > 0; }\n    /// True when this node is produced by a skip rule.\n    get isSkipped() { return (this.flags & 2 /* Skipped */) > 0; }\n    /// Indicates whether this is an error node.\n    get isError() { return (this.flags & 4 /* Error */) > 0; }\n    /// When true, this node type doesn't correspond to a user-declared\n    /// named node, for example because it is used to cache repetition.\n    get isAnonymous() { return (this.flags & 8 /* Anonymous */) > 0; }\n    /// Returns true when this node's name or one of its\n    /// [groups](#common.NodeProp^group) matches the given string.\n    is(name) {\n        if (typeof name == 'string') {\n            if (this.name == name)\n                return true;\n            let group = this.prop(NodeProp.group);\n            return group ? group.indexOf(name) > -1 : false;\n        }\n        return this.id == name;\n    }\n    /// Create a function from node types to arbitrary values by\n    /// specifying an object whose property names are node or\n    /// [group](#common.NodeProp^group) names. Often useful with\n    /// [`NodeProp.add`](#common.NodeProp.add). You can put multiple\n    /// names, separated by spaces, in a single property name to map\n    /// multiple node names to a single value.\n    static match(map) {\n        let direct = Object.create(null);\n        for (let prop in map)\n            for (let name of prop.split(\" \"))\n                direct[name] = map[prop];\n        return (node) => {\n            for (let groups = node.prop(NodeProp.group), i = -1; i < (groups ? groups.length : 0); i++) {\n                let found = direct[i < 0 ? node.name : groups[i]];\n                if (found)\n                    return found;\n            }\n        };\n    }\n}\n/// An empty dummy node type to use when no actual type is available.\nNodeType.none = new NodeType(\"\", Object.create(null), 0, 8 /* Anonymous */);\n/// A node set holds a collection of node types. It is used to\n/// compactly represent trees by storing their type ids, rather than a\n/// full pointer to the type object, in a numeric array. Each parser\n/// [has](#lr.LRParser.nodeSet) a node set, and [tree\n/// buffers](#common.TreeBuffer) can only store collections of nodes\n/// from the same set. A set can have a maximum of 2**16 (65536) node\n/// types in it, so that the ids fit into 16-bit typed array slots.\nclass NodeSet {\n    /// Create a set with the given types. The `id` property of each\n    /// type should correspond to its position within the array.\n    constructor(\n    /// The node types in this set, by id.\n    types) {\n        this.types = types;\n        for (let i = 0; i < types.length; i++)\n            if (types[i].id != i)\n                throw new RangeError(\"Node type ids should correspond to array positions when creating a node set\");\n    }\n    /// Create a copy of this set with some node properties added. The\n    /// arguments to this method should be created with\n    /// [`NodeProp.add`](#common.NodeProp.add).\n    extend(...props) {\n        let newTypes = [];\n        for (let type of this.types) {\n            let newProps = null;\n            for (let source of props) {\n                let add = source(type);\n                if (add) {\n                    if (!newProps)\n                        newProps = Object.assign({}, type.props);\n                    newProps[add[0].id] = add[1];\n                }\n            }\n            newTypes.push(newProps ? new NodeType(type.name, newProps, type.id, type.flags) : type);\n        }\n        return new NodeSet(newTypes);\n    }\n}\nconst CachedNode = new WeakMap(), CachedInnerNode = new WeakMap();\n/// A piece of syntax tree. There are two ways to approach these\n/// trees: the way they are actually stored in memory, and the\n/// convenient way.\n///\n/// Syntax trees are stored as a tree of `Tree` and `TreeBuffer`\n/// objects. By packing detail information into `TreeBuffer` leaf\n/// nodes, the representation is made a lot more memory-efficient.\n///\n/// However, when you want to actually work with tree nodes, this\n/// representation is very awkward, so most client code will want to\n/// use the [`TreeCursor`](#common.TreeCursor) or\n/// [`SyntaxNode`](#common.SyntaxNode) interface instead, which provides\n/// a view on some part of this data structure, and can be used to\n/// move around to adjacent nodes.\nclass Tree {\n    /// Construct a new tree. See also [`Tree.build`](#common.Tree^build).\n    constructor(\n    /// The type of the top node.\n    type, \n    /// This node's child nodes.\n    children, \n    /// The positions (offsets relative to the start of this tree) of\n    /// the children.\n    positions, \n    /// The total length of this tree\n    length, \n    /// Per-node [node props](#common.NodeProp) to associate with this node.\n    props) {\n        this.type = type;\n        this.children = children;\n        this.positions = positions;\n        this.length = length;\n        /// @internal\n        this.props = null;\n        if (props && props.length) {\n            this.props = Object.create(null);\n            for (let [prop, value] of props)\n                this.props[typeof prop == \"number\" ? prop : prop.id] = value;\n        }\n    }\n    /// @internal\n    toString() {\n        let mounted = this.prop(NodeProp.mounted);\n        if (mounted && !mounted.overlay)\n            return mounted.tree.toString();\n        let children = \"\";\n        for (let ch of this.children) {\n            let str = ch.toString();\n            if (str) {\n                if (children)\n                    children += \",\";\n                children += str;\n            }\n        }\n        return !this.type.name ? children :\n            (/\\W/.test(this.type.name) && !this.type.isError ? JSON.stringify(this.type.name) : this.type.name) +\n                (children.length ? \"(\" + children + \")\" : \"\");\n    }\n    /// Get a [tree cursor](#common.TreeCursor) rooted at this tree. When\n    /// `pos` is given, the cursor is [moved](#common.TreeCursor.moveTo)\n    /// to the given position and side.\n    cursor(pos, side = 0) {\n        let scope = (pos != null && CachedNode.get(this)) || this.topNode;\n        let cursor = new TreeCursor(scope);\n        if (pos != null) {\n            cursor.moveTo(pos, side);\n            CachedNode.set(this, cursor._tree);\n        }\n        return cursor;\n    }\n    /// Get a [tree cursor](#common.TreeCursor) that, unlike regular\n    /// cursors, doesn't skip through\n    /// [anonymous](#common.NodeType.isAnonymous) nodes and doesn't\n    /// automatically enter mounted nodes.\n    fullCursor() {\n        return new TreeCursor(this.topNode, 1 /* Full */);\n    }\n    /// Get a [syntax node](#common.SyntaxNode) object for the top of the\n    /// tree.\n    get topNode() {\n        return new TreeNode(this, 0, 0, null);\n    }\n    /// Get the [syntax node](#common.SyntaxNode) at the given position.\n    /// If `side` is -1, this will move into nodes that end at the\n    /// position. If 1, it'll move into nodes that start at the\n    /// position. With 0, it'll only enter nodes that cover the position\n    /// from both sides.\n    resolve(pos, side = 0) {\n        let node = resolveNode(CachedNode.get(this) || this.topNode, pos, side, false);\n        CachedNode.set(this, node);\n        return node;\n    }\n    /// Like [`resolve`](#common.Tree.resolve), but will enter\n    /// [overlaid](#common.MountedTree.overlay) nodes, producing a syntax node\n    /// pointing into the innermost overlaid tree at the given position\n    /// (with parent links going through all parent structure, including\n    /// the host trees).\n    resolveInner(pos, side = 0) {\n        let node = resolveNode(CachedInnerNode.get(this) || this.topNode, pos, side, true);\n        CachedInnerNode.set(this, node);\n        return node;\n    }\n    /// Iterate over the tree and its children, calling `enter` for any\n    /// node that touches the `from`/`to` region (if given) before\n    /// running over such a node's children, and `leave` (if given) when\n    /// leaving the node. When `enter` returns `false`, that node will\n    /// not have its children iterated over (or `leave` called).\n    iterate(spec) {\n        let { enter, leave, from = 0, to = this.length } = spec;\n        for (let c = this.cursor(), get = () => c.node;;) {\n            let mustLeave = false;\n            if (c.from <= to && c.to >= from && (c.type.isAnonymous || enter(c.type, c.from, c.to, get) !== false)) {\n                if (c.firstChild())\n                    continue;\n                if (!c.type.isAnonymous)\n                    mustLeave = true;\n            }\n            for (;;) {\n                if (mustLeave && leave)\n                    leave(c.type, c.from, c.to, get);\n                mustLeave = c.type.isAnonymous;\n                if (c.nextSibling())\n                    break;\n                if (!c.parent())\n                    return;\n                mustLeave = true;\n            }\n        }\n    }\n    /// Get the value of the given [node prop](#common.NodeProp) for this\n    /// node. Works with both per-node and per-type props.\n    prop(prop) {\n        return !prop.perNode ? this.type.prop(prop) : this.props ? this.props[prop.id] : undefined;\n    }\n    /// Returns the node's [per-node props](#common.NodeProp.perNode) in a\n    /// format that can be passed to the [`Tree`](#common.Tree)\n    /// constructor.\n    get propValues() {\n        let result = [];\n        if (this.props)\n            for (let id in this.props)\n                result.push([+id, this.props[id]]);\n        return result;\n    }\n    /// Balance the direct children of this tree, producing a copy of\n    /// which may have children grouped into subtrees with type\n    /// [`NodeType.none`](#common.NodeType^none).\n    balance(config = {}) {\n        return this.children.length <= 8 /* BranchFactor */ ? this :\n            balanceRange(NodeType.none, this.children, this.positions, 0, this.children.length, 0, this.length, (children, positions, length) => new Tree(this.type, children, positions, length, this.propValues), config.makeTree || ((children, positions, length) => new Tree(NodeType.none, children, positions, length)));\n    }\n    /// Build a tree from a postfix-ordered buffer of node information,\n    /// or a cursor over such a buffer.\n    static build(data) { return buildTree(data); }\n}\n/// The empty tree\nTree.empty = new Tree(NodeType.none, [], [], 0);\nclass FlatBufferCursor {\n    constructor(buffer, index) {\n        this.buffer = buffer;\n        this.index = index;\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    get pos() { return this.index; }\n    next() { this.index -= 4; }\n    fork() { return new FlatBufferCursor(this.buffer, this.index); }\n}\n/// Tree buffers contain (type, start, end, endIndex) quads for each\n/// node. In such a buffer, nodes are stored in prefix order (parents\n/// before children, with the endIndex of the parent indicating which\n/// children belong to it)\nclass TreeBuffer {\n    /// Create a tree buffer.\n    constructor(\n    /// The buffer's content.\n    buffer, \n    /// The total length of the group of nodes in the buffer.\n    length, \n    /// The node set used in this buffer.\n    set) {\n        this.buffer = buffer;\n        this.length = length;\n        this.set = set;\n    }\n    /// @internal\n    get type() { return NodeType.none; }\n    /// @internal\n    toString() {\n        let result = [];\n        for (let index = 0; index < this.buffer.length;) {\n            result.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result.join(\",\");\n    }\n    /// @internal\n    childString(index) {\n        let id = this.buffer[index], endIndex = this.buffer[index + 3];\n        let type = this.set.types[id], result = type.name;\n        if (/\\W/.test(result) && !type.isError)\n            result = JSON.stringify(result);\n        index += 4;\n        if (endIndex == index)\n            return result;\n        let children = [];\n        while (index < endIndex) {\n            children.push(this.childString(index));\n            index = this.buffer[index + 3];\n        }\n        return result + \"(\" + children.join(\",\") + \")\";\n    }\n    /// @internal\n    findChild(startIndex, endIndex, dir, pos, side) {\n        let { buffer } = this, pick = -1;\n        for (let i = startIndex; i != endIndex; i = buffer[i + 3]) {\n            if (checkSide(side, pos, buffer[i + 1], buffer[i + 2])) {\n                pick = i;\n                if (dir > 0)\n                    break;\n            }\n        }\n        return pick;\n    }\n    /// @internal\n    slice(startI, endI, from, to) {\n        let b = this.buffer;\n        let copy = new Uint16Array(endI - startI);\n        for (let i = startI, j = 0; i < endI;) {\n            copy[j++] = b[i++];\n            copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - from;\n            copy[j++] = b[i++] - startI;\n        }\n        return new TreeBuffer(copy, to - from, this.set);\n    }\n}\nfunction checkSide(side, pos, from, to) {\n    switch (side) {\n        case -2 /* Before */: return from < pos;\n        case -1 /* AtOrBefore */: return to >= pos && from < pos;\n        case 0 /* Around */: return from < pos && to > pos;\n        case 1 /* AtOrAfter */: return from <= pos && to > pos;\n        case 2 /* After */: return to > pos;\n        case 4 /* DontCare */: return true;\n    }\n}\nfunction enterUnfinishedNodesBefore(node, pos) {\n    let scan = node.childBefore(pos);\n    while (scan) {\n        let last = scan.lastChild;\n        if (!last || last.to != scan.to)\n            break;\n        if (last.type.isError && last.from == last.to) {\n            node = scan;\n            scan = last.prevSibling;\n        }\n        else {\n            scan = last;\n        }\n    }\n    return node;\n}\nfunction resolveNode(node, pos, side, overlays) {\n    var _a;\n    // Move up to a node that actually holds the position, if possible\n    while (node.from == node.to ||\n        (side < 1 ? node.from >= pos : node.from > pos) ||\n        (side > -1 ? node.to <= pos : node.to < pos)) {\n        let parent = !overlays && node instanceof TreeNode && node.index < 0 ? null : node.parent;\n        if (!parent)\n            return node;\n        node = parent;\n    }\n    // Must go up out of overlays when those do not overlap with pos\n    if (overlays)\n        for (let scan = node, parent = scan.parent; parent; scan = parent, parent = scan.parent) {\n            if (scan instanceof TreeNode && scan.index < 0 && ((_a = parent.enter(pos, side, true)) === null || _a === void 0 ? void 0 : _a.from) != scan.from)\n                node = parent;\n        }\n    for (;;) {\n        let inner = node.enter(pos, side, overlays);\n        if (!inner)\n            return node;\n        node = inner;\n    }\n}\nclass TreeNode {\n    constructor(node, _from, \n    // Index in parent node, set to -1 if the node is not a direct child of _parent.node (overlay)\n    index, _parent) {\n        this.node = node;\n        this._from = _from;\n        this.index = index;\n        this._parent = _parent;\n    }\n    get type() { return this.node.type; }\n    get name() { return this.node.type.name; }\n    get from() { return this._from; }\n    get to() { return this._from + this.node.length; }\n    nextChild(i, dir, pos, side, mode = 0) {\n        for (let parent = this;;) {\n            for (let { children, positions } = parent.node, e = dir > 0 ? children.length : -1; i != e; i += dir) {\n                let next = children[i], start = positions[i] + parent._from;\n                if (!checkSide(side, pos, start, start + next.length))\n                    continue;\n                if (next instanceof TreeBuffer) {\n                    if (mode & 2 /* NoEnterBuffer */)\n                        continue;\n                    let index = next.findChild(0, next.buffer.length, dir, pos - start, side);\n                    if (index > -1)\n                        return new BufferNode(new BufferContext(parent, next, i, start), null, index);\n                }\n                else if ((mode & 1 /* Full */) || (!next.type.isAnonymous || hasChild(next))) {\n                    let mounted;\n                    if (!(mode & 1 /* Full */) && next.props && (mounted = next.prop(NodeProp.mounted)) && !mounted.overlay)\n                        return new TreeNode(mounted.tree, start, i, parent);\n                    let inner = new TreeNode(next, start, i, parent);\n                    return (mode & 1 /* Full */) || !inner.type.isAnonymous ? inner\n                        : inner.nextChild(dir < 0 ? next.children.length - 1 : 0, dir, pos, side);\n                }\n            }\n            if ((mode & 1 /* Full */) || !parent.type.isAnonymous)\n                return null;\n            if (parent.index >= 0)\n                i = parent.index + dir;\n            else\n                i = dir < 0 ? -1 : parent._parent.node.children.length;\n            parent = parent._parent;\n            if (!parent)\n                return null;\n        }\n    }\n    get firstChild() { return this.nextChild(0, 1, 0, 4 /* DontCare */); }\n    get lastChild() { return this.nextChild(this.node.children.length - 1, -1, 0, 4 /* DontCare */); }\n    childAfter(pos) { return this.nextChild(0, 1, pos, 2 /* After */); }\n    childBefore(pos) { return this.nextChild(this.node.children.length - 1, -1, pos, -2 /* Before */); }\n    enter(pos, side, overlays = true, buffers = true) {\n        let mounted;\n        if (overlays && (mounted = this.node.prop(NodeProp.mounted)) && mounted.overlay) {\n            let rPos = pos - this.from;\n            for (let { from, to } of mounted.overlay) {\n                if ((side > 0 ? from <= rPos : from < rPos) &&\n                    (side < 0 ? to >= rPos : to > rPos))\n                    return new TreeNode(mounted.tree, mounted.overlay[0].from + this.from, -1, this);\n            }\n        }\n        return this.nextChild(0, 1, pos, side, buffers ? 0 : 2 /* NoEnterBuffer */);\n    }\n    nextSignificantParent() {\n        let val = this;\n        while (val.type.isAnonymous && val._parent)\n            val = val._parent;\n        return val;\n    }\n    get parent() {\n        return this._parent ? this._parent.nextSignificantParent() : null;\n    }\n    get nextSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index + 1, 1, 0, 4 /* DontCare */) : null;\n    }\n    get prevSibling() {\n        return this._parent && this.index >= 0 ? this._parent.nextChild(this.index - 1, -1, 0, 4 /* DontCare */) : null;\n    }\n    get cursor() { return new TreeCursor(this); }\n    get tree() { return this.node; }\n    toTree() { return this.node; }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n    /// @internal\n    toString() { return this.node.toString(); }\n}\nfunction getChildren(node, type, before, after) {\n    let cur = node.cursor, result = [];\n    if (!cur.firstChild())\n        return result;\n    if (before != null)\n        while (!cur.type.is(before))\n            if (!cur.nextSibling())\n                return result;\n    for (;;) {\n        if (after != null && cur.type.is(after))\n            return result;\n        if (cur.type.is(type))\n            result.push(cur.node);\n        if (!cur.nextSibling())\n            return after == null ? result : [];\n    }\n}\nclass BufferContext {\n    constructor(parent, buffer, index, start) {\n        this.parent = parent;\n        this.buffer = buffer;\n        this.index = index;\n        this.start = start;\n    }\n}\nclass BufferNode {\n    constructor(context, _parent, index) {\n        this.context = context;\n        this._parent = _parent;\n        this.index = index;\n        this.type = context.buffer.set.types[context.buffer.buffer[index]];\n    }\n    get name() { return this.type.name; }\n    get from() { return this.context.start + this.context.buffer.buffer[this.index + 1]; }\n    get to() { return this.context.start + this.context.buffer.buffer[this.index + 2]; }\n    child(dir, pos, side) {\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get firstChild() { return this.child(1, 0, 4 /* DontCare */); }\n    get lastChild() { return this.child(-1, 0, 4 /* DontCare */); }\n    childAfter(pos) { return this.child(1, pos, 2 /* After */); }\n    childBefore(pos) { return this.child(-1, pos, -2 /* Before */); }\n    enter(pos, side, overlays, buffers = true) {\n        if (!buffers)\n            return null;\n        let { buffer } = this.context;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], side > 0 ? 1 : -1, pos - this.context.start, side);\n        return index < 0 ? null : new BufferNode(this.context, this, index);\n    }\n    get parent() {\n        return this._parent || this.context.parent.nextSignificantParent();\n    }\n    externalSibling(dir) {\n        return this._parent ? null : this.context.parent.nextChild(this.context.index + dir, dir, 0, 4 /* DontCare */);\n    }\n    get nextSibling() {\n        let { buffer } = this.context;\n        let after = buffer.buffer[this.index + 3];\n        if (after < (this._parent ? buffer.buffer[this._parent.index + 3] : buffer.buffer.length))\n            return new BufferNode(this.context, this._parent, after);\n        return this.externalSibling(1);\n    }\n    get prevSibling() {\n        let { buffer } = this.context;\n        let parentStart = this._parent ? this._parent.index + 4 : 0;\n        if (this.index == parentStart)\n            return this.externalSibling(-1);\n        return new BufferNode(this.context, this._parent, buffer.findChild(parentStart, this.index, -1, 0, 4 /* DontCare */));\n    }\n    get cursor() { return new TreeCursor(this); }\n    get tree() { return null; }\n    toTree() {\n        let children = [], positions = [];\n        let { buffer } = this.context;\n        let startI = this.index + 4, endI = buffer.buffer[this.index + 3];\n        if (endI > startI) {\n            let from = buffer.buffer[this.index + 1], to = buffer.buffer[this.index + 2];\n            children.push(buffer.slice(startI, endI, from, to));\n            positions.push(0);\n        }\n        return new Tree(this.type, children, positions, this.to - this.from);\n    }\n    resolve(pos, side = 0) {\n        return resolveNode(this, pos, side, false);\n    }\n    resolveInner(pos, side = 0) {\n        return resolveNode(this, pos, side, true);\n    }\n    enterUnfinishedNodesBefore(pos) { return enterUnfinishedNodesBefore(this, pos); }\n    /// @internal\n    toString() { return this.context.buffer.childString(this.index); }\n    getChild(type, before = null, after = null) {\n        let r = getChildren(this, type, before, after);\n        return r.length ? r[0] : null;\n    }\n    getChildren(type, before = null, after = null) {\n        return getChildren(this, type, before, after);\n    }\n}\n/// A tree cursor object focuses on a given node in a syntax tree, and\n/// allows you to move to adjacent nodes.\nclass TreeCursor {\n    /// @internal\n    constructor(node, \n    /// @internal\n    mode = 0) {\n        this.mode = mode;\n        this.buffer = null;\n        this.stack = [];\n        this.index = 0;\n        this.bufferNode = null;\n        if (node instanceof TreeNode) {\n            this.yieldNode(node);\n        }\n        else {\n            this._tree = node.context.parent;\n            this.buffer = node.context;\n            for (let n = node._parent; n; n = n._parent)\n                this.stack.unshift(n.index);\n            this.bufferNode = node;\n            this.yieldBuf(node.index);\n        }\n    }\n    /// Shorthand for `.type.name`.\n    get name() { return this.type.name; }\n    yieldNode(node) {\n        if (!node)\n            return false;\n        this._tree = node;\n        this.type = node.type;\n        this.from = node.from;\n        this.to = node.to;\n        return true;\n    }\n    yieldBuf(index, type) {\n        this.index = index;\n        let { start, buffer } = this.buffer;\n        this.type = type || buffer.set.types[buffer.buffer[index]];\n        this.from = start + buffer.buffer[index + 1];\n        this.to = start + buffer.buffer[index + 2];\n        return true;\n    }\n    yield(node) {\n        if (!node)\n            return false;\n        if (node instanceof TreeNode) {\n            this.buffer = null;\n            return this.yieldNode(node);\n        }\n        this.buffer = node.context;\n        return this.yieldBuf(node.index, node.type);\n    }\n    /// @internal\n    toString() {\n        return this.buffer ? this.buffer.buffer.childString(this.index) : this._tree.toString();\n    }\n    /// @internal\n    enterChild(dir, pos, side) {\n        if (!this.buffer)\n            return this.yield(this._tree.nextChild(dir < 0 ? this._tree.node.children.length - 1 : 0, dir, pos, side, this.mode));\n        let { buffer } = this.buffer;\n        let index = buffer.findChild(this.index + 4, buffer.buffer[this.index + 3], dir, pos - this.buffer.start, side);\n        if (index < 0)\n            return false;\n        this.stack.push(this.index);\n        return this.yieldBuf(index);\n    }\n    /// Move the cursor to this node's first child. When this returns\n    /// false, the node has no child, and the cursor has not been moved.\n    firstChild() { return this.enterChild(1, 0, 4 /* DontCare */); }\n    /// Move the cursor to this node's last child.\n    lastChild() { return this.enterChild(-1, 0, 4 /* DontCare */); }\n    /// Move the cursor to the first child that ends after `pos`.\n    childAfter(pos) { return this.enterChild(1, pos, 2 /* After */); }\n    /// Move to the last child that starts before `pos`.\n    childBefore(pos) { return this.enterChild(-1, pos, -2 /* Before */); }\n    /// Move the cursor to the child around `pos`. If side is -1 the\n    /// child may end at that position, when 1 it may start there. This\n    /// will also enter [overlaid](#common.MountedTree.overlay)\n    /// [mounted](#common.NodeProp^mounted) trees unless `overlays` is\n    /// set to false.\n    enter(pos, side, overlays = true, buffers = true) {\n        if (!this.buffer)\n            return this.yield(this._tree.enter(pos, side, overlays && !(this.mode & 1 /* Full */), buffers));\n        return buffers ? this.enterChild(1, pos, side) : false;\n    }\n    /// Move to the node's parent node, if this isn't the top node.\n    parent() {\n        if (!this.buffer)\n            return this.yieldNode((this.mode & 1 /* Full */) ? this._tree._parent : this._tree.parent);\n        if (this.stack.length)\n            return this.yieldBuf(this.stack.pop());\n        let parent = (this.mode & 1 /* Full */) ? this.buffer.parent : this.buffer.parent.nextSignificantParent();\n        this.buffer = null;\n        return this.yieldNode(parent);\n    }\n    /// @internal\n    sibling(dir) {\n        if (!this.buffer)\n            return !this._tree._parent ? false\n                : this.yield(this._tree.index < 0 ? null\n                    : this._tree._parent.nextChild(this._tree.index + dir, dir, 0, 4 /* DontCare */, this.mode));\n        let { buffer } = this.buffer, d = this.stack.length - 1;\n        if (dir < 0) {\n            let parentStart = d < 0 ? 0 : this.stack[d] + 4;\n            if (this.index != parentStart)\n                return this.yieldBuf(buffer.findChild(parentStart, this.index, -1, 0, 4 /* DontCare */));\n        }\n        else {\n            let after = buffer.buffer[this.index + 3];\n            if (after < (d < 0 ? buffer.buffer.length : buffer.buffer[this.stack[d] + 3]))\n                return this.yieldBuf(after);\n        }\n        return d < 0 ? this.yield(this.buffer.parent.nextChild(this.buffer.index + dir, dir, 0, 4 /* DontCare */, this.mode)) : false;\n    }\n    /// Move to this node's next sibling, if any.\n    nextSibling() { return this.sibling(1); }\n    /// Move to this node's previous sibling, if any.\n    prevSibling() { return this.sibling(-1); }\n    atLastNode(dir) {\n        let index, parent, { buffer } = this;\n        if (buffer) {\n            if (dir > 0) {\n                if (this.index < buffer.buffer.buffer.length)\n                    return false;\n            }\n            else {\n                for (let i = 0; i < this.index; i++)\n                    if (buffer.buffer.buffer[i + 3] < this.index)\n                        return false;\n            }\n            ({ index, parent } = buffer);\n        }\n        else {\n            ({ index, _parent: parent } = this._tree);\n        }\n        for (; parent; { index, _parent: parent } = parent) {\n            if (index > -1)\n                for (let i = index + dir, e = dir < 0 ? -1 : parent.node.children.length; i != e; i += dir) {\n                    let child = parent.node.children[i];\n                    if ((this.mode & 1 /* Full */) || child instanceof TreeBuffer || !child.type.isAnonymous || hasChild(child))\n                        return false;\n                }\n        }\n        return true;\n    }\n    move(dir, enter) {\n        if (enter && this.enterChild(dir, 0, 4 /* DontCare */))\n            return true;\n        for (;;) {\n            if (this.sibling(dir))\n                return true;\n            if (this.atLastNode(dir) || !this.parent())\n                return false;\n        }\n    }\n    /// Move to the next node in a\n    /// [pre-order](https://en.wikipedia.org/wiki/Tree_traversal#Pre-order_(NLR))\n    /// traversal, going from a node to its first child or, if the\n    /// current node is empty or `enter` is false, its next sibling or\n    /// the next sibling of the first parent node that has one.\n    next(enter = true) { return this.move(1, enter); }\n    /// Move to the next node in a last-to-first pre-order traveral. A\n    /// node is followed by its last child or, if it has none, its\n    /// previous sibling or the previous sibling of the first parent\n    /// node that has one.\n    prev(enter = true) { return this.move(-1, enter); }\n    /// Move the cursor to the innermost node that covers `pos`. If\n    /// `side` is -1, it will enter nodes that end at `pos`. If it is 1,\n    /// it will enter nodes that start at `pos`.\n    moveTo(pos, side = 0) {\n        // Move up to a node that actually holds the position, if possible\n        while (this.from == this.to ||\n            (side < 1 ? this.from >= pos : this.from > pos) ||\n            (side > -1 ? this.to <= pos : this.to < pos))\n            if (!this.parent())\n                break;\n        // Then scan down into child nodes as far as possible\n        while (this.enterChild(1, pos, side)) { }\n        return this;\n    }\n    /// Get a [syntax node](#common.SyntaxNode) at the cursor's current\n    /// position.\n    get node() {\n        if (!this.buffer)\n            return this._tree;\n        let cache = this.bufferNode, result = null, depth = 0;\n        if (cache && cache.context == this.buffer) {\n            scan: for (let index = this.index, d = this.stack.length; d >= 0;) {\n                for (let c = cache; c; c = c._parent)\n                    if (c.index == index) {\n                        if (index == this.index)\n                            return c;\n                        result = c;\n                        depth = d + 1;\n                        break scan;\n                    }\n                index = this.stack[--d];\n            }\n        }\n        for (let i = depth; i < this.stack.length; i++)\n            result = new BufferNode(this.buffer, result, this.stack[i]);\n        return this.bufferNode = new BufferNode(this.buffer, result, this.index);\n    }\n    /// Get the [tree](#common.Tree) that represents the current node, if\n    /// any. Will return null when the node is in a [tree\n    /// buffer](#common.TreeBuffer).\n    get tree() {\n        return this.buffer ? null : this._tree.node;\n    }\n}\nfunction hasChild(tree) {\n    return tree.children.some(ch => ch instanceof TreeBuffer || !ch.type.isAnonymous || hasChild(ch));\n}\nfunction buildTree(data) {\n    var _a;\n    let { buffer, nodeSet, maxBufferLength = DefaultBufferLength, reused = [], minRepeatType = nodeSet.types.length } = data;\n    let cursor = Array.isArray(buffer) ? new FlatBufferCursor(buffer, buffer.length) : buffer;\n    let types = nodeSet.types;\n    let contextHash = 0, lookAhead = 0;\n    function takeNode(parentStart, minPos, children, positions, inRepeat) {\n        let { id, start, end, size } = cursor;\n        let lookAheadAtStart = lookAhead;\n        while (size < 0) {\n            cursor.next();\n            if (size == -1 /* Reuse */) {\n                let node = reused[id];\n                children.push(node);\n                positions.push(start - parentStart);\n                return;\n            }\n            else if (size == -3 /* ContextChange */) { // Context change\n                contextHash = id;\n                return;\n            }\n            else if (size == -4 /* LookAhead */) {\n                lookAhead = id;\n                return;\n            }\n            else {\n                throw new RangeError(`Unrecognized record size: ${size}`);\n            }\n        }\n        let type = types[id], node, buffer;\n        let startPos = start - parentStart;\n        if (end - start <= maxBufferLength && (buffer = findBufferSize(cursor.pos - minPos, inRepeat))) {\n            // Small enough for a buffer, and no reused nodes inside\n            let data = new Uint16Array(buffer.size - buffer.skip);\n            let endPos = cursor.pos - buffer.size, index = data.length;\n            while (cursor.pos > endPos)\n                index = copyToBuffer(buffer.start, data, index);\n            node = new TreeBuffer(data, end - buffer.start, nodeSet);\n            startPos = buffer.start - parentStart;\n        }\n        else { // Make it a node\n            let endPos = cursor.pos - size;\n            cursor.next();\n            let localChildren = [], localPositions = [];\n            let localInRepeat = id >= minRepeatType ? id : -1;\n            let lastGroup = 0, lastEnd = end;\n            while (cursor.pos > endPos) {\n                if (localInRepeat >= 0 && cursor.id == localInRepeat && cursor.size >= 0) {\n                    if (cursor.end <= lastEnd - maxBufferLength) {\n                        makeRepeatLeaf(localChildren, localPositions, start, lastGroup, cursor.end, lastEnd, localInRepeat, lookAheadAtStart);\n                        lastGroup = localChildren.length;\n                        lastEnd = cursor.end;\n                    }\n                    cursor.next();\n                }\n                else {\n                    takeNode(start, endPos, localChildren, localPositions, localInRepeat);\n                }\n            }\n            if (localInRepeat >= 0 && lastGroup > 0 && lastGroup < localChildren.length)\n                makeRepeatLeaf(localChildren, localPositions, start, lastGroup, start, lastEnd, localInRepeat, lookAheadAtStart);\n            localChildren.reverse();\n            localPositions.reverse();\n            if (localInRepeat > -1 && lastGroup > 0) {\n                let make = makeBalanced(type);\n                node = balanceRange(type, localChildren, localPositions, 0, localChildren.length, 0, end - start, make, make);\n            }\n            else {\n                node = makeTree(type, localChildren, localPositions, end - start, lookAheadAtStart - end);\n            }\n        }\n        children.push(node);\n        positions.push(startPos);\n    }\n    function makeBalanced(type) {\n        return (children, positions, length) => {\n            let lookAhead = 0, lastI = children.length - 1, last, lookAheadProp;\n            if (lastI >= 0 && (last = children[lastI]) instanceof Tree) {\n                if (!lastI && last.type == type && last.length == length)\n                    return last;\n                if (lookAheadProp = last.prop(NodeProp.lookAhead))\n                    lookAhead = positions[lastI] + last.length + lookAheadProp;\n            }\n            return makeTree(type, children, positions, length, lookAhead);\n        };\n    }\n    function makeRepeatLeaf(children, positions, base, i, from, to, type, lookAhead) {\n        let localChildren = [], localPositions = [];\n        while (children.length > i) {\n            localChildren.push(children.pop());\n            localPositions.push(positions.pop() + base - from);\n        }\n        children.push(makeTree(nodeSet.types[type], localChildren, localPositions, to - from, lookAhead - to));\n        positions.push(from - base);\n    }\n    function makeTree(type, children, positions, length, lookAhead = 0, props) {\n        if (contextHash) {\n            let pair = [NodeProp.contextHash, contextHash];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        if (lookAhead > 25) {\n            let pair = [NodeProp.lookAhead, lookAhead];\n            props = props ? [pair].concat(props) : [pair];\n        }\n        return new Tree(type, children, positions, length, props);\n    }\n    function findBufferSize(maxSize, inRepeat) {\n        // Scan through the buffer to find previous siblings that fit\n        // together in a TreeBuffer, and don't contain any reused nodes\n        // (which can't be stored in a buffer).\n        // If `inRepeat` is > -1, ignore node boundaries of that type for\n        // nesting, but make sure the end falls either at the start\n        // (`maxSize`) or before such a node.\n        let fork = cursor.fork();\n        let size = 0, start = 0, skip = 0, minStart = fork.end - maxBufferLength;\n        let result = { size: 0, start: 0, skip: 0 };\n        scan: for (let minPos = fork.pos - maxSize; fork.pos > minPos;) {\n            let nodeSize = fork.size;\n            // Pretend nested repeat nodes of the same type don't exist\n            if (fork.id == inRepeat && nodeSize >= 0) {\n                // Except that we store the current state as a valid return\n                // value.\n                result.size = size;\n                result.start = start;\n                result.skip = skip;\n                skip += 4;\n                size += 4;\n                fork.next();\n                continue;\n            }\n            let startPos = fork.pos - nodeSize;\n            if (nodeSize < 0 || startPos < minPos || fork.start < minStart)\n                break;\n            let localSkipped = fork.id >= minRepeatType ? 4 : 0;\n            let nodeStart = fork.start;\n            fork.next();\n            while (fork.pos > startPos) {\n                if (fork.size < 0) {\n                    if (fork.size == -3 /* ContextChange */)\n                        localSkipped += 4;\n                    else\n                        break scan;\n                }\n                else if (fork.id >= minRepeatType) {\n                    localSkipped += 4;\n                }\n                fork.next();\n            }\n            start = nodeStart;\n            size += nodeSize;\n            skip += localSkipped;\n        }\n        if (inRepeat < 0 || size == maxSize) {\n            result.size = size;\n            result.start = start;\n            result.skip = skip;\n        }\n        return result.size > 4 ? result : undefined;\n    }\n    function copyToBuffer(bufferStart, buffer, index) {\n        let { id, start, end, size } = cursor;\n        cursor.next();\n        if (size >= 0 && id < minRepeatType) {\n            let startIndex = index;\n            if (size > 4) {\n                let endPos = cursor.pos - (size - 4);\n                while (cursor.pos > endPos)\n                    index = copyToBuffer(bufferStart, buffer, index);\n            }\n            buffer[--index] = startIndex;\n            buffer[--index] = end - bufferStart;\n            buffer[--index] = start - bufferStart;\n            buffer[--index] = id;\n        }\n        else if (size == -3 /* ContextChange */) {\n            contextHash = id;\n        }\n        else if (size == -4 /* LookAhead */) {\n            lookAhead = id;\n        }\n        return index;\n    }\n    let children = [], positions = [];\n    while (cursor.pos > 0)\n        takeNode(data.start || 0, data.bufferStart || 0, children, positions, -1);\n    let length = (_a = data.length) !== null && _a !== void 0 ? _a : (children.length ? positions[0] + children[0].length : 0);\n    return new Tree(types[data.topID], children.reverse(), positions.reverse(), length);\n}\nconst nodeSizeCache = new WeakMap;\nfunction nodeSize(balanceType, node) {\n    if (!balanceType.isAnonymous || node instanceof TreeBuffer || node.type != balanceType)\n        return 1;\n    let size = nodeSizeCache.get(node);\n    if (size == null) {\n        size = 1;\n        for (let child of node.children) {\n            if (child.type != balanceType || !(child instanceof Tree)) {\n                size = 1;\n                break;\n            }\n            size += nodeSize(balanceType, child);\n        }\n        nodeSizeCache.set(node, size);\n    }\n    return size;\n}\nfunction balanceRange(\n// The type the balanced tree's inner nodes.\nbalanceType, \n// The direct children and their positions\nchildren, positions, \n// The index range in children/positions to use\nfrom, to, \n// The start position of the nodes, relative to their parent.\nstart, \n// Length of the outer node\nlength, \n// Function to build the top node of the balanced tree\nmkTop, \n// Function to build internal nodes for the balanced tree\nmkTree) {\n    let total = 0;\n    for (let i = from; i < to; i++)\n        total += nodeSize(balanceType, children[i]);\n    let maxChild = Math.ceil((total * 1.5) / 8 /* BranchFactor */);\n    let localChildren = [], localPositions = [];\n    function divide(children, positions, from, to, offset) {\n        for (let i = from; i < to;) {\n            let groupFrom = i, groupStart = positions[i], groupSize = nodeSize(balanceType, children[i]);\n            i++;\n            for (; i < to; i++) {\n                let nextSize = nodeSize(balanceType, children[i]);\n                if (groupSize + nextSize >= maxChild)\n                    break;\n                groupSize += nextSize;\n            }\n            if (i == groupFrom + 1) {\n                if (groupSize > maxChild) {\n                    let only = children[groupFrom]; // Only trees can have a size > 1\n                    divide(only.children, only.positions, 0, only.children.length, positions[groupFrom] + offset);\n                    continue;\n                }\n                localChildren.push(children[groupFrom]);\n            }\n            else {\n                let length = positions[i - 1] + children[i - 1].length - groupStart;\n                localChildren.push(balanceRange(balanceType, children, positions, groupFrom, i, groupStart, length, null, mkTree));\n            }\n            localPositions.push(groupStart + offset - start);\n        }\n    }\n    divide(children, positions, from, to, 0);\n    return (mkTop || mkTree)(localChildren, localPositions, length);\n}\n\n/// Tree fragments are used during [incremental\n/// parsing](#common.Parser.startParse) to track parts of old trees\n/// that can be reused in a new parse. An array of fragments is used\n/// to track regions of an old tree whose nodes might be reused in new\n/// parses. Use the static\n/// [`applyChanges`](#common.TreeFragment^applyChanges) method to\n/// update fragments for document changes.\nclass TreeFragment {\n    /// Construct a tree fragment.\n    constructor(\n    /// The start of the unchanged range pointed to by this fragment.\n    /// This refers to an offset in the _updated_ document (as opposed\n    /// to the original tree).\n    from, \n    /// The end of the unchanged range.\n    to, \n    /// The tree that this fragment is based on.\n    tree, \n    /// The offset between the fragment's tree and the document that\n    /// this fragment can be used against. Add this when going from\n    /// document to tree positions, subtract it to go from tree to\n    /// document positions.\n    offset, openStart = false, openEnd = false) {\n        this.from = from;\n        this.to = to;\n        this.tree = tree;\n        this.offset = offset;\n        this.open = (openStart ? 1 /* Start */ : 0) | (openEnd ? 2 /* End */ : 0);\n    }\n    /// Whether the start of the fragment represents the start of a\n    /// parse, or the end of a change. (In the second case, it may not\n    /// be safe to reuse some nodes at the start, depending on the\n    /// parsing algorithm.)\n    get openStart() { return (this.open & 1 /* Start */) > 0; }\n    /// Whether the end of the fragment represents the end of a\n    /// full-document parse, or the start of a change.\n    get openEnd() { return (this.open & 2 /* End */) > 0; }\n    /// Create a set of fragments from a freshly parsed tree, or update\n    /// an existing set of fragments by replacing the ones that overlap\n    /// with a tree with content from the new tree. When `partial` is\n    /// true, the parse is treated as incomplete, and the resulting\n    /// fragment has [`openEnd`](#common.TreeFragment.openEnd) set to\n    /// true.\n    static addTree(tree, fragments = [], partial = false) {\n        let result = [new TreeFragment(0, tree.length, tree, 0, false, partial)];\n        for (let f of fragments)\n            if (f.to > tree.length)\n                result.push(f);\n        return result;\n    }\n    /// Apply a set of edits to an array of fragments, removing or\n    /// splitting fragments as necessary to remove edited ranges, and\n    /// adjusting offsets for fragments that moved.\n    static applyChanges(fragments, changes, minGap = 128) {\n        if (!changes.length)\n            return fragments;\n        let result = [];\n        let fI = 1, nextF = fragments.length ? fragments[0] : null;\n        for (let cI = 0, pos = 0, off = 0;; cI++) {\n            let nextC = cI < changes.length ? changes[cI] : null;\n            let nextPos = nextC ? nextC.fromA : 1e9;\n            if (nextPos - pos >= minGap)\n                while (nextF && nextF.from < nextPos) {\n                    let cut = nextF;\n                    if (pos >= cut.from || nextPos <= cut.to || off) {\n                        let fFrom = Math.max(cut.from, pos) - off, fTo = Math.min(cut.to, nextPos) - off;\n                        cut = fFrom >= fTo ? null : new TreeFragment(fFrom, fTo, cut.tree, cut.offset + off, cI > 0, !!nextC);\n                    }\n                    if (cut)\n                        result.push(cut);\n                    if (nextF.to > nextPos)\n                        break;\n                    nextF = fI < fragments.length ? fragments[fI++] : null;\n                }\n            if (!nextC)\n                break;\n            pos = nextC.toA;\n            off = nextC.toA - nextC.toB;\n        }\n        return result;\n    }\n}\n/// A superclass that parsers should extend.\nclass Parser {\n    /// Start a parse, returning a [partial parse](#common.PartialParse)\n    /// object. [`fragments`](#common.TreeFragment) can be passed in to\n    /// make the parse incremental.\n    ///\n    /// By default, the entire input is parsed. You can pass `ranges`,\n    /// which should be a sorted array of non-empty, non-overlapping\n    /// ranges, to parse only those ranges. The tree returned in that\n    /// case will start at `ranges[0].from`.\n    startParse(input, fragments, ranges) {\n        if (typeof input == \"string\")\n            input = new StringInput(input);\n        ranges = !ranges ? [new Range(0, input.length)] : ranges.length ? ranges.map(r => new Range(r.from, r.to)) : [new Range(0, 0)];\n        return this.createParse(input, fragments || [], ranges);\n    }\n    /// Run a full parse, returning the resulting tree.\n    parse(input, fragments, ranges) {\n        let parse = this.startParse(input, fragments, ranges);\n        for (;;) {\n            let done = parse.advance();\n            if (done)\n                return done;\n        }\n    }\n}\nclass StringInput {\n    constructor(string) {\n        this.string = string;\n    }\n    get length() { return this.string.length; }\n    chunk(from) { return this.string.slice(from); }\n    get lineChunks() { return false; }\n    read(from, to) { return this.string.slice(from, to); }\n}\n\n/// Create a parse wrapper that, after the inner parse completes,\n/// scans its tree for mixed language regions with the `nest`\n/// function, runs the resulting [inner parses](#common.NestedParse),\n/// and then [mounts](#common.NodeProp^mounted) their results onto the\n/// tree.\n///\n/// The nesting function is passed a cursor to provide context for a\n/// node, but _should not_ move that cursor, only inspect its\n/// properties and optionally access its\n/// [node object](#common.TreeCursor.node).\nfunction parseMixed(nest) {\n    return (parse, input, fragments, ranges) => new MixedParse(parse, nest, input, fragments, ranges);\n}\nclass InnerParse {\n    constructor(parser, parse, overlay, target, ranges) {\n        this.parser = parser;\n        this.parse = parse;\n        this.overlay = overlay;\n        this.target = target;\n        this.ranges = ranges;\n    }\n}\nclass ActiveOverlay {\n    constructor(parser, predicate, mounts, index, start, target, prev) {\n        this.parser = parser;\n        this.predicate = predicate;\n        this.mounts = mounts;\n        this.index = index;\n        this.start = start;\n        this.target = target;\n        this.prev = prev;\n        this.depth = 0;\n        this.ranges = [];\n    }\n}\nconst stoppedInner = new NodeProp({ perNode: true });\nclass MixedParse {\n    constructor(base, nest, input, fragments, ranges) {\n        this.nest = nest;\n        this.input = input;\n        this.fragments = fragments;\n        this.ranges = ranges;\n        this.inner = [];\n        this.innerDone = 0;\n        this.baseTree = null;\n        this.stoppedAt = null;\n        this.baseParse = base;\n    }\n    advance() {\n        if (this.baseParse) {\n            let done = this.baseParse.advance();\n            if (!done)\n                return null;\n            this.baseParse = null;\n            this.baseTree = done;\n            this.startInner();\n            if (this.stoppedAt != null)\n                for (let inner of this.inner)\n                    inner.parse.stopAt(this.stoppedAt);\n        }\n        if (this.innerDone == this.inner.length) {\n            let result = this.baseTree;\n            if (this.stoppedAt != null)\n                result = new Tree(result.type, result.children, result.positions, result.length, result.propValues.concat([[stoppedInner, this.stoppedAt]]));\n            return result;\n        }\n        let inner = this.inner[this.innerDone], done = inner.parse.advance();\n        if (done) {\n            this.innerDone++;\n            // This is a somewhat dodgy but super helpful hack where we\n            // patch up nodes created by the inner parse (and thus\n            // presumably not aliased anywhere else) to hold the information\n            // about the inner parse.\n            let props = Object.assign(Object.create(null), inner.target.props);\n            props[NodeProp.mounted.id] = new MountedTree(done, inner.overlay, inner.parser);\n            inner.target.props = props;\n        }\n        return null;\n    }\n    get parsedPos() {\n        if (this.baseParse)\n            return 0;\n        let pos = this.input.length;\n        for (let i = this.innerDone; i < this.inner.length; i++) {\n            if (this.inner[i].ranges[0].from < pos)\n                pos = Math.min(pos, this.inner[i].parse.parsedPos);\n        }\n        return pos;\n    }\n    stopAt(pos) {\n        this.stoppedAt = pos;\n        if (this.baseParse)\n            this.baseParse.stopAt(pos);\n        else\n            for (let i = this.innerDone; i < this.inner.length; i++)\n                this.inner[i].parse.stopAt(pos);\n    }\n    startInner() {\n        let fragmentCursor = new FragmentCursor(this.fragments);\n        let overlay = null;\n        let covered = null;\n        let cursor = new TreeCursor(new TreeNode(this.baseTree, this.ranges[0].from, 0, null), 1 /* Full */);\n        scan: for (let nest, isCovered; this.stoppedAt == null || cursor.from < this.stoppedAt;) {\n            let enter = true, range;\n            if (fragmentCursor.hasNode(cursor)) {\n                if (overlay) {\n                    let match = overlay.mounts.find(m => m.frag.from <= cursor.from && m.frag.to >= cursor.to && m.mount.overlay);\n                    if (match)\n                        for (let r of match.mount.overlay) {\n                            let from = r.from + match.pos, to = r.to + match.pos;\n                            if (from >= cursor.from && to <= cursor.to)\n                                overlay.ranges.push({ from, to });\n                        }\n                }\n                enter = false;\n            }\n            else if (covered && (isCovered = checkCover(covered.ranges, cursor.from, cursor.to))) {\n                enter = isCovered != 2 /* Full */;\n            }\n            else if (!cursor.type.isAnonymous && cursor.from < cursor.to && (nest = this.nest(cursor, this.input))) {\n                if (!cursor.tree)\n                    materialize(cursor);\n                let oldMounts = fragmentCursor.findMounts(cursor.from, nest.parser);\n                if (typeof nest.overlay == \"function\") {\n                    overlay = new ActiveOverlay(nest.parser, nest.overlay, oldMounts, this.inner.length, cursor.from, cursor.tree, overlay);\n                }\n                else {\n                    let ranges = punchRanges(this.ranges, nest.overlay || [new Range(cursor.from, cursor.to)]);\n                    if (ranges.length)\n                        this.inner.push(new InnerParse(nest.parser, nest.parser.startParse(this.input, enterFragments(oldMounts, ranges), ranges), nest.overlay ? nest.overlay.map(r => new Range(r.from - cursor.from, r.to - cursor.from)) : null, cursor.tree, ranges));\n                    if (!nest.overlay)\n                        enter = false;\n                    else if (ranges.length)\n                        covered = { ranges, depth: 0, prev: covered };\n                }\n            }\n            else if (overlay && (range = overlay.predicate(cursor))) {\n                if (range === true)\n                    range = new Range(cursor.from, cursor.to);\n                if (range.from < range.to)\n                    overlay.ranges.push(range);\n            }\n            if (enter && cursor.firstChild()) {\n                if (overlay)\n                    overlay.depth++;\n                if (covered)\n                    covered.depth++;\n            }\n            else {\n                for (;;) {\n                    if (cursor.nextSibling())\n                        break;\n                    if (!cursor.parent())\n                        break scan;\n                    if (overlay && !--overlay.depth) {\n                        let ranges = punchRanges(this.ranges, overlay.ranges);\n                        if (ranges.length)\n                            this.inner.splice(overlay.index, 0, new InnerParse(overlay.parser, overlay.parser.startParse(this.input, enterFragments(overlay.mounts, ranges), ranges), overlay.ranges.map(r => new Range(r.from - overlay.start, r.to - overlay.start)), overlay.target, ranges));\n                        overlay = overlay.prev;\n                    }\n                    if (covered && !--covered.depth)\n                        covered = covered.prev;\n                }\n            }\n        }\n    }\n}\nfunction checkCover(covered, from, to) {\n    for (let range of covered) {\n        if (range.from >= to)\n            break;\n        if (range.to > from)\n            return range.from <= from && range.to >= to ? 2 /* Full */ : 1 /* Partial */;\n    }\n    return 0 /* None */;\n}\n// Take a piece of buffer and convert it into a stand-alone\n// TreeBuffer.\nfunction sliceBuf(buf, startI, endI, nodes, positions, off) {\n    if (startI < endI) {\n        let from = buf.buffer[startI + 1], to = buf.buffer[endI - 2];\n        nodes.push(buf.slice(startI, endI, from, to));\n        positions.push(from - off);\n    }\n}\n// This function takes a node that's in a buffer, and converts it, and\n// its parent buffer nodes, into a Tree. This is again acting on the\n// assumption that the trees and buffers have been constructed by the\n// parse that was ran via the mix parser, and thus aren't shared with\n// any other code, making violations of the immutability safe.\nfunction materialize(cursor) {\n    let { node } = cursor, depth = 0;\n    // Scan up to the nearest tree\n    do {\n        cursor.parent();\n        depth++;\n    } while (!cursor.tree);\n    // Find the index of the buffer in that tree\n    let i = 0, base = cursor.tree, off = 0;\n    for (;; i++) {\n        off = base.positions[i] + cursor.from;\n        if (off <= node.from && off + base.children[i].length >= node.to)\n            break;\n    }\n    let buf = base.children[i], b = buf.buffer;\n    // Split a level in the buffer, putting the nodes before and after\n    // the child that contains `node` into new buffers.\n    function split(startI, endI, type, innerOffset, length) {\n        let i = startI;\n        while (b[i + 2] + off <= node.from)\n            i = b[i + 3];\n        let children = [], positions = [];\n        sliceBuf(buf, startI, i, children, positions, innerOffset);\n        let from = b[i + 1], to = b[i + 2];\n        let isTarget = from + off == node.from && to + off == node.to && b[i] == node.type.id;\n        children.push(isTarget ? node.toTree() : split(i + 4, b[i + 3], buf.set.types[b[i]], from, to - from));\n        positions.push(from - innerOffset);\n        sliceBuf(buf, b[i + 3], endI, children, positions, innerOffset);\n        return new Tree(type, children, positions, length);\n    }\n    base.children[i] = split(0, b.length, NodeType.none, 0, buf.length);\n    // Move the cursor back to the target node\n    for (let d = 0; d <= depth; d++)\n        cursor.childAfter(node.from);\n}\nclass StructureCursor {\n    constructor(root, offset) {\n        this.offset = offset;\n        this.done = false;\n        this.cursor = root.fullCursor();\n    }\n    // Move to the first node (in pre-order) that starts at or after `pos`.\n    moveTo(pos) {\n        let { cursor } = this, p = pos - this.offset;\n        while (!this.done && cursor.from < p) {\n            if (cursor.to >= pos && cursor.enter(p, 1, false, false)) ;\n            else if (!cursor.next(false))\n                this.done = true;\n        }\n    }\n    hasNode(cursor) {\n        this.moveTo(cursor.from);\n        if (!this.done && this.cursor.from + this.offset == cursor.from && this.cursor.tree) {\n            for (let tree = this.cursor.tree;;) {\n                if (tree == cursor.tree)\n                    return true;\n                if (tree.children.length && tree.positions[0] == 0 && tree.children[0] instanceof Tree)\n                    tree = tree.children[0];\n                else\n                    break;\n            }\n        }\n        return false;\n    }\n}\nclass FragmentCursor {\n    constructor(fragments) {\n        var _a;\n        this.fragments = fragments;\n        this.curTo = 0;\n        this.fragI = 0;\n        if (fragments.length) {\n            let first = this.curFrag = fragments[0];\n            this.curTo = (_a = first.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : first.to;\n            this.inner = new StructureCursor(first.tree, -first.offset);\n        }\n        else {\n            this.curFrag = this.inner = null;\n        }\n    }\n    hasNode(node) {\n        while (this.curFrag && node.from >= this.curTo)\n            this.nextFrag();\n        return this.curFrag && this.curFrag.from <= node.from && this.curTo >= node.to && this.inner.hasNode(node);\n    }\n    nextFrag() {\n        var _a;\n        this.fragI++;\n        if (this.fragI == this.fragments.length) {\n            this.curFrag = this.inner = null;\n        }\n        else {\n            let frag = this.curFrag = this.fragments[this.fragI];\n            this.curTo = (_a = frag.tree.prop(stoppedInner)) !== null && _a !== void 0 ? _a : frag.to;\n            this.inner = new StructureCursor(frag.tree, -frag.offset);\n        }\n    }\n    findMounts(pos, parser) {\n        var _a;\n        let result = [];\n        if (this.inner) {\n            this.inner.cursor.moveTo(pos, 1);\n            for (let pos = this.inner.cursor.node; pos; pos = pos.parent) {\n                let mount = (_a = pos.tree) === null || _a === void 0 ? void 0 : _a.prop(NodeProp.mounted);\n                if (mount && mount.parser == parser) {\n                    for (let i = this.fragI; i < this.fragments.length; i++) {\n                        let frag = this.fragments[i];\n                        if (frag.from >= pos.to)\n                            break;\n                        if (frag.tree == this.curFrag.tree)\n                            result.push({\n                                frag,\n                                pos: pos.from - frag.offset,\n                                mount\n                            });\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}\nfunction punchRanges(outer, ranges) {\n    let copy = null, current = ranges;\n    for (let i = 1, j = 0; i < outer.length; i++) {\n        let gapFrom = outer[i - 1].to, gapTo = outer[i].from;\n        for (; j < current.length; j++) {\n            let r = current[j];\n            if (r.from >= gapTo)\n                break;\n            if (r.to <= gapFrom)\n                continue;\n            if (!copy)\n                current = copy = ranges.slice();\n            if (r.from < gapFrom) {\n                copy[j] = new Range(r.from, gapFrom);\n                if (r.to > gapTo)\n                    copy.splice(j + 1, 0, new Range(gapTo, r.to));\n            }\n            else if (r.to > gapTo) {\n                copy[j--] = new Range(gapTo, r.to);\n            }\n            else {\n                copy.splice(j--, 1);\n            }\n        }\n    }\n    return current;\n}\nfunction findCoverChanges(a, b, from, to) {\n    let iA = 0, iB = 0, inA = false, inB = false, pos = -1e9;\n    let result = [];\n    for (;;) {\n        let nextA = iA == a.length ? 1e9 : inA ? a[iA].to : a[iA].from;\n        let nextB = iB == b.length ? 1e9 : inB ? b[iB].to : b[iB].from;\n        if (inA != inB) {\n            let start = Math.max(pos, from), end = Math.min(nextA, nextB, to);\n            if (start < end)\n                result.push(new Range(start, end));\n        }\n        pos = Math.min(nextA, nextB);\n        if (pos == 1e9)\n            break;\n        if (nextA == pos) {\n            if (!inA)\n                inA = true;\n            else {\n                inA = false;\n                iA++;\n            }\n        }\n        if (nextB == pos) {\n            if (!inB)\n                inB = true;\n            else {\n                inB = false;\n                iB++;\n            }\n        }\n    }\n    return result;\n}\n// Given a number of fragments for the outer tree, and a set of ranges\n// to parse, find fragments for inner trees mounted around those\n// ranges, if any.\nfunction enterFragments(mounts, ranges) {\n    let result = [];\n    for (let { pos, mount, frag } of mounts) {\n        let startPos = pos + (mount.overlay ? mount.overlay[0].from : 0), endPos = startPos + mount.tree.length;\n        let from = Math.max(frag.from, startPos), to = Math.min(frag.to, endPos);\n        if (mount.overlay) {\n            let overlay = mount.overlay.map(r => new Range(r.from + pos, r.to + pos));\n            let changes = findCoverChanges(ranges, overlay, from, to);\n            for (let i = 0, pos = from;; i++) {\n                let last = i == changes.length, end = last ? to : changes[i].from;\n                if (end > pos)\n                    result.push(new TreeFragment(pos, end, mount.tree, -startPos, frag.from >= pos, frag.to <= end));\n                if (last)\n                    break;\n                pos = changes[i].to;\n            }\n        }\n        else {\n            result.push(new TreeFragment(from, to, mount.tree, -startPos, frag.from >= startPos, frag.to <= endPos));\n        }\n    }\n    return result;\n}\n\nexport { DefaultBufferLength, MountedTree, NodeProp, NodeSet, NodeType, Parser, Tree, TreeBuffer, TreeCursor, TreeFragment, parseMixed };\n","import { NodeProp, Tree, TreeFragment, Parser, NodeType } from '@lezer/common';\nimport { StateEffect, StateField, Facet, EditorState } from '@codemirror/state';\nimport { ViewPlugin, logException } from '@codemirror/view';\nimport { countColumn } from '@codemirror/text';\n\n/**\nNode prop stored in a grammar's top syntax node to provide the\nfacet that stores language data for that language.\n*/\nconst languageDataProp = /*@__PURE__*/new NodeProp();\n/**\nHelper function to define a facet (to be added to the top syntax\nnode(s) for a language via\n[`languageDataProp`](https://codemirror.net/6/docs/ref/#language.languageDataProp)), that will be\nused to associate language data with the language. You\nprobably only need this when subclassing\n[`Language`](https://codemirror.net/6/docs/ref/#language.Language).\n*/\nfunction defineLanguageFacet(baseData) {\n    return Facet.define({\n        combine: baseData ? values => values.concat(baseData) : undefined\n    });\n}\n/**\nA language object manages parsing and per-language\n[metadata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt). Parse data is\nmanaged as a [Lezer](https://lezer.codemirror.net) tree. You'll\nwant to subclass this class for custom parsers, or use the\n[`LRLanguage`](https://codemirror.net/6/docs/ref/#language.LRLanguage) or\n[`StreamLanguage`](https://codemirror.net/6/docs/ref/#stream-parser.StreamLanguage) abstractions for\n[Lezer](https://lezer.codemirror.net/) or stream parsers.\n*/\nclass Language {\n    /**\n    Construct a language object. You usually don't need to invoke\n    this directly. But when you do, make sure you use\n    [`defineLanguageFacet`](https://codemirror.net/6/docs/ref/#language.defineLanguageFacet) to create\n    the first argument.\n    */\n    constructor(\n    /**\n    The [language data](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt) data\n    facet used for this language.\n    */\n    data, parser, \n    /**\n    The node type of the top node of trees produced by this parser.\n    */\n    topNode, extraExtensions = []) {\n        this.data = data;\n        this.topNode = topNode;\n        // Kludge to define EditorState.tree as a debugging helper,\n        // without the EditorState package actually knowing about\n        // languages and lezer trees.\n        if (!EditorState.prototype.hasOwnProperty(\"tree\"))\n            Object.defineProperty(EditorState.prototype, \"tree\", { get() { return syntaxTree(this); } });\n        this.parser = parser;\n        this.extension = [\n            language.of(this),\n            EditorState.languageData.of((state, pos, side) => state.facet(languageDataFacetAt(state, pos, side)))\n        ].concat(extraExtensions);\n    }\n    /**\n    Query whether this language is active at the given position.\n    */\n    isActiveAt(state, pos, side = -1) {\n        return languageDataFacetAt(state, pos, side) == this.data;\n    }\n    /**\n    Find the document regions that were parsed using this language.\n    The returned regions will _include_ any nested languages rooted\n    in this language, when those exist.\n    */\n    findRegions(state) {\n        let lang = state.facet(language);\n        if ((lang === null || lang === void 0 ? void 0 : lang.data) == this.data)\n            return [{ from: 0, to: state.doc.length }];\n        if (!lang || !lang.allowsNesting)\n            return [];\n        let result = [];\n        let explore = (tree, from) => {\n            if (tree.prop(languageDataProp) == this.data) {\n                result.push({ from, to: from + tree.length });\n                return;\n            }\n            let mount = tree.prop(NodeProp.mounted);\n            if (mount) {\n                if (mount.tree.prop(languageDataProp) == this.data) {\n                    if (mount.overlay)\n                        for (let r of mount.overlay)\n                            result.push({ from: r.from + from, to: r.to + from });\n                    else\n                        result.push({ from: from, to: from + tree.length });\n                    return;\n                }\n                else if (mount.overlay) {\n                    let size = result.length;\n                    explore(mount.tree, mount.overlay[0].from + from);\n                    if (result.length > size)\n                        return;\n                }\n            }\n            for (let i = 0; i < tree.children.length; i++) {\n                let ch = tree.children[i];\n                if (ch instanceof Tree)\n                    explore(ch, tree.positions[i] + from);\n            }\n        };\n        explore(syntaxTree(state), 0);\n        return result;\n    }\n    /**\n    Indicates whether this language allows nested languages. The\n    default implementation returns true.\n    */\n    get allowsNesting() { return true; }\n}\n/**\n@internal\n*/\nLanguage.setState = /*@__PURE__*/StateEffect.define();\nfunction languageDataFacetAt(state, pos, side) {\n    let topLang = state.facet(language);\n    if (!topLang)\n        return null;\n    let facet = topLang.data;\n    if (topLang.allowsNesting) {\n        for (let node = syntaxTree(state).topNode; node; node = node.enter(pos, side, true, false))\n            facet = node.type.prop(languageDataProp) || facet;\n    }\n    return facet;\n}\n/**\nA subclass of [`Language`](https://codemirror.net/6/docs/ref/#language.Language) for use with Lezer\n[LR parsers](https://lezer.codemirror.net/docs/ref#lr.LRParser)\nparsers.\n*/\nclass LRLanguage extends Language {\n    constructor(data, parser) {\n        super(data, parser, parser.topNode);\n        this.parser = parser;\n    }\n    /**\n    Define a language from a parser.\n    */\n    static define(spec) {\n        let data = defineLanguageFacet(spec.languageData);\n        return new LRLanguage(data, spec.parser.configure({\n            props: [languageDataProp.add(type => type.isTop ? data : undefined)]\n        }));\n    }\n    /**\n    Create a new instance of this language with a reconfigured\n    version of its parser.\n    */\n    configure(options) {\n        return new LRLanguage(this.data, this.parser.configure(options));\n    }\n    get allowsNesting() { return this.parser.wrappers.length > 0; } // FIXME\n}\n/**\nGet the syntax tree for a state, which is the current (possibly\nincomplete) parse tree of active [language](https://codemirror.net/6/docs/ref/#language.Language),\nor the empty tree if there is no language available.\n*/\nfunction syntaxTree(state) {\n    let field = state.field(Language.state, false);\n    return field ? field.tree : Tree.empty;\n}\n/**\nTry to get a parse tree that spans at least up to `upto`. The\nmethod will do at most `timeout` milliseconds of work to parse\nup to that point if the tree isn't already available.\n*/\nfunction ensureSyntaxTree(state, upto, timeout = 50) {\n    var _a;\n    let parse = (_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context;\n    return !parse ? null : parse.isDone(upto) || parse.work(timeout, upto) ? parse.tree : null;\n}\n/**\nQueries whether there is a full syntax tree available up to the\ngiven document position. If there isn't, the background parse\nprocess _might_ still be working and update the tree further, but\nthere is no guarantee of that—the parser will [stop\nworking](https://codemirror.net/6/docs/ref/#language.syntaxParserStopped) when it has spent a\ncertain amount of time or has moved beyond the visible viewport.\nAlways returns false if no language has been enabled.\n*/\nfunction syntaxTreeAvailable(state, upto = state.doc.length) {\n    var _a;\n    return ((_a = state.field(Language.state, false)) === null || _a === void 0 ? void 0 : _a.context.isDone(upto)) || false;\n}\n/**\nTells you whether the language parser is planning to do more\nparsing work (in a `requestIdleCallback` pseudo-thread) or has\nstopped running, either because it parsed the entire document,\nbecause it spent too much time and was cut off, or because there\nis no language parser enabled.\n*/\nfunction syntaxParserRunning(view) {\n    var _a;\n    return ((_a = view.plugin(parseWorker)) === null || _a === void 0 ? void 0 : _a.isWorking()) || false;\n}\n// Lezer-style Input object for a Text document.\nclass DocInput {\n    constructor(doc, length = doc.length) {\n        this.doc = doc;\n        this.length = length;\n        this.cursorPos = 0;\n        this.string = \"\";\n        this.cursor = doc.iter();\n    }\n    syncTo(pos) {\n        this.string = this.cursor.next(pos - this.cursorPos).value;\n        this.cursorPos = pos + this.string.length;\n        return this.cursorPos - this.string.length;\n    }\n    chunk(pos) {\n        this.syncTo(pos);\n        return this.string;\n    }\n    get lineChunks() { return true; }\n    read(from, to) {\n        let stringStart = this.cursorPos - this.string.length;\n        if (from < stringStart || to >= this.cursorPos)\n            return this.doc.sliceString(from, to);\n        else\n            return this.string.slice(from - stringStart, to - stringStart);\n    }\n}\nlet currentContext = null;\n/**\nA parse context provided to parsers working on the editor content.\n*/\nclass ParseContext {\n    /**\n    @internal\n    */\n    constructor(parser, \n    /**\n    The current editor state.\n    */\n    state, \n    /**\n    Tree fragments that can be reused by incremental re-parses.\n    */\n    fragments = [], \n    /**\n    @internal\n    */\n    tree, treeLen, \n    /**\n    The current editor viewport (or some overapproximation\n    thereof). Intended to be used for opportunistically avoiding\n    work (in which case\n    [`skipUntilInView`](https://codemirror.net/6/docs/ref/#language.ParseContext.skipUntilInView)\n    should be called to make sure the parser is restarted when the\n    skipped region becomes visible).\n    */\n    viewport, \n    /**\n    @internal\n    */\n    skipped, \n    /**\n    This is where skipping parsers can register a promise that,\n    when resolved, will schedule a new parse. It is cleared when\n    the parse worker picks up the promise. @internal\n    */\n    scheduleOn) {\n        this.parser = parser;\n        this.state = state;\n        this.fragments = fragments;\n        this.tree = tree;\n        this.treeLen = treeLen;\n        this.viewport = viewport;\n        this.skipped = skipped;\n        this.scheduleOn = scheduleOn;\n        this.parse = null;\n        /**\n        @internal\n        */\n        this.tempSkipped = [];\n    }\n    startParse() {\n        return this.parser.startParse(new DocInput(this.state.doc), this.fragments);\n    }\n    /**\n    @internal\n    */\n    work(time, upto) {\n        if (upto != null && upto >= this.state.doc.length)\n            upto = undefined;\n        if (this.tree != Tree.empty && this.isDone(upto !== null && upto !== void 0 ? upto : this.state.doc.length)) {\n            this.takeTree();\n            return true;\n        }\n        return this.withContext(() => {\n            var _a;\n            let endTime = Date.now() + time;\n            if (!this.parse)\n                this.parse = this.startParse();\n            if (upto != null && (this.parse.stoppedAt == null || this.parse.stoppedAt > upto) &&\n                upto < this.state.doc.length)\n                this.parse.stopAt(upto);\n            for (;;) {\n                let done = this.parse.advance();\n                if (done) {\n                    this.fragments = this.withoutTempSkipped(TreeFragment.addTree(done, this.fragments, this.parse.stoppedAt != null));\n                    this.treeLen = (_a = this.parse.stoppedAt) !== null && _a !== void 0 ? _a : this.state.doc.length;\n                    this.tree = done;\n                    this.parse = null;\n                    if (this.treeLen < (upto !== null && upto !== void 0 ? upto : this.state.doc.length))\n                        this.parse = this.startParse();\n                    else\n                        return true;\n                }\n                if (Date.now() > endTime)\n                    return false;\n            }\n        });\n    }\n    /**\n    @internal\n    */\n    takeTree() {\n        let pos, tree;\n        if (this.parse && (pos = this.parse.parsedPos) >= this.treeLen) {\n            if (this.parse.stoppedAt == null || this.parse.stoppedAt > pos)\n                this.parse.stopAt(pos);\n            this.withContext(() => { while (!(tree = this.parse.advance())) { } });\n            this.treeLen = pos;\n            this.tree = tree;\n            this.fragments = this.withoutTempSkipped(TreeFragment.addTree(this.tree, this.fragments, true));\n            this.parse = null;\n        }\n    }\n    withContext(f) {\n        let prev = currentContext;\n        currentContext = this;\n        try {\n            return f();\n        }\n        finally {\n            currentContext = prev;\n        }\n    }\n    withoutTempSkipped(fragments) {\n        for (let r; r = this.tempSkipped.pop();)\n            fragments = cutFragments(fragments, r.from, r.to);\n        return fragments;\n    }\n    /**\n    @internal\n    */\n    changes(changes, newState) {\n        let { fragments, tree, treeLen, viewport, skipped } = this;\n        this.takeTree();\n        if (!changes.empty) {\n            let ranges = [];\n            changes.iterChangedRanges((fromA, toA, fromB, toB) => ranges.push({ fromA, toA, fromB, toB }));\n            fragments = TreeFragment.applyChanges(fragments, ranges);\n            tree = Tree.empty;\n            treeLen = 0;\n            viewport = { from: changes.mapPos(viewport.from, -1), to: changes.mapPos(viewport.to, 1) };\n            if (this.skipped.length) {\n                skipped = [];\n                for (let r of this.skipped) {\n                    let from = changes.mapPos(r.from, 1), to = changes.mapPos(r.to, -1);\n                    if (from < to)\n                        skipped.push({ from, to });\n                }\n            }\n        }\n        return new ParseContext(this.parser, newState, fragments, tree, treeLen, viewport, skipped, this.scheduleOn);\n    }\n    /**\n    @internal\n    */\n    updateViewport(viewport) {\n        if (this.viewport.from == viewport.from && this.viewport.to == viewport.to)\n            return false;\n        this.viewport = viewport;\n        let startLen = this.skipped.length;\n        for (let i = 0; i < this.skipped.length; i++) {\n            let { from, to } = this.skipped[i];\n            if (from < viewport.to && to > viewport.from) {\n                this.fragments = cutFragments(this.fragments, from, to);\n                this.skipped.splice(i--, 1);\n            }\n        }\n        if (this.skipped.length >= startLen)\n            return false;\n        this.reset();\n        return true;\n    }\n    /**\n    @internal\n    */\n    reset() {\n        if (this.parse) {\n            this.takeTree();\n            this.parse = null;\n        }\n    }\n    /**\n    Notify the parse scheduler that the given region was skipped\n    because it wasn't in view, and the parse should be restarted\n    when it comes into view.\n    */\n    skipUntilInView(from, to) {\n        this.skipped.push({ from, to });\n    }\n    /**\n    Returns a parser intended to be used as placeholder when\n    asynchronously loading a nested parser. It'll skip its input and\n    mark it as not-really-parsed, so that the next update will parse\n    it again.\n    \n    When `until` is given, a reparse will be scheduled when that\n    promise resolves.\n    */\n    static getSkippingParser(until) {\n        return new class extends Parser {\n            createParse(input, fragments, ranges) {\n                let from = ranges[0].from, to = ranges[ranges.length - 1].to;\n                let parser = {\n                    parsedPos: from,\n                    advance() {\n                        let cx = currentContext;\n                        if (cx) {\n                            for (let r of ranges)\n                                cx.tempSkipped.push(r);\n                            if (until)\n                                cx.scheduleOn = cx.scheduleOn ? Promise.all([cx.scheduleOn, until]) : until;\n                        }\n                        this.parsedPos = to;\n                        return new Tree(NodeType.none, [], [], to - from);\n                    },\n                    stoppedAt: null,\n                    stopAt() { }\n                };\n                return parser;\n            }\n        };\n    }\n    /**\n    @internal\n    */\n    isDone(upto) {\n        upto = Math.min(upto, this.state.doc.length);\n        let frags = this.fragments;\n        return this.treeLen >= upto && frags.length && frags[0].from == 0 && frags[0].to >= upto;\n    }\n    /**\n    Get the context for the current parse, or `null` if no editor\n    parse is in progress.\n    */\n    static get() { return currentContext; }\n}\nfunction cutFragments(fragments, from, to) {\n    return TreeFragment.applyChanges(fragments, [{ fromA: from, toA: to, fromB: from, toB: to }]);\n}\nclass LanguageState {\n    constructor(\n    // A mutable parse state that is used to preserve work done during\n    // the lifetime of a state when moving to the next state.\n    context) {\n        this.context = context;\n        this.tree = context.tree;\n    }\n    apply(tr) {\n        if (!tr.docChanged)\n            return this;\n        let newCx = this.context.changes(tr.changes, tr.state);\n        // If the previous parse wasn't done, go forward only up to its\n        // end position or the end of the viewport, to avoid slowing down\n        // state updates with parse work beyond the viewport.\n        let upto = this.context.treeLen == tr.startState.doc.length ? undefined\n            : Math.max(tr.changes.mapPos(this.context.treeLen), newCx.viewport.to);\n        if (!newCx.work(20 /* Apply */, upto))\n            newCx.takeTree();\n        return new LanguageState(newCx);\n    }\n    static init(state) {\n        let vpTo = Math.min(3000 /* InitViewport */, state.doc.length);\n        let parseState = new ParseContext(state.facet(language).parser, state, [], Tree.empty, 0, { from: 0, to: vpTo }, [], null);\n        if (!parseState.work(20 /* Apply */, vpTo))\n            parseState.takeTree();\n        return new LanguageState(parseState);\n    }\n}\nLanguage.state = /*@__PURE__*/StateField.define({\n    create: LanguageState.init,\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(Language.setState))\n                return e.value;\n        if (tr.startState.facet(language) != tr.state.facet(language))\n            return LanguageState.init(tr.state);\n        return value.apply(tr);\n    }\n});\nlet requestIdle = (callback) => {\n    let timeout = setTimeout(() => callback(), 500 /* MaxPause */);\n    return () => clearTimeout(timeout);\n};\nif (typeof requestIdleCallback != \"undefined\")\n    requestIdle = (callback) => {\n        let idle = -1, timeout = setTimeout(() => {\n            idle = requestIdleCallback(callback, { timeout: 500 /* MaxPause */ - 100 /* MinPause */ });\n        }, 100 /* MinPause */);\n        return () => idle < 0 ? clearTimeout(timeout) : cancelIdleCallback(idle);\n    };\nconst parseWorker = /*@__PURE__*/ViewPlugin.fromClass(class ParseWorker {\n    constructor(view) {\n        this.view = view;\n        this.working = null;\n        this.workScheduled = 0;\n        // End of the current time chunk\n        this.chunkEnd = -1;\n        // Milliseconds of budget left for this chunk\n        this.chunkBudget = -1;\n        this.work = this.work.bind(this);\n        this.scheduleWork();\n    }\n    update(update) {\n        let cx = this.view.state.field(Language.state).context;\n        if (cx.updateViewport(update.view.viewport) || this.view.viewport.to > cx.treeLen)\n            this.scheduleWork();\n        if (update.docChanged) {\n            if (this.view.hasFocus)\n                this.chunkBudget += 50 /* ChangeBonus */;\n            this.scheduleWork();\n        }\n        this.checkAsyncSchedule(cx);\n    }\n    scheduleWork() {\n        if (this.working)\n            return;\n        let { state } = this.view, field = state.field(Language.state);\n        if (field.tree != field.context.tree || !field.context.isDone(state.doc.length))\n            this.working = requestIdle(this.work);\n    }\n    work(deadline) {\n        this.working = null;\n        let now = Date.now();\n        if (this.chunkEnd < now && (this.chunkEnd < 0 || this.view.hasFocus)) { // Start a new chunk\n            this.chunkEnd = now + 30000 /* ChunkTime */;\n            this.chunkBudget = 3000 /* ChunkBudget */;\n        }\n        if (this.chunkBudget <= 0)\n            return; // No more budget\n        let { state, viewport: { to: vpTo } } = this.view, field = state.field(Language.state);\n        if (field.tree == field.context.tree && field.context.isDone(vpTo + 100000 /* MaxParseAhead */))\n            return;\n        let time = Math.min(this.chunkBudget, 100 /* Slice */, deadline ? Math.max(25 /* MinSlice */, deadline.timeRemaining() - 5) : 1e9);\n        let viewportFirst = field.context.treeLen < vpTo && state.doc.length > vpTo + 1000;\n        let done = field.context.work(time, vpTo + (viewportFirst ? 0 : 100000 /* MaxParseAhead */));\n        this.chunkBudget -= Date.now() - now;\n        if (done || this.chunkBudget <= 0) {\n            field.context.takeTree();\n            this.view.dispatch({ effects: Language.setState.of(new LanguageState(field.context)) });\n        }\n        if (this.chunkBudget > 0 && !(done && !viewportFirst))\n            this.scheduleWork();\n        this.checkAsyncSchedule(field.context);\n    }\n    checkAsyncSchedule(cx) {\n        if (cx.scheduleOn) {\n            this.workScheduled++;\n            cx.scheduleOn\n                .then(() => this.scheduleWork())\n                .catch(err => logException(this.view.state, err))\n                .then(() => this.workScheduled--);\n            cx.scheduleOn = null;\n        }\n    }\n    destroy() {\n        if (this.working)\n            this.working();\n    }\n    isWorking() {\n        return this.working || this.workScheduled > 0;\n    }\n}, {\n    eventHandlers: { focus() { this.scheduleWork(); } }\n});\n/**\nThe facet used to associate a language with an editor state.\n*/\nconst language = /*@__PURE__*/Facet.define({\n    combine(languages) { return languages.length ? languages[0] : null; },\n    enables: [Language.state, parseWorker]\n});\n/**\nThis class bundles a [language object](https://codemirror.net/6/docs/ref/#language.Language) with an\noptional set of supporting extensions. Language packages are\nencouraged to export a function that optionally takes a\nconfiguration object and returns a `LanguageSupport` instance, as\nthe main way for client code to use the package.\n*/\nclass LanguageSupport {\n    /**\n    Create a support object.\n    */\n    constructor(\n    /**\n    The language object.\n    */\n    language, \n    /**\n    An optional set of supporting extensions. When nesting a\n    language in another language, the outer language is encouraged\n    to include the supporting extensions for its inner languages\n    in its own set of support extensions.\n    */\n    support = []) {\n        this.language = language;\n        this.support = support;\n        this.extension = [language, support];\n    }\n}\n/**\nLanguage descriptions are used to store metadata about languages\nand to dynamically load them. Their main role is finding the\nappropriate language for a filename or dynamically loading nested\nparsers.\n*/\nclass LanguageDescription {\n    constructor(\n    /**\n    The name of this language.\n    */\n    name, \n    /**\n    Alternative names for the mode (lowercased, includes `this.name`).\n    */\n    alias, \n    /**\n    File extensions associated with this language.\n    */\n    extensions, \n    /**\n    Optional filename pattern that should be associated with this\n    language.\n    */\n    filename, loadFunc, \n    /**\n    If the language has been loaded, this will hold its value.\n    */\n    support = undefined) {\n        this.name = name;\n        this.alias = alias;\n        this.extensions = extensions;\n        this.filename = filename;\n        this.loadFunc = loadFunc;\n        this.support = support;\n        this.loading = null;\n    }\n    /**\n    Start loading the the language. Will return a promise that\n    resolves to a [`LanguageSupport`](https://codemirror.net/6/docs/ref/#language.LanguageSupport)\n    object when the language successfully loads.\n    */\n    load() {\n        return this.loading || (this.loading = this.loadFunc().then(support => this.support = support, err => { this.loading = null; throw err; }));\n    }\n    /**\n    Create a language description.\n    */\n    static of(spec) {\n        let { load, support } = spec;\n        if (!load) {\n            if (!support)\n                throw new RangeError(\"Must pass either 'load' or 'support' to LanguageDescription.of\");\n            load = () => Promise.resolve(support);\n        }\n        return new LanguageDescription(spec.name, (spec.alias || []).concat(spec.name).map(s => s.toLowerCase()), spec.extensions || [], spec.filename, load, support);\n    }\n    /**\n    Look for a language in the given array of descriptions that\n    matches the filename. Will first match\n    [`filename`](https://codemirror.net/6/docs/ref/#language.LanguageDescription.filename) patterns,\n    and then [extensions](https://codemirror.net/6/docs/ref/#language.LanguageDescription.extensions),\n    and return the first language that matches.\n    */\n    static matchFilename(descs, filename) {\n        for (let d of descs)\n            if (d.filename && d.filename.test(filename))\n                return d;\n        let ext = /\\.([^.]+)$/.exec(filename);\n        if (ext)\n            for (let d of descs)\n                if (d.extensions.indexOf(ext[1]) > -1)\n                    return d;\n        return null;\n    }\n    /**\n    Look for a language whose name or alias matches the the given\n    name (case-insensitively). If `fuzzy` is true, and no direct\n    matchs is found, this'll also search for a language whose name\n    or alias occurs in the string (for names shorter than three\n    characters, only when surrounded by non-word characters).\n    */\n    static matchLanguageName(descs, name, fuzzy = true) {\n        name = name.toLowerCase();\n        for (let d of descs)\n            if (d.alias.some(a => a == name))\n                return d;\n        if (fuzzy)\n            for (let d of descs)\n                for (let a of d.alias) {\n                    let found = name.indexOf(a);\n                    if (found > -1 && (a.length > 2 || !/\\w/.test(name[found - 1]) && !/\\w/.test(name[found + a.length])))\n                        return d;\n                }\n        return null;\n    }\n}\n\n/**\nFacet that defines a way to provide a function that computes the\nappropriate indentation depth at the start of a given line, or\n`null` to indicate no appropriate indentation could be determined.\n*/\nconst indentService = /*@__PURE__*/Facet.define();\n/**\nFacet for overriding the unit by which indentation happens.\nShould be a string consisting either entirely of spaces or\nentirely of tabs. When not set, this defaults to 2 spaces.\n*/\nconst indentUnit = /*@__PURE__*/Facet.define({\n    combine: values => {\n        if (!values.length)\n            return \"  \";\n        if (!/^(?: +|\\t+)$/.test(values[0]))\n            throw new Error(\"Invalid indent unit: \" + JSON.stringify(values[0]));\n        return values[0];\n    }\n});\n/**\nReturn the _column width_ of an indent unit in the state.\nDetermined by the [`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit)\nfacet, and [`tabSize`](https://codemirror.net/6/docs/ref/#state.EditorState^tabSize) when that\ncontains tabs.\n*/\nfunction getIndentUnit(state) {\n    let unit = state.facet(indentUnit);\n    return unit.charCodeAt(0) == 9 ? state.tabSize * unit.length : unit.length;\n}\n/**\nCreate an indentation string that covers columns 0 to `cols`.\nWill use tabs for as much of the columns as possible when the\n[`indentUnit`](https://codemirror.net/6/docs/ref/#language.indentUnit) facet contains\ntabs.\n*/\nfunction indentString(state, cols) {\n    let result = \"\", ts = state.tabSize;\n    if (state.facet(indentUnit).charCodeAt(0) == 9)\n        while (cols >= ts) {\n            result += \"\\t\";\n            cols -= ts;\n        }\n    for (let i = 0; i < cols; i++)\n        result += \" \";\n    return result;\n}\n/**\nGet the indentation at the given position. Will first consult any\n[indent services](https://codemirror.net/6/docs/ref/#language.indentService) that are registered,\nand if none of those return an indentation, this will check the\nsyntax tree for the [indent node prop](https://codemirror.net/6/docs/ref/#language.indentNodeProp)\nand use that if found. Returns a number when an indentation could\nbe determined, and null otherwise.\n*/\nfunction getIndentation(context, pos) {\n    if (context instanceof EditorState)\n        context = new IndentContext(context);\n    for (let service of context.state.facet(indentService)) {\n        let result = service(context, pos);\n        if (result != null)\n            return result;\n    }\n    let tree = syntaxTree(context.state);\n    return tree ? syntaxIndentation(context, tree, pos) : null;\n}\n/**\nIndentation contexts are used when calling [indentation\nservices](https://codemirror.net/6/docs/ref/#language.indentService). They provide helper utilities\nuseful in indentation logic, and can selectively override the\nindentation reported for some lines.\n*/\nclass IndentContext {\n    /**\n    Create an indent context.\n    */\n    constructor(\n    /**\n    The editor state.\n    */\n    state, \n    /**\n    @internal\n    */\n    options = {}) {\n        this.state = state;\n        this.options = options;\n        this.unit = getIndentUnit(state);\n    }\n    /**\n    Get a description of the line at the given position, taking\n    [simulated line\n    breaks](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    into account. If there is such a break at `pos`, the `bias`\n    argument determines whether the part of the line line before or\n    after the break is used.\n    */\n    lineAt(pos, bias = 1) {\n        let line = this.state.doc.lineAt(pos);\n        let { simulateBreak } = this.options;\n        if (simulateBreak != null && simulateBreak >= line.from && simulateBreak <= line.to) {\n            if (bias < 0 ? simulateBreak < pos : simulateBreak <= pos)\n                return { text: line.text.slice(simulateBreak - line.from), from: simulateBreak };\n            else\n                return { text: line.text.slice(0, simulateBreak - line.from), from: line.from };\n        }\n        return line;\n    }\n    /**\n    Get the text directly after `pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    textAfterPos(pos, bias = 1) {\n        if (this.options.simulateDoubleBreak && pos == this.options.simulateBreak)\n            return \"\";\n        let { text, from } = this.lineAt(pos, bias);\n        return text.slice(pos - from, Math.min(text.length, pos + 100 - from));\n    }\n    /**\n    Find the column for the given position.\n    */\n    column(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let result = this.countColumn(text, pos - from);\n        let override = this.options.overrideIndentation ? this.options.overrideIndentation(from) : -1;\n        if (override > -1)\n            result += override - this.countColumn(text, text.search(/\\S|$/));\n        return result;\n    }\n    /**\n    Find the column position (taking tabs into account) of the given\n    position in the given string.\n    */\n    countColumn(line, pos = line.length) {\n        return countColumn(line, this.state.tabSize, pos);\n    }\n    /**\n    Find the indentation column of the line at the given point.\n    */\n    lineIndent(pos, bias = 1) {\n        let { text, from } = this.lineAt(pos, bias);\n        let override = this.options.overrideIndentation;\n        if (override) {\n            let overriden = override(from);\n            if (overriden > -1)\n                return overriden;\n        }\n        return this.countColumn(text, text.search(/\\S|$/));\n    }\n    /**\n    Returns the [simulated line\n    break](https://codemirror.net/6/docs/ref/#language.IndentContext.constructor^options.simulateBreak)\n    for this context, if any.\n    */\n    get simulatedBreak() {\n        return this.options.simulateBreak || null;\n    }\n}\n/**\nA syntax tree node prop used to associate indentation strategies\nwith node types. Such a strategy is a function from an indentation\ncontext to a column number or null, where null indicates that no\ndefinitive indentation can be determined.\n*/\nconst indentNodeProp = /*@__PURE__*/new NodeProp();\n// Compute the indentation for a given position from the syntax tree.\nfunction syntaxIndentation(cx, ast, pos) {\n    return indentFrom(ast.resolveInner(pos).enterUnfinishedNodesBefore(pos), pos, cx);\n}\nfunction ignoreClosed(cx) {\n    return cx.pos == cx.options.simulateBreak && cx.options.simulateDoubleBreak;\n}\nfunction indentStrategy(tree) {\n    let strategy = tree.type.prop(indentNodeProp);\n    if (strategy)\n        return strategy;\n    let first = tree.firstChild, close;\n    if (first && (close = first.type.prop(NodeProp.closedBy))) {\n        let last = tree.lastChild, closed = last && close.indexOf(last.name) > -1;\n        return cx => delimitedStrategy(cx, true, 1, undefined, closed && !ignoreClosed(cx) ? last.from : undefined);\n    }\n    return tree.parent == null ? topIndent : null;\n}\nfunction indentFrom(node, pos, base) {\n    for (; node; node = node.parent) {\n        let strategy = indentStrategy(node);\n        if (strategy)\n            return strategy(new TreeIndentContext(base, pos, node));\n    }\n    return null;\n}\nfunction topIndent() { return 0; }\n/**\nObjects of this type provide context information and helper\nmethods to indentation functions.\n*/\nclass TreeIndentContext extends IndentContext {\n    /**\n    @internal\n    */\n    constructor(base, \n    /**\n    The position at which indentation is being computed.\n    */\n    pos, \n    /**\n    The syntax tree node to which the indentation strategy\n    applies.\n    */\n    node) {\n        super(base.state, base.options);\n        this.base = base;\n        this.pos = pos;\n        this.node = node;\n    }\n    /**\n    Get the text directly after `this.pos`, either the entire line\n    or the next 100 characters, whichever is shorter.\n    */\n    get textAfter() {\n        return this.textAfterPos(this.pos);\n    }\n    /**\n    Get the indentation at the reference line for `this.node`, which\n    is the line on which it starts, unless there is a node that is\n    _not_ a parent of this node covering the start of that line. If\n    so, the line at the start of that node is tried, again skipping\n    on if it is covered by another such node.\n    */\n    get baseIndent() {\n        let line = this.state.doc.lineAt(this.node.from);\n        // Skip line starts that are covered by a sibling (or cousin, etc)\n        for (;;) {\n            let atBreak = this.node.resolve(line.from);\n            while (atBreak.parent && atBreak.parent.from == atBreak.from)\n                atBreak = atBreak.parent;\n            if (isParent(atBreak, this.node))\n                break;\n            line = this.state.doc.lineAt(atBreak.from);\n        }\n        return this.lineIndent(line.from);\n    }\n    /**\n    Continue looking for indentations in the node's parent nodes,\n    and return the result of that.\n    */\n    continue() {\n        let parent = this.node.parent;\n        return parent ? indentFrom(parent, this.pos, this.base) : 0;\n    }\n}\nfunction isParent(parent, of) {\n    for (let cur = of; cur; cur = cur.parent)\n        if (parent == cur)\n            return true;\n    return false;\n}\n// Check whether a delimited node is aligned (meaning there are\n// non-skipped nodes on the same line as the opening delimiter). And\n// if so, return the opening token.\nfunction bracketedAligned(context) {\n    let tree = context.node;\n    let openToken = tree.childAfter(tree.from), last = tree.lastChild;\n    if (!openToken)\n        return null;\n    let sim = context.options.simulateBreak;\n    let openLine = context.state.doc.lineAt(openToken.from);\n    let lineEnd = sim == null || sim <= openLine.from ? openLine.to : Math.min(openLine.to, sim);\n    for (let pos = openToken.to;;) {\n        let next = tree.childAfter(pos);\n        if (!next || next == last)\n            return null;\n        if (!next.type.isSkipped)\n            return next.from < lineEnd ? openToken : null;\n        pos = next.to;\n    }\n}\n/**\nAn indentation strategy for delimited (usually bracketed) nodes.\nWill, by default, indent one unit more than the parent's base\nindent unless the line starts with a closing token. When `align`\nis true and there are non-skipped nodes on the node's opening\nline, the content of the node will be aligned with the end of the\nopening node, like this:\n\n    foo(bar,\n        baz)\n*/\nfunction delimitedIndent({ closing, align = true, units = 1 }) {\n    return (context) => delimitedStrategy(context, align, units, closing);\n}\nfunction delimitedStrategy(context, align, units, closing, closedAt) {\n    let after = context.textAfter, space = after.match(/^\\s*/)[0].length;\n    let closed = closing && after.slice(space, space + closing.length) == closing || closedAt == context.pos + space;\n    let aligned = align ? bracketedAligned(context) : null;\n    if (aligned)\n        return closed ? context.column(aligned.from) : context.column(aligned.to);\n    return context.baseIndent + (closed ? 0 : context.unit * units);\n}\n/**\nAn indentation strategy that aligns a node's content to its base\nindentation.\n*/\nconst flatIndent = (context) => context.baseIndent;\n/**\nCreates an indentation strategy that, by default, indents\ncontinued lines one unit more than the node's base indentation.\nYou can provide `except` to prevent indentation of lines that\nmatch a pattern (for example `/^else\\b/` in `if`/`else`\nconstructs), and you can change the amount of units used with the\n`units` option.\n*/\nfunction continuedIndent({ except, units = 1 } = {}) {\n    return (context) => {\n        let matchExcept = except && except.test(context.textAfter);\n        return context.baseIndent + (matchExcept ? 0 : units * context.unit);\n    };\n}\nconst DontIndentBeyond = 200;\n/**\nEnables reindentation on input. When a language defines an\n`indentOnInput` field in its [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt), which must hold a regular\nexpression, the line at the cursor will be reindented whenever new\ntext is typed and the input from the start of the line up to the\ncursor matches that regexp.\n\nTo avoid unneccesary reindents, it is recommended to start the\nregexp with `^` (usually followed by `\\s*`), and end it with `$`.\nFor example, `/^\\s*\\}$/` will reindent when a closing brace is\nadded at the start of a line.\n*/\nfunction indentOnInput() {\n    return EditorState.transactionFilter.of(tr => {\n        if (!tr.docChanged || !tr.isUserEvent(\"input.type\"))\n            return tr;\n        let rules = tr.startState.languageDataAt(\"indentOnInput\", tr.startState.selection.main.head);\n        if (!rules.length)\n            return tr;\n        let doc = tr.newDoc, { head } = tr.newSelection.main, line = doc.lineAt(head);\n        if (head > line.from + DontIndentBeyond)\n            return tr;\n        let lineStart = doc.sliceString(line.from, head);\n        if (!rules.some(r => r.test(lineStart)))\n            return tr;\n        let { state } = tr, last = -1, changes = [];\n        for (let { head } of state.selection.ranges) {\n            let line = state.doc.lineAt(head);\n            if (line.from == last)\n                continue;\n            last = line.from;\n            let indent = getIndentation(state, line.from);\n            if (indent == null)\n                continue;\n            let cur = /^\\s*/.exec(line.text)[0];\n            let norm = indentString(state, indent);\n            if (cur != norm)\n                changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n        return changes.length ? [tr, { changes, sequential: true }] : tr;\n    });\n}\n\n/**\nA facet that registers a code folding service. When called with\nthe extent of a line, such a function should return a foldable\nrange that starts on that line (but continues beyond it), if one\ncan be found.\n*/\nconst foldService = /*@__PURE__*/Facet.define();\n/**\nThis node prop is used to associate folding information with\nsyntax node types. Given a syntax node, it should check whether\nthat tree is foldable and return the range that can be collapsed\nwhen it is.\n*/\nconst foldNodeProp = /*@__PURE__*/new NodeProp();\n/**\n[Fold](https://codemirror.net/6/docs/ref/#language.foldNodeProp) function that folds everything but\nthe first and the last child of a syntax node. Useful for nodes\nthat start and end with delimiters.\n*/\nfunction foldInside(node) {\n    let first = node.firstChild, last = node.lastChild;\n    return first && first.to < last.from ? { from: first.to, to: last.type.isError ? node.to : last.from } : null;\n}\nfunction syntaxFolding(state, start, end) {\n    let tree = syntaxTree(state);\n    if (tree.length == 0)\n        return null;\n    let inner = tree.resolveInner(end);\n    let found = null;\n    for (let cur = inner; cur; cur = cur.parent) {\n        if (cur.to <= end || cur.from > end)\n            continue;\n        if (found && cur.from < start)\n            break;\n        let prop = cur.type.prop(foldNodeProp);\n        if (prop) {\n            let value = prop(cur, state);\n            if (value && value.from <= end && value.from >= start && value.to > end)\n                found = value;\n        }\n    }\n    return found;\n}\n/**\nCheck whether the given line is foldable. First asks any fold\nservices registered through\n[`foldService`](https://codemirror.net/6/docs/ref/#language.foldService), and if none of them return\na result, tries to query the [fold node\nprop](https://codemirror.net/6/docs/ref/#language.foldNodeProp) of syntax nodes that cover the end\nof the line.\n*/\nfunction foldable(state, lineStart, lineEnd) {\n    for (let service of state.facet(foldService)) {\n        let result = service(state, lineStart, lineEnd);\n        if (result)\n            return result;\n    }\n    return syntaxFolding(state, lineStart, lineEnd);\n}\n\nexport { IndentContext, LRLanguage, Language, LanguageDescription, LanguageSupport, ParseContext, TreeIndentContext, continuedIndent, defineLanguageFacet, delimitedIndent, ensureSyntaxTree, flatIndent, foldInside, foldNodeProp, foldService, foldable, getIndentUnit, getIndentation, indentNodeProp, indentOnInput, indentService, indentString, indentUnit, language, languageDataProp, syntaxParserRunning, syntaxTree, syntaxTreeAvailable };\n","import { EditorView, ViewPlugin, BlockType, PluginField, Direction } from '@codemirror/view';\nimport { RangeSet, RangeValue } from '@codemirror/rangeset';\nimport { MapMode, Facet, combineConfig } from '@codemirror/state';\n\n/**\nA gutter marker represents a bit of information attached to a line\nin a specific gutter. Your own custom markers have to extend this\nclass.\n*/\nclass GutterMarker extends RangeValue {\n    /**\n    @internal\n    */\n    compare(other) {\n        return this == other || this.constructor == other.constructor && this.eq(other);\n    }\n    /**\n    Compare this marker to another marker of the same type.\n    */\n    eq(other) { return false; }\n    /**\n    Called if the marker has a `toDOM` method and its representation\n    was removed from a gutter.\n    */\n    destroy(dom) { }\n}\nGutterMarker.prototype.elementClass = \"\";\nGutterMarker.prototype.toDOM = undefined;\nGutterMarker.prototype.mapMode = MapMode.TrackBefore;\nGutterMarker.prototype.startSide = GutterMarker.prototype.endSide = -1;\nGutterMarker.prototype.point = true;\n/**\nFacet used to add a class to all gutter elements for a given line.\nMarkers given to this facet should _only_ define an\n[`elementclass`](https://codemirror.net/6/docs/ref/#gutter.GutterMarker.elementClass), not a\n[`toDOM`](https://codemirror.net/6/docs/ref/#gutter.GutterMarker.toDOM) (or the marker will appear\nin all gutters for the line).\n*/\nconst gutterLineClass = /*@__PURE__*/Facet.define();\nconst defaults = {\n    class: \"\",\n    renderEmptyElements: false,\n    elementStyle: \"\",\n    markers: () => RangeSet.empty,\n    lineMarker: () => null,\n    lineMarkerChange: null,\n    initialSpacer: null,\n    updateSpacer: null,\n    domEventHandlers: {}\n};\nconst activeGutters = /*@__PURE__*/Facet.define();\n/**\nDefine an editor gutter. The order in which the gutters appear is\ndetermined by their extension priority.\n*/\nfunction gutter(config) {\n    return [gutters(), activeGutters.of(Object.assign(Object.assign({}, defaults), config))];\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutters\": {\n        display: \"flex\",\n        height: \"100%\",\n        boxSizing: \"border-box\",\n        left: 0,\n        zIndex: 200\n    },\n    \"&light .cm-gutters\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"#999\",\n        borderRight: \"1px solid #ddd\"\n    },\n    \"&dark .cm-gutters\": {\n        backgroundColor: \"#333338\",\n        color: \"#ccc\"\n    },\n    \".cm-gutter\": {\n        display: \"flex !important\",\n        flexDirection: \"column\",\n        flexShrink: 0,\n        boxSizing: \"border-box\",\n        minHeight: \"100%\",\n        overflow: \"hidden\"\n    },\n    \".cm-gutterElement\": {\n        boxSizing: \"border-box\"\n    },\n    \".cm-lineNumbers .cm-gutterElement\": {\n        padding: \"0 3px 0 5px\",\n        minWidth: \"20px\",\n        textAlign: \"right\",\n        whiteSpace: \"nowrap\"\n    },\n    \"&light .cm-activeLineGutter\": {\n        backgroundColor: \"#e2f2ff\"\n    },\n    \"&dark .cm-activeLineGutter\": {\n        backgroundColor: \"#222227\"\n    }\n});\nconst unfixGutters = /*@__PURE__*/Facet.define({\n    combine: values => values.some(x => x)\n});\n/**\nThe gutter-drawing plugin is automatically enabled when you add a\ngutter, but you can use this function to explicitly configure it.\n\nUnless `fixed` is explicitly set to `false`, the gutters are\nfixed, meaning they don't scroll along with the content\nhorizontally (except on Internet Explorer, which doesn't support\nCSS [`position:\nsticky`](https://developer.mozilla.org/en-US/docs/Web/CSS/position#sticky)).\n*/\nfunction gutters(config) {\n    let result = [\n        gutterView,\n        baseTheme\n    ];\n    if (config && config.fixed === false)\n        result.push(unfixGutters.of(true));\n    return result;\n}\nconst gutterView = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.prevViewport = view.viewport;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutters\";\n        this.dom.setAttribute(\"aria-hidden\", \"true\");\n        this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        this.gutters = view.state.facet(activeGutters).map(conf => new SingleGutterView(view, conf));\n        for (let gutter of this.gutters)\n            this.dom.appendChild(gutter.dom);\n        this.fixed = !view.state.facet(unfixGutters);\n        if (this.fixed) {\n            // FIXME IE11 fallback, which doesn't support position: sticky,\n            // by using position: relative + event handlers that realign the\n            // gutter (or just force fixed=false on IE11?)\n            this.dom.style.position = \"sticky\";\n        }\n        this.syncGutters(false);\n        view.scrollDOM.insertBefore(this.dom, view.contentDOM);\n    }\n    update(update) {\n        if (this.updateGutters(update)) {\n            // Detach during sync when the viewport changed significantly\n            // (such as during scrolling), since for large updates that is\n            // faster.\n            let vpA = this.prevViewport, vpB = update.view.viewport;\n            let vpOverlap = Math.min(vpA.to, vpB.to) - Math.max(vpA.from, vpB.from);\n            this.syncGutters(vpOverlap < (vpB.to - vpB.from) * 0.8);\n        }\n        if (update.geometryChanged)\n            this.dom.style.minHeight = this.view.contentHeight + \"px\";\n        if (this.view.state.facet(unfixGutters) != !this.fixed) {\n            this.fixed = !this.fixed;\n            this.dom.style.position = this.fixed ? \"sticky\" : \"\";\n        }\n        this.prevViewport = update.view.viewport;\n    }\n    syncGutters(detach) {\n        let after = this.dom.nextSibling;\n        if (detach)\n            this.dom.remove();\n        let lineClasses = RangeSet.iter(this.view.state.facet(gutterLineClass), this.view.viewport.from);\n        let classSet = [];\n        let contexts = this.gutters.map(gutter => new UpdateContext(gutter, this.view.viewport, -this.view.documentPadding.top));\n        for (let line of this.view.viewportLineBlocks) {\n            let text;\n            if (Array.isArray(line.type)) {\n                for (let b of line.type)\n                    if (b.type == BlockType.Text) {\n                        text = b;\n                        break;\n                    }\n            }\n            else {\n                text = line.type == BlockType.Text ? line : undefined;\n            }\n            if (!text)\n                continue;\n            if (classSet.length)\n                classSet = [];\n            advanceCursor(lineClasses, classSet, line.from);\n            for (let cx of contexts)\n                cx.line(this.view, text, classSet);\n        }\n        for (let cx of contexts)\n            cx.finish();\n        if (detach)\n            this.view.scrollDOM.insertBefore(this.dom, after);\n    }\n    updateGutters(update) {\n        let prev = update.startState.facet(activeGutters), cur = update.state.facet(activeGutters);\n        let change = update.docChanged || update.heightChanged || update.viewportChanged ||\n            !RangeSet.eq(update.startState.facet(gutterLineClass), update.state.facet(gutterLineClass), update.view.viewport.from, update.view.viewport.to);\n        if (prev == cur) {\n            for (let gutter of this.gutters)\n                if (gutter.update(update))\n                    change = true;\n        }\n        else {\n            change = true;\n            let gutters = [];\n            for (let conf of cur) {\n                let known = prev.indexOf(conf);\n                if (known < 0) {\n                    gutters.push(new SingleGutterView(this.view, conf));\n                }\n                else {\n                    this.gutters[known].update(update);\n                    gutters.push(this.gutters[known]);\n                }\n            }\n            for (let g of this.gutters) {\n                g.dom.remove();\n                if (gutters.indexOf(g) < 0)\n                    g.destroy();\n            }\n            for (let g of gutters)\n                this.dom.appendChild(g.dom);\n            this.gutters = gutters;\n        }\n        return change;\n    }\n    destroy() {\n        for (let view of this.gutters)\n            view.destroy();\n        this.dom.remove();\n    }\n}, {\n    provide: /*@__PURE__*/PluginField.scrollMargins.from(value => {\n        if (value.gutters.length == 0 || !value.fixed)\n            return null;\n        return value.view.textDirection == Direction.LTR ? { left: value.dom.offsetWidth } : { right: value.dom.offsetWidth };\n    })\n});\nfunction asArray(val) { return (Array.isArray(val) ? val : [val]); }\nfunction advanceCursor(cursor, collect, pos) {\n    while (cursor.value && cursor.from <= pos) {\n        if (cursor.from == pos)\n            collect.push(cursor.value);\n        cursor.next();\n    }\n}\nclass UpdateContext {\n    constructor(gutter, viewport, height) {\n        this.gutter = gutter;\n        this.height = height;\n        this.localMarkers = [];\n        this.i = 0;\n        this.cursor = RangeSet.iter(gutter.markers, viewport.from);\n    }\n    line(view, line, extraMarkers) {\n        if (this.localMarkers.length)\n            this.localMarkers = [];\n        advanceCursor(this.cursor, this.localMarkers, line.from);\n        let localMarkers = extraMarkers.length ? this.localMarkers.concat(extraMarkers) : this.localMarkers;\n        let forLine = this.gutter.config.lineMarker(view, line, localMarkers);\n        if (forLine)\n            localMarkers.unshift(forLine);\n        let gutter = this.gutter;\n        if (localMarkers.length == 0 && !gutter.config.renderEmptyElements)\n            return;\n        let above = line.top - this.height;\n        if (this.i == gutter.elements.length) {\n            let newElt = new GutterElement(view, line.height, above, localMarkers);\n            gutter.elements.push(newElt);\n            gutter.dom.appendChild(newElt.dom);\n        }\n        else {\n            gutter.elements[this.i].update(view, line.height, above, localMarkers);\n        }\n        this.height = line.bottom;\n        this.i++;\n    }\n    finish() {\n        let gutter = this.gutter;\n        while (gutter.elements.length > this.i) {\n            let last = gutter.elements.pop();\n            gutter.dom.removeChild(last.dom);\n            last.destroy();\n        }\n    }\n}\nclass SingleGutterView {\n    constructor(view, config) {\n        this.view = view;\n        this.config = config;\n        this.elements = [];\n        this.spacer = null;\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-gutter\" + (this.config.class ? \" \" + this.config.class : \"\");\n        for (let prop in config.domEventHandlers) {\n            this.dom.addEventListener(prop, (event) => {\n                let line = view.lineBlockAtHeight(event.clientY - view.documentTop);\n                if (config.domEventHandlers[prop](view, line, event))\n                    event.preventDefault();\n            });\n        }\n        this.markers = asArray(config.markers(view));\n        if (config.initialSpacer) {\n            this.spacer = new GutterElement(view, 0, 0, [config.initialSpacer(view)]);\n            this.dom.appendChild(this.spacer.dom);\n            this.spacer.dom.style.cssText += \"visibility: hidden; pointer-events: none\";\n        }\n    }\n    update(update) {\n        let prevMarkers = this.markers;\n        this.markers = asArray(this.config.markers(update.view));\n        if (this.spacer && this.config.updateSpacer) {\n            let updated = this.config.updateSpacer(this.spacer.markers[0], update);\n            if (updated != this.spacer.markers[0])\n                this.spacer.update(update.view, 0, 0, [updated]);\n        }\n        let vp = update.view.viewport;\n        return !RangeSet.eq(this.markers, prevMarkers, vp.from, vp.to) ||\n            (this.config.lineMarkerChange ? this.config.lineMarkerChange(update) : false);\n    }\n    destroy() {\n        for (let elt of this.elements)\n            elt.destroy();\n    }\n}\nclass GutterElement {\n    constructor(view, height, above, markers) {\n        this.height = -1;\n        this.above = 0;\n        this.markers = [];\n        this.dom = document.createElement(\"div\");\n        this.update(view, height, above, markers);\n    }\n    update(view, height, above, markers) {\n        if (this.height != height)\n            this.dom.style.height = (this.height = height) + \"px\";\n        if (this.above != above)\n            this.dom.style.marginTop = (this.above = above) ? above + \"px\" : \"\";\n        if (!sameMarkers(this.markers, markers))\n            this.setMarkers(view, markers);\n    }\n    setMarkers(view, markers) {\n        let cls = \"cm-gutterElement\", domPos = this.dom.firstChild;\n        for (let iNew = 0, iOld = 0;;) {\n            let skipTo = iOld, marker = iNew < markers.length ? markers[iNew++] : null, matched = false;\n            if (marker) {\n                let c = marker.elementClass;\n                if (c)\n                    cls += \" \" + c;\n                for (let i = iOld; i < this.markers.length; i++)\n                    if (this.markers[i].compare(marker)) {\n                        skipTo = i;\n                        matched = true;\n                        break;\n                    }\n            }\n            else {\n                skipTo = this.markers.length;\n            }\n            while (iOld < skipTo) {\n                let next = this.markers[iOld++];\n                if (next.toDOM) {\n                    next.destroy(domPos);\n                    let after = domPos.nextSibling;\n                    domPos.remove();\n                    domPos = after;\n                }\n            }\n            if (!marker)\n                break;\n            if (marker.toDOM) {\n                if (matched)\n                    domPos = domPos.nextSibling;\n                else\n                    this.dom.insertBefore(marker.toDOM(view), domPos);\n            }\n            if (matched)\n                iOld++;\n        }\n        this.dom.className = cls;\n        this.markers = markers;\n    }\n    destroy() {\n        this.setMarkers(null, []); // First argument not used unless creating markers\n    }\n}\nfunction sameMarkers(a, b) {\n    if (a.length != b.length)\n        return false;\n    for (let i = 0; i < a.length; i++)\n        if (!a[i].compare(b[i]))\n            return false;\n    return true;\n}\n/**\nFacet used to provide markers to the line number gutter.\n*/\nconst lineNumberMarkers = /*@__PURE__*/Facet.define();\nconst lineNumberConfig = /*@__PURE__*/Facet.define({\n    combine(values) {\n        return combineConfig(values, { formatNumber: String, domEventHandlers: {} }, {\n            domEventHandlers(a, b) {\n                let result = Object.assign({}, a);\n                for (let event in b) {\n                    let exists = result[event], add = b[event];\n                    result[event] = exists ? (view, line, event) => exists(view, line, event) || add(view, line, event) : add;\n                }\n                return result;\n            }\n        });\n    }\n});\nclass NumberMarker extends GutterMarker {\n    constructor(number) {\n        super();\n        this.number = number;\n    }\n    eq(other) { return this.number == other.number; }\n    toDOM() { return document.createTextNode(this.number); }\n}\nfunction formatNumber(view, number) {\n    return view.state.facet(lineNumberConfig).formatNumber(number, view.state);\n}\nconst lineNumberGutter = /*@__PURE__*/activeGutters.compute([lineNumberConfig], state => ({\n    class: \"cm-lineNumbers\",\n    renderEmptyElements: false,\n    markers(view) { return view.state.facet(lineNumberMarkers); },\n    lineMarker(view, line, others) {\n        if (others.some(m => m.toDOM))\n            return null;\n        return new NumberMarker(formatNumber(view, view.state.doc.lineAt(line.from).number));\n    },\n    lineMarkerChange: update => update.startState.facet(lineNumberConfig) != update.state.facet(lineNumberConfig),\n    initialSpacer(view) {\n        return new NumberMarker(formatNumber(view, maxLineNumber(view.state.doc.lines)));\n    },\n    updateSpacer(spacer, update) {\n        let max = formatNumber(update.view, maxLineNumber(update.view.state.doc.lines));\n        return max == spacer.number ? spacer : new NumberMarker(max);\n    },\n    domEventHandlers: state.facet(lineNumberConfig).domEventHandlers\n}));\n/**\nCreate a line number gutter extension.\n*/\nfunction lineNumbers(config = {}) {\n    return [\n        lineNumberConfig.of(config),\n        gutters(),\n        lineNumberGutter\n    ];\n}\nfunction maxLineNumber(lines) {\n    let last = 9;\n    while (last < lines)\n        last = last * 10 + 9;\n    return last;\n}\nconst activeLineGutterMarker = /*@__PURE__*/new class extends GutterMarker {\n    constructor() {\n        super(...arguments);\n        this.elementClass = \"cm-activeLineGutter\";\n    }\n};\nconst activeLineGutterHighlighter = /*@__PURE__*/gutterLineClass.compute([\"selection\"], state => {\n    let marks = [], last = -1;\n    for (let range of state.selection.ranges)\n        if (range.empty) {\n            let linePos = state.doc.lineAt(range.head).from;\n            if (linePos > last) {\n                last = linePos;\n                marks.push(activeLineGutterMarker.range(linePos));\n            }\n        }\n    return RangeSet.of(marks);\n});\n/**\nReturns an extension that adds a `cm-activeLineGutter` class to\nall gutter elements on the [active\nline](https://codemirror.net/6/docs/ref/#view.highlightActiveLine).\n*/\nfunction highlightActiveLineGutter() {\n    return activeLineGutterHighlighter;\n}\n\nexport { GutterMarker, gutter, gutterLineClass, gutters, highlightActiveLineGutter, lineNumberMarkers, lineNumbers };\n","import { StateEffect, StateField, Facet, combineConfig } from '@codemirror/state';\nimport { Decoration, EditorView, WidgetType, ViewPlugin } from '@codemirror/view';\nimport { foldable, language } from '@codemirror/language';\nimport { gutter, GutterMarker } from '@codemirror/gutter';\nimport { RangeSet, RangeSetBuilder } from '@codemirror/rangeset';\n\nfunction mapRange(range, mapping) {\n    let from = mapping.mapPos(range.from, 1), to = mapping.mapPos(range.to, -1);\n    return from >= to ? undefined : { from, to };\n}\n/**\nState effect that can be attached to a transaction to fold the\ngiven range. (You probably only need this in exceptional\ncircumstances—usually you'll just want to let\n[`foldCode`](https://codemirror.net/6/docs/ref/#fold.foldCode) and the [fold\ngutter](https://codemirror.net/6/docs/ref/#fold.foldGutter) create the transactions.)\n*/\nconst foldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\n/**\nState effect that unfolds the given range (if it was folded).\n*/\nconst unfoldEffect = /*@__PURE__*/StateEffect.define({ map: mapRange });\nfunction selectedLines(view) {\n    let lines = [];\n    for (let { head } of view.state.selection.ranges) {\n        if (lines.some(l => l.from <= head && l.to >= head))\n            continue;\n        lines.push(view.lineBlockAt(head));\n    }\n    return lines;\n}\nconst foldState = /*@__PURE__*/StateField.define({\n    create() {\n        return Decoration.none;\n    },\n    update(folded, tr) {\n        folded = folded.map(tr.changes);\n        for (let e of tr.effects) {\n            if (e.is(foldEffect) && !foldExists(folded, e.value.from, e.value.to))\n                folded = folded.update({ add: [foldWidget.range(e.value.from, e.value.to)] });\n            else if (e.is(unfoldEffect))\n                folded = folded.update({ filter: (from, to) => e.value.from != from || e.value.to != to,\n                    filterFrom: e.value.from, filterTo: e.value.to });\n        }\n        // Clear folded ranges that cover the selection head\n        if (tr.selection) {\n            let onSelection = false, { head } = tr.selection.main;\n            folded.between(head, head, (a, b) => { if (a < head && b > head)\n                onSelection = true; });\n            if (onSelection)\n                folded = folded.update({\n                    filterFrom: head,\n                    filterTo: head,\n                    filter: (a, b) => b <= head || a >= head\n                });\n        }\n        return folded;\n    },\n    provide: f => EditorView.decorations.from(f)\n});\n/**\nGet a [range set](https://codemirror.net/6/docs/ref/#rangeset.RangeSet) containing the folded ranges\nin the given state.\n*/\nfunction foldedRanges(state) {\n    return state.field(foldState, false) || RangeSet.empty;\n}\nfunction foldInside(state, from, to) {\n    var _a;\n    let found = null;\n    (_a = state.field(foldState, false)) === null || _a === void 0 ? void 0 : _a.between(from, to, (from, to) => {\n        if (!found || found.from > from)\n            found = { from, to };\n    });\n    return found;\n}\nfunction foldExists(folded, from, to) {\n    let found = false;\n    folded.between(from, from, (a, b) => { if (a == from && b == to)\n        found = true; });\n    return found;\n}\nfunction maybeEnable(state, other) {\n    return state.field(foldState, false) ? other : other.concat(StateEffect.appendConfig.of(codeFolding()));\n}\n/**\nFold the lines that are selected, if possible.\n*/\nconst foldCode = view => {\n    for (let line of selectedLines(view)) {\n        let range = foldable(view.state, line.from, line.to);\n        if (range) {\n            view.dispatch({ effects: maybeEnable(view.state, [foldEffect.of(range), announceFold(view, range)]) });\n            return true;\n        }\n    }\n    return false;\n};\n/**\nUnfold folded ranges on selected lines.\n*/\nconst unfoldCode = view => {\n    if (!view.state.field(foldState, false))\n        return false;\n    let effects = [];\n    for (let line of selectedLines(view)) {\n        let folded = foldInside(view.state, line.from, line.to);\n        if (folded)\n            effects.push(unfoldEffect.of(folded), announceFold(view, folded, false));\n    }\n    if (effects.length)\n        view.dispatch({ effects });\n    return effects.length > 0;\n};\nfunction announceFold(view, range, fold = true) {\n    let lineFrom = view.state.doc.lineAt(range.from).number, lineTo = view.state.doc.lineAt(range.to).number;\n    return EditorView.announce.of(`${view.state.phrase(fold ? \"Folded lines\" : \"Unfolded lines\")} ${lineFrom} ${view.state.phrase(\"to\")} ${lineTo}.`);\n}\n/**\nFold all top-level foldable ranges.\n*/\nconst foldAll = view => {\n    let { state } = view, effects = [];\n    for (let pos = 0; pos < state.doc.length;) {\n        let line = view.lineBlockAt(pos), range = foldable(state, line.from, line.to);\n        if (range)\n            effects.push(foldEffect.of(range));\n        pos = (range ? view.lineBlockAt(range.to) : line).to + 1;\n    }\n    if (effects.length)\n        view.dispatch({ effects: maybeEnable(view.state, effects) });\n    return !!effects.length;\n};\n/**\nUnfold all folded code.\n*/\nconst unfoldAll = view => {\n    let field = view.state.field(foldState, false);\n    if (!field || !field.size)\n        return false;\n    let effects = [];\n    field.between(0, view.state.doc.length, (from, to) => { effects.push(unfoldEffect.of({ from, to })); });\n    view.dispatch({ effects });\n    return true;\n};\n/**\nDefault fold-related key bindings.\n\n - Ctrl-Shift-[ (Cmd-Alt-[ on macOS): [`foldCode`](https://codemirror.net/6/docs/ref/#fold.foldCode).\n - Ctrl-Shift-] (Cmd-Alt-] on macOS): [`unfoldCode`](https://codemirror.net/6/docs/ref/#fold.unfoldCode).\n - Ctrl-Alt-[: [`foldAll`](https://codemirror.net/6/docs/ref/#fold.foldAll).\n - Ctrl-Alt-]: [`unfoldAll`](https://codemirror.net/6/docs/ref/#fold.unfoldAll).\n*/\nconst foldKeymap = [\n    { key: \"Ctrl-Shift-[\", mac: \"Cmd-Alt-[\", run: foldCode },\n    { key: \"Ctrl-Shift-]\", mac: \"Cmd-Alt-]\", run: unfoldCode },\n    { key: \"Ctrl-Alt-[\", run: foldAll },\n    { key: \"Ctrl-Alt-]\", run: unfoldAll }\n];\nconst defaultConfig = {\n    placeholderDOM: null,\n    placeholderText: \"…\"\n};\nconst foldConfig = /*@__PURE__*/Facet.define({\n    combine(values) { return combineConfig(values, defaultConfig); }\n});\n/**\nCreate an extension that configures code folding.\n*/\nfunction codeFolding(config) {\n    let result = [foldState, baseTheme];\n    if (config)\n        result.push(foldConfig.of(config));\n    return result;\n}\nconst foldWidget = /*@__PURE__*/Decoration.replace({ widget: /*@__PURE__*/new class extends WidgetType {\n        ignoreEvents() { return false; }\n        toDOM(view) {\n            let { state } = view, conf = state.facet(foldConfig);\n            let onclick = (event) => {\n                let line = view.lineBlockAt(view.posAtDOM(event.target));\n                let folded = foldInside(view.state, line.from, line.to);\n                if (folded)\n                    view.dispatch({ effects: unfoldEffect.of(folded) });\n                event.preventDefault();\n            };\n            if (conf.placeholderDOM)\n                return conf.placeholderDOM(view, onclick);\n            let element = document.createElement(\"span\");\n            element.textContent = conf.placeholderText;\n            element.setAttribute(\"aria-label\", state.phrase(\"folded code\"));\n            element.title = state.phrase(\"unfold\");\n            element.className = \"cm-foldPlaceholder\";\n            element.onclick = onclick;\n            return element;\n        }\n    } });\nconst foldGutterDefaults = {\n    openText: \"⌄\",\n    closedText: \"›\",\n    markerDOM: null,\n};\nclass FoldMarker extends GutterMarker {\n    constructor(config, open) {\n        super();\n        this.config = config;\n        this.open = open;\n    }\n    eq(other) { return this.config == other.config && this.open == other.open; }\n    toDOM(view) {\n        if (this.config.markerDOM)\n            return this.config.markerDOM(this.open);\n        let span = document.createElement(\"span\");\n        span.textContent = this.open ? this.config.openText : this.config.closedText;\n        span.title = view.state.phrase(this.open ? \"Fold line\" : \"Unfold line\");\n        return span;\n    }\n}\n/**\nCreate an extension that registers a fold gutter, which shows a\nfold status indicator before foldable lines (which can be clicked\nto fold or unfold the line).\n*/\nfunction foldGutter(config = {}) {\n    let fullConfig = Object.assign(Object.assign({}, foldGutterDefaults), config);\n    let canFold = new FoldMarker(fullConfig, true), canUnfold = new FoldMarker(fullConfig, false);\n    let markers = ViewPlugin.fromClass(class {\n        constructor(view) {\n            this.from = view.viewport.from;\n            this.markers = this.buildMarkers(view);\n        }\n        update(update) {\n            if (update.docChanged || update.viewportChanged ||\n                update.startState.facet(language) != update.state.facet(language) ||\n                update.startState.field(foldState, false) != update.state.field(foldState, false))\n                this.markers = this.buildMarkers(update.view);\n        }\n        buildMarkers(view) {\n            let builder = new RangeSetBuilder();\n            for (let line of view.viewportLineBlocks) {\n                let mark = foldInside(view.state, line.from, line.to) ? canUnfold\n                    : foldable(view.state, line.from, line.to) ? canFold : null;\n                if (mark)\n                    builder.add(line.from, line.from, mark);\n            }\n            return builder.finish();\n        }\n    });\n    return [\n        markers,\n        gutter({\n            class: \"cm-foldGutter\",\n            markers(view) { var _a; return ((_a = view.plugin(markers)) === null || _a === void 0 ? void 0 : _a.markers) || RangeSet.empty; },\n            initialSpacer() {\n                return new FoldMarker(fullConfig, false);\n            },\n            domEventHandlers: {\n                click: (view, line) => {\n                    let folded = foldInside(view.state, line.from, line.to);\n                    if (folded) {\n                        view.dispatch({ effects: unfoldEffect.of(folded) });\n                        return true;\n                    }\n                    let range = foldable(view.state, line.from, line.to);\n                    if (range) {\n                        view.dispatch({ effects: foldEffect.of(range) });\n                        return true;\n                    }\n                    return false;\n                }\n            }\n        }),\n        codeFolding()\n    ];\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"#eee\",\n        border: \"1px solid #ddd\",\n        color: \"#888\",\n        borderRadius: \".2em\",\n        margin: \"0 1px\",\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    },\n    \".cm-foldGutter span\": {\n        padding: \"0 1px\",\n        cursor: \"pointer\"\n    }\n});\n\nexport { codeFolding, foldAll, foldCode, foldEffect, foldGutter, foldKeymap, foldedRanges, unfoldAll, unfoldCode, unfoldEffect };\n","import { Facet, combineConfig, StateField } from '@codemirror/state';\nimport { syntaxTree } from '@codemirror/language';\nimport { EditorView, Decoration } from '@codemirror/view';\nimport { NodeProp } from '@lezer/common';\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-matchingBracket\": { backgroundColor: \"#328c8252\" },\n    \".cm-nonmatchingBracket\": { backgroundColor: \"#bb555544\" }\n});\nconst DefaultScanDist = 10000, DefaultBrackets = \"()[]{}\";\nconst bracketMatchingConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            afterCursor: true,\n            brackets: DefaultBrackets,\n            maxScanDistance: DefaultScanDist\n        });\n    }\n});\nconst matchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-matchingBracket\" }), nonmatchingMark = /*@__PURE__*/Decoration.mark({ class: \"cm-nonmatchingBracket\" });\nconst bracketMatchingState = /*@__PURE__*/StateField.define({\n    create() { return Decoration.none; },\n    update(deco, tr) {\n        if (!tr.docChanged && !tr.selection)\n            return deco;\n        let decorations = [];\n        let config = tr.state.facet(bracketMatchingConfig);\n        for (let range of tr.state.selection.ranges) {\n            if (!range.empty)\n                continue;\n            let match = matchBrackets(tr.state, range.head, -1, config)\n                || (range.head > 0 && matchBrackets(tr.state, range.head - 1, 1, config))\n                || (config.afterCursor &&\n                    (matchBrackets(tr.state, range.head, 1, config) ||\n                        (range.head < tr.state.doc.length && matchBrackets(tr.state, range.head + 1, -1, config))));\n            if (!match)\n                continue;\n            let mark = match.matched ? matchingMark : nonmatchingMark;\n            decorations.push(mark.range(match.start.from, match.start.to));\n            if (match.end)\n                decorations.push(mark.range(match.end.from, match.end.to));\n        }\n        return Decoration.set(decorations, true);\n    },\n    provide: f => EditorView.decorations.from(f)\n});\nconst bracketMatchingUnique = [\n    bracketMatchingState,\n    baseTheme\n];\n/**\nCreate an extension that enables bracket matching. Whenever the\ncursor is next to a bracket, that bracket and the one it matches\nare highlighted. Or, when no matching bracket is found, another\nhighlighting style is used to indicate this.\n*/\nfunction bracketMatching(config = {}) {\n    return [bracketMatchingConfig.of(config), bracketMatchingUnique];\n}\nfunction matchingNodes(node, dir, brackets) {\n    let byProp = node.prop(dir < 0 ? NodeProp.openedBy : NodeProp.closedBy);\n    if (byProp)\n        return byProp;\n    if (node.name.length == 1) {\n        let index = brackets.indexOf(node.name);\n        if (index > -1 && index % 2 == (dir < 0 ? 1 : 0))\n            return [brackets[index + dir]];\n    }\n    return null;\n}\n/**\nFind the matching bracket for the token at `pos`, scanning\ndirection `dir`. Only the `brackets` and `maxScanDistance`\nproperties are used from `config`, if given. Returns null if no\nbracket was found at `pos`, or a match result otherwise.\n*/\nfunction matchBrackets(state, pos, dir, config = {}) {\n    let maxScanDistance = config.maxScanDistance || DefaultScanDist, brackets = config.brackets || DefaultBrackets;\n    let tree = syntaxTree(state), node = tree.resolveInner(pos, dir);\n    for (let cur = node; cur; cur = cur.parent) {\n        let matches = matchingNodes(cur.type, dir, brackets);\n        if (matches && cur.from < cur.to)\n            return matchMarkedBrackets(state, pos, dir, cur, matches, brackets);\n    }\n    return matchPlainBrackets(state, pos, dir, tree, node.type, maxScanDistance, brackets);\n}\nfunction matchMarkedBrackets(_state, _pos, dir, token, matching, brackets) {\n    let parent = token.parent, firstToken = { from: token.from, to: token.to };\n    let depth = 0, cursor = parent === null || parent === void 0 ? void 0 : parent.cursor;\n    if (cursor && (dir < 0 ? cursor.childBefore(token.from) : cursor.childAfter(token.to)))\n        do {\n            if (dir < 0 ? cursor.to <= token.from : cursor.from >= token.to) {\n                if (depth == 0 && matching.indexOf(cursor.type.name) > -1 && cursor.from < cursor.to) {\n                    return { start: firstToken, end: { from: cursor.from, to: cursor.to }, matched: true };\n                }\n                else if (matchingNodes(cursor.type, dir, brackets)) {\n                    depth++;\n                }\n                else if (matchingNodes(cursor.type, -dir, brackets)) {\n                    depth--;\n                    if (depth == 0)\n                        return {\n                            start: firstToken,\n                            end: cursor.from == cursor.to ? undefined : { from: cursor.from, to: cursor.to },\n                            matched: false\n                        };\n                }\n            }\n        } while (dir < 0 ? cursor.prevSibling() : cursor.nextSibling());\n    return { start: firstToken, matched: false };\n}\nfunction matchPlainBrackets(state, pos, dir, tree, tokenType, maxScanDistance, brackets) {\n    let startCh = dir < 0 ? state.sliceDoc(pos - 1, pos) : state.sliceDoc(pos, pos + 1);\n    let bracket = brackets.indexOf(startCh);\n    if (bracket < 0 || (bracket % 2 == 0) != (dir > 0))\n        return null;\n    let startToken = { from: dir < 0 ? pos - 1 : pos, to: dir > 0 ? pos + 1 : pos };\n    let iter = state.doc.iterRange(pos, dir > 0 ? state.doc.length : 0), depth = 0;\n    for (let distance = 0; !(iter.next()).done && distance <= maxScanDistance;) {\n        let text = iter.value;\n        if (dir < 0)\n            distance += text.length;\n        let basePos = pos + distance * dir;\n        for (let pos = dir > 0 ? 0 : text.length - 1, end = dir > 0 ? text.length : -1; pos != end; pos += dir) {\n            let found = brackets.indexOf(text[pos]);\n            if (found < 0 || tree.resolve(basePos + pos, 1).type != tokenType)\n                continue;\n            if ((found % 2 == 0) == (dir > 0)) {\n                depth++;\n            }\n            else if (depth == 1) { // Closing\n                return { start: startToken, end: { from: basePos + pos, to: basePos + pos + 1 }, matched: (found >> 1) == (bracket >> 1) };\n            }\n            else {\n                depth--;\n            }\n        }\n        if (dir > 0)\n            distance += text.length;\n    }\n    return iter.done ? { start: startToken, matched: false } : null;\n}\n\nexport { bracketMatching, matchBrackets };\n","import { EditorSelection, CharCategory } from '@codemirror/state';\nimport { Text, findClusterBreak, countColumn } from '@codemirror/text';\nimport { Direction, EditorView, PluginField } from '@codemirror/view';\nimport { matchBrackets } from '@codemirror/matchbrackets';\nimport { IndentContext, getIndentation, indentString, indentUnit, getIndentUnit, syntaxTree } from '@codemirror/language';\nimport { NodeProp } from '@lezer/common';\n\nfunction updateSel(sel, by) {\n    return EditorSelection.create(sel.ranges.map(by), sel.mainIndex);\n}\nfunction setSel(state, selection) {\n    return state.update({ selection, scrollIntoView: true, userEvent: \"select\" });\n}\nfunction moveSel({ state, dispatch }, how) {\n    let selection = updateSel(state.selection, how);\n    if (selection.eq(state.selection))\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\nfunction rangeEnd(range, forward) {\n    return EditorSelection.cursor(forward ? range.to : range.from);\n}\nfunction cursorByChar(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByChar(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one character to the left (which is backward in\nleft-to-right text, forward in right-to-left text).\n*/\nconst cursorCharLeft = view => cursorByChar(view, view.textDirection != Direction.LTR);\n/**\nMove the selection one character to the right.\n*/\nconst cursorCharRight = view => cursorByChar(view, view.textDirection == Direction.LTR);\n/**\nMove the selection one character forward.\n*/\nconst cursorCharForward = view => cursorByChar(view, true);\n/**\nMove the selection one character backward.\n*/\nconst cursorCharBackward = view => cursorByChar(view, false);\nfunction cursorByGroup(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveByGroup(range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection to the left across one group of word or\nnon-word (but also non-space) characters.\n*/\nconst cursorGroupLeft = view => cursorByGroup(view, view.textDirection != Direction.LTR);\n/**\nMove the selection one group to the right.\n*/\nconst cursorGroupRight = view => cursorByGroup(view, view.textDirection == Direction.LTR);\n/**\nMove the selection one group forward.\n*/\nconst cursorGroupForward = view => cursorByGroup(view, true);\n/**\nMove the selection one group backward.\n*/\nconst cursorGroupBackward = view => cursorByGroup(view, false);\nfunction moveBySubword(view, range, forward) {\n    let categorize = view.state.charCategorizer(range.from);\n    return view.moveByChar(range, forward, start => {\n        let cat = CharCategory.Space, pos = range.from;\n        let done = false, sawUpper = false, sawLower = false;\n        let step = (next) => {\n            if (done)\n                return false;\n            pos += forward ? next.length : -next.length;\n            let nextCat = categorize(next), ahead;\n            if (cat == CharCategory.Space)\n                cat = nextCat;\n            if (cat != nextCat)\n                return false;\n            if (cat == CharCategory.Word) {\n                if (next.toLowerCase() == next) {\n                    if (!forward && sawUpper)\n                        return false;\n                    sawLower = true;\n                }\n                else if (sawLower) {\n                    if (forward)\n                        return false;\n                    done = true;\n                }\n                else {\n                    if (sawUpper && forward && categorize(ahead = view.state.sliceDoc(pos, pos + 1)) == CharCategory.Word &&\n                        ahead.toLowerCase() == ahead)\n                        return false;\n                    sawUpper = true;\n                }\n            }\n            return true;\n        };\n        step(start);\n        return step;\n    });\n}\nfunction cursorBySubword(view, forward) {\n    return moveSel(view, range => range.empty ? moveBySubword(view, range, forward) : rangeEnd(range, forward));\n}\n/**\nMove the selection one group or camel-case subword forward.\n*/\nconst cursorSubwordForward = view => cursorBySubword(view, true);\n/**\nMove the selection one group or camel-case subword backward.\n*/\nconst cursorSubwordBackward = view => cursorBySubword(view, false);\nfunction interestingNode(state, node, bracketProp) {\n    if (node.type.prop(bracketProp))\n        return true;\n    let len = node.to - node.from;\n    return len && (len > 2 || /[^\\s,.;:]/.test(state.sliceDoc(node.from, node.to))) || node.firstChild;\n}\nfunction moveBySyntax(state, start, forward) {\n    let pos = syntaxTree(state).resolveInner(start.head);\n    let bracketProp = forward ? NodeProp.closedBy : NodeProp.openedBy;\n    // Scan forward through child nodes to see if there's an interesting\n    // node ahead.\n    for (let at = start.head;;) {\n        let next = forward ? pos.childAfter(at) : pos.childBefore(at);\n        if (!next)\n            break;\n        if (interestingNode(state, next, bracketProp))\n            pos = next;\n        else\n            at = forward ? next.to : next.from;\n    }\n    let bracket = pos.type.prop(bracketProp), match, newPos;\n    if (bracket && (match = forward ? matchBrackets(state, pos.from, 1) : matchBrackets(state, pos.to, -1)) && match.matched)\n        newPos = forward ? match.end.to : match.end.from;\n    else\n        newPos = forward ? pos.to : pos.from;\n    return EditorSelection.cursor(newPos, forward ? -1 : 1);\n}\n/**\nMove the cursor over the next syntactic element to the left.\n*/\nconst cursorSyntaxLeft = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/**\nMove the cursor over the next syntactic element to the right.\n*/\nconst cursorSyntaxRight = view => moveSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction cursorByLine(view, forward) {\n    return moveSel(view, range => {\n        if (!range.empty)\n            return rangeEnd(range, forward);\n        let moved = view.moveVertically(range, forward);\n        return moved.head != range.head ? moved : view.moveToLineBoundary(range, forward);\n    });\n}\n/**\nMove the selection one line up.\n*/\nconst cursorLineUp = view => cursorByLine(view, false);\n/**\nMove the selection one line down.\n*/\nconst cursorLineDown = view => cursorByLine(view, true);\nfunction cursorByPage(view, forward) {\n    return moveSel(view, range => range.empty ? view.moveVertically(range, forward, view.dom.clientHeight) : rangeEnd(range, forward));\n}\n/**\nMove the selection one page up.\n*/\nconst cursorPageUp = view => cursorByPage(view, false);\n/**\nMove the selection one page down.\n*/\nconst cursorPageDown = view => cursorByPage(view, true);\nfunction moveByLineBoundary(view, start, forward) {\n    let line = view.lineBlockAt(start.head), moved = view.moveToLineBoundary(start, forward);\n    if (moved.head == start.head && moved.head != (forward ? line.to : line.from))\n        moved = view.moveToLineBoundary(start, forward, false);\n    if (!forward && moved.head == line.from && line.length) {\n        let space = /^\\s*/.exec(view.state.sliceDoc(line.from, Math.min(line.from + 100, line.to)))[0].length;\n        if (space && start.head != line.from + space)\n            moved = EditorSelection.cursor(line.from + space);\n    }\n    return moved;\n}\n/**\nMove the selection to the next line wrap point, or to the end of\nthe line if there isn't one left on this line.\n*/\nconst cursorLineBoundaryForward = view => moveSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection to previous line wrap point, or failing that to\nthe start of the line. If the line is indented, and the cursor\nisn't already at the end of the indentation, this will move to the\nend of the indentation instead of the start of the line.\n*/\nconst cursorLineBoundaryBackward = view => moveSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection to the start of the line.\n*/\nconst cursorLineStart = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from, 1));\n/**\nMove the selection to the end of the line.\n*/\nconst cursorLineEnd = view => moveSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to, -1));\nfunction toMatchingBracket(state, dispatch, extend) {\n    let found = false, selection = updateSel(state.selection, range => {\n        let matching = matchBrackets(state, range.head, -1)\n            || matchBrackets(state, range.head, 1)\n            || (range.head > 0 && matchBrackets(state, range.head - 1, 1))\n            || (range.head < state.doc.length && matchBrackets(state, range.head + 1, -1));\n        if (!matching || !matching.end)\n            return range;\n        found = true;\n        let head = matching.start.from == range.head ? matching.end.to : matching.end.from;\n        return extend ? EditorSelection.range(range.anchor, head) : EditorSelection.cursor(head);\n    });\n    if (!found)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n}\n/**\nMove the selection to the bracket matching the one it is currently\non, if any.\n*/\nconst cursorMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, false);\n/**\nExtend the selection to the bracket matching the one the selection\nhead is currently on, if any.\n*/\nconst selectMatchingBracket = ({ state, dispatch }) => toMatchingBracket(state, dispatch, true);\nfunction extendSel(view, how) {\n    let selection = updateSel(view.state.selection, range => {\n        let head = how(range);\n        return EditorSelection.range(range.anchor, head.head, head.goalColumn);\n    });\n    if (selection.eq(view.state.selection))\n        return false;\n    view.dispatch(setSel(view.state, selection));\n    return true;\n}\nfunction selectByChar(view, forward) {\n    return extendSel(view, range => view.moveByChar(range, forward));\n}\n/**\nMove the selection head one character to the left, while leaving\nthe anchor in place.\n*/\nconst selectCharLeft = view => selectByChar(view, view.textDirection != Direction.LTR);\n/**\nMove the selection head one character to the right.\n*/\nconst selectCharRight = view => selectByChar(view, view.textDirection == Direction.LTR);\n/**\nMove the selection head one character forward.\n*/\nconst selectCharForward = view => selectByChar(view, true);\n/**\nMove the selection head one character backward.\n*/\nconst selectCharBackward = view => selectByChar(view, false);\nfunction selectByGroup(view, forward) {\n    return extendSel(view, range => view.moveByGroup(range, forward));\n}\n/**\nMove the selection head one [group](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) to\nthe left.\n*/\nconst selectGroupLeft = view => selectByGroup(view, view.textDirection != Direction.LTR);\n/**\nMove the selection head one group to the right.\n*/\nconst selectGroupRight = view => selectByGroup(view, view.textDirection == Direction.LTR);\n/**\nMove the selection head one group forward.\n*/\nconst selectGroupForward = view => selectByGroup(view, true);\n/**\nMove the selection head one group backward.\n*/\nconst selectGroupBackward = view => selectByGroup(view, false);\nfunction selectBySubword(view, forward) {\n    return extendSel(view, range => moveBySubword(view, range, forward));\n}\n/**\nMove the selection head one group or camel-case subword forward.\n*/\nconst selectSubwordForward = view => selectBySubword(view, true);\n/**\nMove the selection head one group or subword backward.\n*/\nconst selectSubwordBackward = view => selectBySubword(view, false);\n/**\nMove the selection head over the next syntactic element to the left.\n*/\nconst selectSyntaxLeft = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection != Direction.LTR));\n/**\nMove the selection head over the next syntactic element to the right.\n*/\nconst selectSyntaxRight = view => extendSel(view, range => moveBySyntax(view.state, range, view.textDirection == Direction.LTR));\nfunction selectByLine(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward));\n}\n/**\nMove the selection head one line up.\n*/\nconst selectLineUp = view => selectByLine(view, false);\n/**\nMove the selection head one line down.\n*/\nconst selectLineDown = view => selectByLine(view, true);\nfunction selectByPage(view, forward) {\n    return extendSel(view, range => view.moveVertically(range, forward, view.dom.clientHeight));\n}\n/**\nMove the selection head one page up.\n*/\nconst selectPageUp = view => selectByPage(view, false);\n/**\nMove the selection head one page down.\n*/\nconst selectPageDown = view => selectByPage(view, true);\n/**\nMove the selection head to the next line boundary.\n*/\nconst selectLineBoundaryForward = view => extendSel(view, range => moveByLineBoundary(view, range, true));\n/**\nMove the selection head to the previous line boundary.\n*/\nconst selectLineBoundaryBackward = view => extendSel(view, range => moveByLineBoundary(view, range, false));\n/**\nMove the selection head to the start of the line.\n*/\nconst selectLineStart = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).from));\n/**\nMove the selection head to the end of the line.\n*/\nconst selectLineEnd = view => extendSel(view, range => EditorSelection.cursor(view.lineBlockAt(range.head).to));\n/**\nMove the selection to the start of the document.\n*/\nconst cursorDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: 0 }));\n    return true;\n};\n/**\nMove the selection to the end of the document.\n*/\nconst cursorDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.doc.length }));\n    return true;\n};\n/**\nMove the selection head to the start of the document.\n*/\nconst selectDocStart = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: 0 }));\n    return true;\n};\n/**\nMove the selection head to the end of the document.\n*/\nconst selectDocEnd = ({ state, dispatch }) => {\n    dispatch(setSel(state, { anchor: state.selection.main.anchor, head: state.doc.length }));\n    return true;\n};\n/**\nSelect the entire document.\n*/\nconst selectAll = ({ state, dispatch }) => {\n    dispatch(state.update({ selection: { anchor: 0, head: state.doc.length }, userEvent: \"select\" }));\n    return true;\n};\n/**\nExpand the selection to cover entire lines.\n*/\nconst selectLine = ({ state, dispatch }) => {\n    let ranges = selectedLineBlocks(state).map(({ from, to }) => EditorSelection.range(from, Math.min(to + 1, state.doc.length)));\n    dispatch(state.update({ selection: EditorSelection.create(ranges), userEvent: \"select\" }));\n    return true;\n};\n/**\nSelect the next syntactic construct that is larger than the\nselection. Note that this will only work insofar as the language\n[provider](https://codemirror.net/6/docs/ref/#language.language) you use builds up a full\nsyntax tree.\n*/\nconst selectParentSyntax = ({ state, dispatch }) => {\n    let selection = updateSel(state.selection, range => {\n        var _a;\n        let context = syntaxTree(state).resolveInner(range.head, 1);\n        while (!((context.from < range.from && context.to >= range.to) ||\n            (context.to > range.to && context.from <= range.from) ||\n            !((_a = context.parent) === null || _a === void 0 ? void 0 : _a.parent)))\n            context = context.parent;\n        return EditorSelection.range(context.to, context.from);\n    });\n    dispatch(setSel(state, selection));\n    return true;\n};\n/**\nSimplify the current selection. When multiple ranges are selected,\nreduce it to its main range. Otherwise, if the selection is\nnon-empty, convert it to a cursor selection.\n*/\nconst simplifySelection = ({ state, dispatch }) => {\n    let cur = state.selection, selection = null;\n    if (cur.ranges.length > 1)\n        selection = EditorSelection.create([cur.main]);\n    else if (!cur.main.empty)\n        selection = EditorSelection.create([EditorSelection.cursor(cur.main.head)]);\n    if (!selection)\n        return false;\n    dispatch(setSel(state, selection));\n    return true;\n};\nfunction deleteBy({ state, dispatch }, by) {\n    if (state.readOnly)\n        return false;\n    let event = \"delete.selection\";\n    let changes = state.changeByRange(range => {\n        let { from, to } = range;\n        if (from == to) {\n            let towards = by(from);\n            if (towards < from)\n                event = \"delete.backward\";\n            else if (towards > from)\n                event = \"delete.forward\";\n            from = Math.min(from, towards);\n            to = Math.max(to, towards);\n        }\n        return from == to ? { range } : { changes: { from, to }, range: EditorSelection.cursor(from) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: event }));\n    return true;\n}\nfunction skipAtomic(target, pos, forward) {\n    if (target instanceof EditorView)\n        for (let ranges of target.pluginField(PluginField.atomicRanges))\n            ranges.between(pos, pos, (from, to) => {\n                if (from < pos && to > pos)\n                    pos = forward ? to : from;\n            });\n    return pos;\n}\nconst deleteByChar = (target, forward) => deleteBy(target, pos => {\n    let { state } = target, line = state.doc.lineAt(pos), before, targetPos;\n    if (!forward && pos > line.from && pos < line.from + 200 &&\n        !/[^ \\t]/.test(before = line.text.slice(0, pos - line.from))) {\n        if (before[before.length - 1] == \"\\t\")\n            return pos - 1;\n        let col = countColumn(before, state.tabSize), drop = col % getIndentUnit(state) || getIndentUnit(state);\n        for (let i = 0; i < drop && before[before.length - 1 - i] == \" \"; i++)\n            pos--;\n        targetPos = pos;\n    }\n    else {\n        targetPos = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        if (targetPos == pos && line.number != (forward ? state.doc.lines : 1))\n            targetPos += forward ? 1 : -1;\n    }\n    return skipAtomic(target, targetPos, forward);\n});\n/**\nDelete the selection, or, for cursor selections, the character\nbefore the cursor.\n*/\nconst deleteCharBackward = view => deleteByChar(view, false);\n/**\nDelete the selection or the character after the cursor.\n*/\nconst deleteCharForward = view => deleteByChar(view, true);\nconst deleteByGroup = (target, forward) => deleteBy(target, start => {\n    let pos = start, { state } = target, line = state.doc.lineAt(pos);\n    let categorize = state.charCategorizer(pos);\n    for (let cat = null;;) {\n        if (pos == (forward ? line.to : line.from)) {\n            if (pos == start && line.number != (forward ? state.doc.lines : 1))\n                pos += forward ? 1 : -1;\n            break;\n        }\n        let next = findClusterBreak(line.text, pos - line.from, forward) + line.from;\n        let nextChar = line.text.slice(Math.min(pos, next) - line.from, Math.max(pos, next) - line.from);\n        let nextCat = categorize(nextChar);\n        if (cat != null && nextCat != cat)\n            break;\n        if (nextChar != \" \" || pos != start)\n            cat = nextCat;\n        pos = next;\n    }\n    return skipAtomic(target, pos, forward);\n});\n/**\nDelete the selection or backward until the end of the next\n[group](https://codemirror.net/6/docs/ref/#view.EditorView.moveByGroup), only skipping groups of\nwhitespace when they consist of a single space.\n*/\nconst deleteGroupBackward = target => deleteByGroup(target, false);\n/**\nDelete the selection or forward until the end of the next group.\n*/\nconst deleteGroupForward = target => deleteByGroup(target, true);\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe end of the line. If the cursor is directly at the end of the\nline, delete the line break after it.\n*/\nconst deleteToLineEnd = view => deleteBy(view, pos => {\n    let lineEnd = view.lineBlockAt(pos).to;\n    return skipAtomic(view, pos < lineEnd ? lineEnd : Math.min(view.state.doc.length, pos + 1), true);\n});\n/**\nDelete the selection, or, if it is a cursor selection, delete to\nthe start of the line. If the cursor is directly at the start of the\nline, delete the line break before it.\n*/\nconst deleteToLineStart = view => deleteBy(view, pos => {\n    let lineStart = view.lineBlockAt(pos).from;\n    return skipAtomic(view, pos > lineStart ? lineStart : Math.max(0, pos - 1), false);\n});\n/**\nDelete all whitespace directly before a line end from the\ndocument.\n*/\nconst deleteTrailingWhitespace = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let pos = 0, prev = \"\", iter = state.doc.iter();;) {\n        iter.next();\n        if (iter.lineBreak || iter.done) {\n            let trailing = prev.search(/\\s+$/);\n            if (trailing > -1)\n                changes.push({ from: pos - (prev.length - trailing), to: pos });\n            if (iter.done)\n                break;\n            prev = \"\";\n        }\n        else {\n            prev = iter.value;\n        }\n        pos += iter.value.length;\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({ changes, userEvent: \"delete\" }));\n    return true;\n};\n/**\nReplace each selection range with a line break, leaving the cursor\non the line before the break.\n*/\nconst splitLine = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        return { changes: { from: range.from, to: range.to, insert: Text.of([\"\", \"\"]) },\n            range: EditorSelection.cursor(range.from) };\n    });\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nFlip the characters before and after the cursor(s).\n*/\nconst transposeChars = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let changes = state.changeByRange(range => {\n        if (!range.empty || range.from == 0 || range.from == state.doc.length)\n            return { range };\n        let pos = range.from, line = state.doc.lineAt(pos);\n        let from = pos == line.from ? pos - 1 : findClusterBreak(line.text, pos - line.from, false) + line.from;\n        let to = pos == line.to ? pos + 1 : findClusterBreak(line.text, pos - line.from, true) + line.from;\n        return { changes: { from, to, insert: state.doc.slice(pos, to).append(state.doc.slice(from, pos)) },\n            range: EditorSelection.cursor(to) };\n    });\n    if (changes.changes.empty)\n        return false;\n    dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"move.character\" }));\n    return true;\n};\nfunction selectedLineBlocks(state) {\n    let blocks = [], upto = -1;\n    for (let range of state.selection.ranges) {\n        let startLine = state.doc.lineAt(range.from), endLine = state.doc.lineAt(range.to);\n        if (!range.empty && range.to == endLine.from)\n            endLine = state.doc.lineAt(range.to - 1);\n        if (upto >= startLine.number) {\n            let prev = blocks[blocks.length - 1];\n            prev.to = endLine.to;\n            prev.ranges.push(range);\n        }\n        else {\n            blocks.push({ from: startLine.from, to: endLine.to, ranges: [range] });\n        }\n        upto = endLine.number + 1;\n    }\n    return blocks;\n}\nfunction moveLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [], ranges = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward ? block.to == state.doc.length : block.from == 0)\n            continue;\n        let nextLine = state.doc.lineAt(forward ? block.to + 1 : block.from - 1);\n        let size = nextLine.length + 1;\n        if (forward) {\n            changes.push({ from: block.to, to: nextLine.to }, { from: block.from, insert: nextLine.text + state.lineBreak });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(Math.min(state.doc.length, r.anchor + size), Math.min(state.doc.length, r.head + size)));\n        }\n        else {\n            changes.push({ from: nextLine.from, to: block.from }, { from: block.to, insert: state.lineBreak + nextLine.text });\n            for (let r of block.ranges)\n                ranges.push(EditorSelection.range(r.anchor - size, r.head - size));\n        }\n    }\n    if (!changes.length)\n        return false;\n    dispatch(state.update({\n        changes,\n        scrollIntoView: true,\n        selection: EditorSelection.create(ranges, state.selection.mainIndex),\n        userEvent: \"move.line\"\n    }));\n    return true;\n}\n/**\nMove the selected lines up one line.\n*/\nconst moveLineUp = ({ state, dispatch }) => moveLine(state, dispatch, false);\n/**\nMove the selected lines down one line.\n*/\nconst moveLineDown = ({ state, dispatch }) => moveLine(state, dispatch, true);\nfunction copyLine(state, dispatch, forward) {\n    if (state.readOnly)\n        return false;\n    let changes = [];\n    for (let block of selectedLineBlocks(state)) {\n        if (forward)\n            changes.push({ from: block.from, insert: state.doc.slice(block.from, block.to) + state.lineBreak });\n        else\n            changes.push({ from: block.to, insert: state.lineBreak + state.doc.slice(block.from, block.to) });\n    }\n    dispatch(state.update({ changes, scrollIntoView: true, userEvent: \"input.copyline\" }));\n    return true;\n}\n/**\nCreate a copy of the selected lines. Keep the selection in the top copy.\n*/\nconst copyLineUp = ({ state, dispatch }) => copyLine(state, dispatch, false);\n/**\nCreate a copy of the selected lines. Keep the selection in the bottom copy.\n*/\nconst copyLineDown = ({ state, dispatch }) => copyLine(state, dispatch, true);\n/**\nDelete selected lines.\n*/\nconst deleteLine = view => {\n    if (view.state.readOnly)\n        return false;\n    let { state } = view, changes = state.changes(selectedLineBlocks(state).map(({ from, to }) => {\n        if (from > 0)\n            from--;\n        else if (to < state.doc.length)\n            to++;\n        return { from, to };\n    }));\n    let selection = updateSel(state.selection, range => view.moveVertically(range, true)).map(changes);\n    view.dispatch({ changes, selection, scrollIntoView: true, userEvent: \"delete.line\" });\n    return true;\n};\n/**\nReplace the selection with a newline.\n*/\nconst insertNewline = ({ state, dispatch }) => {\n    dispatch(state.update(state.replaceSelection(state.lineBreak), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\nfunction isBetweenBrackets(state, pos) {\n    if (/\\(\\)|\\[\\]|\\{\\}/.test(state.sliceDoc(pos - 1, pos + 1)))\n        return { from: pos, to: pos };\n    let context = syntaxTree(state).resolveInner(pos);\n    let before = context.childBefore(pos), after = context.childAfter(pos), closedBy;\n    if (before && after && before.to <= pos && after.from >= pos &&\n        (closedBy = before.type.prop(NodeProp.closedBy)) && closedBy.indexOf(after.name) > -1 &&\n        state.doc.lineAt(before.to).from == state.doc.lineAt(after.from).from)\n        return { from: before.to, to: after.from };\n    return null;\n}\n/**\nReplace the selection with a newline and indent the newly created\nline(s). If the current line consists only of whitespace, this\nwill also delete that whitespace. When the cursor is between\nmatching brackets, an additional newline will be inserted after\nthe cursor.\n*/\nconst insertNewlineAndIndent = /*@__PURE__*/newlineAndIndent(false);\n/**\nCreate a blank, indented line below the current line.\n*/\nconst insertBlankLine = /*@__PURE__*/newlineAndIndent(true);\nfunction newlineAndIndent(atEof) {\n    return ({ state, dispatch }) => {\n        if (state.readOnly)\n            return false;\n        let changes = state.changeByRange(range => {\n            let { from, to } = range, line = state.doc.lineAt(from);\n            let explode = !atEof && from == to && isBetweenBrackets(state, from);\n            if (atEof)\n                from = to = (to <= line.to ? line : state.doc.lineAt(to)).to;\n            let cx = new IndentContext(state, { simulateBreak: from, simulateDoubleBreak: !!explode });\n            let indent = getIndentation(cx, from);\n            if (indent == null)\n                indent = /^\\s*/.exec(state.doc.lineAt(from).text)[0].length;\n            while (to < line.to && /\\s/.test(line.text[to - line.from]))\n                to++;\n            if (explode)\n                ({ from, to } = explode);\n            else if (from > line.from && from < line.from + 100 && !/\\S/.test(line.text.slice(0, from)))\n                from = line.from;\n            let insert = [\"\", indentString(state, indent)];\n            if (explode)\n                insert.push(indentString(state, cx.lineIndent(line.from, -1)));\n            return { changes: { from, to, insert: Text.of(insert) },\n                range: EditorSelection.cursor(from + 1 + insert[1].length) };\n        });\n        dispatch(state.update(changes, { scrollIntoView: true, userEvent: \"input\" }));\n        return true;\n    };\n}\nfunction changeBySelectedLine(state, f) {\n    let atLine = -1;\n    return state.changeByRange(range => {\n        let changes = [];\n        for (let pos = range.from; pos <= range.to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.number > atLine && (range.empty || range.to > line.from)) {\n                f(line, changes, range);\n                atLine = line.number;\n            }\n            pos = line.to + 1;\n        }\n        let changeSet = state.changes(changes);\n        return { changes,\n            range: EditorSelection.range(changeSet.mapPos(range.anchor, 1), changeSet.mapPos(range.head, 1)) };\n    });\n}\n/**\nAuto-indent the selected lines. This uses the [indentation service\nfacet](https://codemirror.net/6/docs/ref/#language.indentService) as source for auto-indent\ninformation.\n*/\nconst indentSelection = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    let updated = Object.create(null);\n    let context = new IndentContext(state, { overrideIndentation: start => {\n            let found = updated[start];\n            return found == null ? -1 : found;\n        } });\n    let changes = changeBySelectedLine(state, (line, changes, range) => {\n        let indent = getIndentation(context, line.from);\n        if (indent == null)\n            return;\n        if (!/\\S/.test(line.text))\n            indent = 0;\n        let cur = /^\\s*/.exec(line.text)[0];\n        let norm = indentString(state, indent);\n        if (cur != norm || range.from < line.from + cur.length) {\n            updated[line.from] = indent;\n            changes.push({ from: line.from, to: line.from + cur.length, insert: norm });\n        }\n    });\n    if (!changes.changes.empty)\n        dispatch(state.update(changes, { userEvent: \"indent\" }));\n    return true;\n};\n/**\nAdd a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation to all selected\nlines.\n*/\nconst indentMore = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        changes.push({ from: line.from, insert: state.facet(indentUnit) });\n    }), { userEvent: \"input.indent\" }));\n    return true;\n};\n/**\nRemove a [unit](https://codemirror.net/6/docs/ref/#language.indentUnit) of indentation from all\nselected lines.\n*/\nconst indentLess = ({ state, dispatch }) => {\n    if (state.readOnly)\n        return false;\n    dispatch(state.update(changeBySelectedLine(state, (line, changes) => {\n        let space = /^\\s*/.exec(line.text)[0];\n        if (!space)\n            return;\n        let col = countColumn(space, state.tabSize), keep = 0;\n        let insert = indentString(state, Math.max(0, col - getIndentUnit(state)));\n        while (keep < space.length && keep < insert.length && space.charCodeAt(keep) == insert.charCodeAt(keep))\n            keep++;\n        changes.push({ from: line.from + keep, to: line.from + space.length, insert: insert.slice(keep) });\n    }), { userEvent: \"delete.dedent\" }));\n    return true;\n};\n/**\nInsert a tab character at the cursor or, if something is selected,\nuse [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) to indent the entire\nselection.\n*/\nconst insertTab = ({ state, dispatch }) => {\n    if (state.selection.ranges.some(r => !r.empty))\n        return indentMore({ state, dispatch });\n    dispatch(state.update(state.replaceSelection(\"\\t\"), { scrollIntoView: true, userEvent: \"input\" }));\n    return true;\n};\n/**\nArray of key bindings containing the Emacs-style bindings that are\navailable on macOS by default.\n\n - Ctrl-b: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - Ctrl-f: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-p: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - Ctrl-n: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Ctrl-a: [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Ctrl-e: [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - Ctrl-d: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-h: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Ctrl-k: [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd)\n - Ctrl-Alt-h: [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-o: [`splitLine`](https://codemirror.net/6/docs/ref/#commands.splitLine)\n - Ctrl-t: [`transposeChars`](https://codemirror.net/6/docs/ref/#commands.transposeChars)\n - Alt-<: [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart)\n - Alt->: [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd)\n - Ctrl-v: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown)\n - Alt-v: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp)\n*/\nconst emacsStyleKeymap = [\n    { key: \"Ctrl-b\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Ctrl-f\", run: cursorCharRight, shift: selectCharRight },\n    { key: \"Ctrl-p\", run: cursorLineUp, shift: selectLineUp },\n    { key: \"Ctrl-n\", run: cursorLineDown, shift: selectLineDown },\n    { key: \"Ctrl-a\", run: cursorLineStart, shift: selectLineStart },\n    { key: \"Ctrl-e\", run: cursorLineEnd, shift: selectLineEnd },\n    { key: \"Ctrl-d\", run: deleteCharForward },\n    { key: \"Ctrl-h\", run: deleteCharBackward },\n    { key: \"Ctrl-k\", run: deleteToLineEnd },\n    { key: \"Ctrl-Alt-h\", run: deleteGroupBackward },\n    { key: \"Ctrl-o\", run: splitLine },\n    { key: \"Ctrl-t\", run: transposeChars },\n    { key: \"Alt-<\", run: cursorDocStart },\n    { key: \"Alt->\", run: cursorDocEnd },\n    { key: \"Ctrl-v\", run: cursorPageDown },\n    { key: \"Alt-v\", run: cursorPageUp },\n];\n/**\nAn array of key bindings closely sticking to platform-standard or\nwidely used bindings. (This includes the bindings from\n[`emacsStyleKeymap`](https://codemirror.net/6/docs/ref/#commands.emacsStyleKeymap), with their `key`\nproperty changed to `mac`.)\n\n - ArrowLeft: [`cursorCharLeft`](https://codemirror.net/6/docs/ref/#commands.cursorCharLeft) ([`selectCharLeft`](https://codemirror.net/6/docs/ref/#commands.selectCharLeft) with Shift)\n - ArrowRight: [`cursorCharRight`](https://codemirror.net/6/docs/ref/#commands.cursorCharRight) ([`selectCharRight`](https://codemirror.net/6/docs/ref/#commands.selectCharRight) with Shift)\n - Ctrl-ArrowLeft (Alt-ArrowLeft on macOS): [`cursorGroupLeft`](https://codemirror.net/6/docs/ref/#commands.cursorGroupLeft) ([`selectGroupLeft`](https://codemirror.net/6/docs/ref/#commands.selectGroupLeft) with Shift)\n - Ctrl-ArrowRight (Alt-ArrowRight on macOS): [`cursorGroupRight`](https://codemirror.net/6/docs/ref/#commands.cursorGroupRight) ([`selectGroupRight`](https://codemirror.net/6/docs/ref/#commands.selectGroupRight) with Shift)\n - Cmd-ArrowLeft (on macOS): [`cursorLineStart`](https://codemirror.net/6/docs/ref/#commands.cursorLineStart) ([`selectLineStart`](https://codemirror.net/6/docs/ref/#commands.selectLineStart) with Shift)\n - Cmd-ArrowRight (on macOS): [`cursorLineEnd`](https://codemirror.net/6/docs/ref/#commands.cursorLineEnd) ([`selectLineEnd`](https://codemirror.net/6/docs/ref/#commands.selectLineEnd) with Shift)\n - ArrowUp: [`cursorLineUp`](https://codemirror.net/6/docs/ref/#commands.cursorLineUp) ([`selectLineUp`](https://codemirror.net/6/docs/ref/#commands.selectLineUp) with Shift)\n - ArrowDown: [`cursorLineDown`](https://codemirror.net/6/docs/ref/#commands.cursorLineDown) ([`selectLineDown`](https://codemirror.net/6/docs/ref/#commands.selectLineDown) with Shift)\n - Cmd-ArrowUp (on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Cmd-ArrowDown (on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Ctrl-ArrowUp (on macOS): [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - Ctrl-ArrowDown (on macOS): [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - PageUp: [`cursorPageUp`](https://codemirror.net/6/docs/ref/#commands.cursorPageUp) ([`selectPageUp`](https://codemirror.net/6/docs/ref/#commands.selectPageUp) with Shift)\n - PageDown: [`cursorPageDown`](https://codemirror.net/6/docs/ref/#commands.cursorPageDown) ([`selectPageDown`](https://codemirror.net/6/docs/ref/#commands.selectPageDown) with Shift)\n - Home: [`cursorLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryBackward) ([`selectLineBoundaryBackward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryBackward) with Shift)\n - End: [`cursorLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.cursorLineBoundaryForward) ([`selectLineBoundaryForward`](https://codemirror.net/6/docs/ref/#commands.selectLineBoundaryForward) with Shift)\n - Ctrl-Home (Cmd-Home on macOS): [`cursorDocStart`](https://codemirror.net/6/docs/ref/#commands.cursorDocStart) ([`selectDocStart`](https://codemirror.net/6/docs/ref/#commands.selectDocStart) with Shift)\n - Ctrl-End (Cmd-Home on macOS): [`cursorDocEnd`](https://codemirror.net/6/docs/ref/#commands.cursorDocEnd) ([`selectDocEnd`](https://codemirror.net/6/docs/ref/#commands.selectDocEnd) with Shift)\n - Enter: [`insertNewlineAndIndent`](https://codemirror.net/6/docs/ref/#commands.insertNewlineAndIndent)\n - Ctrl-a (Cmd-a on macOS): [`selectAll`](https://codemirror.net/6/docs/ref/#commands.selectAll)\n - Backspace: [`deleteCharBackward`](https://codemirror.net/6/docs/ref/#commands.deleteCharBackward)\n - Delete: [`deleteCharForward`](https://codemirror.net/6/docs/ref/#commands.deleteCharForward)\n - Ctrl-Backspace (Alt-Backspace on macOS): [`deleteGroupBackward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupBackward)\n - Ctrl-Delete (Alt-Delete on macOS): [`deleteGroupForward`](https://codemirror.net/6/docs/ref/#commands.deleteGroupForward)\n - Cmd-Backspace (macOS): [`deleteToLineStart`](https://codemirror.net/6/docs/ref/#commands.deleteToLineStart).\n - Cmd-Delete (macOS): [`deleteToLineEnd`](https://codemirror.net/6/docs/ref/#commands.deleteToLineEnd).\n*/\nconst standardKeymap = /*@__PURE__*/[\n    { key: \"ArrowLeft\", run: cursorCharLeft, shift: selectCharLeft, preventDefault: true },\n    { key: \"Mod-ArrowLeft\", mac: \"Alt-ArrowLeft\", run: cursorGroupLeft, shift: selectGroupLeft },\n    { mac: \"Cmd-ArrowLeft\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward },\n    { key: \"ArrowRight\", run: cursorCharRight, shift: selectCharRight, preventDefault: true },\n    { key: \"Mod-ArrowRight\", mac: \"Alt-ArrowRight\", run: cursorGroupRight, shift: selectGroupRight },\n    { mac: \"Cmd-ArrowRight\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward },\n    { key: \"ArrowUp\", run: cursorLineUp, shift: selectLineUp, preventDefault: true },\n    { mac: \"Cmd-ArrowUp\", run: cursorDocStart, shift: selectDocStart },\n    { mac: \"Ctrl-ArrowUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"ArrowDown\", run: cursorLineDown, shift: selectLineDown, preventDefault: true },\n    { mac: \"Cmd-ArrowDown\", run: cursorDocEnd, shift: selectDocEnd },\n    { mac: \"Ctrl-ArrowDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"PageUp\", run: cursorPageUp, shift: selectPageUp },\n    { key: \"PageDown\", run: cursorPageDown, shift: selectPageDown },\n    { key: \"Home\", run: cursorLineBoundaryBackward, shift: selectLineBoundaryBackward },\n    { key: \"Mod-Home\", run: cursorDocStart, shift: selectDocStart },\n    { key: \"End\", run: cursorLineBoundaryForward, shift: selectLineBoundaryForward },\n    { key: \"Mod-End\", run: cursorDocEnd, shift: selectDocEnd },\n    { key: \"Enter\", run: insertNewlineAndIndent },\n    { key: \"Mod-a\", run: selectAll },\n    { key: \"Backspace\", run: deleteCharBackward, shift: deleteCharBackward },\n    { key: \"Delete\", run: deleteCharForward },\n    { key: \"Mod-Backspace\", mac: \"Alt-Backspace\", run: deleteGroupBackward },\n    { key: \"Mod-Delete\", mac: \"Alt-Delete\", run: deleteGroupForward },\n    { mac: \"Mod-Backspace\", run: deleteToLineStart },\n    { mac: \"Mod-Delete\", run: deleteToLineEnd }\n].concat(/*@__PURE__*/emacsStyleKeymap.map(b => ({ mac: b.key, run: b.run, shift: b.shift })));\n/**\nThe default keymap. Includes all bindings from\n[`standardKeymap`](https://codemirror.net/6/docs/ref/#commands.standardKeymap) plus the following:\n\n- Alt-ArrowLeft (Ctrl-ArrowLeft on macOS): [`cursorSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxLeft) ([`selectSyntaxLeft`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxLeft) with Shift)\n- Alt-ArrowRight (Ctrl-ArrowRight on macOS): [`cursorSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.cursorSyntaxRight) ([`selectSyntaxRight`](https://codemirror.net/6/docs/ref/#commands.selectSyntaxRight) with Shift)\n- Alt-ArrowUp: [`moveLineUp`](https://codemirror.net/6/docs/ref/#commands.moveLineUp)\n- Alt-ArrowDown: [`moveLineDown`](https://codemirror.net/6/docs/ref/#commands.moveLineDown)\n- Shift-Alt-ArrowUp: [`copyLineUp`](https://codemirror.net/6/docs/ref/#commands.copyLineUp)\n- Shift-Alt-ArrowDown: [`copyLineDown`](https://codemirror.net/6/docs/ref/#commands.copyLineDown)\n- Escape: [`simplifySelection`](https://codemirror.net/6/docs/ref/#commands.simplifySelection)\n- Ctrl-Enter (Comd-Enter on macOS): [`insertBlankLine`](https://codemirror.net/6/docs/ref/#commands.insertBlankLine)\n- Alt-l (Ctrl-l on macOS): [`selectLine`](https://codemirror.net/6/docs/ref/#commands.selectLine)\n- Ctrl-i (Cmd-i on macOS): [`selectParentSyntax`](https://codemirror.net/6/docs/ref/#commands.selectParentSyntax)\n- Ctrl-[ (Cmd-[ on macOS): [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess)\n- Ctrl-] (Cmd-] on macOS): [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore)\n- Ctrl-Alt-\\\\ (Cmd-Alt-\\\\ on macOS): [`indentSelection`](https://codemirror.net/6/docs/ref/#commands.indentSelection)\n- Shift-Ctrl-k (Shift-Cmd-k on macOS): [`deleteLine`](https://codemirror.net/6/docs/ref/#commands.deleteLine)\n- Shift-Ctrl-\\\\ (Shift-Cmd-\\\\ on macOS): [`cursorMatchingBracket`](https://codemirror.net/6/docs/ref/#commands.cursorMatchingBracket)\n*/\nconst defaultKeymap = /*@__PURE__*/[\n    { key: \"Alt-ArrowLeft\", mac: \"Ctrl-ArrowLeft\", run: cursorSyntaxLeft, shift: selectSyntaxLeft },\n    { key: \"Alt-ArrowRight\", mac: \"Ctrl-ArrowRight\", run: cursorSyntaxRight, shift: selectSyntaxRight },\n    { key: \"Alt-ArrowUp\", run: moveLineUp },\n    { key: \"Shift-Alt-ArrowUp\", run: copyLineUp },\n    { key: \"Alt-ArrowDown\", run: moveLineDown },\n    { key: \"Shift-Alt-ArrowDown\", run: copyLineDown },\n    { key: \"Escape\", run: simplifySelection },\n    { key: \"Mod-Enter\", run: insertBlankLine },\n    { key: \"Alt-l\", mac: \"Ctrl-l\", run: selectLine },\n    { key: \"Mod-i\", run: selectParentSyntax, preventDefault: true },\n    { key: \"Mod-[\", run: indentLess },\n    { key: \"Mod-]\", run: indentMore },\n    { key: \"Mod-Alt-\\\\\", run: indentSelection },\n    { key: \"Shift-Mod-k\", run: deleteLine },\n    { key: \"Shift-Mod-\\\\\", run: cursorMatchingBracket }\n].concat(standardKeymap);\n/**\nA binding that binds Tab to [`indentMore`](https://codemirror.net/6/docs/ref/#commands.indentMore) and\nShift-Tab to [`indentLess`](https://codemirror.net/6/docs/ref/#commands.indentLess).\nPlease see the [Tab example](../../examples/tab/) before using\nthis.\n*/\nconst indentWithTab = { key: \"Tab\", run: indentMore, shift: indentLess };\n\nexport { copyLineDown, copyLineUp, cursorCharBackward, cursorCharForward, cursorCharLeft, cursorCharRight, cursorDocEnd, cursorDocStart, cursorGroupBackward, cursorGroupForward, cursorGroupLeft, cursorGroupRight, cursorLineBoundaryBackward, cursorLineBoundaryForward, cursorLineDown, cursorLineEnd, cursorLineStart, cursorLineUp, cursorMatchingBracket, cursorPageDown, cursorPageUp, cursorSubwordBackward, cursorSubwordForward, cursorSyntaxLeft, cursorSyntaxRight, defaultKeymap, deleteCharBackward, deleteCharForward, deleteGroupBackward, deleteGroupForward, deleteLine, deleteToLineEnd, deleteToLineStart, deleteTrailingWhitespace, emacsStyleKeymap, indentLess, indentMore, indentSelection, indentWithTab, insertBlankLine, insertNewline, insertNewlineAndIndent, insertTab, moveLineDown, moveLineUp, selectAll, selectCharBackward, selectCharForward, selectCharLeft, selectCharRight, selectDocEnd, selectDocStart, selectGroupBackward, selectGroupForward, selectGroupLeft, selectGroupRight, selectLine, selectLineBoundaryBackward, selectLineBoundaryForward, selectLineDown, selectLineEnd, selectLineStart, selectLineUp, selectMatchingBracket, selectPageDown, selectPageUp, selectParentSyntax, selectSubwordBackward, selectSubwordForward, selectSyntaxLeft, selectSyntaxRight, simplifySelection, splitLine, standardKeymap, transposeChars };\n","import { EditorView } from '@codemirror/view';\nimport { StateEffect, MapMode, StateField, EditorSelection, CharCategory } from '@codemirror/state';\nimport { RangeValue, RangeSet } from '@codemirror/rangeset';\nimport { codePointSize, codePointAt, fromCodePoint } from '@codemirror/text';\nimport { syntaxTree } from '@codemirror/language';\n\nconst defaults = {\n    brackets: [\"(\", \"[\", \"{\", \"'\", '\"'],\n    before: \")]}'\\\":;>\"\n};\nconst closeBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) {\n        let mapped = mapping.mapPos(value, -1, MapMode.TrackAfter);\n        return mapped == null ? undefined : mapped;\n    }\n});\nconst skipBracketEffect = /*@__PURE__*/StateEffect.define({\n    map(value, mapping) { return mapping.mapPos(value); }\n});\nconst closedBracket = /*@__PURE__*/new class extends RangeValue {\n};\nclosedBracket.startSide = 1;\nclosedBracket.endSide = -1;\nconst bracketState = /*@__PURE__*/StateField.define({\n    create() { return RangeSet.empty; },\n    update(value, tr) {\n        if (tr.selection) {\n            let lineStart = tr.state.doc.lineAt(tr.selection.main.head).from;\n            let prevLineStart = tr.startState.doc.lineAt(tr.startState.selection.main.head).from;\n            if (lineStart != tr.changes.mapPos(prevLineStart, -1))\n                value = RangeSet.empty;\n        }\n        value = value.map(tr.changes);\n        for (let effect of tr.effects) {\n            if (effect.is(closeBracketEffect))\n                value = value.update({ add: [closedBracket.range(effect.value, effect.value + 1)] });\n            else if (effect.is(skipBracketEffect))\n                value = value.update({ filter: from => from != effect.value });\n        }\n        return value;\n    }\n});\n/**\nExtension to enable bracket-closing behavior. When a closeable\nbracket is typed, its closing bracket is immediately inserted\nafter the cursor. When closing a bracket directly in front of a\nclosing bracket inserted by the extension, the cursor moves over\nthat bracket.\n*/\nfunction closeBrackets() {\n    return [EditorView.inputHandler.of(handleInput), bracketState];\n}\nconst definedClosing = \"()[]{}<>\";\nfunction closing(ch) {\n    for (let i = 0; i < definedClosing.length; i += 2)\n        if (definedClosing.charCodeAt(i) == ch)\n            return definedClosing.charAt(i + 1);\n    return fromCodePoint(ch < 128 ? ch : ch + 1);\n}\nfunction config(state, pos) {\n    return state.languageDataAt(\"closeBrackets\", pos)[0] || defaults;\n}\nfunction handleInput(view, from, to, insert) {\n    if (view.composing)\n        return false;\n    let sel = view.state.selection.main;\n    if (insert.length > 2 || insert.length == 2 && codePointSize(codePointAt(insert, 0)) == 1 ||\n        from != sel.from || to != sel.to)\n        return false;\n    let tr = insertBracket(view.state, insert);\n    if (!tr)\n        return false;\n    view.dispatch(tr);\n    return true;\n}\n/**\nCommand that implements deleting a pair of matching brackets when\nthe cursor is between them.\n*/\nconst deleteBracketPair = ({ state, dispatch }) => {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    let dont = null, changes = state.changeByRange(range => {\n        if (range.empty) {\n            let before = prevChar(state.doc, range.head);\n            for (let token of tokens) {\n                if (token == before && nextChar(state.doc, range.head) == closing(codePointAt(token, 0)))\n                    return { changes: { from: range.head - token.length, to: range.head + token.length },\n                        range: EditorSelection.cursor(range.head - token.length),\n                        userEvent: \"delete.backward\" };\n            }\n        }\n        return { range: dont = range };\n    });\n    if (!dont)\n        dispatch(state.update(changes, { scrollIntoView: true }));\n    return !dont;\n};\n/**\nClose-brackets related key bindings. Binds Backspace to\n[`deleteBracketPair`](https://codemirror.net/6/docs/ref/#closebrackets.deleteBracketPair).\n*/\nconst closeBracketsKeymap = [\n    { key: \"Backspace\", run: deleteBracketPair }\n];\n/**\nImplements the extension's behavior on text insertion. If the\ngiven string counts as a bracket in the language around the\nselection, and replacing the selection with it requires custom\nbehavior (inserting a closing version or skipping past a\npreviously-closed bracket), this function returns a transaction\nrepresenting that custom behavior. (You only need this if you want\nto programmatically insert brackets—the\n[`closeBrackets`](https://codemirror.net/6/docs/ref/#closebrackets.closeBrackets) extension will\ntake care of running this for user input.)\n*/\nfunction insertBracket(state, bracket) {\n    let conf = config(state, state.selection.main.head);\n    let tokens = conf.brackets || defaults.brackets;\n    for (let tok of tokens) {\n        let closed = closing(codePointAt(tok, 0));\n        if (bracket == tok)\n            return closed == tok ? handleSame(state, tok, tokens.indexOf(tok + tok + tok) > -1)\n                : handleOpen(state, tok, closed, conf.before || defaults.before);\n        if (bracket == closed && closedBracketAt(state, state.selection.main.from))\n            return handleClose(state, tok, closed);\n    }\n    return null;\n}\nfunction closedBracketAt(state, pos) {\n    let found = false;\n    state.field(bracketState).between(0, state.doc.length, from => {\n        if (from == pos)\n            found = true;\n    });\n    return found;\n}\nfunction nextChar(doc, pos) {\n    let next = doc.sliceString(pos, pos + 2);\n    return next.slice(0, codePointSize(codePointAt(next, 0)));\n}\nfunction prevChar(doc, pos) {\n    let prev = doc.sliceString(pos - 2, pos);\n    return codePointSize(codePointAt(prev, 0)) == prev.length ? prev : prev.slice(1);\n}\nfunction handleOpen(state, open, close, closeBefore) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: open, from: range.from }, { insert: close, from: range.to }],\n                effects: closeBracketEffect.of(range.to + open.length),\n                range: EditorSelection.range(range.anchor + open.length, range.head + open.length) };\n        let next = nextChar(state.doc, range.head);\n        if (!next || /\\s/.test(next) || closeBefore.indexOf(next) > -1)\n            return { changes: { insert: open + close, from: range.head },\n                effects: closeBracketEffect.of(range.head + open.length),\n                range: EditorSelection.cursor(range.head + open.length) };\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction handleClose(state, _open, close) {\n    let dont = null, moved = state.selection.ranges.map(range => {\n        if (range.empty && nextChar(state.doc, range.head) == close)\n            return EditorSelection.cursor(range.head + close.length);\n        return dont = range;\n    });\n    return dont ? null : state.update({\n        selection: EditorSelection.create(moved, state.selection.mainIndex),\n        scrollIntoView: true,\n        effects: state.selection.ranges.map(({ from }) => skipBracketEffect.of(from))\n    });\n}\n// Handles cases where the open and close token are the same, and\n// possibly triple quotes (as in `\"\"\"abc\"\"\"`-style quoting).\nfunction handleSame(state, token, allowTriple) {\n    let dont = null, changes = state.changeByRange(range => {\n        if (!range.empty)\n            return { changes: [{ insert: token, from: range.from }, { insert: token, from: range.to }],\n                effects: closeBracketEffect.of(range.to + token.length),\n                range: EditorSelection.range(range.anchor + token.length, range.head + token.length) };\n        let pos = range.head, next = nextChar(state.doc, pos);\n        if (next == token) {\n            if (nodeStart(state, pos)) {\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n            }\n            else if (closedBracketAt(state, pos)) {\n                let isTriple = allowTriple && state.sliceDoc(pos, pos + token.length * 3) == token + token + token;\n                return { range: EditorSelection.cursor(pos + token.length * (isTriple ? 3 : 1)),\n                    effects: skipBracketEffect.of(pos) };\n            }\n        }\n        else if (allowTriple && state.sliceDoc(pos - 2 * token.length, pos) == token + token &&\n            nodeStart(state, pos - 2 * token.length)) {\n            return { changes: { insert: token + token + token + token, from: pos },\n                effects: closeBracketEffect.of(pos + token.length),\n                range: EditorSelection.cursor(pos + token.length) };\n        }\n        else if (state.charCategorizer(pos)(next) != CharCategory.Word) {\n            let prev = state.sliceDoc(pos - 1, pos);\n            if (prev != token && state.charCategorizer(pos)(prev) != CharCategory.Word)\n                return { changes: { insert: token + token, from: pos },\n                    effects: closeBracketEffect.of(pos + token.length),\n                    range: EditorSelection.cursor(pos + token.length) };\n        }\n        return { range: dont = range };\n    });\n    return dont ? null : state.update(changes, {\n        scrollIntoView: true,\n        userEvent: \"input.type\"\n    });\n}\nfunction nodeStart(state, pos) {\n    let tree = syntaxTree(state).resolveInner(pos + 1);\n    return tree.parent && tree.from == pos;\n}\n\nexport { closeBrackets, closeBracketsKeymap, deleteBracketPair, insertBracket };\n","import { ViewPlugin, PluginField, EditorView } from '@codemirror/view';\nimport { Facet } from '@codemirror/state';\n\nconst panelConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        let topContainer, bottomContainer;\n        for (let c of configs) {\n            topContainer = topContainer || c.topContainer;\n            bottomContainer = bottomContainer || c.bottomContainer;\n        }\n        return { topContainer, bottomContainer };\n    }\n});\n/**\nConfigures the panel-managing extension.\n*/\nfunction panels(config) {\n    return config ? [panelConfig.of(config)] : [];\n}\n/**\nGet the active panel created by the given constructor, if any.\nThis can be useful when you need access to your panels' DOM\nstructure.\n*/\nfunction getPanel(view, panel) {\n    let plugin = view.plugin(panelPlugin);\n    let index = plugin ? plugin.specs.indexOf(panel) : -1;\n    return index > -1 ? plugin.panels[index] : null;\n}\nconst panelPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.input = view.state.facet(showPanel);\n        this.specs = this.input.filter(s => s);\n        this.panels = this.specs.map(spec => spec(view));\n        let conf = view.state.facet(panelConfig);\n        this.top = new PanelGroup(view, true, conf.topContainer);\n        this.bottom = new PanelGroup(view, false, conf.bottomContainer);\n        this.top.sync(this.panels.filter(p => p.top));\n        this.bottom.sync(this.panels.filter(p => !p.top));\n        for (let p of this.panels) {\n            p.dom.classList.add(\"cm-panel\");\n            if (p.mount)\n                p.mount();\n        }\n    }\n    update(update) {\n        let conf = update.state.facet(panelConfig);\n        if (this.top.container != conf.topContainer) {\n            this.top.sync([]);\n            this.top = new PanelGroup(update.view, true, conf.topContainer);\n        }\n        if (this.bottom.container != conf.bottomContainer) {\n            this.bottom.sync([]);\n            this.bottom = new PanelGroup(update.view, false, conf.bottomContainer);\n        }\n        this.top.syncClasses();\n        this.bottom.syncClasses();\n        let input = update.state.facet(showPanel);\n        if (input != this.input) {\n            let specs = input.filter(x => x);\n            let panels = [], top = [], bottom = [], mount = [];\n            for (let spec of specs) {\n                let known = this.specs.indexOf(spec), panel;\n                if (known < 0) {\n                    panel = spec(update.view);\n                    mount.push(panel);\n                }\n                else {\n                    panel = this.panels[known];\n                    if (panel.update)\n                        panel.update(update);\n                }\n                panels.push(panel);\n                (panel.top ? top : bottom).push(panel);\n            }\n            this.specs = specs;\n            this.panels = panels;\n            this.top.sync(top);\n            this.bottom.sync(bottom);\n            for (let p of mount) {\n                p.dom.classList.add(\"cm-panel\");\n                if (p.mount)\n                    p.mount();\n            }\n        }\n        else {\n            for (let p of this.panels)\n                if (p.update)\n                    p.update(update);\n        }\n    }\n    destroy() {\n        this.top.sync([]);\n        this.bottom.sync([]);\n    }\n}, {\n    provide: /*@__PURE__*/PluginField.scrollMargins.from(value => ({ top: value.top.scrollMargin(), bottom: value.bottom.scrollMargin() }))\n});\nclass PanelGroup {\n    constructor(view, top, container) {\n        this.view = view;\n        this.top = top;\n        this.container = container;\n        this.dom = undefined;\n        this.classes = \"\";\n        this.panels = [];\n        this.syncClasses();\n    }\n    sync(panels) {\n        for (let p of this.panels)\n            if (p.destroy && panels.indexOf(p) < 0)\n                p.destroy();\n        this.panels = panels;\n        this.syncDOM();\n    }\n    syncDOM() {\n        if (this.panels.length == 0) {\n            if (this.dom) {\n                this.dom.remove();\n                this.dom = undefined;\n            }\n            return;\n        }\n        if (!this.dom) {\n            this.dom = document.createElement(\"div\");\n            this.dom.className = this.top ? \"cm-panels cm-panels-top\" : \"cm-panels cm-panels-bottom\";\n            this.dom.style[this.top ? \"top\" : \"bottom\"] = \"0\";\n            let parent = this.container || this.view.dom;\n            parent.insertBefore(this.dom, this.top ? parent.firstChild : null);\n        }\n        let curDOM = this.dom.firstChild;\n        for (let panel of this.panels) {\n            if (panel.dom.parentNode == this.dom) {\n                while (curDOM != panel.dom)\n                    curDOM = rm(curDOM);\n                curDOM = curDOM.nextSibling;\n            }\n            else {\n                this.dom.insertBefore(panel.dom, curDOM);\n            }\n        }\n        while (curDOM)\n            curDOM = rm(curDOM);\n    }\n    scrollMargin() {\n        return !this.dom || this.container ? 0\n            : Math.max(0, this.top ?\n                this.dom.getBoundingClientRect().bottom - Math.max(0, this.view.scrollDOM.getBoundingClientRect().top) :\n                Math.min(innerHeight, this.view.scrollDOM.getBoundingClientRect().bottom) - this.dom.getBoundingClientRect().top);\n    }\n    syncClasses() {\n        if (!this.container || this.classes == this.view.themeClasses)\n            return;\n        for (let cls of this.classes.split(\" \"))\n            if (cls)\n                this.container.classList.remove(cls);\n        for (let cls of (this.classes = this.view.themeClasses).split(\" \"))\n            if (cls)\n                this.container.classList.add(cls);\n    }\n}\nfunction rm(node) {\n    let next = node.nextSibling;\n    node.remove();\n    return next;\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panels\": {\n        boxSizing: \"border-box\",\n        position: \"sticky\",\n        left: 0,\n        right: 0\n    },\n    \"&light .cm-panels\": {\n        backgroundColor: \"#f5f5f5\",\n        color: \"black\"\n    },\n    \"&light .cm-panels-top\": {\n        borderBottom: \"1px solid #ddd\"\n    },\n    \"&light .cm-panels-bottom\": {\n        borderTop: \"1px solid #ddd\"\n    },\n    \"&dark .cm-panels\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    }\n});\n/**\nOpening a panel is done by providing a constructor function for\nthe panel through this facet. (The panel is closed again when its\nconstructor is no longer provided.) Values of `null` are ignored.\n*/\nconst showPanel = /*@__PURE__*/Facet.define({\n    enables: [panelPlugin, baseTheme]\n});\n\nexport { getPanel, panels, showPanel };\n","export default function crelt() {\n  var elt = arguments[0]\n  if (typeof elt == \"string\") elt = document.createElement(elt)\n  var i = 1, next = arguments[1]\n  if (next && typeof next == \"object\" && next.nodeType == null && !Array.isArray(next)) {\n    for (var name in next) if (Object.prototype.hasOwnProperty.call(next, name)) {\n      var value = next[name]\n      if (typeof value == \"string\") elt.setAttribute(name, value)\n      else if (value != null) elt[name] = value\n    }\n    i++\n  }\n  for (; i < arguments.length; i++) add(elt, arguments[i])\n  return elt\n}\n\nfunction add(elt, child) {\n  if (typeof child == \"string\") {\n    elt.appendChild(document.createTextNode(child))\n  } else if (child == null) {\n  } else if (child.nodeType != null) {\n    elt.appendChild(child)\n  } else if (Array.isArray(child)) {\n    for (var i = 0; i < child.length; i++) add(elt, child[i])\n  } else {\n    throw new RangeError(\"Unsupported child node: \" + child)\n  }\n}\n","import { EditorView, Decoration, ViewPlugin, runScopeHandlers } from '@codemirror/view';\nimport { StateEffect, StateField, EditorSelection, Facet, combineConfig, CharCategory, Prec } from '@codemirror/state';\nimport { showPanel, getPanel } from '@codemirror/panel';\nimport { RangeSetBuilder } from '@codemirror/rangeset';\nimport elt from 'crelt';\nimport { codePointAt, fromCodePoint, codePointSize } from '@codemirror/text';\n\nconst basicNormalize = typeof String.prototype.normalize == \"function\"\n    ? x => x.normalize(\"NFKD\") : x => x;\n/**\nA search cursor provides an iterator over text matches in a\ndocument.\n*/\nclass SearchCursor {\n    /**\n    Create a text cursor. The query is the search string, `from` to\n    `to` provides the region to search.\n    \n    When `normalize` is given, it will be called, on both the query\n    string and the content it is matched against, before comparing.\n    You can, for example, create a case-insensitive search by\n    passing `s => s.toLowerCase()`.\n    \n    Text is always normalized with\n    [`.normalize(\"NFKD\")`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/normalize)\n    (when supported).\n    */\n    constructor(text, query, from = 0, to = text.length, normalize) {\n        /**\n        The current match (only holds a meaningful value after\n        [`next`](https://codemirror.net/6/docs/ref/#search.SearchCursor.next) has been called and when\n        `done` is false).\n        */\n        this.value = { from: 0, to: 0 };\n        /**\n        Whether the end of the iterated region has been reached.\n        */\n        this.done = false;\n        this.matches = [];\n        this.buffer = \"\";\n        this.bufferPos = 0;\n        this.iter = text.iterRange(from, to);\n        this.bufferStart = from;\n        this.normalize = normalize ? x => normalize(basicNormalize(x)) : basicNormalize;\n        this.query = this.normalize(query);\n    }\n    peek() {\n        if (this.bufferPos == this.buffer.length) {\n            this.bufferStart += this.buffer.length;\n            this.iter.next();\n            if (this.iter.done)\n                return -1;\n            this.bufferPos = 0;\n            this.buffer = this.iter.value;\n        }\n        return codePointAt(this.buffer, this.bufferPos);\n    }\n    /**\n    Look for the next match. Updates the iterator's\n    [`value`](https://codemirror.net/6/docs/ref/#search.SearchCursor.value) and\n    [`done`](https://codemirror.net/6/docs/ref/#search.SearchCursor.done) properties. Should be called\n    at least once before using the cursor.\n    */\n    next() {\n        while (this.matches.length)\n            this.matches.pop();\n        return this.nextOverlapping();\n    }\n    /**\n    The `next` method will ignore matches that partially overlap a\n    previous match. This method behaves like `next`, but includes\n    such matches.\n    */\n    nextOverlapping() {\n        for (;;) {\n            let next = this.peek();\n            if (next < 0) {\n                this.done = true;\n                return this;\n            }\n            let str = fromCodePoint(next), start = this.bufferStart + this.bufferPos;\n            this.bufferPos += codePointSize(next);\n            let norm = this.normalize(str);\n            for (let i = 0, pos = start;; i++) {\n                let code = norm.charCodeAt(i);\n                let match = this.match(code, pos);\n                if (match) {\n                    this.value = match;\n                    return this;\n                }\n                if (i == norm.length - 1)\n                    break;\n                if (pos == start && i < str.length && str.charCodeAt(i) == code)\n                    pos++;\n            }\n        }\n    }\n    match(code, pos) {\n        let match = null;\n        for (let i = 0; i < this.matches.length; i += 2) {\n            let index = this.matches[i], keep = false;\n            if (this.query.charCodeAt(index) == code) {\n                if (index == this.query.length - 1) {\n                    match = { from: this.matches[i + 1], to: pos + 1 };\n                }\n                else {\n                    this.matches[i]++;\n                    keep = true;\n                }\n            }\n            if (!keep) {\n                this.matches.splice(i, 2);\n                i -= 2;\n            }\n        }\n        if (this.query.charCodeAt(0) == code) {\n            if (this.query.length == 1)\n                match = { from: pos, to: pos + 1 };\n            else\n                this.matches.push(1, pos);\n        }\n        return match;\n    }\n}\nif (typeof Symbol != \"undefined\")\n    SearchCursor.prototype[Symbol.iterator] = function () { return this; };\n\nconst empty = { from: -1, to: -1, match: /*@__PURE__*//.*/.exec(\"\") };\nconst baseFlags = \"gm\" + (/x/.unicode == null ? \"\" : \"u\");\n/**\nThis class is similar to [`SearchCursor`](https://codemirror.net/6/docs/ref/#search.SearchCursor)\nbut searches for a regular expression pattern instead of a plain\nstring.\n*/\nclass RegExpCursor {\n    /**\n    Create a cursor that will search the given range in the given\n    document. `query` should be the raw pattern (as you'd pass it to\n    `new RegExp`).\n    */\n    constructor(text, query, options, from = 0, to = text.length) {\n        this.to = to;\n        this.curLine = \"\";\n        /**\n        Set to `true` when the cursor has reached the end of the search\n        range.\n        */\n        this.done = false;\n        /**\n        Will contain an object with the extent of the match and the\n        match object when [`next`](https://codemirror.net/6/docs/ref/#search.RegExpCursor.next)\n        sucessfully finds a match.\n        */\n        this.value = empty;\n        if (/\\\\[sWDnr]|\\n|\\r|\\[\\^/.test(query))\n            return new MultilineRegExpCursor(text, query, options, from, to);\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.iter = text.iter();\n        let startLine = text.lineAt(from);\n        this.curLineStart = startLine.from;\n        this.matchPos = from;\n        this.getLine(this.curLineStart);\n    }\n    getLine(skip) {\n        this.iter.next(skip);\n        if (this.iter.lineBreak) {\n            this.curLine = \"\";\n        }\n        else {\n            this.curLine = this.iter.value;\n            if (this.curLineStart + this.curLine.length > this.to)\n                this.curLine = this.curLine.slice(0, this.to - this.curLineStart);\n            this.iter.next();\n        }\n    }\n    nextLine() {\n        this.curLineStart = this.curLineStart + this.curLine.length + 1;\n        if (this.curLineStart > this.to)\n            this.curLine = \"\";\n        else\n            this.getLine(0);\n    }\n    /**\n    Move to the next match, if there is one.\n    */\n    next() {\n        for (let off = this.matchPos - this.curLineStart;;) {\n            this.re.lastIndex = off;\n            let match = this.matchPos <= this.to && this.re.exec(this.curLine);\n            if (match) {\n                let from = this.curLineStart + match.index, to = from + match[0].length;\n                this.matchPos = to + (from == to ? 1 : 0);\n                if (from == this.curLine.length)\n                    this.nextLine();\n                if (from < to || from > this.value.to) {\n                    this.value = { from, to, match };\n                    return this;\n                }\n                off = this.matchPos - this.curLineStart;\n            }\n            else if (this.curLineStart + this.curLine.length < this.to) {\n                this.nextLine();\n                off = 0;\n            }\n            else {\n                this.done = true;\n                return this;\n            }\n        }\n    }\n}\nconst flattened = /*@__PURE__*/new WeakMap();\n// Reusable (partially) flattened document strings\nclass FlattenedDoc {\n    constructor(from, text) {\n        this.from = from;\n        this.text = text;\n    }\n    get to() { return this.from + this.text.length; }\n    static get(doc, from, to) {\n        let cached = flattened.get(doc);\n        if (!cached || cached.from >= to || cached.to <= from) {\n            let flat = new FlattenedDoc(from, doc.sliceString(from, to));\n            flattened.set(doc, flat);\n            return flat;\n        }\n        if (cached.from == from && cached.to == to)\n            return cached;\n        let { text, from: cachedFrom } = cached;\n        if (cachedFrom > from) {\n            text = doc.sliceString(from, cachedFrom) + text;\n            cachedFrom = from;\n        }\n        if (cached.to < to)\n            text += doc.sliceString(cached.to, to);\n        flattened.set(doc, new FlattenedDoc(cachedFrom, text));\n        return new FlattenedDoc(from, text.slice(from - cachedFrom, to - cachedFrom));\n    }\n}\nclass MultilineRegExpCursor {\n    constructor(text, query, options, from, to) {\n        this.text = text;\n        this.to = to;\n        this.done = false;\n        this.value = empty;\n        this.matchPos = from;\n        this.re = new RegExp(query, baseFlags + ((options === null || options === void 0 ? void 0 : options.ignoreCase) ? \"i\" : \"\"));\n        this.flat = FlattenedDoc.get(text, from, this.chunkEnd(from + 5000 /* Base */));\n    }\n    chunkEnd(pos) {\n        return pos >= this.to ? this.to : this.text.lineAt(pos).to;\n    }\n    next() {\n        for (;;) {\n            let off = this.re.lastIndex = this.matchPos - this.flat.from;\n            let match = this.re.exec(this.flat.text);\n            // Skip empty matches directly after the last match\n            if (match && !match[0] && match.index == off) {\n                this.re.lastIndex = off + 1;\n                match = this.re.exec(this.flat.text);\n            }\n            // If a match goes almost to the end of a noncomplete chunk, try\n            // again, since it'll likely be able to match more\n            if (match && this.flat.to < this.to && match.index + match[0].length > this.flat.text.length - 10)\n                match = null;\n            if (match) {\n                let from = this.flat.from + match.index, to = from + match[0].length;\n                this.value = { from, to, match };\n                this.matchPos = to + (from == to ? 1 : 0);\n                return this;\n            }\n            else {\n                if (this.flat.to == this.to) {\n                    this.done = true;\n                    return this;\n                }\n                // Grow the flattened doc\n                this.flat = FlattenedDoc.get(this.text, this.flat.from, this.chunkEnd(this.flat.from + this.flat.text.length * 2));\n            }\n        }\n    }\n}\nif (typeof Symbol != \"undefined\") {\n    RegExpCursor.prototype[Symbol.iterator] = MultilineRegExpCursor.prototype[Symbol.iterator] =\n        function () { return this; };\n}\nfunction validRegExp(source) {\n    try {\n        new RegExp(source, baseFlags);\n        return true;\n    }\n    catch (_a) {\n        return false;\n    }\n}\n\nfunction createLineDialog(view) {\n    let input = elt(\"input\", { class: \"cm-textfield\", name: \"line\" });\n    let dom = elt(\"form\", {\n        class: \"cm-gotoLine\",\n        onkeydown: (event) => {\n            if (event.keyCode == 27) { // Escape\n                event.preventDefault();\n                view.dispatch({ effects: dialogEffect.of(false) });\n                view.focus();\n            }\n            else if (event.keyCode == 13) { // Enter\n                event.preventDefault();\n                go();\n            }\n        },\n        onsubmit: (event) => {\n            event.preventDefault();\n            go();\n        }\n    }, elt(\"label\", view.state.phrase(\"Go to line\"), \": \", input), \" \", elt(\"button\", { class: \"cm-button\", type: \"submit\" }, view.state.phrase(\"go\")));\n    function go() {\n        let match = /^([+-])?(\\d+)?(:\\d+)?(%)?$/.exec(input.value);\n        if (!match)\n            return;\n        let { state } = view, startLine = state.doc.lineAt(state.selection.main.head);\n        let [, sign, ln, cl, percent] = match;\n        let col = cl ? +cl.slice(1) : 0;\n        let line = ln ? +ln : startLine.number;\n        if (ln && percent) {\n            let pc = line / 100;\n            if (sign)\n                pc = pc * (sign == \"-\" ? -1 : 1) + (startLine.number / state.doc.lines);\n            line = Math.round(state.doc.lines * pc);\n        }\n        else if (ln && sign) {\n            line = line * (sign == \"-\" ? -1 : 1) + startLine.number;\n        }\n        let docLine = state.doc.line(Math.max(1, Math.min(state.doc.lines, line)));\n        view.dispatch({\n            effects: dialogEffect.of(false),\n            selection: EditorSelection.cursor(docLine.from + Math.max(0, Math.min(col, docLine.length))),\n            scrollIntoView: true\n        });\n        view.focus();\n    }\n    return { dom, pos: -10 };\n}\nconst dialogEffect = /*@__PURE__*/StateEffect.define();\nconst dialogField = /*@__PURE__*/StateField.define({\n    create() { return true; },\n    update(value, tr) {\n        for (let e of tr.effects)\n            if (e.is(dialogEffect))\n                value = e.value;\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val ? createLineDialog : null)\n});\n/**\nCommand that shows a dialog asking the user for a line number, and\nwhen a valid position is provided, moves the cursor to that line.\n\nSupports line numbers, relative line offsets prefixed with `+` or\n`-`, document percentages suffixed with `%`, and an optional\ncolumn position by adding `:` and a second number after the line\nnumber.\n\nThe dialog can be styled with the `panel.gotoLine` theme\nselector.\n*/\nconst gotoLine = view => {\n    let panel = getPanel(view, createLineDialog);\n    if (!panel) {\n        let effects = [dialogEffect.of(true)];\n        if (view.state.field(dialogField, false) == null)\n            effects.push(StateEffect.appendConfig.of([dialogField, baseTheme$1]));\n        view.dispatch({ effects });\n        panel = getPanel(view, createLineDialog);\n    }\n    if (panel)\n        panel.dom.querySelector(\"input\").focus();\n    return true;\n};\nconst baseTheme$1 = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-gotoLine\": {\n        padding: \"2px 6px 4px\",\n        \"& label\": { fontSize: \"80%\" }\n    }\n});\n\nconst defaultHighlightOptions = {\n    highlightWordAroundCursor: false,\n    minSelectionLength: 1,\n    maxMatches: 100\n};\nconst highlightConfig = /*@__PURE__*/Facet.define({\n    combine(options) {\n        return combineConfig(options, defaultHighlightOptions, {\n            highlightWordAroundCursor: (a, b) => a || b,\n            minSelectionLength: Math.min,\n            maxMatches: Math.min\n        });\n    }\n});\n/**\nThis extension highlights text that matches the selection. It uses\nthe `\"cm-selectionMatch\"` class for the highlighting. When\n`highlightWordAroundCursor` is enabled, the word at the cursor\nitself will be highlighted with `\"cm-selectionMatch-main\"`.\n*/\nfunction highlightSelectionMatches(options) {\n    let ext = [defaultTheme, matchHighlighter];\n    if (options)\n        ext.push(highlightConfig.of(options));\n    return ext;\n}\nconst matchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch\" });\nconst mainMatchDeco = /*@__PURE__*/Decoration.mark({ class: \"cm-selectionMatch cm-selectionMatch-main\" });\nconst matchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.decorations = this.getDeco(view);\n    }\n    update(update) {\n        if (update.selectionSet || update.docChanged || update.viewportChanged)\n            this.decorations = this.getDeco(update.view);\n    }\n    getDeco(view) {\n        let conf = view.state.facet(highlightConfig);\n        let { state } = view, sel = state.selection;\n        if (sel.ranges.length > 1)\n            return Decoration.none;\n        let range = sel.main, query, check = null;\n        if (range.empty) {\n            if (!conf.highlightWordAroundCursor)\n                return Decoration.none;\n            let word = state.wordAt(range.head);\n            if (!word)\n                return Decoration.none;\n            check = state.charCategorizer(range.head);\n            query = state.sliceDoc(word.from, word.to);\n        }\n        else {\n            let len = range.to - range.from;\n            if (len < conf.minSelectionLength || len > 200)\n                return Decoration.none;\n            query = state.sliceDoc(range.from, range.to).trim();\n            if (!query)\n                return Decoration.none;\n        }\n        let deco = [];\n        for (let part of view.visibleRanges) {\n            let cursor = new SearchCursor(state.doc, query, part.from, part.to);\n            while (!cursor.next().done) {\n                let { from, to } = cursor.value;\n                if (!check || ((from == 0 || check(state.sliceDoc(from - 1, from)) != CharCategory.Word) &&\n                    (to == state.doc.length || check(state.sliceDoc(to, to + 1)) != CharCategory.Word))) {\n                    if (check && from <= range.from && to >= range.to)\n                        deco.push(mainMatchDeco.range(from, to));\n                    else if (from >= range.to || to <= range.from)\n                        deco.push(matchDeco.range(from, to));\n                    if (deco.length > conf.maxMatches)\n                        return Decoration.none;\n                }\n            }\n        }\n        return Decoration.set(deco);\n    }\n}, {\n    decorations: v => v.decorations\n});\nconst defaultTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-selectionMatch\": { backgroundColor: \"#99ff7780\" },\n    \".cm-searchMatch .cm-selectionMatch\": { backgroundColor: \"transparent\" }\n});\n// Select the words around the cursors.\nconst selectWord = ({ state, dispatch }) => {\n    let { selection } = state;\n    let newSel = EditorSelection.create(selection.ranges.map(range => state.wordAt(range.head) || EditorSelection.cursor(range.head)), selection.mainIndex);\n    if (newSel.eq(selection))\n        return false;\n    dispatch(state.update({ selection: newSel }));\n    return true;\n};\n// Find next occurrence of query relative to last cursor. Wrap around\n// the document if there are no more matches.\nfunction findNextOccurrence(state, query) {\n    let { main, ranges } = state.selection;\n    let word = state.wordAt(main.head), fullWord = word && word.from == main.from && word.to == main.to;\n    for (let cycled = false, cursor = new SearchCursor(state.doc, query, ranges[ranges.length - 1].to);;) {\n        cursor.next();\n        if (cursor.done) {\n            if (cycled)\n                return null;\n            cursor = new SearchCursor(state.doc, query, 0, Math.max(0, ranges[ranges.length - 1].from - 1));\n            cycled = true;\n        }\n        else {\n            if (cycled && ranges.some(r => r.from == cursor.value.from))\n                continue;\n            if (fullWord) {\n                let word = state.wordAt(cursor.value.from);\n                if (!word || word.from != cursor.value.from || word.to != cursor.value.to)\n                    continue;\n            }\n            return cursor.value;\n        }\n    }\n}\n/**\nSelect next occurrence of the current selection.\nExpand selection to the word when selection range is empty.\n*/\nconst selectNextOccurrence = ({ state, dispatch }) => {\n    let { ranges } = state.selection;\n    if (ranges.some(sel => sel.from === sel.to))\n        return selectWord({ state, dispatch });\n    let searchedText = state.sliceDoc(ranges[0].from, ranges[0].to);\n    if (state.selection.ranges.some(r => state.sliceDoc(r.from, r.to) != searchedText))\n        return false;\n    let range = findNextOccurrence(state, searchedText);\n    if (!range)\n        return false;\n    dispatch(state.update({\n        selection: state.selection.addRange(EditorSelection.range(range.from, range.to), false),\n        scrollIntoView: true\n    }));\n    return true;\n};\n\nconst searchConfigFacet = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        var _a;\n        return {\n            top: configs.reduce((val, conf) => val !== null && val !== void 0 ? val : conf.top, undefined) || false,\n            caseSensitive: configs.reduce((val, conf) => val !== null && val !== void 0 ? val : (conf.caseSensitive || conf.matchCase), undefined) || false,\n            createPanel: ((_a = configs.find(c => c.createPanel)) === null || _a === void 0 ? void 0 : _a.createPanel) || (view => new SearchPanel(view))\n        };\n    }\n});\n/**\nConfigure the behavior of the search extension.\n*/\nfunction searchConfig(config) {\n    return searchConfigFacet.of(config);\n}\n/**\nA search query. Part of the editor's search state.\n*/\nclass SearchQuery {\n    /**\n    Create a query object.\n    */\n    constructor(config) {\n        this.search = config.search;\n        this.caseSensitive = !!config.caseSensitive;\n        this.regexp = !!config.regexp;\n        this.replace = config.replace || \"\";\n        this.valid = !!this.search && (!this.regexp || validRegExp(this.search));\n    }\n    /**\n    Compare this query to another query.\n    */\n    eq(other) {\n        return this.search == other.search && this.replace == other.replace &&\n            this.caseSensitive == other.caseSensitive && this.regexp == other.regexp;\n    }\n    /**\n    @internal\n    */\n    create() {\n        return this.regexp ? new RegExpQuery(this) : new StringQuery(this);\n    }\n}\nclass QueryType {\n    constructor(spec) {\n        this.spec = spec;\n    }\n}\nclass StringQuery extends QueryType {\n    constructor(spec) {\n        super(spec);\n        this.unquoted = spec.search.replace(/\\\\([nrt\\\\])/g, (_, ch) => ch == \"n\" ? \"\\n\" : ch == \"r\" ? \"\\r\" : ch == \"t\" ? \"\\t\" : \"\\\\\");\n    }\n    cursor(doc, from = 0, to = doc.length) {\n        return new SearchCursor(doc, this.unquoted, from, to, this.spec.caseSensitive ? undefined : x => x.toLowerCase());\n    }\n    nextMatch(doc, curFrom, curTo) {\n        let cursor = this.cursor(doc, curTo).nextOverlapping();\n        if (cursor.done)\n            cursor = this.cursor(doc, 0, curFrom).nextOverlapping();\n        return cursor.done ? null : cursor.value;\n    }\n    // Searching in reverse is, rather than implementing inverted search\n    // cursor, done by scanning chunk after chunk forward.\n    prevMatchInRange(doc, from, to) {\n        for (let pos = to;;) {\n            let start = Math.max(from, pos - 10000 /* ChunkSize */ - this.unquoted.length);\n            let cursor = this.cursor(doc, start, pos), range = null;\n            while (!cursor.nextOverlapping().done)\n                range = cursor.value;\n            if (range)\n                return range;\n            if (start == from)\n                return null;\n            pos -= 10000 /* ChunkSize */;\n        }\n    }\n    prevMatch(doc, curFrom, curTo) {\n        return this.prevMatchInRange(doc, 0, curFrom) ||\n            this.prevMatchInRange(doc, curTo, doc.length);\n    }\n    getReplacement(_result) { return this.spec.replace; }\n    matchAll(doc, limit) {\n        let cursor = this.cursor(doc), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(doc, from, to, add) {\n        let cursor = this.cursor(doc, Math.max(0, from - this.unquoted.length), Math.min(to + this.unquoted.length, doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\nclass RegExpQuery extends QueryType {\n    cursor(doc, from = 0, to = doc.length) {\n        return new RegExpCursor(doc, this.spec.search, this.spec.caseSensitive ? undefined : { ignoreCase: true }, from, to);\n    }\n    nextMatch(doc, curFrom, curTo) {\n        let cursor = this.cursor(doc, curTo).next();\n        if (cursor.done)\n            cursor = this.cursor(doc, 0, curFrom).next();\n        return cursor.done ? null : cursor.value;\n    }\n    prevMatchInRange(doc, from, to) {\n        for (let size = 1;; size++) {\n            let start = Math.max(from, to - size * 10000 /* ChunkSize */);\n            let cursor = this.cursor(doc, start, to), range = null;\n            while (!cursor.next().done)\n                range = cursor.value;\n            if (range && (start == from || range.from > start + 10))\n                return range;\n            if (start == from)\n                return null;\n        }\n    }\n    prevMatch(doc, curFrom, curTo) {\n        return this.prevMatchInRange(doc, 0, curFrom) ||\n            this.prevMatchInRange(doc, curTo, doc.length);\n    }\n    getReplacement(result) {\n        return this.spec.replace.replace(/\\$([$&\\d+])/g, (m, i) => i == \"$\" ? \"$\"\n            : i == \"&\" ? result.match[0]\n                : i != \"0\" && +i < result.match.length ? result.match[i]\n                    : m);\n    }\n    matchAll(doc, limit) {\n        let cursor = this.cursor(doc), ranges = [];\n        while (!cursor.next().done) {\n            if (ranges.length >= limit)\n                return null;\n            ranges.push(cursor.value);\n        }\n        return ranges;\n    }\n    highlight(doc, from, to, add) {\n        let cursor = this.cursor(doc, Math.max(0, from - 250 /* HighlightMargin */), Math.min(to + 250 /* HighlightMargin */, doc.length));\n        while (!cursor.next().done)\n            add(cursor.value.from, cursor.value.to);\n    }\n}\n/**\nA state effect that updates the current search query.\n*/\nconst setSearchQuery = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst searchState = /*@__PURE__*/StateField.define({\n    create(state) {\n        return new SearchState(defaultQuery(state).create(), createSearchPanel);\n    },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setSearchQuery))\n                value = new SearchState(effect.value.create(), value.panel);\n            else if (effect.is(togglePanel))\n                value = new SearchState(value.query, effect.value ? createSearchPanel : null);\n        }\n        return value;\n    },\n    provide: f => showPanel.from(f, val => val.panel)\n});\n/**\nGet the current search query from an editor state.\n*/\nfunction getSearchQuery(state) {\n    let curState = state.field(searchState, false);\n    return curState ? curState.query.spec : defaultQuery(state);\n}\nclass SearchState {\n    constructor(query, panel) {\n        this.query = query;\n        this.panel = panel;\n    }\n}\nconst matchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch\" }), selectedMatchMark = /*@__PURE__*/Decoration.mark({ class: \"cm-searchMatch cm-searchMatch-selected\" });\nconst searchHighlighter = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.decorations = this.highlight(view.state.field(searchState));\n    }\n    update(update) {\n        let state = update.state.field(searchState);\n        if (state != update.startState.field(searchState) || update.docChanged || update.selectionSet)\n            this.decorations = this.highlight(state);\n    }\n    highlight({ query, panel }) {\n        if (!panel || !query.spec.valid)\n            return Decoration.none;\n        let { view } = this;\n        let builder = new RangeSetBuilder();\n        for (let i = 0, ranges = view.visibleRanges, l = ranges.length; i < l; i++) {\n            let { from, to } = ranges[i];\n            while (i < l - 1 && to > ranges[i + 1].from - 2 * 250 /* HighlightMargin */)\n                to = ranges[++i].to;\n            query.highlight(view.state.doc, from, to, (from, to) => {\n                let selected = view.state.selection.ranges.some(r => r.from == from && r.to == to);\n                builder.add(from, to, selected ? selectedMatchMark : matchMark);\n            });\n        }\n        return builder.finish();\n    }\n}, {\n    decorations: v => v.decorations\n});\nfunction searchCommand(f) {\n    return view => {\n        let state = view.state.field(searchState, false);\n        return state && state.query.spec.valid ? f(view, state) : openSearchPanel(view);\n    };\n}\n/**\nOpen the search panel if it isn't already open, and move the\nselection to the first match after the current main selection.\nWill wrap around to the start of the document when it reaches the\nend.\n*/\nconst findNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { from, to } = view.state.selection.main;\n    let next = query.nextMatch(view.state.doc, from, to);\n    if (!next || next.from == from && next.to == to)\n        return false;\n    view.dispatch({\n        selection: { anchor: next.from, head: next.to },\n        scrollIntoView: true,\n        effects: announceMatch(view, next),\n        userEvent: \"select.search\"\n    });\n    return true;\n});\n/**\nMove the selection to the previous instance of the search query,\nbefore the current main selection. Will wrap past the start\nof the document to start searching at the end again.\n*/\nconst findPrevious = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    let range = query.prevMatch(state.doc, from, to);\n    if (!range)\n        return false;\n    view.dispatch({\n        selection: { anchor: range.from, head: range.to },\n        scrollIntoView: true,\n        effects: announceMatch(view, range),\n        userEvent: \"select.search\"\n    });\n    return true;\n});\n/**\nSelect all instances of the search query.\n*/\nconst selectMatches = /*@__PURE__*/searchCommand((view, { query }) => {\n    let ranges = query.matchAll(view.state.doc, 1000);\n    if (!ranges || !ranges.length)\n        return false;\n    view.dispatch({\n        selection: EditorSelection.create(ranges.map(r => EditorSelection.range(r.from, r.to))),\n        userEvent: \"select.search.matches\"\n    });\n    return true;\n});\n/**\nSelect all instances of the currently selected text.\n*/\nconst selectSelectionMatches = ({ state, dispatch }) => {\n    let sel = state.selection;\n    if (sel.ranges.length > 1 || sel.main.empty)\n        return false;\n    let { from, to } = sel.main;\n    let ranges = [], main = 0;\n    for (let cur = new SearchCursor(state.doc, state.sliceDoc(from, to)); !cur.next().done;) {\n        if (ranges.length > 1000)\n            return false;\n        if (cur.value.from == from)\n            main = ranges.length;\n        ranges.push(EditorSelection.range(cur.value.from, cur.value.to));\n    }\n    dispatch(state.update({\n        selection: EditorSelection.create(ranges, main),\n        userEvent: \"select.search.matches\"\n    }));\n    return true;\n};\n/**\nReplace the current match of the search query.\n*/\nconst replaceNext = /*@__PURE__*/searchCommand((view, { query }) => {\n    let { state } = view, { from, to } = state.selection.main;\n    if (state.readOnly)\n        return false;\n    let next = query.nextMatch(state.doc, from, from);\n    if (!next)\n        return false;\n    let changes = [], selection, replacement;\n    if (next.from == from && next.to == to) {\n        replacement = state.toText(query.getReplacement(next));\n        changes.push({ from: next.from, to: next.to, insert: replacement });\n        next = query.nextMatch(state.doc, next.from, next.to);\n    }\n    if (next) {\n        let off = changes.length == 0 || changes[0].from >= next.to ? 0 : next.to - next.from - replacement.length;\n        selection = { anchor: next.from - off, head: next.to - off };\n    }\n    view.dispatch({\n        changes, selection,\n        scrollIntoView: !!selection,\n        effects: next ? announceMatch(view, next) : undefined,\n        userEvent: \"input.replace\"\n    });\n    return true;\n});\n/**\nReplace all instances of the search query with the given\nreplacement.\n*/\nconst replaceAll = /*@__PURE__*/searchCommand((view, { query }) => {\n    if (view.state.readOnly)\n        return false;\n    let changes = query.matchAll(view.state.doc, 1e9).map(match => {\n        let { from, to } = match;\n        return { from, to, insert: query.getReplacement(match) };\n    });\n    if (!changes.length)\n        return false;\n    view.dispatch({\n        changes,\n        userEvent: \"input.replace.all\"\n    });\n    return true;\n});\nfunction createSearchPanel(view) {\n    return view.state.facet(searchConfigFacet).createPanel(view);\n}\nfunction defaultQuery(state, fallback) {\n    var _a;\n    let sel = state.selection.main;\n    let selText = sel.empty || sel.to > sel.from + 100 ? \"\" : state.sliceDoc(sel.from, sel.to);\n    let caseSensitive = (_a = fallback === null || fallback === void 0 ? void 0 : fallback.caseSensitive) !== null && _a !== void 0 ? _a : state.facet(searchConfigFacet).caseSensitive;\n    return fallback && !selText ? fallback : new SearchQuery({ search: selText.replace(/\\n/g, \"\\\\n\"), caseSensitive });\n}\n/**\nMake sure the search panel is open and focused.\n*/\nconst openSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (state && state.panel) {\n        let panel = getPanel(view, createSearchPanel);\n        if (!panel)\n            return false;\n        let searchInput = panel.dom.querySelector(\"[name=search]\");\n        if (searchInput != view.root.activeElement) {\n            let query = defaultQuery(view.state, state.query.spec);\n            if (query.valid)\n                view.dispatch({ effects: setSearchQuery.of(query) });\n            searchInput.focus();\n            searchInput.select();\n        }\n    }\n    else {\n        view.dispatch({ effects: [\n                togglePanel.of(true),\n                state ? setSearchQuery.of(defaultQuery(view.state, state.query.spec)) : StateEffect.appendConfig.of(searchExtensions)\n            ] });\n    }\n    return true;\n};\n/**\nClose the search panel.\n*/\nconst closeSearchPanel = view => {\n    let state = view.state.field(searchState, false);\n    if (!state || !state.panel)\n        return false;\n    let panel = getPanel(view, createSearchPanel);\n    if (panel && panel.dom.contains(view.root.activeElement))\n        view.focus();\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nDefault search-related key bindings.\n\n - Mod-f: [`openSearchPanel`](https://codemirror.net/6/docs/ref/#search.openSearchPanel)\n - F3, Mod-g: [`findNext`](https://codemirror.net/6/docs/ref/#search.findNext)\n - Shift-F3, Shift-Mod-g: [`findPrevious`](https://codemirror.net/6/docs/ref/#search.findPrevious)\n - Alt-g: [`gotoLine`](https://codemirror.net/6/docs/ref/#search.gotoLine)\n - Mod-d: [`selectNextOccurrence`](https://codemirror.net/6/docs/ref/#search.selectNextOccurrence)\n*/\nconst searchKeymap = [\n    { key: \"Mod-f\", run: openSearchPanel, scope: \"editor search-panel\" },\n    { key: \"F3\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Mod-g\", run: findNext, shift: findPrevious, scope: \"editor search-panel\", preventDefault: true },\n    { key: \"Escape\", run: closeSearchPanel, scope: \"editor search-panel\" },\n    { key: \"Mod-Shift-l\", run: selectSelectionMatches },\n    { key: \"Alt-g\", run: gotoLine },\n    { key: \"Mod-d\", run: selectNextOccurrence, preventDefault: true },\n];\nclass SearchPanel {\n    constructor(view) {\n        this.view = view;\n        let query = this.query = view.state.field(searchState).query.spec;\n        this.commit = this.commit.bind(this);\n        this.searchField = elt(\"input\", {\n            value: query.search,\n            placeholder: phrase(view, \"Find\"),\n            \"aria-label\": phrase(view, \"Find\"),\n            class: \"cm-textfield\",\n            name: \"search\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.replaceField = elt(\"input\", {\n            value: query.replace,\n            placeholder: phrase(view, \"Replace\"),\n            \"aria-label\": phrase(view, \"Replace\"),\n            class: \"cm-textfield\",\n            name: \"replace\",\n            onchange: this.commit,\n            onkeyup: this.commit\n        });\n        this.caseField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"case\",\n            checked: query.caseSensitive,\n            onchange: this.commit\n        });\n        this.reField = elt(\"input\", {\n            type: \"checkbox\",\n            name: \"re\",\n            checked: query.regexp,\n            onchange: this.commit\n        });\n        function button(name, onclick, content) {\n            return elt(\"button\", { class: \"cm-button\", name, onclick, type: \"button\" }, content);\n        }\n        this.dom = elt(\"div\", { onkeydown: (e) => this.keydown(e), class: \"cm-search\" }, [\n            this.searchField,\n            button(\"next\", () => findNext(view), [phrase(view, \"next\")]),\n            button(\"prev\", () => findPrevious(view), [phrase(view, \"previous\")]),\n            button(\"select\", () => selectMatches(view), [phrase(view, \"all\")]),\n            elt(\"label\", null, [this.caseField, phrase(view, \"match case\")]),\n            elt(\"label\", null, [this.reField, phrase(view, \"regexp\")]),\n            ...view.state.readOnly ? [] : [\n                elt(\"br\"),\n                this.replaceField,\n                button(\"replace\", () => replaceNext(view), [phrase(view, \"replace\")]),\n                button(\"replaceAll\", () => replaceAll(view), [phrase(view, \"replace all\")]),\n                elt(\"button\", {\n                    name: \"close\",\n                    onclick: () => closeSearchPanel(view),\n                    \"aria-label\": phrase(view, \"close\"),\n                    type: \"button\"\n                }, [\"×\"])\n            ]\n        ]);\n    }\n    commit() {\n        let query = new SearchQuery({\n            search: this.searchField.value,\n            caseSensitive: this.caseField.checked,\n            regexp: this.reField.checked,\n            replace: this.replaceField.value\n        });\n        if (!query.eq(this.query)) {\n            this.query = query;\n            this.view.dispatch({ effects: setSearchQuery.of(query) });\n        }\n    }\n    keydown(e) {\n        if (runScopeHandlers(this.view, e, \"search-panel\")) {\n            e.preventDefault();\n        }\n        else if (e.keyCode == 13 && e.target == this.searchField) {\n            e.preventDefault();\n            (e.shiftKey ? findPrevious : findNext)(this.view);\n        }\n        else if (e.keyCode == 13 && e.target == this.replaceField) {\n            e.preventDefault();\n            replaceNext(this.view);\n        }\n    }\n    update(update) {\n        for (let tr of update.transactions)\n            for (let effect of tr.effects) {\n                if (effect.is(setSearchQuery) && !effect.value.eq(this.query))\n                    this.setQuery(effect.value);\n            }\n    }\n    setQuery(query) {\n        this.query = query;\n        this.searchField.value = query.search;\n        this.replaceField.value = query.replace;\n        this.caseField.checked = query.caseSensitive;\n        this.reField.checked = query.regexp;\n    }\n    mount() {\n        this.searchField.select();\n    }\n    get pos() { return 80; }\n    get top() { return this.view.state.facet(searchConfigFacet).top; }\n}\nfunction phrase(view, phrase) { return view.state.phrase(phrase); }\nconst AnnounceMargin = 30;\nconst Break = /[\\s\\.,:;?!]/;\nfunction announceMatch(view, { from, to }) {\n    let lineStart = view.state.doc.lineAt(from).from, lineEnd = view.state.doc.lineAt(to).to;\n    let start = Math.max(lineStart, from - AnnounceMargin), end = Math.min(lineEnd, to + AnnounceMargin);\n    let text = view.state.sliceDoc(start, end);\n    if (start != lineStart) {\n        for (let i = 0; i < AnnounceMargin; i++)\n            if (!Break.test(text[i + 1]) && Break.test(text[i])) {\n                text = text.slice(i);\n                break;\n            }\n    }\n    if (end != lineEnd) {\n        for (let i = text.length - 1; i > text.length - AnnounceMargin; i--)\n            if (!Break.test(text[i - 1]) && Break.test(text[i])) {\n                text = text.slice(0, i);\n                break;\n            }\n    }\n    return EditorView.announce.of(`${view.state.phrase(\"current match\")}. ${text} ${view.state.phrase(\"on line\")} ${view.state.doc.lineAt(from).number}`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-panel.cm-search\": {\n        padding: \"2px 6px 4px\",\n        position: \"relative\",\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"4px\",\n            backgroundColor: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        },\n        \"& input, & button, & label\": {\n            margin: \".2em .6em .2em 0\"\n        },\n        \"& input[type=checkbox]\": {\n            marginRight: \".2em\"\n        },\n        \"& label\": {\n            fontSize: \"80%\",\n            whiteSpace: \"pre\"\n        }\n    },\n    \"&light .cm-searchMatch\": { backgroundColor: \"#ffff0054\" },\n    \"&dark .cm-searchMatch\": { backgroundColor: \"#00ffff8a\" },\n    \"&light .cm-searchMatch-selected\": { backgroundColor: \"#ff6a0054\" },\n    \"&dark .cm-searchMatch-selected\": { backgroundColor: \"#ff00ff8a\" }\n});\nconst searchExtensions = [\n    searchState,\n    /*@__PURE__*/Prec.lowest(searchHighlighter),\n    baseTheme\n];\n\nexport { RegExpCursor, SearchCursor, SearchQuery, closeSearchPanel, findNext, findPrevious, getSearchQuery, gotoLine, highlightSelectionMatches, openSearchPanel, replaceAll, replaceNext, searchConfig, searchKeymap, selectMatches, selectNextOccurrence, selectSelectionMatches, setSearchQuery };\n","import { ViewPlugin, Direction, EditorView, logException } from '@codemirror/view';\nimport { Facet, StateEffect, StateField, MapMode } from '@codemirror/state';\n\nconst ios = typeof navigator != \"undefined\" &&\n    !/*@__PURE__*//Edge\\/(\\d+)/.exec(navigator.userAgent) && /*@__PURE__*//Apple Computer/.test(navigator.vendor) &&\n    (/*@__PURE__*//Mobile\\/\\w+/.test(navigator.userAgent) || navigator.maxTouchPoints > 2);\nconst Outside = \"-10000px\";\nclass TooltipViewManager {\n    constructor(view, facet, createTooltipView) {\n        this.facet = facet;\n        this.createTooltipView = createTooltipView;\n        this.input = view.state.facet(facet);\n        this.tooltips = this.input.filter(t => t);\n        this.tooltipViews = this.tooltips.map(createTooltipView);\n    }\n    update(update) {\n        let input = update.state.facet(this.facet);\n        let tooltips = input.filter(x => x);\n        if (input === this.input) {\n            for (let t of this.tooltipViews)\n                if (t.update)\n                    t.update(update);\n            return false;\n        }\n        let tooltipViews = [];\n        for (let i = 0; i < tooltips.length; i++) {\n            let tip = tooltips[i], known = -1;\n            if (!tip)\n                continue;\n            for (let i = 0; i < this.tooltips.length; i++) {\n                let other = this.tooltips[i];\n                if (other && other.create == tip.create)\n                    known = i;\n            }\n            if (known < 0) {\n                tooltipViews[i] = this.createTooltipView(tip);\n            }\n            else {\n                let tooltipView = tooltipViews[i] = this.tooltipViews[known];\n                if (tooltipView.update)\n                    tooltipView.update(update);\n            }\n        }\n        for (let t of this.tooltipViews)\n            if (tooltipViews.indexOf(t) < 0)\n                t.dom.remove();\n        this.input = input;\n        this.tooltips = tooltips;\n        this.tooltipViews = tooltipViews;\n        return true;\n    }\n}\n/**\nReturn an extension that configures tooltip behavior.\n*/\nfunction tooltips(config = {}) {\n    return tooltipConfig.of(config);\n}\nfunction windowSpace() {\n    return { top: 0, left: 0, bottom: innerHeight, right: innerWidth };\n}\nconst tooltipConfig = /*@__PURE__*/Facet.define({\n    combine: values => {\n        var _a, _b, _c;\n        return ({\n            position: ios ? \"absolute\" : ((_a = values.find(conf => conf.position)) === null || _a === void 0 ? void 0 : _a.position) || \"fixed\",\n            parent: ((_b = values.find(conf => conf.parent)) === null || _b === void 0 ? void 0 : _b.parent) || null,\n            tooltipSpace: ((_c = values.find(conf => conf.tooltipSpace)) === null || _c === void 0 ? void 0 : _c.tooltipSpace) || windowSpace,\n        });\n    }\n});\nconst tooltipPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.inView = true;\n        this.lastTransaction = 0;\n        this.intersectionTimeout = -1;\n        let config = view.state.facet(tooltipConfig);\n        this.position = config.position;\n        this.parent = config.parent;\n        this.classes = view.themeClasses;\n        this.createContainer();\n        this.measureReq = { read: this.readMeasure.bind(this), write: this.writeMeasure.bind(this), key: this };\n        this.manager = new TooltipViewManager(view, showTooltip, t => this.createTooltip(t));\n        this.intersectionObserver = typeof IntersectionObserver == \"function\" ? new IntersectionObserver(entries => {\n            if (this.intersectionTimeout < 0 && Date.now() > this.lastTransaction - 50 &&\n                entries.length > 0 && entries[entries.length - 1].intersectionRatio < 1)\n                this.intersectionTimeout = setTimeout(() => {\n                    this.intersectionTimeout = -1;\n                    this.maybeMeasure();\n                }, 50);\n        }, { threshold: [1] }) : null;\n        this.observeIntersection();\n        this.maybeMeasure();\n    }\n    createContainer() {\n        if (this.parent) {\n            this.container = document.createElement(\"div\");\n            this.container.style.position = \"relative\";\n            this.container.className = this.view.themeClasses;\n            this.parent.appendChild(this.container);\n        }\n        else {\n            this.container = this.view.dom;\n        }\n    }\n    observeIntersection() {\n        if (this.intersectionObserver) {\n            this.intersectionObserver.disconnect();\n            for (let tooltip of this.manager.tooltipViews)\n                this.intersectionObserver.observe(tooltip.dom);\n        }\n    }\n    update(update) {\n        if (update.transactions.length)\n            this.lastTransaction = Date.now();\n        let updated = this.manager.update(update);\n        if (updated)\n            this.observeIntersection();\n        let shouldMeasure = updated || update.geometryChanged;\n        let newConfig = update.state.facet(tooltipConfig);\n        if (newConfig.position != this.position) {\n            this.position = newConfig.position;\n            for (let t of this.manager.tooltipViews)\n                t.dom.style.position = this.position;\n            shouldMeasure = true;\n        }\n        if (newConfig.parent != this.parent) {\n            if (this.parent)\n                this.container.remove();\n            this.parent = newConfig.parent;\n            this.createContainer();\n            for (let t of this.manager.tooltipViews)\n                this.container.appendChild(t.dom);\n            shouldMeasure = true;\n        }\n        else if (this.parent && this.view.themeClasses != this.classes) {\n            this.classes = this.container.className = this.view.themeClasses;\n        }\n        if (shouldMeasure)\n            this.maybeMeasure();\n    }\n    createTooltip(tooltip) {\n        let tooltipView = tooltip.create(this.view);\n        tooltipView.dom.classList.add(\"cm-tooltip\");\n        if (tooltip.arrow && !tooltipView.dom.querySelector(\"cm-tooltip > cm-tooltip-arrow\")) {\n            let arrow = document.createElement(\"div\");\n            arrow.className = \"cm-tooltip-arrow\";\n            tooltipView.dom.appendChild(arrow);\n        }\n        tooltipView.dom.style.position = this.position;\n        tooltipView.dom.style.top = Outside;\n        this.container.appendChild(tooltipView.dom);\n        if (tooltipView.mount)\n            tooltipView.mount(this.view);\n        return tooltipView;\n    }\n    destroy() {\n        var _a;\n        for (let { dom } of this.manager.tooltipViews)\n            dom.remove();\n        (_a = this.intersectionObserver) === null || _a === void 0 ? void 0 : _a.disconnect();\n        clearTimeout(this.intersectionTimeout);\n    }\n    readMeasure() {\n        let editor = this.view.dom.getBoundingClientRect();\n        return {\n            editor,\n            parent: this.parent ? this.container.getBoundingClientRect() : editor,\n            pos: this.manager.tooltips.map(t => this.view.coordsAtPos(t.pos)),\n            size: this.manager.tooltipViews.map(({ dom }) => dom.getBoundingClientRect()),\n            space: this.view.state.facet(tooltipConfig).tooltipSpace(this.view),\n        };\n    }\n    writeMeasure(measured) {\n        let { editor, space } = measured;\n        let others = [];\n        for (let i = 0; i < this.manager.tooltips.length; i++) {\n            let tooltip = this.manager.tooltips[i], tView = this.manager.tooltipViews[i], { dom } = tView;\n            let pos = measured.pos[i], size = measured.size[i];\n            // Hide tooltips that are outside of the editor.\n            if (!pos || pos.bottom <= Math.max(editor.top, space.top) ||\n                pos.top >= Math.min(editor.bottom, space.bottom) ||\n                pos.right <= Math.max(editor.left, space.left) ||\n                pos.left >= Math.min(editor.right, space.right)) {\n                dom.style.top = Outside;\n                continue;\n            }\n            let arrow = tooltip.arrow ? tView.dom.querySelector(\".cm-tooltip-arrow\") : null;\n            let arrowHeight = arrow ? 7 /* Size */ : 0;\n            let width = size.right - size.left, height = size.bottom - size.top;\n            let offset = tView.offset || noOffset, ltr = this.view.textDirection == Direction.LTR;\n            let left = size.width > space.right - space.left ? (ltr ? space.left : space.right - size.width)\n                : ltr ? Math.min(pos.left - (arrow ? 14 /* Offset */ : 0) + offset.x, space.right - width)\n                    : Math.max(space.left, pos.left - width + (arrow ? 14 /* Offset */ : 0) - offset.x);\n            let above = !!tooltip.above;\n            if (!tooltip.strictSide && (above\n                ? pos.top - (size.bottom - size.top) - offset.y < space.top\n                : pos.bottom + (size.bottom - size.top) + offset.y > space.bottom) &&\n                above == (space.bottom - pos.bottom > pos.top - space.top))\n                above = !above;\n            let top = above ? pos.top - height - arrowHeight - offset.y : pos.bottom + arrowHeight + offset.y;\n            let right = left + width;\n            for (let r of others)\n                if (r.left < right && r.right > left && r.top < top + height && r.bottom > top)\n                    top = above ? r.top - height - 2 - arrowHeight : r.bottom + arrowHeight + 2;\n            if (this.position == \"absolute\") {\n                dom.style.top = (top - measured.parent.top) + \"px\";\n                dom.style.left = (left - measured.parent.left) + \"px\";\n            }\n            else {\n                dom.style.top = top + \"px\";\n                dom.style.left = left + \"px\";\n            }\n            if (arrow)\n                arrow.style.left = `${pos.left + (ltr ? offset.x : -offset.x) - (left + 14 /* Offset */ - 7 /* Size */)}px`;\n            others.push({ left, top, right, bottom: top + height });\n            dom.classList.toggle(\"cm-tooltip-above\", above);\n            dom.classList.toggle(\"cm-tooltip-below\", !above);\n            if (tView.positioned)\n                tView.positioned();\n        }\n    }\n    maybeMeasure() {\n        if (this.manager.tooltips.length) {\n            if (this.view.inView)\n                this.view.requestMeasure(this.measureReq);\n            if (this.inView != this.view.inView) {\n                this.inView = this.view.inView;\n                if (!this.inView)\n                    for (let tv of this.manager.tooltipViews)\n                        tv.dom.style.top = Outside;\n            }\n        }\n    }\n}, {\n    eventHandlers: {\n        scroll() { this.maybeMeasure(); }\n    }\n});\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip\": {\n        zIndex: 100\n    },\n    \"&light .cm-tooltip\": {\n        border: \"1px solid #bbb\",\n        backgroundColor: \"#f5f5f5\"\n    },\n    \"&light .cm-tooltip-section:not(:first-child)\": {\n        borderTop: \"1px solid #bbb\",\n    },\n    \"&dark .cm-tooltip\": {\n        backgroundColor: \"#333338\",\n        color: \"white\"\n    },\n    \".cm-tooltip-arrow\": {\n        height: `${7 /* Size */}px`,\n        width: `${7 /* Size */ * 2}px`,\n        position: \"absolute\",\n        zIndex: -1,\n        overflow: \"hidden\",\n        \"&:before, &:after\": {\n            content: \"''\",\n            position: \"absolute\",\n            width: 0,\n            height: 0,\n            borderLeft: `${7 /* Size */}px solid transparent`,\n            borderRight: `${7 /* Size */}px solid transparent`,\n        },\n        \".cm-tooltip-above &\": {\n            bottom: `-${7 /* Size */}px`,\n            \"&:before\": {\n                borderTop: `${7 /* Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderTop: `${7 /* Size */}px solid #f5f5f5`,\n                bottom: \"1px\"\n            }\n        },\n        \".cm-tooltip-below &\": {\n            top: `-${7 /* Size */}px`,\n            \"&:before\": {\n                borderBottom: `${7 /* Size */}px solid #bbb`,\n            },\n            \"&:after\": {\n                borderBottom: `${7 /* Size */}px solid #f5f5f5`,\n                top: \"1px\"\n            }\n        },\n    },\n    \"&dark .cm-tooltip .cm-tooltip-arrow\": {\n        \"&:before\": {\n            borderTopColor: \"#333338\",\n            borderBottomColor: \"#333338\"\n        },\n        \"&:after\": {\n            borderTopColor: \"transparent\",\n            borderBottomColor: \"transparent\"\n        }\n    }\n});\nconst noOffset = { x: 0, y: 0 };\n/**\nBehavior by which an extension can provide a tooltip to be shown.\n*/\nconst showTooltip = /*@__PURE__*/Facet.define({\n    enables: [tooltipPlugin, baseTheme]\n});\nconst showHoverTooltip = /*@__PURE__*/Facet.define();\nclass HoverTooltipHost {\n    constructor(view) {\n        this.view = view;\n        this.mounted = false;\n        this.dom = document.createElement(\"div\");\n        this.dom.classList.add(\"cm-tooltip-hover\");\n        this.manager = new TooltipViewManager(view, showHoverTooltip, t => this.createHostedView(t));\n    }\n    // Needs to be static so that host tooltip instances always match\n    static create(view) {\n        return new HoverTooltipHost(view);\n    }\n    createHostedView(tooltip) {\n        let hostedView = tooltip.create(this.view);\n        hostedView.dom.classList.add(\"cm-tooltip-section\");\n        this.dom.appendChild(hostedView.dom);\n        if (this.mounted && hostedView.mount)\n            hostedView.mount(this.view);\n        return hostedView;\n    }\n    mount(view) {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.mount)\n                hostedView.mount(view);\n        }\n        this.mounted = true;\n    }\n    positioned() {\n        for (let hostedView of this.manager.tooltipViews) {\n            if (hostedView.positioned)\n                hostedView.positioned();\n        }\n    }\n    update(update) {\n        this.manager.update(update);\n    }\n}\nconst showHoverTooltipHost = /*@__PURE__*/showTooltip.compute([showHoverTooltip], state => {\n    let tooltips = state.facet(showHoverTooltip).filter(t => t);\n    if (tooltips.length === 0)\n        return null;\n    return {\n        pos: Math.min(...tooltips.map(t => t.pos)),\n        end: Math.max(...tooltips.filter(t => t.end != null).map(t => t.end)),\n        create: HoverTooltipHost.create,\n        above: tooltips[0].above,\n        arrow: tooltips.some(t => t.arrow),\n    };\n});\nclass HoverPlugin {\n    constructor(view, source, field, setHover, hoverTime) {\n        this.view = view;\n        this.source = source;\n        this.field = field;\n        this.setHover = setHover;\n        this.hoverTime = hoverTime;\n        this.hoverTimeout = -1;\n        this.restartTimeout = -1;\n        this.pending = null;\n        this.lastMove = { x: 0, y: 0, target: view.dom, time: 0 };\n        this.checkHover = this.checkHover.bind(this);\n        view.dom.addEventListener(\"mouseleave\", this.mouseleave = this.mouseleave.bind(this));\n        view.dom.addEventListener(\"mousemove\", this.mousemove = this.mousemove.bind(this));\n    }\n    update() {\n        if (this.pending) {\n            this.pending = null;\n            clearTimeout(this.restartTimeout);\n            this.restartTimeout = setTimeout(() => this.startHover(), 20);\n        }\n    }\n    get active() {\n        return this.view.state.field(this.field);\n    }\n    checkHover() {\n        this.hoverTimeout = -1;\n        if (this.active)\n            return;\n        let hovered = Date.now() - this.lastMove.time;\n        if (hovered < this.hoverTime)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime - hovered);\n        else\n            this.startHover();\n    }\n    startHover() {\n        var _a;\n        clearTimeout(this.restartTimeout);\n        let { lastMove } = this;\n        let pos = this.view.contentDOM.contains(lastMove.target) ? this.view.posAtCoords(lastMove) : null;\n        if (pos == null)\n            return;\n        let posCoords = this.view.coordsAtPos(pos);\n        if (posCoords == null || lastMove.y < posCoords.top || lastMove.y > posCoords.bottom ||\n            lastMove.x < posCoords.left - this.view.defaultCharacterWidth ||\n            lastMove.x > posCoords.right + this.view.defaultCharacterWidth)\n            return;\n        let bidi = this.view.bidiSpans(this.view.state.doc.lineAt(pos)).find(s => s.from <= pos && s.to >= pos);\n        let rtl = bidi && bidi.dir == Direction.RTL ? -1 : 1;\n        let open = this.source(this.view, pos, (lastMove.x < posCoords.left ? -rtl : rtl));\n        if ((_a = open) === null || _a === void 0 ? void 0 : _a.then) {\n            let pending = this.pending = { pos };\n            open.then(result => {\n                if (this.pending == pending) {\n                    this.pending = null;\n                    if (result)\n                        this.view.dispatch({ effects: this.setHover.of(result) });\n                }\n            }, e => logException(this.view.state, e, \"hover tooltip\"));\n        }\n        else if (open) {\n            this.view.dispatch({ effects: this.setHover.of(open) });\n        }\n    }\n    mousemove(event) {\n        var _a;\n        this.lastMove = { x: event.clientX, y: event.clientY, target: event.target, time: Date.now() };\n        if (this.hoverTimeout < 0)\n            this.hoverTimeout = setTimeout(this.checkHover, this.hoverTime);\n        let tooltip = this.active;\n        if (tooltip && !isInTooltip(this.lastMove.target) || this.pending) {\n            let { pos } = tooltip || this.pending, end = (_a = tooltip === null || tooltip === void 0 ? void 0 : tooltip.end) !== null && _a !== void 0 ? _a : pos;\n            if ((pos == end ? this.view.posAtCoords(this.lastMove) != pos\n                : !isOverRange(this.view, pos, end, event.clientX, event.clientY, 6 /* MaxDist */))) {\n                this.view.dispatch({ effects: this.setHover.of(null) });\n                this.pending = null;\n            }\n        }\n    }\n    mouseleave() {\n        clearTimeout(this.hoverTimeout);\n        this.hoverTimeout = -1;\n        if (this.active)\n            this.view.dispatch({ effects: this.setHover.of(null) });\n    }\n    destroy() {\n        clearTimeout(this.hoverTimeout);\n        this.view.dom.removeEventListener(\"mouseleave\", this.mouseleave);\n        this.view.dom.removeEventListener(\"mousemove\", this.mousemove);\n    }\n}\nfunction isInTooltip(elt) {\n    for (let cur = elt; cur; cur = cur.parentNode)\n        if (cur.nodeType == 1 && cur.classList.contains(\"cm-tooltip\"))\n            return true;\n    return false;\n}\nfunction isOverRange(view, from, to, x, y, margin) {\n    let range = document.createRange();\n    let fromDOM = view.domAtPos(from), toDOM = view.domAtPos(to);\n    range.setEnd(toDOM.node, toDOM.offset);\n    range.setStart(fromDOM.node, fromDOM.offset);\n    let rects = range.getClientRects();\n    range.detach();\n    for (let i = 0; i < rects.length; i++) {\n        let rect = rects[i];\n        let dist = Math.max(rect.top - y, y - rect.bottom, rect.left - x, x - rect.right);\n        if (dist <= margin)\n            return true;\n    }\n    return false;\n}\n/**\nEnable a hover tooltip, which shows up when the pointer hovers\nover ranges of text. The callback is called when the mouse hovers\nover the document text. It should, if there is a tooltip\nassociated with position `pos` return the tooltip description\n(either directly or in a promise). The `side` argument indicates\non which side of the position the pointer is—it will be -1 if the\npointer is before the position, 1 if after the position.\n\nNote that all hover tooltips are hosted within a single tooltip\ncontainer element. This allows multiple tooltips over the same\nrange to be \"merged\" together without overlapping.\n*/\nfunction hoverTooltip(source, options = {}) {\n    let setHover = StateEffect.define();\n    let hoverState = StateField.define({\n        create() { return null; },\n        update(value, tr) {\n            if (value && (options.hideOnChange && (tr.docChanged || tr.selection)))\n                return null;\n            for (let effect of tr.effects) {\n                if (effect.is(setHover))\n                    return effect.value;\n                if (effect.is(closeHoverTooltipEffect))\n                    return null;\n            }\n            if (value && tr.docChanged) {\n                let newPos = tr.changes.mapPos(value.pos, -1, MapMode.TrackDel);\n                if (newPos == null)\n                    return null;\n                let copy = Object.assign(Object.create(null), value);\n                copy.pos = newPos;\n                if (value.end != null)\n                    copy.end = tr.changes.mapPos(value.end);\n                return copy;\n            }\n            return value;\n        },\n        provide: f => showHoverTooltip.from(f)\n    });\n    let hoverTime = options.hoverTime || 600 /* Time */;\n    return [\n        hoverState,\n        ViewPlugin.define(view => new HoverPlugin(view, source, hoverState, setHover, hoverTime)),\n        showHoverTooltipHost\n    ];\n}\n/**\nReturns true if any hover tooltips are currently active.\n*/\nfunction hasHoverTooltips(state) {\n    return state.facet(showHoverTooltip).some(x => x);\n}\nconst closeHoverTooltipEffect = /*@__PURE__*/StateEffect.define();\n/**\nTransaction effect that closes all hover tooltips.\n*/\nconst closeHoverTooltips = /*@__PURE__*/closeHoverTooltipEffect.of(null);\n/**\nTell the tooltip extension to recompute the position of the active\ntooltips. This can be useful when something happens (such as a\nre-positioning or CSS change affecting the editor) that could\ninvalidate the existing tooltip positions.\n*/\nfunction repositionTooltips(view) {\n    var _a;\n    (_a = view.plugin(tooltipPlugin)) === null || _a === void 0 ? void 0 : _a.maybeMeasure();\n}\n\nexport { closeHoverTooltips, hasHoverTooltips, hoverTooltip, repositionTooltips, showTooltip, tooltips };\n","import { Annotation, Facet, combineConfig, StateEffect, StateField, Prec, EditorSelection, Text } from '@codemirror/state';\nimport { Direction, logException, EditorView, ViewPlugin, Decoration, WidgetType, keymap } from '@codemirror/view';\nimport { showTooltip } from '@codemirror/tooltip';\nimport { syntaxTree, indentUnit } from '@codemirror/language';\nimport { codePointAt, codePointSize, fromCodePoint } from '@codemirror/text';\n\n/**\nAn instance of this is passed to completion source functions.\n*/\nclass CompletionContext {\n    /**\n    Create a new completion context. (Mostly useful for testing\n    completion sources—in the editor, the extension will create\n    these for you.)\n    */\n    constructor(\n    /**\n    The editor state that the completion happens in.\n    */\n    state, \n    /**\n    The position at which the completion is happening.\n    */\n    pos, \n    /**\n    Indicates whether completion was activated explicitly, or\n    implicitly by typing. The usual way to respond to this is to\n    only return completions when either there is part of a\n    completable entity before the cursor, or `explicit` is true.\n    */\n    explicit) {\n        this.state = state;\n        this.pos = pos;\n        this.explicit = explicit;\n        /**\n        @internal\n        */\n        this.abortListeners = [];\n    }\n    /**\n    Get the extent, content, and (if there is a token) type of the\n    token before `this.pos`.\n    */\n    tokenBefore(types) {\n        let token = syntaxTree(this.state).resolveInner(this.pos, -1);\n        while (token && types.indexOf(token.name) < 0)\n            token = token.parent;\n        return token ? { from: token.from, to: this.pos,\n            text: this.state.sliceDoc(token.from, this.pos),\n            type: token.type } : null;\n    }\n    /**\n    Get the match of the given expression directly before the\n    cursor.\n    */\n    matchBefore(expr) {\n        let line = this.state.doc.lineAt(this.pos);\n        let start = Math.max(line.from, this.pos - 250);\n        let str = line.text.slice(start - line.from, this.pos - line.from);\n        let found = str.search(ensureAnchor(expr, false));\n        return found < 0 ? null : { from: start + found, to: this.pos, text: str.slice(found) };\n    }\n    /**\n    Yields true when the query has been aborted. Can be useful in\n    asynchronous queries to avoid doing work that will be ignored.\n    */\n    get aborted() { return this.abortListeners == null; }\n    /**\n    Allows you to register abort handlers, which will be called when\n    the query is\n    [aborted](https://codemirror.net/6/docs/ref/#autocomplete.CompletionContext.aborted).\n    */\n    addEventListener(type, listener) {\n        if (type == \"abort\" && this.abortListeners)\n            this.abortListeners.push(listener);\n    }\n}\nfunction toSet(chars) {\n    let flat = Object.keys(chars).join(\"\");\n    let words = /\\w/.test(flat);\n    if (words)\n        flat = flat.replace(/\\w/g, \"\");\n    return `[${words ? \"\\\\w\" : \"\"}${flat.replace(/[^\\w\\s]/g, \"\\\\$&\")}]`;\n}\nfunction prefixMatch(options) {\n    let first = Object.create(null), rest = Object.create(null);\n    for (let { label } of options) {\n        first[label[0]] = true;\n        for (let i = 1; i < label.length; i++)\n            rest[label[i]] = true;\n    }\n    let source = toSet(first) + toSet(rest) + \"*$\";\n    return [new RegExp(\"^\" + source), new RegExp(source)];\n}\n/**\nGiven a a fixed array of options, return an autocompleter that\ncompletes them.\n*/\nfunction completeFromList(list) {\n    let options = list.map(o => typeof o == \"string\" ? { label: o } : o);\n    let [span, match] = options.every(o => /^\\w+$/.test(o.label)) ? [/\\w*$/, /\\w+$/] : prefixMatch(options);\n    return (context) => {\n        let token = context.matchBefore(match);\n        return token || context.explicit ? { from: token ? token.from : context.pos, options, span } : null;\n    };\n}\n/**\nWrap the given completion source so that it will only fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent)\n            if (nodes.indexOf(pos.name) > -1)\n                return source(context);\n        return null;\n    };\n}\n/**\nWrap the given completion source so that it will not fire when the\ncursor is in a syntax node with one of the given names.\n*/\nfunction ifNotIn(nodes, source) {\n    return (context) => {\n        for (let pos = syntaxTree(context.state).resolveInner(context.pos, -1); pos; pos = pos.parent)\n            if (nodes.indexOf(pos.name) > -1)\n                return null;\n        return source(context);\n    };\n}\nclass Option {\n    constructor(completion, source, match) {\n        this.completion = completion;\n        this.source = source;\n        this.match = match;\n    }\n}\nfunction cur(state) { return state.selection.main.head; }\n// Make sure the given regexp has a $ at its end and, if `start` is\n// true, a ^ at its start.\nfunction ensureAnchor(expr, start) {\n    var _a;\n    let { source } = expr;\n    let addStart = start && source[0] != \"^\", addEnd = source[source.length - 1] != \"$\";\n    if (!addStart && !addEnd)\n        return expr;\n    return new RegExp(`${addStart ? \"^\" : \"\"}(?:${source})${addEnd ? \"$\" : \"\"}`, (_a = expr.flags) !== null && _a !== void 0 ? _a : (expr.ignoreCase ? \"i\" : \"\"));\n}\n/**\nThis annotation is added to transactions that are produced by\npicking a completion.\n*/\nconst pickedCompletion = /*@__PURE__*/Annotation.define();\nfunction applyCompletion(view, option) {\n    let apply = option.completion.apply || option.completion.label;\n    let result = option.source;\n    if (typeof apply == \"string\") {\n        view.dispatch({\n            changes: { from: result.from, to: result.to, insert: apply },\n            selection: { anchor: result.from + apply.length },\n            userEvent: \"input.complete\",\n            annotations: pickedCompletion.of(option.completion)\n        });\n    }\n    else {\n        apply(view, option.completion, result.from, result.to);\n    }\n}\nconst SourceCache = /*@__PURE__*/new WeakMap();\nfunction asSource(source) {\n    if (!Array.isArray(source))\n        return source;\n    let known = SourceCache.get(source);\n    if (!known)\n        SourceCache.set(source, known = completeFromList(source));\n    return known;\n}\n\n// A pattern matcher for fuzzy completion matching. Create an instance\n// once for a pattern, and then use that to match any number of\n// completions.\nclass FuzzyMatcher {\n    constructor(pattern) {\n        this.pattern = pattern;\n        this.chars = [];\n        this.folded = [];\n        // Buffers reused by calls to `match` to track matched character\n        // positions.\n        this.any = [];\n        this.precise = [];\n        this.byWord = [];\n        for (let p = 0; p < pattern.length;) {\n            let char = codePointAt(pattern, p), size = codePointSize(char);\n            this.chars.push(char);\n            let part = pattern.slice(p, p + size), upper = part.toUpperCase();\n            this.folded.push(codePointAt(upper == part ? part.toLowerCase() : upper, 0));\n            p += size;\n        }\n        this.astral = pattern.length != this.chars.length;\n    }\n    // Matches a given word (completion) against the pattern (input).\n    // Will return null for no match, and otherwise an array that starts\n    // with the match score, followed by any number of `from, to` pairs\n    // indicating the matched parts of `word`.\n    //\n    // The score is a number that is more negative the worse the match\n    // is. See `Penalty` above.\n    match(word) {\n        if (this.pattern.length == 0)\n            return [0];\n        if (word.length < this.pattern.length)\n            return null;\n        let { chars, folded, any, precise, byWord } = this;\n        // For single-character queries, only match when they occur right\n        // at the start\n        if (chars.length == 1) {\n            let first = codePointAt(word, 0);\n            return first == chars[0] ? [0, 0, codePointSize(first)]\n                : first == folded[0] ? [-200 /* CaseFold */, 0, codePointSize(first)] : null;\n        }\n        let direct = word.indexOf(this.pattern);\n        if (direct == 0)\n            return [0, 0, this.pattern.length];\n        let len = chars.length, anyTo = 0;\n        if (direct < 0) {\n            for (let i = 0, e = Math.min(word.length, 200); i < e && anyTo < len;) {\n                let next = codePointAt(word, i);\n                if (next == chars[anyTo] || next == folded[anyTo])\n                    any[anyTo++] = i;\n                i += codePointSize(next);\n            }\n            // No match, exit immediately\n            if (anyTo < len)\n                return null;\n        }\n        // This tracks the extent of the precise (non-folded, not\n        // necessarily adjacent) match\n        let preciseTo = 0;\n        // Tracks whether there is a match that hits only characters that\n        // appear to be starting words. `byWordFolded` is set to true when\n        // a case folded character is encountered in such a match\n        let byWordTo = 0, byWordFolded = false;\n        // If we've found a partial adjacent match, these track its state\n        let adjacentTo = 0, adjacentStart = -1, adjacentEnd = -1;\n        let hasLower = /[a-z]/.test(word);\n        // Go over the option's text, scanning for the various kinds of matches\n        for (let i = 0, e = Math.min(word.length, 200), prevType = 0 /* NonWord */; i < e && byWordTo < len;) {\n            let next = codePointAt(word, i);\n            if (direct < 0) {\n                if (preciseTo < len && next == chars[preciseTo])\n                    precise[preciseTo++] = i;\n                if (adjacentTo < len) {\n                    if (next == chars[adjacentTo] || next == folded[adjacentTo]) {\n                        if (adjacentTo == 0)\n                            adjacentStart = i;\n                        adjacentEnd = i + 1;\n                        adjacentTo++;\n                    }\n                    else {\n                        adjacentTo = 0;\n                    }\n                }\n            }\n            let ch, type = next < 0xff\n                ? (next >= 48 && next <= 57 || next >= 97 && next <= 122 ? 2 /* Lower */ : next >= 65 && next <= 90 ? 1 /* Upper */ : 0 /* NonWord */)\n                : ((ch = fromCodePoint(next)) != ch.toLowerCase() ? 1 /* Upper */ : ch != ch.toUpperCase() ? 2 /* Lower */ : 0 /* NonWord */);\n            if ((type == 1 /* Upper */ && hasLower || prevType == 0 /* NonWord */ && type != 0 /* NonWord */) &&\n                (chars[byWordTo] == next || (folded[byWordTo] == next && (byWordFolded = true))))\n                byWord[byWordTo++] = i;\n            prevType = type;\n            i += codePointSize(next);\n        }\n        if (byWordTo == len && byWord[0] == 0)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0), byWord, word);\n        if (adjacentTo == len && adjacentStart == 0)\n            return [-200 /* CaseFold */, 0, adjacentEnd];\n        if (direct > -1)\n            return [-700 /* NotStart */, direct, direct + this.pattern.length];\n        if (adjacentTo == len)\n            return [-200 /* CaseFold */ + -700 /* NotStart */, adjacentStart, adjacentEnd];\n        if (byWordTo == len)\n            return this.result(-100 /* ByWord */ + (byWordFolded ? -200 /* CaseFold */ : 0) + -700 /* NotStart */, byWord, word);\n        return chars.length == 2 ? null : this.result((any[0] ? -700 /* NotStart */ : 0) + -200 /* CaseFold */ + -1100 /* Gap */, any, word);\n    }\n    result(score, positions, word) {\n        let result = [score], i = 1;\n        for (let pos of positions) {\n            let to = pos + (this.astral ? codePointSize(codePointAt(word, pos)) : 1);\n            if (i > 1 && result[i - 1] == pos)\n                result[i - 1] = to;\n            else {\n                result[i++] = pos;\n                result[i++] = to;\n            }\n        }\n        return result;\n    }\n}\n\nconst completionConfig = /*@__PURE__*/Facet.define({\n    combine(configs) {\n        return combineConfig(configs, {\n            activateOnTyping: true,\n            override: null,\n            maxRenderedOptions: 100,\n            defaultKeymap: true,\n            optionClass: () => \"\",\n            aboveCursor: false,\n            icons: true,\n            addToOptions: []\n        }, {\n            defaultKeymap: (a, b) => a && b,\n            icons: (a, b) => a && b,\n            optionClass: (a, b) => c => joinClass(a(c), b(c)),\n            addToOptions: (a, b) => a.concat(b)\n        });\n    }\n});\nfunction joinClass(a, b) {\n    return a ? b ? a + \" \" + b : a : b;\n}\n\nfunction optionContent(config) {\n    let content = config.addToOptions.slice();\n    if (config.icons)\n        content.push({\n            render(completion) {\n                let icon = document.createElement(\"div\");\n                icon.classList.add(\"cm-completionIcon\");\n                if (completion.type)\n                    icon.classList.add(...completion.type.split(/\\s+/g).map(cls => \"cm-completionIcon-\" + cls));\n                icon.setAttribute(\"aria-hidden\", \"true\");\n                return icon;\n            },\n            position: 20\n        });\n    content.push({\n        render(completion, _s, match) {\n            let labelElt = document.createElement(\"span\");\n            labelElt.className = \"cm-completionLabel\";\n            let { label } = completion, off = 0;\n            for (let j = 1; j < match.length;) {\n                let from = match[j++], to = match[j++];\n                if (from > off)\n                    labelElt.appendChild(document.createTextNode(label.slice(off, from)));\n                let span = labelElt.appendChild(document.createElement(\"span\"));\n                span.appendChild(document.createTextNode(label.slice(from, to)));\n                span.className = \"cm-completionMatchedText\";\n                off = to;\n            }\n            if (off < label.length)\n                labelElt.appendChild(document.createTextNode(label.slice(off)));\n            return labelElt;\n        },\n        position: 50\n    }, {\n        render(completion) {\n            if (!completion.detail)\n                return null;\n            let detailElt = document.createElement(\"span\");\n            detailElt.className = \"cm-completionDetail\";\n            detailElt.textContent = completion.detail;\n            return detailElt;\n        },\n        position: 80\n    });\n    return content.sort((a, b) => a.position - b.position).map(a => a.render);\n}\nfunction createInfoDialog(option, view) {\n    let dom = document.createElement(\"div\");\n    dom.className = \"cm-tooltip cm-completionInfo\";\n    let { info } = option.completion;\n    if (typeof info == \"string\") {\n        dom.textContent = info;\n    }\n    else {\n        let content = info(option.completion);\n        if (content.then)\n            content.then(node => dom.appendChild(node), e => logException(view.state, e, \"completion info\"));\n        else\n            dom.appendChild(content);\n    }\n    return dom;\n}\nfunction rangeAroundSelected(total, selected, max) {\n    if (total <= max)\n        return { from: 0, to: total };\n    if (selected <= (total >> 1)) {\n        let off = Math.floor(selected / max);\n        return { from: off * max, to: (off + 1) * max };\n    }\n    let off = Math.floor((total - selected) / max);\n    return { from: total - (off + 1) * max, to: total - off * max };\n}\nclass CompletionTooltip {\n    constructor(view, stateField) {\n        this.view = view;\n        this.stateField = stateField;\n        this.info = null;\n        this.placeInfo = {\n            read: () => this.measureInfo(),\n            write: (pos) => this.positionInfo(pos),\n            key: this\n        };\n        let cState = view.state.field(stateField);\n        let { options, selected } = cState.open;\n        let config = view.state.facet(completionConfig);\n        this.optionContent = optionContent(config);\n        this.optionClass = config.optionClass;\n        this.range = rangeAroundSelected(options.length, selected, config.maxRenderedOptions);\n        this.dom = document.createElement(\"div\");\n        this.dom.className = \"cm-tooltip-autocomplete\";\n        this.dom.addEventListener(\"mousedown\", (e) => {\n            for (let dom = e.target, match; dom && dom != this.dom; dom = dom.parentNode) {\n                if (dom.nodeName == \"LI\" && (match = /-(\\d+)$/.exec(dom.id)) && +match[1] < options.length) {\n                    applyCompletion(view, options[+match[1]]);\n                    e.preventDefault();\n                    return;\n                }\n            }\n        });\n        this.list = this.dom.appendChild(this.createListBox(options, cState.id, this.range));\n        this.list.addEventListener(\"scroll\", () => {\n            if (this.info)\n                this.view.requestMeasure(this.placeInfo);\n        });\n    }\n    mount() { this.updateSel(); }\n    update(update) {\n        if (update.state.field(this.stateField) != update.startState.field(this.stateField))\n            this.updateSel();\n    }\n    positioned() {\n        if (this.info)\n            this.view.requestMeasure(this.placeInfo);\n    }\n    updateSel() {\n        let cState = this.view.state.field(this.stateField), open = cState.open;\n        if (open.selected < this.range.from || open.selected >= this.range.to) {\n            this.range = rangeAroundSelected(open.options.length, open.selected, this.view.state.facet(completionConfig).maxRenderedOptions);\n            this.list.remove();\n            this.list = this.dom.appendChild(this.createListBox(open.options, cState.id, this.range));\n            this.list.addEventListener(\"scroll\", () => {\n                if (this.info)\n                    this.view.requestMeasure(this.placeInfo);\n            });\n        }\n        if (this.updateSelectedOption(open.selected)) {\n            if (this.info) {\n                this.info.remove();\n                this.info = null;\n            }\n            let option = open.options[open.selected];\n            if (option.completion.info) {\n                this.info = this.dom.appendChild(createInfoDialog(option, this.view));\n                this.view.requestMeasure(this.placeInfo);\n            }\n        }\n    }\n    updateSelectedOption(selected) {\n        let set = null;\n        for (let opt = this.list.firstChild, i = this.range.from; opt; opt = opt.nextSibling, i++) {\n            if (i == selected) {\n                if (!opt.hasAttribute(\"aria-selected\")) {\n                    opt.setAttribute(\"aria-selected\", \"true\");\n                    set = opt;\n                }\n            }\n            else {\n                if (opt.hasAttribute(\"aria-selected\"))\n                    opt.removeAttribute(\"aria-selected\");\n            }\n        }\n        if (set)\n            scrollIntoView(this.list, set);\n        return set;\n    }\n    measureInfo() {\n        let sel = this.dom.querySelector(\"[aria-selected]\");\n        if (!sel || !this.info)\n            return null;\n        let rect = this.dom.getBoundingClientRect(), infoRect = this.info.getBoundingClientRect();\n        if (rect.top > innerHeight - 10 || rect.bottom < 10)\n            return null;\n        let top = Math.max(0, Math.min(sel.getBoundingClientRect().top, innerHeight - infoRect.height)) - rect.top;\n        let left = this.view.textDirection == Direction.RTL;\n        let spaceLeft = rect.left, spaceRight = innerWidth - rect.right;\n        if (left && spaceLeft < Math.min(infoRect.width, spaceRight))\n            left = false;\n        else if (!left && spaceRight < Math.min(infoRect.width, spaceLeft))\n            left = true;\n        return { top, left };\n    }\n    positionInfo(pos) {\n        if (this.info) {\n            this.info.style.top = (pos ? pos.top : -1e6) + \"px\";\n            if (pos) {\n                this.info.classList.toggle(\"cm-completionInfo-left\", pos.left);\n                this.info.classList.toggle(\"cm-completionInfo-right\", !pos.left);\n            }\n        }\n    }\n    createListBox(options, id, range) {\n        const ul = document.createElement(\"ul\");\n        ul.id = id;\n        ul.setAttribute(\"role\", \"listbox\");\n        for (let i = range.from; i < range.to; i++) {\n            let { completion, match } = options[i];\n            const li = ul.appendChild(document.createElement(\"li\"));\n            li.id = id + \"-\" + i;\n            li.setAttribute(\"role\", \"option\");\n            let cls = this.optionClass(completion);\n            if (cls)\n                li.className = cls;\n            for (let source of this.optionContent) {\n                let node = source(completion, this.view.state, match);\n                if (node)\n                    li.appendChild(node);\n            }\n        }\n        if (range.from)\n            ul.classList.add(\"cm-completionListIncompleteTop\");\n        if (range.to < options.length)\n            ul.classList.add(\"cm-completionListIncompleteBottom\");\n        return ul;\n    }\n}\n// We allocate a new function instance every time the completion\n// changes to force redrawing/repositioning of the tooltip\nfunction completionTooltip(stateField) {\n    return (view) => new CompletionTooltip(view, stateField);\n}\nfunction scrollIntoView(container, element) {\n    let parent = container.getBoundingClientRect();\n    let self = element.getBoundingClientRect();\n    if (self.top < parent.top)\n        container.scrollTop -= parent.top - self.top;\n    else if (self.bottom > parent.bottom)\n        container.scrollTop += self.bottom - parent.bottom;\n}\n\nconst MaxOptions = 300;\n// Used to pick a preferred option when two options with the same\n// label occur in the result.\nfunction score(option) {\n    return (option.boost || 0) * 100 + (option.apply ? 10 : 0) + (option.info ? 5 : 0) +\n        (option.type ? 1 : 0);\n}\nfunction sortOptions(active, state) {\n    let options = [], i = 0;\n    for (let a of active)\n        if (a.hasResult()) {\n            if (a.result.filter === false) {\n                for (let option of a.result.options)\n                    options.push(new Option(option, a, [1e9 - i++]));\n            }\n            else {\n                let matcher = new FuzzyMatcher(state.sliceDoc(a.from, a.to)), match;\n                for (let option of a.result.options)\n                    if (match = matcher.match(option.label)) {\n                        if (option.boost != null)\n                            match[0] += option.boost;\n                        options.push(new Option(option, a, match));\n                    }\n            }\n        }\n    options.sort(cmpOption);\n    let result = [], prev = null;\n    for (let opt of options.sort(cmpOption)) {\n        if (result.length == MaxOptions)\n            break;\n        if (!prev || prev.label != opt.completion.label || prev.detail != opt.completion.detail ||\n            prev.type != opt.completion.type || prev.apply != opt.completion.apply)\n            result.push(opt);\n        else if (score(opt.completion) > score(prev))\n            result[result.length - 1] = opt;\n        prev = opt.completion;\n    }\n    return result;\n}\nclass CompletionDialog {\n    constructor(options, attrs, tooltip, timestamp, selected) {\n        this.options = options;\n        this.attrs = attrs;\n        this.tooltip = tooltip;\n        this.timestamp = timestamp;\n        this.selected = selected;\n    }\n    setSelected(selected, id) {\n        return selected == this.selected || selected >= this.options.length ? this\n            : new CompletionDialog(this.options, makeAttrs(id, selected), this.tooltip, this.timestamp, selected);\n    }\n    static build(active, state, id, prev, conf) {\n        let options = sortOptions(active, state);\n        if (!options.length)\n            return null;\n        let selected = 0;\n        if (prev && prev.selected) {\n            let selectedValue = prev.options[prev.selected].completion;\n            for (let i = 0; i < options.length && !selected; i++) {\n                if (options[i].completion == selectedValue)\n                    selected = i;\n            }\n        }\n        return new CompletionDialog(options, makeAttrs(id, selected), {\n            pos: active.reduce((a, b) => b.hasResult() ? Math.min(a, b.from) : a, 1e8),\n            create: completionTooltip(completionState),\n            above: conf.aboveCursor,\n        }, prev ? prev.timestamp : Date.now(), selected);\n    }\n    map(changes) {\n        return new CompletionDialog(this.options, this.attrs, Object.assign(Object.assign({}, this.tooltip), { pos: changes.mapPos(this.tooltip.pos) }), this.timestamp, this.selected);\n    }\n}\nclass CompletionState {\n    constructor(active, id, open) {\n        this.active = active;\n        this.id = id;\n        this.open = open;\n    }\n    static start() {\n        return new CompletionState(none, \"cm-ac-\" + Math.floor(Math.random() * 2e6).toString(36), null);\n    }\n    update(tr) {\n        let { state } = tr, conf = state.facet(completionConfig);\n        let sources = conf.override ||\n            state.languageDataAt(\"autocomplete\", cur(state)).map(asSource);\n        let active = sources.map(source => {\n            let value = this.active.find(s => s.source == source) ||\n                new ActiveSource(source, this.active.some(a => a.state != 0 /* Inactive */) ? 1 /* Pending */ : 0 /* Inactive */);\n            return value.update(tr, conf);\n        });\n        if (active.length == this.active.length && active.every((a, i) => a == this.active[i]))\n            active = this.active;\n        let open = tr.selection || active.some(a => a.hasResult() && tr.changes.touchesRange(a.from, a.to)) ||\n            !sameResults(active, this.active) ? CompletionDialog.build(active, state, this.id, this.open, conf)\n            : this.open && tr.docChanged ? this.open.map(tr.changes) : this.open;\n        if (!open && active.every(a => a.state != 1 /* Pending */) && active.some(a => a.hasResult()))\n            active = active.map(a => a.hasResult() ? new ActiveSource(a.source, 0 /* Inactive */) : a);\n        for (let effect of tr.effects)\n            if (effect.is(setSelectedEffect))\n                open = open && open.setSelected(effect.value, this.id);\n        return active == this.active && open == this.open ? this : new CompletionState(active, this.id, open);\n    }\n    get tooltip() { return this.open ? this.open.tooltip : null; }\n    get attrs() { return this.open ? this.open.attrs : baseAttrs; }\n}\nfunction sameResults(a, b) {\n    if (a == b)\n        return true;\n    for (let iA = 0, iB = 0;;) {\n        while (iA < a.length && !a[iA].hasResult)\n            iA++;\n        while (iB < b.length && !b[iB].hasResult)\n            iB++;\n        let endA = iA == a.length, endB = iB == b.length;\n        if (endA || endB)\n            return endA == endB;\n        if (a[iA++].result != b[iB++].result)\n            return false;\n    }\n}\nconst baseAttrs = {\n    \"aria-autocomplete\": \"list\",\n    \"aria-expanded\": \"false\"\n};\nfunction makeAttrs(id, selected) {\n    return {\n        \"aria-autocomplete\": \"list\",\n        \"aria-expanded\": \"true\",\n        \"aria-activedescendant\": id + \"-\" + selected,\n        \"aria-controls\": id\n    };\n}\nconst none = [];\nfunction cmpOption(a, b) {\n    let dScore = b.match[0] - a.match[0];\n    if (dScore)\n        return dScore;\n    return a.completion.label.localeCompare(b.completion.label);\n}\nfunction getUserEvent(tr) {\n    return tr.isUserEvent(\"input.type\") ? \"input\" : tr.isUserEvent(\"delete.backward\") ? \"delete\" : null;\n}\nclass ActiveSource {\n    constructor(source, state, explicitPos = -1) {\n        this.source = source;\n        this.state = state;\n        this.explicitPos = explicitPos;\n    }\n    hasResult() { return false; }\n    update(tr, conf) {\n        let event = getUserEvent(tr), value = this;\n        if (event)\n            value = value.handleUserEvent(tr, event, conf);\n        else if (tr.docChanged)\n            value = value.handleChange(tr);\n        else if (tr.selection && value.state != 0 /* Inactive */)\n            value = new ActiveSource(value.source, 0 /* Inactive */);\n        for (let effect of tr.effects) {\n            if (effect.is(startCompletionEffect))\n                value = new ActiveSource(value.source, 1 /* Pending */, effect.value ? cur(tr.state) : -1);\n            else if (effect.is(closeCompletionEffect))\n                value = new ActiveSource(value.source, 0 /* Inactive */);\n            else if (effect.is(setActiveEffect))\n                for (let active of effect.value)\n                    if (active.source == value.source)\n                        value = active;\n        }\n        return value;\n    }\n    handleUserEvent(tr, type, conf) {\n        return type == \"delete\" || !conf.activateOnTyping ? this.map(tr.changes) : new ActiveSource(this.source, 1 /* Pending */);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(cur(tr.startState)) ? new ActiveSource(this.source, 0 /* Inactive */) : this.map(tr.changes);\n    }\n    map(changes) {\n        return changes.empty || this.explicitPos < 0 ? this : new ActiveSource(this.source, this.state, changes.mapPos(this.explicitPos));\n    }\n}\nclass ActiveResult extends ActiveSource {\n    constructor(source, explicitPos, result, from, to, span) {\n        super(source, 2 /* Result */, explicitPos);\n        this.result = result;\n        this.from = from;\n        this.to = to;\n        this.span = span;\n    }\n    hasResult() { return true; }\n    handleUserEvent(tr, type, conf) {\n        let from = tr.changes.mapPos(this.from), to = tr.changes.mapPos(this.to, 1);\n        let pos = cur(tr.state);\n        if ((this.explicitPos > -1 ? pos < from : pos <= from) || pos > to)\n            return new ActiveSource(this.source, type == \"input\" && conf.activateOnTyping ? 1 /* Pending */ : 0 /* Inactive */);\n        let explicitPos = this.explicitPos < 0 ? -1 : tr.changes.mapPos(this.explicitPos);\n        if (this.span && (from == to || this.span.test(tr.state.sliceDoc(from, to))))\n            return new ActiveResult(this.source, explicitPos, this.result, from, to, this.span);\n        return new ActiveSource(this.source, 1 /* Pending */, explicitPos);\n    }\n    handleChange(tr) {\n        return tr.changes.touchesRange(this.from, this.to) ? new ActiveSource(this.source, 0 /* Inactive */) : this.map(tr.changes);\n    }\n    map(mapping) {\n        return mapping.empty ? this :\n            new ActiveResult(this.source, this.explicitPos < 0 ? -1 : mapping.mapPos(this.explicitPos), this.result, mapping.mapPos(this.from), mapping.mapPos(this.to, 1), this.span);\n    }\n}\nconst startCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst closeCompletionEffect = /*@__PURE__*/StateEffect.define();\nconst setActiveEffect = /*@__PURE__*/StateEffect.define({\n    map(sources, mapping) { return sources.map(s => s.map(mapping)); }\n});\nconst setSelectedEffect = /*@__PURE__*/StateEffect.define();\nconst completionState = /*@__PURE__*/StateField.define({\n    create() { return CompletionState.start(); },\n    update(value, tr) { return value.update(tr); },\n    provide: f => [\n        showTooltip.from(f, val => val.tooltip),\n        EditorView.contentAttributes.from(f, state => state.attrs)\n    ]\n});\n\nconst CompletionInteractMargin = 75;\n/**\nReturns a command that moves the completion selection forward or\nbackward by the given amount.\n*/\nfunction moveCompletionSelection(forward, by = \"option\") {\n    return (view) => {\n        let cState = view.state.field(completionState, false);\n        if (!cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n            return false;\n        let step = 1, tooltip;\n        if (by == \"page\" && (tooltip = view.dom.querySelector(\".cm-tooltip-autocomplete\")))\n            step = Math.max(2, Math.floor(tooltip.offsetHeight / tooltip.firstChild.offsetHeight));\n        let selected = cState.open.selected + step * (forward ? 1 : -1), { length } = cState.open.options;\n        if (selected < 0)\n            selected = by == \"page\" ? 0 : length - 1;\n        else if (selected >= length)\n            selected = by == \"page\" ? length - 1 : 0;\n        view.dispatch({ effects: setSelectedEffect.of(selected) });\n        return true;\n    };\n}\n/**\nAccept the current completion.\n*/\nconst acceptCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (view.state.readOnly || !cState || !cState.open || Date.now() - cState.open.timestamp < CompletionInteractMargin)\n        return false;\n    applyCompletion(view, cState.open.options[cState.open.selected]);\n    return true;\n};\n/**\nExplicitly start autocompletion.\n*/\nconst startCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState)\n        return false;\n    view.dispatch({ effects: startCompletionEffect.of(true) });\n    return true;\n};\n/**\nClose the currently active completion.\n*/\nconst closeCompletion = (view) => {\n    let cState = view.state.field(completionState, false);\n    if (!cState || !cState.active.some(a => a.state != 0 /* Inactive */))\n        return false;\n    view.dispatch({ effects: closeCompletionEffect.of(null) });\n    return true;\n};\nclass RunningQuery {\n    constructor(active, context) {\n        this.active = active;\n        this.context = context;\n        this.time = Date.now();\n        this.updates = [];\n        // Note that 'undefined' means 'not done yet', whereas 'null' means\n        // 'query returned null'.\n        this.done = undefined;\n    }\n}\nconst DebounceTime = 50, MaxUpdateCount = 50, MinAbortTime = 1000;\nconst completionPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.debounceUpdate = -1;\n        this.running = [];\n        this.debounceAccept = -1;\n        this.composing = 0 /* None */;\n        for (let active of view.state.field(completionState).active)\n            if (active.state == 1 /* Pending */)\n                this.startQuery(active);\n    }\n    update(update) {\n        let cState = update.state.field(completionState);\n        if (!update.selectionSet && !update.docChanged && update.startState.field(completionState) == cState)\n            return;\n        let doesReset = update.transactions.some(tr => {\n            return (tr.selection || tr.docChanged) && !getUserEvent(tr);\n        });\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (doesReset ||\n                query.updates.length + update.transactions.length > MaxUpdateCount && query.time - Date.now() > MinAbortTime) {\n                for (let handler of query.context.abortListeners) {\n                    try {\n                        handler();\n                    }\n                    catch (e) {\n                        logException(this.view.state, e);\n                    }\n                }\n                query.context.abortListeners = null;\n                this.running.splice(i--, 1);\n            }\n            else {\n                query.updates.push(...update.transactions);\n            }\n        }\n        if (this.debounceUpdate > -1)\n            clearTimeout(this.debounceUpdate);\n        this.debounceUpdate = cState.active.some(a => a.state == 1 /* Pending */ && !this.running.some(q => q.active.source == a.source))\n            ? setTimeout(() => this.startUpdate(), DebounceTime) : -1;\n        if (this.composing != 0 /* None */)\n            for (let tr of update.transactions) {\n                if (getUserEvent(tr) == \"input\")\n                    this.composing = 2 /* Changed */;\n                else if (this.composing == 2 /* Changed */ && tr.selection)\n                    this.composing = 3 /* ChangedAndMoved */;\n            }\n    }\n    startUpdate() {\n        this.debounceUpdate = -1;\n        let { state } = this.view, cState = state.field(completionState);\n        for (let active of cState.active) {\n            if (active.state == 1 /* Pending */ && !this.running.some(r => r.active.source == active.source))\n                this.startQuery(active);\n        }\n    }\n    startQuery(active) {\n        let { state } = this.view, pos = cur(state);\n        let context = new CompletionContext(state, pos, active.explicitPos == pos);\n        let pending = new RunningQuery(active, context);\n        this.running.push(pending);\n        Promise.resolve(active.source(context)).then(result => {\n            if (!pending.context.aborted) {\n                pending.done = result || null;\n                this.scheduleAccept();\n            }\n        }, err => {\n            this.view.dispatch({ effects: closeCompletionEffect.of(null) });\n            logException(this.view.state, err);\n        });\n    }\n    scheduleAccept() {\n        if (this.running.every(q => q.done !== undefined))\n            this.accept();\n        else if (this.debounceAccept < 0)\n            this.debounceAccept = setTimeout(() => this.accept(), DebounceTime);\n    }\n    // For each finished query in this.running, try to create a result\n    // or, if appropriate, restart the query.\n    accept() {\n        var _a;\n        if (this.debounceAccept > -1)\n            clearTimeout(this.debounceAccept);\n        this.debounceAccept = -1;\n        let updated = [];\n        let conf = this.view.state.facet(completionConfig);\n        for (let i = 0; i < this.running.length; i++) {\n            let query = this.running[i];\n            if (query.done === undefined)\n                continue;\n            this.running.splice(i--, 1);\n            if (query.done) {\n                let active = new ActiveResult(query.active.source, query.active.explicitPos, query.done, query.done.from, (_a = query.done.to) !== null && _a !== void 0 ? _a : cur(query.updates.length ? query.updates[0].startState : this.view.state), query.done.span && query.done.filter !== false ? ensureAnchor(query.done.span, true) : null);\n                // Replay the transactions that happened since the start of\n                // the request and see if that preserves the result\n                for (let tr of query.updates)\n                    active = active.update(tr, conf);\n                if (active.hasResult()) {\n                    updated.push(active);\n                    continue;\n                }\n            }\n            let current = this.view.state.field(completionState).active.find(a => a.source == query.active.source);\n            if (current && current.state == 1 /* Pending */) {\n                if (query.done == null) {\n                    // Explicitly failed. Should clear the pending status if it\n                    // hasn't been re-set in the meantime.\n                    let active = new ActiveSource(query.active.source, 0 /* Inactive */);\n                    for (let tr of query.updates)\n                        active = active.update(tr, conf);\n                    if (active.state != 1 /* Pending */)\n                        updated.push(active);\n                }\n                else {\n                    // Cleared by subsequent transactions. Restart.\n                    this.startQuery(current);\n                }\n            }\n        }\n        if (updated.length)\n            this.view.dispatch({ effects: setActiveEffect.of(updated) });\n    }\n}, {\n    eventHandlers: {\n        compositionstart() {\n            this.composing = 1 /* Started */;\n        },\n        compositionend() {\n            if (this.composing == 3 /* ChangedAndMoved */) {\n                // Safari fires compositionend events synchronously, possibly\n                // from inside an update, so dispatch asynchronously to avoid reentrancy\n                setTimeout(() => this.view.dispatch({ effects: startCompletionEffect.of(false) }), 20);\n            }\n            this.composing = 0 /* None */;\n        }\n    }\n});\n\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-tooltip.cm-tooltip-autocomplete\": {\n        \"& > ul\": {\n            fontFamily: \"monospace\",\n            whiteSpace: \"nowrap\",\n            overflow: \"hidden auto\",\n            maxWidth_fallback: \"700px\",\n            maxWidth: \"min(700px, 95vw)\",\n            minWidth: \"250px\",\n            maxHeight: \"10em\",\n            listStyle: \"none\",\n            margin: 0,\n            padding: 0,\n            \"& > li\": {\n                overflowX: \"hidden\",\n                textOverflow: \"ellipsis\",\n                cursor: \"pointer\",\n                padding: \"1px 3px\",\n                lineHeight: 1.2\n            },\n        }\n    },\n    \"&light .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#39e\",\n        color: \"white\",\n    },\n    \"&dark .cm-tooltip-autocomplete ul li[aria-selected]\": {\n        background: \"#347\",\n        color: \"white\",\n    },\n    \".cm-completionListIncompleteTop:before, .cm-completionListIncompleteBottom:after\": {\n        content: '\"···\"',\n        opacity: 0.5,\n        display: \"block\",\n        textAlign: \"center\"\n    },\n    \".cm-tooltip.cm-completionInfo\": {\n        position: \"absolute\",\n        padding: \"3px 9px\",\n        width: \"max-content\",\n        maxWidth: \"300px\",\n    },\n    \".cm-completionInfo.cm-completionInfo-left\": { right: \"100%\" },\n    \".cm-completionInfo.cm-completionInfo-right\": { left: \"100%\" },\n    \"&light .cm-snippetField\": { backgroundColor: \"#00000022\" },\n    \"&dark .cm-snippetField\": { backgroundColor: \"#ffffff22\" },\n    \".cm-snippetFieldPosition\": {\n        verticalAlign: \"text-top\",\n        width: 0,\n        height: \"1.15em\",\n        margin: \"0 -0.7px -.7em\",\n        borderLeft: \"1.4px dotted #888\"\n    },\n    \".cm-completionMatchedText\": {\n        textDecoration: \"underline\"\n    },\n    \".cm-completionDetail\": {\n        marginLeft: \"0.5em\",\n        fontStyle: \"italic\"\n    },\n    \".cm-completionIcon\": {\n        fontSize: \"90%\",\n        width: \".8em\",\n        display: \"inline-block\",\n        textAlign: \"center\",\n        paddingRight: \".6em\",\n        opacity: \"0.6\"\n    },\n    \".cm-completionIcon-function, .cm-completionIcon-method\": {\n        \"&:after\": { content: \"'ƒ'\" }\n    },\n    \".cm-completionIcon-class\": {\n        \"&:after\": { content: \"'○'\" }\n    },\n    \".cm-completionIcon-interface\": {\n        \"&:after\": { content: \"'◌'\" }\n    },\n    \".cm-completionIcon-variable\": {\n        \"&:after\": { content: \"'𝑥'\" }\n    },\n    \".cm-completionIcon-constant\": {\n        \"&:after\": { content: \"'𝐶'\" }\n    },\n    \".cm-completionIcon-type\": {\n        \"&:after\": { content: \"'𝑡'\" }\n    },\n    \".cm-completionIcon-enum\": {\n        \"&:after\": { content: \"'∪'\" }\n    },\n    \".cm-completionIcon-property\": {\n        \"&:after\": { content: \"'□'\" }\n    },\n    \".cm-completionIcon-keyword\": {\n        \"&:after\": { content: \"'🔑\\uFE0E'\" } // Disable emoji rendering\n    },\n    \".cm-completionIcon-namespace\": {\n        \"&:after\": { content: \"'▢'\" }\n    },\n    \".cm-completionIcon-text\": {\n        \"&:after\": { content: \"'abc'\", fontSize: \"50%\", verticalAlign: \"middle\" }\n    }\n});\n\nclass FieldPos {\n    constructor(field, line, from, to) {\n        this.field = field;\n        this.line = line;\n        this.from = from;\n        this.to = to;\n    }\n}\nclass FieldRange {\n    constructor(field, from, to) {\n        this.field = field;\n        this.from = from;\n        this.to = to;\n    }\n    map(changes) {\n        return new FieldRange(this.field, changes.mapPos(this.from, -1), changes.mapPos(this.to, 1));\n    }\n}\nclass Snippet {\n    constructor(lines, fieldPositions) {\n        this.lines = lines;\n        this.fieldPositions = fieldPositions;\n    }\n    instantiate(state, pos) {\n        let text = [], lineStart = [pos];\n        let lineObj = state.doc.lineAt(pos), baseIndent = /^\\s*/.exec(lineObj.text)[0];\n        for (let line of this.lines) {\n            if (text.length) {\n                let indent = baseIndent, tabs = /^\\t*/.exec(line)[0].length;\n                for (let i = 0; i < tabs; i++)\n                    indent += state.facet(indentUnit);\n                lineStart.push(pos + indent.length - tabs);\n                line = indent + line.slice(tabs);\n            }\n            text.push(line);\n            pos += line.length + 1;\n        }\n        let ranges = this.fieldPositions.map(pos => new FieldRange(pos.field, lineStart[pos.line] + pos.from, lineStart[pos.line] + pos.to));\n        return { text, ranges };\n    }\n    static parse(template) {\n        let fields = [];\n        let lines = [], positions = [], m;\n        for (let line of template.split(/\\r\\n?|\\n/)) {\n            while (m = /[#$]\\{(?:(\\d+)(?::([^}]*))?|([^}]*))\\}/.exec(line)) {\n                let seq = m[1] ? +m[1] : null, name = m[2] || m[3] || \"\", found = -1;\n                for (let i = 0; i < fields.length; i++) {\n                    if (seq != null ? fields[i].seq == seq : name ? fields[i].name == name : false)\n                        found = i;\n                }\n                if (found < 0) {\n                    let i = 0;\n                    while (i < fields.length && (seq == null || (fields[i].seq != null && fields[i].seq < seq)))\n                        i++;\n                    fields.splice(i, 0, { seq, name });\n                    found = i;\n                    for (let pos of positions)\n                        if (pos.field >= found)\n                            pos.field++;\n                }\n                positions.push(new FieldPos(found, lines.length, m.index, m.index + name.length));\n                line = line.slice(0, m.index) + name + line.slice(m.index + m[0].length);\n            }\n            lines.push(line);\n        }\n        return new Snippet(lines, positions);\n    }\n}\nlet fieldMarker = /*@__PURE__*/Decoration.widget({ widget: /*@__PURE__*/new class extends WidgetType {\n        toDOM() {\n            let span = document.createElement(\"span\");\n            span.className = \"cm-snippetFieldPosition\";\n            return span;\n        }\n        ignoreEvent() { return false; }\n    } });\nlet fieldRange = /*@__PURE__*/Decoration.mark({ class: \"cm-snippetField\" });\nclass ActiveSnippet {\n    constructor(ranges, active) {\n        this.ranges = ranges;\n        this.active = active;\n        this.deco = Decoration.set(ranges.map(r => (r.from == r.to ? fieldMarker : fieldRange).range(r.from, r.to)));\n    }\n    map(changes) {\n        return new ActiveSnippet(this.ranges.map(r => r.map(changes)), this.active);\n    }\n    selectionInsideField(sel) {\n        return sel.ranges.every(range => this.ranges.some(r => r.field == this.active && r.from <= range.from && r.to >= range.to));\n    }\n}\nconst setActive = /*@__PURE__*/StateEffect.define({\n    map(value, changes) { return value && value.map(changes); }\n});\nconst moveToField = /*@__PURE__*/StateEffect.define();\nconst snippetState = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(value, tr) {\n        for (let effect of tr.effects) {\n            if (effect.is(setActive))\n                return effect.value;\n            if (effect.is(moveToField) && value)\n                return new ActiveSnippet(value.ranges, effect.value);\n        }\n        if (value && tr.docChanged)\n            value = value.map(tr.changes);\n        if (value && tr.selection && !value.selectionInsideField(tr.selection))\n            value = null;\n        return value;\n    },\n    provide: f => EditorView.decorations.from(f, val => val ? val.deco : Decoration.none)\n});\nfunction fieldSelection(ranges, field) {\n    return EditorSelection.create(ranges.filter(r => r.field == field).map(r => EditorSelection.range(r.from, r.to)));\n}\n/**\nConvert a snippet template to a function that can apply it.\nSnippets are written using syntax like this:\n\n    \"for (let ${index} = 0; ${index} < ${end}; ${index}++) {\\n\\t${}\\n}\"\n\nEach `${}` placeholder (you may also use `#{}`) indicates a field\nthat the user can fill in. Its name, if any, will be the default\ncontent for the field.\n\nWhen the snippet is activated by calling the returned function,\nthe code is inserted at the given position. Newlines in the\ntemplate are indented by the indentation of the start line, plus\none [indent unit](https://codemirror.net/6/docs/ref/#language.indentUnit) per tab character after\nthe newline.\n\nOn activation, (all instances of) the first field are selected.\nThe user can move between fields with Tab and Shift-Tab as long as\nthe fields are active. Moving to the last field or moving the\ncursor out of the current field deactivates the fields.\n\nThe order of fields defaults to textual order, but you can add\nnumbers to placeholders (`${1}` or `${1:defaultText}`) to provide\na custom order.\n*/\nfunction snippet(template) {\n    let snippet = Snippet.parse(template);\n    return (editor, _completion, from, to) => {\n        let { text, ranges } = snippet.instantiate(editor.state, from);\n        let spec = { changes: { from, to, insert: Text.of(text) } };\n        if (ranges.length)\n            spec.selection = fieldSelection(ranges, 0);\n        if (ranges.length > 1) {\n            let active = new ActiveSnippet(ranges, 0);\n            let effects = spec.effects = [setActive.of(active)];\n            if (editor.state.field(snippetState, false) === undefined)\n                effects.push(StateEffect.appendConfig.of([snippetState, addSnippetKeymap, snippetPointerHandler, baseTheme]));\n        }\n        editor.dispatch(editor.state.update(spec));\n    };\n}\nfunction moveField(dir) {\n    return ({ state, dispatch }) => {\n        let active = state.field(snippetState, false);\n        if (!active || dir < 0 && active.active == 0)\n            return false;\n        let next = active.active + dir, last = dir > 0 && !active.ranges.some(r => r.field == next + dir);\n        dispatch(state.update({\n            selection: fieldSelection(active.ranges, next),\n            effects: setActive.of(last ? null : new ActiveSnippet(active.ranges, next))\n        }));\n        return true;\n    };\n}\n/**\nA command that clears the active snippet, if any.\n*/\nconst clearSnippet = ({ state, dispatch }) => {\n    let active = state.field(snippetState, false);\n    if (!active)\n        return false;\n    dispatch(state.update({ effects: setActive.of(null) }));\n    return true;\n};\n/**\nMove to the next snippet field, if available.\n*/\nconst nextSnippetField = /*@__PURE__*/moveField(1);\n/**\nMove to the previous snippet field, if available.\n*/\nconst prevSnippetField = /*@__PURE__*/moveField(-1);\nconst defaultSnippetKeymap = [\n    { key: \"Tab\", run: nextSnippetField, shift: prevSnippetField },\n    { key: \"Escape\", run: clearSnippet }\n];\n/**\nA facet that can be used to configure the key bindings used by\nsnippets. The default binds Tab to\n[`nextSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.nextSnippetField), Shift-Tab to\n[`prevSnippetField`](https://codemirror.net/6/docs/ref/#autocomplete.prevSnippetField), and Escape\nto [`clearSnippet`](https://codemirror.net/6/docs/ref/#autocomplete.clearSnippet).\n*/\nconst snippetKeymap = /*@__PURE__*/Facet.define({\n    combine(maps) { return maps.length ? maps[0] : defaultSnippetKeymap; }\n});\nconst addSnippetKeymap = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.compute([snippetKeymap], state => state.facet(snippetKeymap)));\n/**\nCreate a completion from a snippet. Returns an object with the\nproperties from `completion`, plus an `apply` function that\napplies the snippet.\n*/\nfunction snippetCompletion(template, completion) {\n    return Object.assign(Object.assign({}, completion), { apply: snippet(template) });\n}\nconst snippetPointerHandler = /*@__PURE__*/EditorView.domEventHandlers({\n    mousedown(event, view) {\n        let active = view.state.field(snippetState, false), pos;\n        if (!active || (pos = view.posAtCoords({ x: event.clientX, y: event.clientY })) == null)\n            return false;\n        let match = active.ranges.find(r => r.from <= pos && r.to >= pos);\n        if (!match || match.field == active.active)\n            return false;\n        view.dispatch({\n            selection: fieldSelection(active.ranges, match.field),\n            effects: setActive.of(active.ranges.some(r => r.field > match.field) ? new ActiveSnippet(active.ranges, match.field) : null)\n        });\n        return true;\n    }\n});\n\nfunction wordRE(wordChars) {\n    let escaped = wordChars.replace(/[\\\\[.+*?(){|^$]/g, \"\\\\$&\");\n    try {\n        return new RegExp(`[\\\\p{Alphabetic}\\\\p{Number}_${escaped}]+`, \"ug\");\n    }\n    catch (_a) {\n        return new RegExp(`[\\w${escaped}]`, \"g\");\n    }\n}\nfunction mapRE(re, f) {\n    return new RegExp(f(re.source), re.unicode ? \"u\" : \"\");\n}\nconst wordCaches = /*@__PURE__*/Object.create(null);\nfunction wordCache(wordChars) {\n    return wordCaches[wordChars] || (wordCaches[wordChars] = new WeakMap);\n}\nfunction storeWords(doc, wordRE, result, seen, ignoreAt) {\n    for (let lines = doc.iterLines(), pos = 0; !lines.next().done;) {\n        let { value } = lines, m;\n        wordRE.lastIndex = 0;\n        while (m = wordRE.exec(value)) {\n            if (!seen[m[0]] && pos + m.index != ignoreAt) {\n                result.push({ type: \"text\", label: m[0] });\n                seen[m[0]] = true;\n                if (result.length >= 2000 /* MaxList */)\n                    return;\n            }\n        }\n        pos += value.length + 1;\n    }\n}\nfunction collectWords(doc, cache, wordRE, to, ignoreAt) {\n    let big = doc.length >= 1000 /* MinCacheLen */;\n    let cached = big && cache.get(doc);\n    if (cached)\n        return cached;\n    let result = [], seen = Object.create(null);\n    if (doc.children) {\n        let pos = 0;\n        for (let ch of doc.children) {\n            if (ch.length >= 1000 /* MinCacheLen */) {\n                for (let c of collectWords(ch, cache, wordRE, to - pos, ignoreAt - pos)) {\n                    if (!seen[c.label]) {\n                        seen[c.label] = true;\n                        result.push(c);\n                    }\n                }\n            }\n            else {\n                storeWords(ch, wordRE, result, seen, ignoreAt - pos);\n            }\n            pos += ch.length + 1;\n        }\n    }\n    else {\n        storeWords(doc, wordRE, result, seen, ignoreAt);\n    }\n    if (big && result.length < 2000 /* MaxList */)\n        cache.set(doc, result);\n    return result;\n}\n/**\nA completion source that will scan the document for words (using a\n[character categorizer](https://codemirror.net/6/docs/ref/#state.EditorState.charCategorizer)), and\nreturn those as completions.\n*/\nconst completeAnyWord = context => {\n    let wordChars = context.state.languageDataAt(\"wordChars\", context.pos).join(\"\");\n    let re = wordRE(wordChars);\n    let token = context.matchBefore(mapRE(re, s => s + \"$\"));\n    if (!token && !context.explicit)\n        return null;\n    let from = token ? token.from : context.pos;\n    let options = collectWords(context.state.doc, wordCache(wordChars), re, 50000 /* Range */, from);\n    return { from, options, span: mapRE(re, s => \"^\" + s) };\n};\n\n/**\nReturns an extension that enables autocompletion.\n*/\nfunction autocompletion(config = {}) {\n    return [\n        completionState,\n        completionConfig.of(config),\n        completionPlugin,\n        completionKeymapExt,\n        baseTheme\n    ];\n}\n/**\nBasic keybindings for autocompletion.\n\n - Ctrl-Space: [`startCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.startCompletion)\n - Escape: [`closeCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.closeCompletion)\n - ArrowDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true)`\n - ArrowUp: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(false)`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - PageDown: [`moveCompletionSelection`](https://codemirror.net/6/docs/ref/#autocomplete.moveCompletionSelection)`(true, \"page\")`\n - Enter: [`acceptCompletion`](https://codemirror.net/6/docs/ref/#autocomplete.acceptCompletion)\n*/\nconst completionKeymap = [\n    { key: \"Ctrl-Space\", run: startCompletion },\n    { key: \"Escape\", run: closeCompletion },\n    { key: \"ArrowDown\", run: /*@__PURE__*/moveCompletionSelection(true) },\n    { key: \"ArrowUp\", run: /*@__PURE__*/moveCompletionSelection(false) },\n    { key: \"PageDown\", run: /*@__PURE__*/moveCompletionSelection(true, \"page\") },\n    { key: \"PageUp\", run: /*@__PURE__*/moveCompletionSelection(false, \"page\") },\n    { key: \"Enter\", run: acceptCompletion }\n];\nconst completionKeymapExt = /*@__PURE__*/Prec.highest(/*@__PURE__*/keymap.computeN([completionConfig], state => state.facet(completionConfig).defaultKeymap ? [completionKeymap] : []));\n/**\nGet the current completion status. When completions are available,\nthis will return `\"active\"`. When completions are pending (in the\nprocess of being queried), this returns `\"pending\"`. Otherwise, it\nreturns `null`.\n*/\nfunction completionStatus(state) {\n    let cState = state.field(completionState, false);\n    return cState && cState.active.some(a => a.state == 1 /* Pending */) ? \"pending\"\n        : cState && cState.active.some(a => a.state != 0 /* Inactive */) ? \"active\" : null;\n}\n/**\nReturns the available completions as an array.\n*/\nfunction currentCompletions(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open ? open.options.map(o => o.completion) : [];\n}\n/**\nReturn the currently selected completion, if any.\n*/\nfunction selectedCompletion(state) {\n    var _a;\n    let open = (_a = state.field(completionState, false)) === null || _a === void 0 ? void 0 : _a.open;\n    return open ? open.options[open.selected].completion : null;\n}\n\nexport { CompletionContext, acceptCompletion, autocompletion, clearSnippet, closeCompletion, completeAnyWord, completeFromList, completionKeymap, completionStatus, currentCompletions, ifIn, ifNotIn, moveCompletionSelection, nextSnippetField, pickedCompletion, prevSnippetField, selectedCompletion, snippet, snippetCompletion, snippetKeymap, startCompletion };\n","import { EditorSelection } from '@codemirror/state';\n\n/**\nComment or uncomment the current selection. Will use line comments\nif available, otherwise falling back to block comments.\n*/\nconst toggleComment = target => {\n    let config = getConfig(target.state);\n    return config.line ? toggleLineComment(target) : config.block ? toggleBlockComment(target) : false;\n};\nfunction command(f, option) {\n    return ({ state, dispatch }) => {\n        let tr = f(option, state.selection.ranges, state);\n        if (!tr)\n            return false;\n        dispatch(state.update(tr));\n        return true;\n    };\n}\n/**\nComment or uncomment the current selection using line comments.\nThe line comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#comment.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleLineComment = /*@__PURE__*/command(changeLineComment, 0 /* Toggle */);\n/**\nComment the current selection using line comments.\n*/\nconst lineComment = /*@__PURE__*/command(changeLineComment, 1 /* Comment */);\n/**\nUncomment the current selection using line comments.\n*/\nconst lineUncomment = /*@__PURE__*/command(changeLineComment, 2 /* Uncomment */);\n/**\nComment or uncomment the current selection using block comments.\nThe block comment syntax is taken from the\n[`commentTokens`](https://codemirror.net/6/docs/ref/#comment.CommentTokens) [language\ndata](https://codemirror.net/6/docs/ref/#state.EditorState.languageDataAt).\n*/\nconst toggleBlockComment = /*@__PURE__*/command(changeBlockComment, 0 /* Toggle */);\n/**\nComment the current selection using block comments.\n*/\nconst blockComment = /*@__PURE__*/command(changeBlockComment, 1 /* Comment */);\n/**\nUncomment the current selection using block comments.\n*/\nconst blockUncomment = /*@__PURE__*/command(changeBlockComment, 2 /* Uncomment */);\n/**\nDefault key bindings for this package.\n\n - Ctrl-/ (Cmd-/ on macOS): [`toggleComment`](https://codemirror.net/6/docs/ref/#comment.toggleComment).\n - Shift-Alt-a: [`toggleBlockComment`](https://codemirror.net/6/docs/ref/#comment.toggleBlockComment).\n*/\nconst commentKeymap = [\n    { key: \"Mod-/\", run: toggleComment },\n    { key: \"Alt-A\", run: toggleBlockComment }\n];\nfunction getConfig(state, pos = state.selection.main.head) {\n    let data = state.languageDataAt(\"commentTokens\", pos);\n    return data.length ? data[0] : {};\n}\nconst SearchMargin = 50;\n/**\nDetermines if the given range is block-commented in the given\nstate.\n*/\nfunction findBlockComment(state, { open, close }, from, to) {\n    let textBefore = state.sliceDoc(from - SearchMargin, from);\n    let textAfter = state.sliceDoc(to, to + SearchMargin);\n    let spaceBefore = /\\s*$/.exec(textBefore)[0].length, spaceAfter = /^\\s*/.exec(textAfter)[0].length;\n    let beforeOff = textBefore.length - spaceBefore;\n    if (textBefore.slice(beforeOff - open.length, beforeOff) == open &&\n        textAfter.slice(spaceAfter, spaceAfter + close.length) == close) {\n        return { open: { pos: from - spaceBefore, margin: spaceBefore && 1 },\n            close: { pos: to + spaceAfter, margin: spaceAfter && 1 } };\n    }\n    let startText, endText;\n    if (to - from <= 2 * SearchMargin) {\n        startText = endText = state.sliceDoc(from, to);\n    }\n    else {\n        startText = state.sliceDoc(from, from + SearchMargin);\n        endText = state.sliceDoc(to - SearchMargin, to);\n    }\n    let startSpace = /^\\s*/.exec(startText)[0].length, endSpace = /\\s*$/.exec(endText)[0].length;\n    let endOff = endText.length - endSpace - close.length;\n    if (startText.slice(startSpace, startSpace + open.length) == open &&\n        endText.slice(endOff, endOff + close.length) == close) {\n        return { open: { pos: from + startSpace + open.length,\n                margin: /\\s/.test(startText.charAt(startSpace + open.length)) ? 1 : 0 },\n            close: { pos: to - endSpace - close.length,\n                margin: /\\s/.test(endText.charAt(endOff - 1)) ? 1 : 0 } };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of block comments in\n// languages that support them.\nfunction changeBlockComment(option, ranges, state) {\n    let tokens = ranges.map(r => getConfig(state, r.from).block);\n    if (!tokens.every(c => c))\n        return null;\n    let comments = ranges.map((r, i) => findBlockComment(state, tokens[i], r.from, r.to));\n    if (option != 2 /* Uncomment */ && !comments.every(c => c)) {\n        let index = 0;\n        return state.changeByRange(range => {\n            let { open, close } = tokens[index++];\n            if (comments[index])\n                return { range };\n            let shift = open.length + 1;\n            return {\n                changes: [{ from: range.from, insert: open + \" \" }, { from: range.to, insert: \" \" + close }],\n                range: EditorSelection.range(range.anchor + shift, range.head + shift)\n            };\n        });\n    }\n    else if (option != 1 /* Comment */ && comments.some(c => c)) {\n        let changes = [];\n        for (let i = 0, comment; i < comments.length; i++)\n            if (comment = comments[i]) {\n                let token = tokens[i], { open, close } = comment;\n                changes.push({ from: open.pos - token.open.length, to: open.pos + open.margin }, { from: close.pos - close.margin, to: close.pos + token.close.length });\n            }\n        return { changes };\n    }\n    return null;\n}\n// Performs toggle, comment and uncomment of line comments.\nfunction changeLineComment(option, ranges, state) {\n    let lines = [];\n    let prevLine = -1;\n    for (let { from, to } of ranges) {\n        let startI = lines.length, minIndent = 1e9;\n        for (let pos = from; pos <= to;) {\n            let line = state.doc.lineAt(pos);\n            if (line.from > prevLine && (from == to || to > line.from)) {\n                prevLine = line.from;\n                let token = getConfig(state, pos).line;\n                if (!token)\n                    continue;\n                let indent = /^\\s*/.exec(line.text)[0].length;\n                let empty = indent == line.length;\n                let comment = line.text.slice(indent, indent + token.length) == token ? indent : -1;\n                if (indent < line.text.length && indent < minIndent)\n                    minIndent = indent;\n                lines.push({ line, comment, token, indent, empty, single: false });\n            }\n            pos = line.to + 1;\n        }\n        if (minIndent < 1e9)\n            for (let i = startI; i < lines.length; i++)\n                if (lines[i].indent < lines[i].line.text.length)\n                    lines[i].indent = minIndent;\n        if (lines.length == startI + 1)\n            lines[startI].single = true;\n    }\n    if (option != 2 /* Uncomment */ && lines.some(l => l.comment < 0 && (!l.empty || l.single))) {\n        let changes = [];\n        for (let { line, token, indent, empty, single } of lines)\n            if (single || !empty)\n                changes.push({ from: line.from + indent, insert: token + \" \" });\n        let changeSet = state.changes(changes);\n        return { changes: changeSet, selection: state.selection.map(changeSet, 1) };\n    }\n    else if (option != 1 /* Comment */ && lines.some(l => l.comment >= 0)) {\n        let changes = [];\n        for (let { line, comment, token } of lines)\n            if (comment >= 0) {\n                let from = line.from + comment, to = from + token.length;\n                if (line.text[to - line.from] == \" \")\n                    to++;\n                changes.push({ from, to });\n            }\n        return { changes };\n    }\n    return null;\n}\n\nexport { blockComment, blockUncomment, commentKeymap, lineComment, lineUncomment, toggleBlockComment, toggleComment, toggleLineComment };\n","import { EditorSelection } from '@codemirror/state';\nimport { EditorView } from '@codemirror/view';\nimport { findColumn, countColumn } from '@codemirror/text';\n\n// Don't compute precise column positions for line offsets above this\n// (since it could get expensive). Assume offset==column for them.\nconst MaxOff = 2000;\nfunction rectangleFor(state, a, b) {\n    let startLine = Math.min(a.line, b.line), endLine = Math.max(a.line, b.line);\n    let ranges = [];\n    if (a.off > MaxOff || b.off > MaxOff || a.col < 0 || b.col < 0) {\n        let startOff = Math.min(a.off, b.off), endOff = Math.max(a.off, b.off);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            if (line.length <= endOff)\n                ranges.push(EditorSelection.range(line.from + startOff, line.to + endOff));\n        }\n    }\n    else {\n        let startCol = Math.min(a.col, b.col), endCol = Math.max(a.col, b.col);\n        for (let i = startLine; i <= endLine; i++) {\n            let line = state.doc.line(i);\n            let start = findColumn(line.text, startCol, state.tabSize, true);\n            if (start > -1) {\n                let end = findColumn(line.text, endCol, state.tabSize);\n                ranges.push(EditorSelection.range(line.from + start, line.from + end));\n            }\n        }\n    }\n    return ranges;\n}\nfunction absoluteColumn(view, x) {\n    let ref = view.coordsAtPos(view.viewport.from);\n    return ref ? Math.round(Math.abs((ref.left - x) / view.defaultCharacterWidth)) : -1;\n}\nfunction getPos(view, event) {\n    let offset = view.posAtCoords({ x: event.clientX, y: event.clientY }, false);\n    let line = view.state.doc.lineAt(offset), off = offset - line.from;\n    let col = off > MaxOff ? -1\n        : off == line.length ? absoluteColumn(view, event.clientX)\n            : countColumn(line.text, view.state.tabSize, offset - line.from);\n    return { line: line.number, col, off };\n}\nfunction rectangleSelectionStyle(view, event) {\n    let start = getPos(view, event), startSel = view.state.selection;\n    if (!start)\n        return null;\n    return {\n        update(update) {\n            if (update.docChanged) {\n                let newStart = update.changes.mapPos(update.startState.doc.line(start.line).from);\n                let newLine = update.state.doc.lineAt(newStart);\n                start = { line: newLine.number, col: start.col, off: Math.min(start.off, newLine.length) };\n                startSel = startSel.map(update.changes);\n            }\n        },\n        get(event, _extend, multiple) {\n            let cur = getPos(view, event);\n            if (!cur)\n                return startSel;\n            let ranges = rectangleFor(view.state, start, cur);\n            if (!ranges.length)\n                return startSel;\n            if (multiple)\n                return EditorSelection.create(ranges.concat(startSel.ranges));\n            else\n                return EditorSelection.create(ranges);\n        }\n    };\n}\n/**\nCreate an extension that enables rectangular selections. By\ndefault, it will react to left mouse drag with the Alt key held\ndown. When such a selection occurs, the text within the rectangle\nthat was dragged over will be selected, as one selection\n[range](https://codemirror.net/6/docs/ref/#state.SelectionRange) per line.\n*/\nfunction rectangularSelection(options) {\n    let filter = (options === null || options === void 0 ? void 0 : options.eventFilter) || (e => e.altKey && e.button == 0);\n    return EditorView.mouseSelectionStyle.of((view, event) => filter(event) ? rectangleSelectionStyle(view, event) : null);\n}\n\nexport { rectangularSelection };\n","import { NodeProp, NodeType } from '@lezer/common';\nimport { StyleModule } from 'style-mod';\nimport { EditorView, ViewPlugin, Decoration } from '@codemirror/view';\nimport { Facet, Prec } from '@codemirror/state';\nimport { syntaxTree } from '@codemirror/language';\nimport { RangeSetBuilder } from '@codemirror/rangeset';\n\nlet nextTagID = 0;\n/**\nHighlighting tags are markers that denote a highlighting category.\nThey are [associated](https://codemirror.net/6/docs/ref/#highlight.styleTags) with parts of a syntax\ntree by a language mode, and then mapped to an actual CSS style by\na [highlight style](https://codemirror.net/6/docs/ref/#highlight.HighlightStyle).\n\nBecause syntax tree node types and highlight styles have to be\nable to talk the same language, CodeMirror uses a mostly _closed_\n[vocabulary](https://codemirror.net/6/docs/ref/#highlight.tags) of syntax tags (as opposed to\ntraditional open string-based systems, which make it hard for\nhighlighting themes to cover all the tokens produced by the\nvarious languages).\n\nIt _is_ possible to [define](https://codemirror.net/6/docs/ref/#highlight.Tag^define) your own\nhighlighting tags for system-internal use (where you control both\nthe language package and the highlighter), but such tags will not\nbe picked up by regular highlighters (though you can derive them\nfrom standard tags to allow highlighters to fall back to those).\n*/\nclass Tag {\n    /**\n    @internal\n    */\n    constructor(\n    /**\n    The set of tags that match this tag, starting with this one\n    itself, sorted in order of decreasing specificity. @internal\n    */\n    set, \n    /**\n    The base unmodified tag that this one is based on, if it's\n    modified @internal\n    */\n    base, \n    /**\n    The modifiers applied to this.base @internal\n    */\n    modified) {\n        this.set = set;\n        this.base = base;\n        this.modified = modified;\n        /**\n        @internal\n        */\n        this.id = nextTagID++;\n    }\n    /**\n    Define a new tag. If `parent` is given, the tag is treated as a\n    sub-tag of that parent, and [highlight\n    styles](https://codemirror.net/6/docs/ref/#highlight.HighlightStyle) that don't mention this tag\n    will try to fall back to the parent tag (or grandparent tag,\n    etc).\n    */\n    static define(parent) {\n        if (parent === null || parent === void 0 ? void 0 : parent.base)\n            throw new Error(\"Can not derive from a modified tag\");\n        let tag = new Tag([], null, []);\n        tag.set.push(tag);\n        if (parent)\n            for (let t of parent.set)\n                tag.set.push(t);\n        return tag;\n    }\n    /**\n    Define a tag _modifier_, which is a function that, given a tag,\n    will return a tag that is a subtag of the original. Applying the\n    same modifier to a twice tag will return the same value (`m1(t1)\n    == m1(t1)`) and applying multiple modifiers will, regardless or\n    order, produce the same tag (`m1(m2(t1)) == m2(m1(t1))`).\n    \n    When multiple modifiers are applied to a given base tag, each\n    smaller set of modifiers is registered as a parent, so that for\n    example `m1(m2(m3(t1)))` is a subtype of `m1(m2(t1))`,\n    `m1(m3(t1)`, and so on.\n    */\n    static defineModifier() {\n        let mod = new Modifier;\n        return (tag) => {\n            if (tag.modified.indexOf(mod) > -1)\n                return tag;\n            return Modifier.get(tag.base || tag, tag.modified.concat(mod).sort((a, b) => a.id - b.id));\n        };\n    }\n}\nlet nextModifierID = 0;\nclass Modifier {\n    constructor() {\n        this.instances = [];\n        this.id = nextModifierID++;\n    }\n    static get(base, mods) {\n        if (!mods.length)\n            return base;\n        let exists = mods[0].instances.find(t => t.base == base && sameArray(mods, t.modified));\n        if (exists)\n            return exists;\n        let set = [], tag = new Tag(set, base, mods);\n        for (let m of mods)\n            m.instances.push(tag);\n        let configs = permute(mods);\n        for (let parent of base.set)\n            for (let config of configs)\n                set.push(Modifier.get(parent, config));\n        return tag;\n    }\n}\nfunction sameArray(a, b) {\n    return a.length == b.length && a.every((x, i) => x == b[i]);\n}\nfunction permute(array) {\n    let result = [array];\n    for (let i = 0; i < array.length; i++) {\n        for (let a of permute(array.slice(0, i).concat(array.slice(i + 1))))\n            result.push(a);\n    }\n    return result;\n}\n/**\nThis function is used to add a set of tags to a language syntax\nvia\n[`LRParser.configure`](https://lezer.codemirror.net/docs/ref#lr.LRParser.configure).\n\nThe argument object maps node selectors to [highlighting\ntags](https://codemirror.net/6/docs/ref/#highlight.Tag) or arrays of tags.\n\nNode selectors may hold one or more (space-separated) node paths.\nSuch a path can be a [node\nname](https://lezer.codemirror.net/docs/ref#common.NodeType.name),\nor multiple node names (or `*` wildcards) separated by slash\ncharacters, as in `\"Block/Declaration/VariableName\"`. Such a path\nmatches the final node but only if its direct parent nodes are the\nother nodes mentioned. A `*` in such a path matches any parent,\nbut only a single level—wildcards that match multiple parents\naren't supported, both for efficiency reasons and because Lezer\ntrees make it rather hard to reason about what they would match.)\n\nA path can be ended with `/...` to indicate that the tag assigned\nto the node should also apply to all child nodes, even if they\nmatch their own style (by default, only the innermost style is\nused).\n\nWhen a path ends in `!`, as in `Attribute!`, no further matching\nhappens for the node's child nodes, and the entire node gets the\ngiven style.\n\nIn this notation, node names that contain `/`, `!`, `*`, or `...`\nmust be quoted as JSON strings.\n\nFor example:\n\n```javascript\nparser.withProps(\n  styleTags({\n    // Style Number and BigNumber nodes\n    \"Number BigNumber\": tags.number,\n    // Style Escape nodes whose parent is String\n    \"String/Escape\": tags.escape,\n    // Style anything inside Attributes nodes\n    \"Attributes!\": tags.meta,\n    // Add a style to all content inside Italic nodes\n    \"Italic/...\": tags.emphasis,\n    // Style InvalidString nodes as both `string` and `invalid`\n    \"InvalidString\": [tags.string, tags.invalid],\n    // Style the node named \"/\" as punctuation\n    '\"/\"': tags.punctuation\n  })\n)\n```\n*/\nfunction styleTags(spec) {\n    let byName = Object.create(null);\n    for (let prop in spec) {\n        let tags = spec[prop];\n        if (!Array.isArray(tags))\n            tags = [tags];\n        for (let part of prop.split(\" \"))\n            if (part) {\n                let pieces = [], mode = 2 /* Normal */, rest = part;\n                for (let pos = 0;;) {\n                    if (rest == \"...\" && pos > 0 && pos + 3 == part.length) {\n                        mode = 1 /* Inherit */;\n                        break;\n                    }\n                    let m = /^\"(?:[^\"\\\\]|\\\\.)*?\"|[^\\/!]+/.exec(rest);\n                    if (!m)\n                        throw new RangeError(\"Invalid path: \" + part);\n                    pieces.push(m[0] == \"*\" ? null : m[0][0] == '\"' ? JSON.parse(m[0]) : m[0]);\n                    pos += m[0].length;\n                    if (pos == part.length)\n                        break;\n                    let next = part[pos++];\n                    if (pos == part.length && next == \"!\") {\n                        mode = 0 /* Opaque */;\n                        break;\n                    }\n                    if (next != \"/\")\n                        throw new RangeError(\"Invalid path: \" + part);\n                    rest = part.slice(pos);\n                }\n                let last = pieces.length - 1, inner = pieces[last];\n                if (!inner)\n                    throw new RangeError(\"Invalid path: \" + part);\n                let rule = new Rule(tags, mode, last > 0 ? pieces.slice(0, last) : null);\n                byName[inner] = rule.sort(byName[inner]);\n            }\n    }\n    return ruleNodeProp.add(byName);\n}\nconst ruleNodeProp = /*@__PURE__*/new NodeProp();\nconst highlightStyle = /*@__PURE__*/Facet.define({\n    combine(stylings) { return stylings.length ? HighlightStyle.combinedMatch(stylings) : null; }\n});\nconst fallbackHighlightStyle = /*@__PURE__*/Facet.define({\n    combine(values) { return values.length ? values[0].match : null; }\n});\nfunction getHighlightStyle(state) {\n    return state.facet(highlightStyle) || state.facet(fallbackHighlightStyle);\n}\nclass Rule {\n    constructor(tags, mode, context, next) {\n        this.tags = tags;\n        this.mode = mode;\n        this.context = context;\n        this.next = next;\n    }\n    sort(other) {\n        if (!other || other.depth < this.depth) {\n            this.next = other;\n            return this;\n        }\n        other.next = this.sort(other.next);\n        return other;\n    }\n    get depth() { return this.context ? this.context.length : 0; }\n}\n/**\nA highlight style associates CSS styles with higlighting\n[tags](https://codemirror.net/6/docs/ref/#highlight.Tag).\n*/\nclass HighlightStyle {\n    constructor(spec, options) {\n        this.map = Object.create(null);\n        let modSpec;\n        function def(spec) {\n            let cls = StyleModule.newName();\n            (modSpec || (modSpec = Object.create(null)))[\".\" + cls] = spec;\n            return cls;\n        }\n        this.all = typeof options.all == \"string\" ? options.all : options.all ? def(options.all) : null;\n        for (let style of spec) {\n            let cls = (style.class || def(Object.assign({}, style, { tag: null }))) +\n                (this.all ? \" \" + this.all : \"\");\n            let tags = style.tag;\n            if (!Array.isArray(tags))\n                this.map[tags.id] = cls;\n            else\n                for (let tag of tags)\n                    this.map[tag.id] = cls;\n        }\n        this.module = modSpec ? new StyleModule(modSpec) : null;\n        this.scope = options.scope || null;\n        this.match = this.match.bind(this);\n        let ext = [treeHighlighter];\n        if (this.module)\n            ext.push(EditorView.styleModule.of(this.module));\n        this.extension = ext.concat(highlightStyle.of(this));\n        this.fallback = ext.concat(fallbackHighlightStyle.of(this));\n    }\n    /**\n    Returns the CSS class associated with the given tag, if any.\n    This method is bound to the instance by the constructor.\n    */\n    match(tag, scope) {\n        if (this.scope && scope != this.scope)\n            return null;\n        for (let t of tag.set) {\n            let match = this.map[t.id];\n            if (match !== undefined) {\n                if (t != tag)\n                    this.map[tag.id] = match;\n                return match;\n            }\n        }\n        return this.map[tag.id] = this.all;\n    }\n    /**\n    Combines an array of highlight styles into a single match\n    function that returns all of the classes assigned by the styles\n    for a given tag.\n    */\n    static combinedMatch(styles) {\n        if (styles.length == 1)\n            return styles[0].match;\n        let cache = styles.some(s => s.scope) ? undefined : Object.create(null);\n        return (tag, scope) => {\n            let cached = cache && cache[tag.id];\n            if (cached !== undefined)\n                return cached;\n            let result = null;\n            for (let style of styles) {\n                let value = style.match(tag, scope);\n                if (value)\n                    result = result ? result + \" \" + value : value;\n            }\n            if (cache)\n                cache[tag.id] = result;\n            return result;\n        };\n    }\n    /**\n    Create a highlighter style that associates the given styles to\n    the given tags. The spec must be objects that hold a style tag\n    or array of tags in their `tag` property, and either a single\n    `class` property providing a static CSS class (for highlighters\n    like [`classHighlightStyle`](https://codemirror.net/6/docs/ref/#highlight.classHighlightStyle)\n    that rely on external styling), or a\n    [`style-mod`](https://github.com/marijnh/style-mod#documentation)-style\n    set of CSS properties (which define the styling for those tags).\n    \n    The CSS rules created for a highlighter will be emitted in the\n    order of the spec's properties. That means that for elements that\n    have multiple tags associated with them, styles defined further\n    down in the list will have a higher CSS precedence than styles\n    defined earlier.\n    */\n    static define(specs, options) {\n        return new HighlightStyle(specs, options || {});\n    }\n    /**\n    Returns the CSS classes (if any) that the highlight styles\n    active in the given state would assign to the given a style\n    [tag](https://codemirror.net/6/docs/ref/#highlight.Tag) and (optional) language\n    [scope](https://codemirror.net/6/docs/ref/#highlight.HighlightStyle^define^options.scope).\n    */\n    static get(state, tag, scope) {\n        let style = getHighlightStyle(state);\n        return style && style(tag, scope || NodeType.none);\n    }\n}\n/**\nRun the tree highlighter over the given tree.\n*/\nfunction highlightTree(tree, \n/**\nGet the CSS classes used to style a given [tag](https://codemirror.net/6/docs/ref/#highlight.Tag),\nor `null` if it isn't styled. (You'll often want to pass a\nhighlight style's [`match`](https://codemirror.net/6/docs/ref/#highlight.HighlightStyle.match)\nmethod here.)\n*/\ngetStyle, \n/**\nAssign styling to a region of the text. Will be called, in order\nof position, for any ranges where more than zero classes apply.\n`classes` is a space separated string of CSS classes.\n*/\nputStyle, \n/**\nThe start of the range to highlight.\n*/\nfrom = 0, \n/**\nThe end of the range.\n*/\nto = tree.length) {\n    highlightTreeRange(tree, from, to, getStyle, putStyle);\n}\nclass TreeHighlighter {\n    constructor(view) {\n        this.markCache = Object.create(null);\n        this.tree = syntaxTree(view.state);\n        this.decorations = this.buildDeco(view, getHighlightStyle(view.state));\n    }\n    update(update) {\n        let tree = syntaxTree(update.state), style = getHighlightStyle(update.state);\n        let styleChange = style != update.startState.facet(highlightStyle);\n        if (tree.length < update.view.viewport.to && !styleChange && tree.type == this.tree.type) {\n            this.decorations = this.decorations.map(update.changes);\n        }\n        else if (tree != this.tree || update.viewportChanged || styleChange) {\n            this.tree = tree;\n            this.decorations = this.buildDeco(update.view, style);\n        }\n    }\n    buildDeco(view, match) {\n        if (!match || !this.tree.length)\n            return Decoration.none;\n        let builder = new RangeSetBuilder();\n        for (let { from, to } of view.visibleRanges) {\n            highlightTreeRange(this.tree, from, to, match, (from, to, style) => {\n                builder.add(from, to, this.markCache[style] || (this.markCache[style] = Decoration.mark({ class: style })));\n            });\n        }\n        return builder.finish();\n    }\n}\n// This extension installs a highlighter that highlights based on the\n// syntax tree and highlight style.\nconst treeHighlighter = /*@__PURE__*/Prec.extend(/*@__PURE__*/ViewPlugin.fromClass(TreeHighlighter, {\n    decorations: v => v.decorations\n}));\nconst nodeStack = [\"\"];\nclass HighlightBuilder {\n    constructor(at, style, span) {\n        this.at = at;\n        this.style = style;\n        this.span = span;\n        this.class = \"\";\n    }\n    startSpan(at, cls) {\n        if (cls != this.class) {\n            this.flush(at);\n            if (at > this.at)\n                this.at = at;\n            this.class = cls;\n        }\n    }\n    flush(to) {\n        if (to > this.at && this.class)\n            this.span(this.at, to, this.class);\n    }\n    highlightRange(cursor, from, to, inheritedClass, depth, scope) {\n        let { type, from: start, to: end } = cursor;\n        if (start >= to || end <= from)\n            return;\n        nodeStack[depth] = type.name;\n        if (type.isTop)\n            scope = type;\n        let cls = inheritedClass;\n        let rule = type.prop(ruleNodeProp), opaque = false;\n        while (rule) {\n            if (!rule.context || matchContext(rule.context, nodeStack, depth)) {\n                for (let tag of rule.tags) {\n                    let st = this.style(tag, scope);\n                    if (st) {\n                        if (cls)\n                            cls += \" \";\n                        cls += st;\n                        if (rule.mode == 1 /* Inherit */)\n                            inheritedClass += (inheritedClass ? \" \" : \"\") + st;\n                        else if (rule.mode == 0 /* Opaque */)\n                            opaque = true;\n                    }\n                }\n                break;\n            }\n            rule = rule.next;\n        }\n        this.startSpan(cursor.from, cls);\n        if (opaque)\n            return;\n        let mounted = cursor.tree && cursor.tree.prop(NodeProp.mounted);\n        if (mounted && mounted.overlay) {\n            let inner = cursor.node.enter(mounted.overlay[0].from + start, 1);\n            let hasChild = cursor.firstChild();\n            for (let i = 0, pos = start;; i++) {\n                let next = i < mounted.overlay.length ? mounted.overlay[i] : null;\n                let nextPos = next ? next.from + start : end;\n                let rangeFrom = Math.max(from, pos), rangeTo = Math.min(to, nextPos);\n                if (rangeFrom < rangeTo && hasChild) {\n                    while (cursor.from < rangeTo) {\n                        this.highlightRange(cursor, rangeFrom, rangeTo, inheritedClass, depth + 1, scope);\n                        this.startSpan(Math.min(to, cursor.to), cls);\n                        if (cursor.to >= nextPos || !cursor.nextSibling())\n                            break;\n                    }\n                }\n                if (!next || nextPos > to)\n                    break;\n                pos = next.to + start;\n                if (pos > from) {\n                    this.highlightRange(inner.cursor, Math.max(from, next.from + start), Math.min(to, pos), inheritedClass, depth, mounted.tree.type);\n                    this.startSpan(pos, cls);\n                }\n            }\n            if (hasChild)\n                cursor.parent();\n        }\n        else if (cursor.firstChild()) {\n            do {\n                if (cursor.to <= from)\n                    continue;\n                if (cursor.from >= to)\n                    break;\n                this.highlightRange(cursor, from, to, inheritedClass, depth + 1, scope);\n                this.startSpan(Math.min(to, cursor.to), cls);\n            } while (cursor.nextSibling());\n            cursor.parent();\n        }\n    }\n}\nfunction highlightTreeRange(tree, from, to, style, span) {\n    let builder = new HighlightBuilder(from, style, span);\n    builder.highlightRange(tree.cursor(), from, to, \"\", 0, tree.type);\n    builder.flush(to);\n}\nfunction matchContext(context, stack, depth) {\n    if (context.length > depth - 1)\n        return false;\n    for (let d = depth - 1, i = context.length - 1; i >= 0; i--, d--) {\n        let check = context[i];\n        if (check && check != stack[d])\n            return false;\n    }\n    return true;\n}\nconst t = Tag.define;\nconst comment = /*@__PURE__*/t(), name = /*@__PURE__*/t(), typeName = /*@__PURE__*/t(name), propertyName = /*@__PURE__*/t(name), literal = /*@__PURE__*/t(), string = /*@__PURE__*/t(literal), number = /*@__PURE__*/t(literal), content = /*@__PURE__*/t(), heading = /*@__PURE__*/t(content), keyword = /*@__PURE__*/t(), operator = /*@__PURE__*/t(), punctuation = /*@__PURE__*/t(), bracket = /*@__PURE__*/t(punctuation), meta = /*@__PURE__*/t();\n/**\nThe default set of highlighting [tags](https://codemirror.net/6/docs/ref/#highlight.Tag^define) used\nby regular language packages and themes.\n\nThis collection is heavily biased towards programming languages,\nand necessarily incomplete. A full ontology of syntactic\nconstructs would fill a stack of books, and be impractical to\nwrite themes for. So try to make do with this set. If all else\nfails, [open an\nissue](https://github.com/codemirror/codemirror.next) to propose a\nnew tag, or [define](https://codemirror.net/6/docs/ref/#highlight.Tag^define) a local custom tag for\nyour use case.\n\nNote that it is not obligatory to always attach the most specific\ntag possible to an element—if your grammar can't easily\ndistinguish a certain type of element (such as a local variable),\nit is okay to style it as its more general variant (a variable).\n\nFor tags that extend some parent tag, the documentation links to\nthe parent.\n*/\nconst tags = {\n    /**\n    A comment.\n    */\n    comment,\n    /**\n    A line [comment](https://codemirror.net/6/docs/ref/#highlight.tags.comment).\n    */\n    lineComment: /*@__PURE__*/t(comment),\n    /**\n    A block [comment](https://codemirror.net/6/docs/ref/#highlight.tags.comment).\n    */\n    blockComment: /*@__PURE__*/t(comment),\n    /**\n    A documentation [comment](https://codemirror.net/6/docs/ref/#highlight.tags.comment).\n    */\n    docComment: /*@__PURE__*/t(comment),\n    /**\n    Any kind of identifier.\n    */\n    name,\n    /**\n    The [name](https://codemirror.net/6/docs/ref/#highlight.tags.name) of a variable.\n    */\n    variableName: /*@__PURE__*/t(name),\n    /**\n    A type [name](https://codemirror.net/6/docs/ref/#highlight.tags.name).\n    */\n    typeName: typeName,\n    /**\n    A tag name (subtag of [`typeName`](https://codemirror.net/6/docs/ref/#highlight.tags.typeName)).\n    */\n    tagName: /*@__PURE__*/t(typeName),\n    /**\n    A property or field [name](https://codemirror.net/6/docs/ref/#highlight.tags.name).\n    */\n    propertyName: propertyName,\n    /**\n    An attribute name (subtag of [`propertyName`](https://codemirror.net/6/docs/ref/#highlight.tags.propertyName)).\n    */\n    attributeName: /*@__PURE__*/t(propertyName),\n    /**\n    The [name](https://codemirror.net/6/docs/ref/#highlight.tags.name) of a class.\n    */\n    className: /*@__PURE__*/t(name),\n    /**\n    A label [name](https://codemirror.net/6/docs/ref/#highlight.tags.name).\n    */\n    labelName: /*@__PURE__*/t(name),\n    /**\n    A namespace [name](https://codemirror.net/6/docs/ref/#highlight.tags.name).\n    */\n    namespace: /*@__PURE__*/t(name),\n    /**\n    The [name](https://codemirror.net/6/docs/ref/#highlight.tags.name) of a macro.\n    */\n    macroName: /*@__PURE__*/t(name),\n    /**\n    A literal value.\n    */\n    literal,\n    /**\n    A string [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    string,\n    /**\n    A documentation [string](https://codemirror.net/6/docs/ref/#highlight.tags.string).\n    */\n    docString: /*@__PURE__*/t(string),\n    /**\n    A character literal (subtag of [string](https://codemirror.net/6/docs/ref/#highlight.tags.string)).\n    */\n    character: /*@__PURE__*/t(string),\n    /**\n    An attribute value (subtag of [string](https://codemirror.net/6/docs/ref/#highlight.tags.string)).\n    */\n    attributeValue: /*@__PURE__*/t(string),\n    /**\n    A number [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    number,\n    /**\n    An integer [number](https://codemirror.net/6/docs/ref/#highlight.tags.number) literal.\n    */\n    integer: /*@__PURE__*/t(number),\n    /**\n    A floating-point [number](https://codemirror.net/6/docs/ref/#highlight.tags.number) literal.\n    */\n    float: /*@__PURE__*/t(number),\n    /**\n    A boolean [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    bool: /*@__PURE__*/t(literal),\n    /**\n    Regular expression [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    regexp: /*@__PURE__*/t(literal),\n    /**\n    An escape [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal), for example a\n    backslash escape in a string.\n    */\n    escape: /*@__PURE__*/t(literal),\n    /**\n    A color [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    color: /*@__PURE__*/t(literal),\n    /**\n    A URL [literal](https://codemirror.net/6/docs/ref/#highlight.tags.literal).\n    */\n    url: /*@__PURE__*/t(literal),\n    /**\n    A language keyword.\n    */\n    keyword,\n    /**\n    The [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) for the self or this\n    object.\n    */\n    self: /*@__PURE__*/t(keyword),\n    /**\n    The [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) for null.\n    */\n    null: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) denoting some atomic value.\n    */\n    atom: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) that represents a unit.\n    */\n    unit: /*@__PURE__*/t(keyword),\n    /**\n    A modifier [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword).\n    */\n    modifier: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) that acts as an operator.\n    */\n    operatorKeyword: /*@__PURE__*/t(keyword),\n    /**\n    A control-flow related [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword).\n    */\n    controlKeyword: /*@__PURE__*/t(keyword),\n    /**\n    A [keyword](https://codemirror.net/6/docs/ref/#highlight.tags.keyword) that defines something.\n    */\n    definitionKeyword: /*@__PURE__*/t(keyword),\n    /**\n    An operator.\n    */\n    operator,\n    /**\n    An [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator) that defines something.\n    */\n    derefOperator: /*@__PURE__*/t(operator),\n    /**\n    Arithmetic-related [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    arithmeticOperator: /*@__PURE__*/t(operator),\n    /**\n    Logical [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    logicOperator: /*@__PURE__*/t(operator),\n    /**\n    Bit [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    bitwiseOperator: /*@__PURE__*/t(operator),\n    /**\n    Comparison [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    compareOperator: /*@__PURE__*/t(operator),\n    /**\n    [Operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator) that updates its operand.\n    */\n    updateOperator: /*@__PURE__*/t(operator),\n    /**\n    [Operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator) that defines something.\n    */\n    definitionOperator: /*@__PURE__*/t(operator),\n    /**\n    Type-related [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    typeOperator: /*@__PURE__*/t(operator),\n    /**\n    Control-flow [operator](https://codemirror.net/6/docs/ref/#highlight.tags.operator).\n    */\n    controlOperator: /*@__PURE__*/t(operator),\n    /**\n    Program or markup punctuation.\n    */\n    punctuation,\n    /**\n    [Punctuation](https://codemirror.net/6/docs/ref/#highlight.tags.punctuation) that separates\n    things.\n    */\n    separator: /*@__PURE__*/t(punctuation),\n    /**\n    Bracket-style [punctuation](https://codemirror.net/6/docs/ref/#highlight.tags.punctuation).\n    */\n    bracket,\n    /**\n    Angle [brackets](https://codemirror.net/6/docs/ref/#highlight.tags.bracket) (usually `<` and `>`\n    tokens).\n    */\n    angleBracket: /*@__PURE__*/t(bracket),\n    /**\n    Square [brackets](https://codemirror.net/6/docs/ref/#highlight.tags.bracket) (usually `[` and `]`\n    tokens).\n    */\n    squareBracket: /*@__PURE__*/t(bracket),\n    /**\n    Parentheses (usually `(` and `)` tokens). Subtag of\n    [bracket](https://codemirror.net/6/docs/ref/#highlight.tags.bracket).\n    */\n    paren: /*@__PURE__*/t(bracket),\n    /**\n    Braces (usually `{` and `}` tokens). Subtag of\n    [bracket](https://codemirror.net/6/docs/ref/#highlight.tags.bracket).\n    */\n    brace: /*@__PURE__*/t(bracket),\n    /**\n    Content, for example plain text in XML or markup documents.\n    */\n    content,\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that represents a heading.\n    */\n    heading,\n    /**\n    A level 1 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading1: /*@__PURE__*/t(heading),\n    /**\n    A level 2 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading2: /*@__PURE__*/t(heading),\n    /**\n    A level 3 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading3: /*@__PURE__*/t(heading),\n    /**\n    A level 4 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading4: /*@__PURE__*/t(heading),\n    /**\n    A level 5 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading5: /*@__PURE__*/t(heading),\n    /**\n    A level 6 [heading](https://codemirror.net/6/docs/ref/#highlight.tags.heading).\n    */\n    heading6: /*@__PURE__*/t(heading),\n    /**\n    A prose separator (such as a horizontal rule).\n    */\n    contentSeparator: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that represents a list.\n    */\n    list: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that represents a quote.\n    */\n    quote: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that is emphasized.\n    */\n    emphasis: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that is styled strong.\n    */\n    strong: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that is part of a link.\n    */\n    link: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that is styled as code or\n    monospace.\n    */\n    monospace: /*@__PURE__*/t(content),\n    /**\n    [Content](https://codemirror.net/6/docs/ref/#highlight.tags.content) that has a strike-through\n    style.\n    */\n    strikethrough: /*@__PURE__*/t(content),\n    /**\n    Inserted text in a change-tracking format.\n    */\n    inserted: /*@__PURE__*/t(),\n    /**\n    Deleted text.\n    */\n    deleted: /*@__PURE__*/t(),\n    /**\n    Changed text.\n    */\n    changed: /*@__PURE__*/t(),\n    /**\n    An invalid or unsyntactic element.\n    */\n    invalid: /*@__PURE__*/t(),\n    /**\n    Metadata or meta-instruction.\n    */\n    meta,\n    /**\n    [Metadata](https://codemirror.net/6/docs/ref/#highlight.tags.meta) that applies to the entire\n    document.\n    */\n    documentMeta: /*@__PURE__*/t(meta),\n    /**\n    [Metadata](https://codemirror.net/6/docs/ref/#highlight.tags.meta) that annotates or adds\n    attributes to a given syntactic element.\n    */\n    annotation: /*@__PURE__*/t(meta),\n    /**\n    Processing instruction or preprocessor directive. Subtag of\n    [meta](https://codemirror.net/6/docs/ref/#highlight.tags.meta).\n    */\n    processingInstruction: /*@__PURE__*/t(meta),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that indicates that a\n    given element is being defined. Expected to be used with the\n    various [name](https://codemirror.net/6/docs/ref/#highlight.tags.name) tags.\n    */\n    definition: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that indicates that\n    something is constant. Mostly expected to be used with\n    [variable names](https://codemirror.net/6/docs/ref/#highlight.tags.variableName).\n    */\n    constant: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) used to indicate that\n    a [variable](https://codemirror.net/6/docs/ref/#highlight.tags.variableName) or [property\n    name](https://codemirror.net/6/docs/ref/#highlight.tags.propertyName) is being called or defined\n    as a function.\n    */\n    function: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that can be applied to\n    [names](https://codemirror.net/6/docs/ref/#highlight.tags.name) to indicate that they belong to\n    the language's standard environment.\n    */\n    standard: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    [Modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that indicates a given\n    [names](https://codemirror.net/6/docs/ref/#highlight.tags.name) is local to some scope.\n    */\n    local: /*@__PURE__*/Tag.defineModifier(),\n    /**\n    A generic variant [modifier](https://codemirror.net/6/docs/ref/#highlight.Tag^defineModifier) that\n    can be used to tag language-specific alternative variants of\n    some common tag. It is recommended for themes to define special\n    forms of at least the [string](https://codemirror.net/6/docs/ref/#highlight.tags.string) and\n    [variable name](https://codemirror.net/6/docs/ref/#highlight.tags.variableName) tags, since those\n    come up a lot.\n    */\n    special: /*@__PURE__*/Tag.defineModifier()\n};\n/**\nA default highlight style (works well with light themes).\n*/\nconst defaultHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.link,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        textDecoration: \"underline\",\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.keyword,\n        color: \"#708\" },\n    { tag: [tags.atom, tags.bool, tags.url, tags.contentSeparator, tags.labelName],\n        color: \"#219\" },\n    { tag: [tags.literal, tags.inserted],\n        color: \"#164\" },\n    { tag: [tags.string, tags.deleted],\n        color: \"#a11\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)],\n        color: \"#e40\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName),\n        color: \"#00f\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName),\n        color: \"#30a\" },\n    { tag: [tags.typeName, tags.namespace],\n        color: \"#085\" },\n    { tag: tags.className,\n        color: \"#167\" },\n    { tag: [/*@__PURE__*/tags.special(tags.variableName), tags.macroName],\n        color: \"#256\" },\n    { tag: /*@__PURE__*/tags.definition(tags.propertyName),\n        color: \"#00c\" },\n    { tag: tags.comment,\n        color: \"#940\" },\n    { tag: tags.meta,\n        color: \"#7a757a\" },\n    { tag: tags.invalid,\n        color: \"#f00\" }\n]);\n/**\nThis is a highlight style that adds stable, predictable classes to\ntokens, for styling with external CSS.\n\nThese tags are mapped to their name prefixed with `\"cmt-\"` (for\nexample `\"cmt-comment\"`):\n\n* [`link`](https://codemirror.net/6/docs/ref/#highlight.tags.link)\n* [`heading`](https://codemirror.net/6/docs/ref/#highlight.tags.heading)\n* [`emphasis`](https://codemirror.net/6/docs/ref/#highlight.tags.emphasis)\n* [`strong`](https://codemirror.net/6/docs/ref/#highlight.tags.strong)\n* [`keyword`](https://codemirror.net/6/docs/ref/#highlight.tags.keyword)\n* [`atom`](https://codemirror.net/6/docs/ref/#highlight.tags.atom) [`bool`](https://codemirror.net/6/docs/ref/#highlight.tags.bool)\n* [`url`](https://codemirror.net/6/docs/ref/#highlight.tags.url)\n* [`labelName`](https://codemirror.net/6/docs/ref/#highlight.tags.labelName)\n* [`inserted`](https://codemirror.net/6/docs/ref/#highlight.tags.inserted)\n* [`deleted`](https://codemirror.net/6/docs/ref/#highlight.tags.deleted)\n* [`literal`](https://codemirror.net/6/docs/ref/#highlight.tags.literal)\n* [`string`](https://codemirror.net/6/docs/ref/#highlight.tags.string)\n* [`number`](https://codemirror.net/6/docs/ref/#highlight.tags.number)\n* [`variableName`](https://codemirror.net/6/docs/ref/#highlight.tags.variableName)\n* [`typeName`](https://codemirror.net/6/docs/ref/#highlight.tags.typeName)\n* [`namespace`](https://codemirror.net/6/docs/ref/#highlight.tags.namespace)\n* [`macroName`](https://codemirror.net/6/docs/ref/#highlight.tags.macroName)\n* [`propertyName`](https://codemirror.net/6/docs/ref/#highlight.tags.propertyName)\n* [`operator`](https://codemirror.net/6/docs/ref/#highlight.tags.operator)\n* [`comment`](https://codemirror.net/6/docs/ref/#highlight.tags.comment)\n* [`meta`](https://codemirror.net/6/docs/ref/#highlight.tags.meta)\n* [`punctuation`](https://codemirror.net/6/docs/ref/#highlight.tags.puncutation)\n* [`invalid`](https://codemirror.net/6/docs/ref/#highlight.tags.invalid)\n\nIn addition, these mappings are provided:\n\n* [`regexp`](https://codemirror.net/6/docs/ref/#highlight.tags.regexp),\n  [`escape`](https://codemirror.net/6/docs/ref/#highlight.tags.escape), and\n  [`special`](https://codemirror.net/6/docs/ref/#highlight.tags.special)[`(string)`](https://codemirror.net/6/docs/ref/#highlight.tags.string)\n  are mapped to `\"cmt-string2\"`\n* [`special`](https://codemirror.net/6/docs/ref/#highlight.tags.special)[`(variableName)`](https://codemirror.net/6/docs/ref/#highlight.tags.variableName)\n  to `\"cmt-variableName2\"`\n* [`local`](https://codemirror.net/6/docs/ref/#highlight.tags.local)[`(variableName)`](https://codemirror.net/6/docs/ref/#highlight.tags.variableName)\n  to `\"cmt-variableName cmt-local\"`\n* [`definition`](https://codemirror.net/6/docs/ref/#highlight.tags.definition)[`(variableName)`](https://codemirror.net/6/docs/ref/#highlight.tags.variableName)\n  to `\"cmt-variableName cmt-definition\"`\n*/\nconst classHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.link, class: \"cmt-link\" },\n    { tag: tags.heading, class: \"cmt-heading\" },\n    { tag: tags.emphasis, class: \"cmt-emphasis\" },\n    { tag: tags.strong, class: \"cmt-strong\" },\n    { tag: tags.keyword, class: \"cmt-keyword\" },\n    { tag: tags.atom, class: \"cmt-atom\" },\n    { tag: tags.bool, class: \"cmt-bool\" },\n    { tag: tags.url, class: \"cmt-url\" },\n    { tag: tags.labelName, class: \"cmt-labelName\" },\n    { tag: tags.inserted, class: \"cmt-inserted\" },\n    { tag: tags.deleted, class: \"cmt-deleted\" },\n    { tag: tags.literal, class: \"cmt-literal\" },\n    { tag: tags.string, class: \"cmt-string\" },\n    { tag: tags.number, class: \"cmt-number\" },\n    { tag: [tags.regexp, tags.escape, /*@__PURE__*/tags.special(tags.string)], class: \"cmt-string2\" },\n    { tag: tags.variableName, class: \"cmt-variableName\" },\n    { tag: /*@__PURE__*/tags.local(tags.variableName), class: \"cmt-variableName cmt-local\" },\n    { tag: /*@__PURE__*/tags.definition(tags.variableName), class: \"cmt-variableName cmt-definition\" },\n    { tag: /*@__PURE__*/tags.special(tags.variableName), class: \"cmt-variableName2\" },\n    { tag: tags.typeName, class: \"cmt-typeName\" },\n    { tag: tags.namespace, class: \"cmt-namespace\" },\n    { tag: tags.macroName, class: \"cmt-macroName\" },\n    { tag: tags.propertyName, class: \"cmt-propertyName\" },\n    { tag: tags.operator, class: \"cmt-operator\" },\n    { tag: tags.comment, class: \"cmt-comment\" },\n    { tag: tags.meta, class: \"cmt-meta\" },\n    { tag: tags.invalid, class: \"cmt-invalid\" },\n    { tag: tags.punctuation, class: \"cmt-punctuation\" }\n]);\n\nexport { HighlightStyle, Tag, classHighlightStyle, defaultHighlightStyle, highlightTree, styleTags, tags };\n","import { Decoration, EditorView, ViewPlugin, logException, WidgetType } from '@codemirror/view';\nimport { StateEffect, StateField, Facet } from '@codemirror/state';\nimport { hoverTooltip, showTooltip } from '@codemirror/tooltip';\nimport { showPanel, getPanel } from '@codemirror/panel';\nimport { gutter, GutterMarker } from '@codemirror/gutter';\nimport { RangeSet } from '@codemirror/rangeset';\nimport elt from 'crelt';\n\nclass SelectedDiagnostic {\n    constructor(from, to, diagnostic) {\n        this.from = from;\n        this.to = to;\n        this.diagnostic = diagnostic;\n    }\n}\nclass LintState {\n    constructor(diagnostics, panel, selected) {\n        this.diagnostics = diagnostics;\n        this.panel = panel;\n        this.selected = selected;\n    }\n    static init(diagnostics, panel, state) {\n        let ranges = Decoration.set(diagnostics.map((d) => {\n            // For zero-length ranges or ranges covering only a line break, create a widget\n            return d.from == d.to || (d.from == d.to - 1 && state.doc.lineAt(d.from).to == d.from)\n                ? Decoration.widget({\n                    widget: new DiagnosticWidget(d),\n                    diagnostic: d\n                }).range(d.from)\n                : Decoration.mark({\n                    attributes: { class: \"cm-lintRange cm-lintRange-\" + d.severity },\n                    diagnostic: d\n                }).range(d.from, d.to);\n        }), true);\n        return new LintState(ranges, panel, findDiagnostic(ranges));\n    }\n}\nfunction findDiagnostic(diagnostics, diagnostic = null, after = 0) {\n    let found = null;\n    diagnostics.between(after, 1e9, (from, to, { spec }) => {\n        if (diagnostic && spec.diagnostic != diagnostic)\n            return;\n        found = new SelectedDiagnostic(from, to, spec.diagnostic);\n        return false;\n    });\n    return found;\n}\nfunction maybeEnableLint(state, effects) {\n    return state.field(lintState, false) ? effects : effects.concat(StateEffect.appendConfig.of([\n        lintState,\n        EditorView.decorations.compute([lintState], state => {\n            let { selected, panel } = state.field(lintState);\n            return !selected || !panel || selected.from == selected.to ? Decoration.none : Decoration.set([\n                activeMark.range(selected.from, selected.to)\n            ]);\n        }),\n        hoverTooltip(lintTooltip),\n        baseTheme\n    ]));\n}\n/**\nReturns a transaction spec which updates the current set of\ndiagnostics, and enables the lint extension if if wasn't already\nactive.\n*/\nfunction setDiagnostics(state, diagnostics) {\n    return {\n        effects: maybeEnableLint(state, [setDiagnosticsEffect.of(diagnostics)])\n    };\n}\n/**\nThe state effect that updates the set of active diagnostics. Can\nbe useful when writing an extension that needs to track these.\n*/\nconst setDiagnosticsEffect = /*@__PURE__*/StateEffect.define();\nconst togglePanel = /*@__PURE__*/StateEffect.define();\nconst movePanelSelection = /*@__PURE__*/StateEffect.define();\nconst lintState = /*@__PURE__*/StateField.define({\n    create() {\n        return new LintState(Decoration.none, null, null);\n    },\n    update(value, tr) {\n        if (tr.docChanged) {\n            let mapped = value.diagnostics.map(tr.changes), selected = null;\n            if (value.selected) {\n                let selPos = tr.changes.mapPos(value.selected.from, 1);\n                selected = findDiagnostic(mapped, value.selected.diagnostic, selPos) || findDiagnostic(mapped, null, selPos);\n            }\n            value = new LintState(mapped, value.panel, selected);\n        }\n        for (let effect of tr.effects) {\n            if (effect.is(setDiagnosticsEffect)) {\n                value = LintState.init(effect.value, value.panel, tr.state);\n            }\n            else if (effect.is(togglePanel)) {\n                value = new LintState(value.diagnostics, effect.value ? LintPanel.open : null, value.selected);\n            }\n            else if (effect.is(movePanelSelection)) {\n                value = new LintState(value.diagnostics, value.panel, effect.value);\n            }\n        }\n        return value;\n    },\n    provide: f => [showPanel.from(f, val => val.panel),\n        EditorView.decorations.from(f, s => s.diagnostics)]\n});\n/**\nReturns the number of active lint diagnostics in the given state.\n*/\nfunction diagnosticCount(state) {\n    let lint = state.field(lintState, false);\n    return lint ? lint.diagnostics.size : 0;\n}\nconst activeMark = /*@__PURE__*/Decoration.mark({ class: \"cm-lintRange cm-lintRange-active\" });\nfunction lintTooltip(view, pos, side) {\n    let { diagnostics } = view.state.field(lintState);\n    let found = [], stackStart = 2e8, stackEnd = 0;\n    diagnostics.between(pos - (side < 0 ? 1 : 0), pos + (side > 0 ? 1 : 0), (from, to, { spec }) => {\n        if (pos >= from && pos <= to &&\n            (from == to || ((pos > from || side > 0) && (pos < to || side < 0)))) {\n            found.push(spec.diagnostic);\n            stackStart = Math.min(from, stackStart);\n            stackEnd = Math.max(to, stackEnd);\n        }\n    });\n    if (!found.length)\n        return null;\n    return {\n        pos: stackStart,\n        end: stackEnd,\n        above: view.state.doc.lineAt(stackStart).to < stackEnd,\n        create() {\n            return { dom: diagnosticsTooltip(view, found) };\n        }\n    };\n}\nfunction diagnosticsTooltip(view, diagnostics) {\n    return elt(\"ul\", { class: \"cm-tooltip-lint\" }, diagnostics.map(d => renderDiagnostic(view, d, false)));\n}\n/**\nCommand to open and focus the lint panel.\n*/\nconst openLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        view.dispatch({ effects: maybeEnableLint(view.state, [togglePanel.of(true)]) });\n    let panel = getPanel(view, LintPanel.open);\n    if (panel)\n        panel.dom.querySelector(\".cm-panel-lint ul\").focus();\n    return true;\n};\n/**\nCommand to close the lint panel, when open.\n*/\nconst closeLintPanel = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field || !field.panel)\n        return false;\n    view.dispatch({ effects: togglePanel.of(false) });\n    return true;\n};\n/**\nMove the selection to the next diagnostic.\n*/\nconst nextDiagnostic = (view) => {\n    let field = view.state.field(lintState, false);\n    if (!field)\n        return false;\n    let sel = view.state.selection.main, next = field.diagnostics.iter(sel.to + 1);\n    if (!next.value) {\n        next = field.diagnostics.iter(0);\n        if (!next.value || next.from == sel.from && next.to == sel.to)\n            return false;\n    }\n    view.dispatch({ selection: { anchor: next.from, head: next.to }, scrollIntoView: true });\n    return true;\n};\n/**\nA set of default key bindings for the lint functionality.\n\n- Ctrl-Shift-m (Cmd-Shift-m on macOS): [`openLintPanel`](https://codemirror.net/6/docs/ref/#lint.openLintPanel)\n- F8: [`nextDiagnostic`](https://codemirror.net/6/docs/ref/#lint.nextDiagnostic)\n*/\nconst lintKeymap = [\n    { key: \"Mod-Shift-m\", run: openLintPanel },\n    { key: \"F8\", run: nextDiagnostic }\n];\nconst lintPlugin = /*@__PURE__*/ViewPlugin.fromClass(class {\n    constructor(view) {\n        this.view = view;\n        this.timeout = -1;\n        this.set = true;\n        let { delay } = view.state.facet(lintSource);\n        this.lintTime = Date.now() + delay;\n        this.run = this.run.bind(this);\n        this.timeout = setTimeout(this.run, delay);\n    }\n    run() {\n        let now = Date.now();\n        if (now < this.lintTime - 10) {\n            setTimeout(this.run, this.lintTime - now);\n        }\n        else {\n            this.set = false;\n            let { state } = this.view, { sources } = state.facet(lintSource);\n            Promise.all(sources.map(source => Promise.resolve(source(this.view)))).then(annotations => {\n                var _a, _b;\n                let all = annotations.reduce((a, b) => a.concat(b));\n                if (this.view.state.doc == state.doc &&\n                    (all.length || ((_b = (_a = this.view.state.field(lintState, false)) === null || _a === void 0 ? void 0 : _a.diagnostics) === null || _b === void 0 ? void 0 : _b.size)))\n                    this.view.dispatch(setDiagnostics(this.view.state, all));\n            }, error => { logException(this.view.state, error); });\n        }\n    }\n    update(update) {\n        let source = update.state.facet(lintSource);\n        if (update.docChanged || source != update.startState.facet(lintSource)) {\n            this.lintTime = Date.now() + source.delay;\n            if (!this.set) {\n                this.set = true;\n                this.timeout = setTimeout(this.run, source.delay);\n            }\n        }\n    }\n    force() {\n        if (this.set) {\n            this.lintTime = Date.now();\n            this.run();\n        }\n    }\n    destroy() {\n        clearTimeout(this.timeout);\n    }\n});\nconst lintSource = /*@__PURE__*/Facet.define({\n    combine(input) {\n        return { sources: input.map(i => i.source), delay: input.length ? Math.max(...input.map(i => i.delay)) : 750 };\n    },\n    enables: lintPlugin\n});\n/**\nGiven a diagnostic source, this function returns an extension that\nenables linting with that source. It will be called whenever the\neditor is idle (after its content changed).\n*/\nfunction linter(source, config = {}) {\n    var _a;\n    return lintSource.of({ source, delay: (_a = config.delay) !== null && _a !== void 0 ? _a : 750 });\n}\n/**\nForces any linters [configured](https://codemirror.net/6/docs/ref/#lint.linter) to run when the\neditor is idle to run right away.\n*/\nfunction forceLinting(view) {\n    let plugin = view.plugin(lintPlugin);\n    if (plugin)\n        plugin.force();\n}\nfunction assignKeys(actions) {\n    let assigned = [];\n    if (actions)\n        actions: for (let { name } of actions) {\n            for (let i = 0; i < name.length; i++) {\n                let ch = name[i];\n                if (/[a-zA-Z]/.test(ch) && !assigned.some(c => c.toLowerCase() == ch.toLowerCase())) {\n                    assigned.push(ch);\n                    continue actions;\n                }\n            }\n            assigned.push(\"\");\n        }\n    return assigned;\n}\nfunction renderDiagnostic(view, diagnostic, inPanel) {\n    var _a;\n    let keys = inPanel ? assignKeys(diagnostic.actions) : [];\n    return elt(\"li\", { class: \"cm-diagnostic cm-diagnostic-\" + diagnostic.severity }, elt(\"span\", { class: \"cm-diagnosticText\" }, diagnostic.message), (_a = diagnostic.actions) === null || _a === void 0 ? void 0 : _a.map((action, i) => {\n        let click = (e) => {\n            e.preventDefault();\n            let found = findDiagnostic(view.state.field(lintState).diagnostics, diagnostic);\n            if (found)\n                action.apply(view, found.from, found.to);\n        };\n        let { name } = action, keyIndex = keys[i] ? name.indexOf(keys[i]) : -1;\n        let nameElt = keyIndex < 0 ? name : [name.slice(0, keyIndex),\n            elt(\"u\", name.slice(keyIndex, keyIndex + 1)),\n            name.slice(keyIndex + 1)];\n        return elt(\"button\", {\n            type: \"button\",\n            class: \"cm-diagnosticAction\",\n            onclick: click,\n            onmousedown: click,\n            \"aria-label\": ` Action: ${name}${keyIndex < 0 ? \"\" : ` (access key \"${keys[i]})\"`}.`\n        }, nameElt);\n    }), diagnostic.source && elt(\"div\", { class: \"cm-diagnosticSource\" }, diagnostic.source));\n}\nclass DiagnosticWidget extends WidgetType {\n    constructor(diagnostic) {\n        super();\n        this.diagnostic = diagnostic;\n    }\n    eq(other) { return other.diagnostic == this.diagnostic; }\n    toDOM() {\n        return elt(\"span\", { class: \"cm-lintPoint cm-lintPoint-\" + this.diagnostic.severity });\n    }\n}\nclass PanelItem {\n    constructor(view, diagnostic) {\n        this.diagnostic = diagnostic;\n        this.id = \"item_\" + Math.floor(Math.random() * 0xffffffff).toString(16);\n        this.dom = renderDiagnostic(view, diagnostic, true);\n        this.dom.id = this.id;\n        this.dom.setAttribute(\"role\", \"option\");\n    }\n}\nclass LintPanel {\n    constructor(view) {\n        this.view = view;\n        this.items = [];\n        let onkeydown = (event) => {\n            if (event.keyCode == 27) { // Escape\n                closeLintPanel(this.view);\n                this.view.focus();\n            }\n            else if (event.keyCode == 38 || event.keyCode == 33) { // ArrowUp, PageUp\n                this.moveSelection((this.selectedIndex - 1 + this.items.length) % this.items.length);\n            }\n            else if (event.keyCode == 40 || event.keyCode == 34) { // ArrowDown, PageDown\n                this.moveSelection((this.selectedIndex + 1) % this.items.length);\n            }\n            else if (event.keyCode == 36) { // Home\n                this.moveSelection(0);\n            }\n            else if (event.keyCode == 35) { // End\n                this.moveSelection(this.items.length - 1);\n            }\n            else if (event.keyCode == 13) { // Enter\n                this.view.focus();\n            }\n            else if (event.keyCode >= 65 && event.keyCode <= 90 && this.selectedIndex >= 0) { // A-Z\n                let { diagnostic } = this.items[this.selectedIndex], keys = assignKeys(diagnostic.actions);\n                for (let i = 0; i < keys.length; i++)\n                    if (keys[i].toUpperCase().charCodeAt(0) == event.keyCode) {\n                        let found = findDiagnostic(this.view.state.field(lintState).diagnostics, diagnostic);\n                        if (found)\n                            diagnostic.actions[i].apply(view, found.from, found.to);\n                    }\n            }\n            else {\n                return;\n            }\n            event.preventDefault();\n        };\n        let onclick = (event) => {\n            for (let i = 0; i < this.items.length; i++) {\n                if (this.items[i].dom.contains(event.target))\n                    this.moveSelection(i);\n            }\n        };\n        this.list = elt(\"ul\", {\n            tabIndex: 0,\n            role: \"listbox\",\n            \"aria-label\": this.view.state.phrase(\"Diagnostics\"),\n            onkeydown,\n            onclick\n        });\n        this.dom = elt(\"div\", { class: \"cm-panel-lint\" }, this.list, elt(\"button\", {\n            type: \"button\",\n            name: \"close\",\n            \"aria-label\": this.view.state.phrase(\"close\"),\n            onclick: () => closeLintPanel(this.view)\n        }, \"×\"));\n        this.update();\n    }\n    get selectedIndex() {\n        let selected = this.view.state.field(lintState).selected;\n        if (!selected)\n            return -1;\n        for (let i = 0; i < this.items.length; i++)\n            if (this.items[i].diagnostic == selected.diagnostic)\n                return i;\n        return -1;\n    }\n    update() {\n        let { diagnostics, selected } = this.view.state.field(lintState);\n        let i = 0, needsSync = false, newSelectedItem = null;\n        diagnostics.between(0, this.view.state.doc.length, (_start, _end, { spec }) => {\n            let found = -1, item;\n            for (let j = i; j < this.items.length; j++)\n                if (this.items[j].diagnostic == spec.diagnostic) {\n                    found = j;\n                    break;\n                }\n            if (found < 0) {\n                item = new PanelItem(this.view, spec.diagnostic);\n                this.items.splice(i, 0, item);\n                needsSync = true;\n            }\n            else {\n                item = this.items[found];\n                if (found > i) {\n                    this.items.splice(i, found - i);\n                    needsSync = true;\n                }\n            }\n            if (selected && item.diagnostic == selected.diagnostic) {\n                if (!item.dom.hasAttribute(\"aria-selected\")) {\n                    item.dom.setAttribute(\"aria-selected\", \"true\");\n                    newSelectedItem = item;\n                }\n            }\n            else if (item.dom.hasAttribute(\"aria-selected\")) {\n                item.dom.removeAttribute(\"aria-selected\");\n            }\n            i++;\n        });\n        while (i < this.items.length && !(this.items.length == 1 && this.items[0].diagnostic.from < 0)) {\n            needsSync = true;\n            this.items.pop();\n        }\n        if (this.items.length == 0) {\n            this.items.push(new PanelItem(this.view, {\n                from: -1, to: -1,\n                severity: \"info\",\n                message: this.view.state.phrase(\"No diagnostics\")\n            }));\n            needsSync = true;\n        }\n        if (newSelectedItem) {\n            this.list.setAttribute(\"aria-activedescendant\", newSelectedItem.id);\n            this.view.requestMeasure({\n                key: this,\n                read: () => ({ sel: newSelectedItem.dom.getBoundingClientRect(), panel: this.list.getBoundingClientRect() }),\n                write: ({ sel, panel }) => {\n                    if (sel.top < panel.top)\n                        this.list.scrollTop -= panel.top - sel.top;\n                    else if (sel.bottom > panel.bottom)\n                        this.list.scrollTop += sel.bottom - panel.bottom;\n                }\n            });\n        }\n        else if (this.selectedIndex < 0) {\n            this.list.removeAttribute(\"aria-activedescendant\");\n        }\n        if (needsSync)\n            this.sync();\n    }\n    sync() {\n        let domPos = this.list.firstChild;\n        function rm() {\n            let prev = domPos;\n            domPos = prev.nextSibling;\n            prev.remove();\n        }\n        for (let item of this.items) {\n            if (item.dom.parentNode == this.list) {\n                while (domPos != item.dom)\n                    rm();\n                domPos = item.dom.nextSibling;\n            }\n            else {\n                this.list.insertBefore(item.dom, domPos);\n            }\n        }\n        while (domPos)\n            rm();\n    }\n    moveSelection(selectedIndex) {\n        if (this.selectedIndex < 0)\n            return;\n        let field = this.view.state.field(lintState);\n        let selection = findDiagnostic(field.diagnostics, this.items[selectedIndex].diagnostic);\n        if (!selection)\n            return;\n        this.view.dispatch({\n            selection: { anchor: selection.from, head: selection.to },\n            scrollIntoView: true,\n            effects: movePanelSelection.of(selection)\n        });\n    }\n    static open(view) { return new LintPanel(view); }\n}\nfunction svg(content, attrs = `viewBox=\"0 0 40 40\"`) {\n    return `url('data:image/svg+xml,<svg xmlns=\"http://www.w3.org/2000/svg\" ${attrs}>${encodeURIComponent(content)}</svg>')`;\n}\nfunction underline(color) {\n    return svg(`<path d=\"m0 2.5 l2 -1.5 l1 0 l2 1.5 l1 0\" stroke=\"${color}\" fill=\"none\" stroke-width=\".7\"/>`, `width=\"6\" height=\"3\"`);\n}\nconst baseTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-diagnostic\": {\n        padding: \"3px 6px 3px 8px\",\n        marginLeft: \"-1px\",\n        display: \"block\",\n        whiteSpace: \"pre-wrap\"\n    },\n    \".cm-diagnostic-error\": { borderLeft: \"5px solid #d11\" },\n    \".cm-diagnostic-warning\": { borderLeft: \"5px solid orange\" },\n    \".cm-diagnostic-info\": { borderLeft: \"5px solid #999\" },\n    \".cm-diagnosticAction\": {\n        font: \"inherit\",\n        border: \"none\",\n        padding: \"2px 4px\",\n        backgroundColor: \"#444\",\n        color: \"white\",\n        borderRadius: \"3px\",\n        marginLeft: \"8px\"\n    },\n    \".cm-diagnosticSource\": {\n        fontSize: \"70%\",\n        opacity: .7\n    },\n    \".cm-lintRange\": {\n        backgroundPosition: \"left bottom\",\n        backgroundRepeat: \"repeat-x\",\n        paddingBottom: \"0.7px\",\n    },\n    \".cm-lintRange-error\": { backgroundImage: /*@__PURE__*/underline(\"#d11\") },\n    \".cm-lintRange-warning\": { backgroundImage: /*@__PURE__*/underline(\"orange\") },\n    \".cm-lintRange-info\": { backgroundImage: /*@__PURE__*/underline(\"#999\") },\n    \".cm-lintRange-active\": { backgroundColor: \"#ffdd9980\" },\n    \".cm-tooltip-lint\": {\n        padding: 0,\n        margin: 0\n    },\n    \".cm-lintPoint\": {\n        position: \"relative\",\n        \"&:after\": {\n            content: '\"\"',\n            position: \"absolute\",\n            bottom: 0,\n            left: \"-2px\",\n            borderLeft: \"3px solid transparent\",\n            borderRight: \"3px solid transparent\",\n            borderBottom: \"4px solid #d11\"\n        }\n    },\n    \".cm-lintPoint-warning\": {\n        \"&:after\": { borderBottomColor: \"orange\" }\n    },\n    \".cm-lintPoint-info\": {\n        \"&:after\": { borderBottomColor: \"#999\" }\n    },\n    \".cm-panel.cm-panel-lint\": {\n        position: \"relative\",\n        \"& ul\": {\n            maxHeight: \"100px\",\n            overflowY: \"auto\",\n            \"& [aria-selected]\": {\n                backgroundColor: \"#ddd\",\n                \"& u\": { textDecoration: \"underline\" }\n            },\n            \"&:focus [aria-selected]\": {\n                background_fallback: \"#bdf\",\n                backgroundColor: \"Highlight\",\n                color_fallback: \"white\",\n                color: \"HighlightText\"\n            },\n            \"& u\": { textDecoration: \"none\" },\n            padding: 0,\n            margin: 0\n        },\n        \"& [name=close]\": {\n            position: \"absolute\",\n            top: \"0\",\n            right: \"2px\",\n            background: \"inherit\",\n            border: \"none\",\n            font: \"inherit\",\n            padding: 0,\n            margin: 0\n        }\n    }\n});\nclass LintGutterMarker extends GutterMarker {\n    constructor(diagnostics) {\n        super();\n        this.diagnostics = diagnostics;\n        this.severity = diagnostics.reduce((max, d) => {\n            let s = d.severity;\n            return s == \"error\" || s == \"warning\" && max == \"info\" ? s : max;\n        }, \"info\");\n    }\n    toDOM(view) {\n        let elt = document.createElement(\"div\");\n        elt.className = \"cm-lint-marker cm-lint-marker-\" + this.severity;\n        elt.onmouseover = () => gutterMarkerMouseOver(view, elt, this.diagnostics);\n        return elt;\n    }\n}\nfunction trackHoverOn(view, marker) {\n    let mousemove = (event) => {\n        let rect = marker.getBoundingClientRect();\n        if (event.clientX > rect.left - 10 /* Margin */ && event.clientX < rect.right + 10 /* Margin */ &&\n            event.clientY > rect.top - 10 /* Margin */ && event.clientY < rect.bottom + 10 /* Margin */)\n            return;\n        for (let target = event.target; target; target = target.parentNode) {\n            if (target.nodeType == 1 && target.classList.contains(\"cm-tooltip-lint\"))\n                return;\n        }\n        window.removeEventListener(\"mousemove\", mousemove);\n        if (view.state.field(lintGutterTooltip))\n            view.dispatch({ effects: setLintGutterTooltip.of(null) });\n    };\n    window.addEventListener(\"mousemove\", mousemove);\n}\nfunction gutterMarkerMouseOver(view, marker, diagnostics) {\n    function hovered() {\n        let line = view.visualLineAtHeight(marker.getBoundingClientRect().top + 5);\n        const linePos = view.coordsAtPos(line.from), markerRect = marker.getBoundingClientRect();\n        if (linePos) {\n            view.dispatch({ effects: setLintGutterTooltip.of({\n                    pos: line.from,\n                    above: false,\n                    create() {\n                        return {\n                            dom: diagnosticsTooltip(view, diagnostics),\n                            offset: { x: markerRect.left - linePos.left, y: 0 }\n                        };\n                    }\n                }) });\n        }\n        marker.onmouseout = marker.onmousemove = null;\n        trackHoverOn(view, marker);\n    }\n    let hoverTimeout = setTimeout(hovered, 600 /* Time */);\n    marker.onmouseout = () => {\n        clearTimeout(hoverTimeout);\n        marker.onmouseout = marker.onmousemove = null;\n    };\n    marker.onmousemove = () => {\n        clearTimeout(hoverTimeout);\n        hoverTimeout = setTimeout(hovered, 600 /* Time */);\n    };\n}\nfunction markersForDiagnostics(doc, diagnostics) {\n    let byLine = Object.create(null);\n    for (let diagnostic of diagnostics) {\n        let line = doc.lineAt(diagnostic.from);\n        (byLine[line.from] || (byLine[line.from] = [])).push(diagnostic);\n    }\n    let markers = [];\n    for (let line in byLine) {\n        markers.push(new LintGutterMarker(byLine[line]).range(+line));\n    }\n    return RangeSet.of(markers, true);\n}\nconst lintGutterExtension = /*@__PURE__*/gutter({\n    class: \"cm-gutter-lint\",\n    markers: view => view.state.field(lintGutterMarkers),\n});\nconst lintGutterMarkers = /*@__PURE__*/StateField.define({\n    create() {\n        return RangeSet.empty;\n    },\n    update(markers, tr) {\n        markers = markers.map(tr.changes);\n        for (let effect of tr.effects)\n            if (effect.is(setDiagnosticsEffect)) {\n                markers = markersForDiagnostics(tr.state.doc, effect.value);\n            }\n        return markers;\n    }\n});\nconst setLintGutterTooltip = /*@__PURE__*/StateEffect.define();\nconst lintGutterTooltip = /*@__PURE__*/StateField.define({\n    create() { return null; },\n    update(tooltip, tr) {\n        if (tooltip && tr.docChanged)\n            tooltip = Object.assign(Object.assign({}, tooltip), { pos: tr.changes.mapPos(tooltip.pos) });\n        return tr.effects.reduce((t, e) => e.is(setLintGutterTooltip) ? e.value : t, tooltip);\n    },\n    provide: field => showTooltip.from(field)\n});\nconst lintGutterTheme = /*@__PURE__*/EditorView.baseTheme({\n    \".cm-gutter-lint\": {\n        width: \"1.4em\",\n        \"& .cm-gutterElement\": {\n            padding: \"0 .2em\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            justifyContent: \"center\",\n        }\n    },\n    \".cm-lint-marker\": {\n        width: \"1em\",\n        height: \"1em\",\n    },\n    \".cm-lint-marker-info\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#aaf\" stroke=\"#77e\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M5 5L35 5L35 35L5 35Z\"/>`)\n    },\n    \".cm-lint-marker-warning\": {\n        content: /*@__PURE__*/svg(`<path fill=\"#fe8\" stroke=\"#fd7\" stroke-width=\"6\" stroke-linejoin=\"round\" d=\"M20 6L37 35L3 35Z\"/>`),\n    },\n    \".cm-lint-marker-error:before\": {\n        content: /*@__PURE__*/svg(`<circle cx=\"20\" cy=\"20\" r=\"15\" fill=\"#f87\" stroke=\"#f43\" stroke-width=\"6\"/>`)\n    },\n});\n/**\nReturns an extension that installs a gutter showing markers for\neach line that has diagnostics, which can be hovered over to see\nthe diagnostics.\n*/\nfunction lintGutter() {\n    return [lintGutterMarkers, lintGutterExtension, lintGutterTheme, lintGutterTooltip];\n}\n\nexport { closeLintPanel, diagnosticCount, forceLinting, lintGutter, lintKeymap, linter, nextDiagnostic, openLintPanel, setDiagnostics, setDiagnosticsEffect };\n","import { highlightSpecialChars, drawSelection, dropCursor, highlightActiveLine, keymap } from '@codemirror/view';\nexport { EditorView } from '@codemirror/view';\nimport { EditorState } from '@codemirror/state';\nexport { EditorState } from '@codemirror/state';\nimport { history, historyKeymap } from '@codemirror/history';\nimport { foldGutter, foldKeymap } from '@codemirror/fold';\nimport { indentOnInput } from '@codemirror/language';\nimport { lineNumbers, highlightActiveLineGutter } from '@codemirror/gutter';\nimport { defaultKeymap } from '@codemirror/commands';\nimport { bracketMatching } from '@codemirror/matchbrackets';\nimport { closeBrackets, closeBracketsKeymap } from '@codemirror/closebrackets';\nimport { highlightSelectionMatches, searchKeymap } from '@codemirror/search';\nimport { autocompletion, completionKeymap } from '@codemirror/autocomplete';\nimport { commentKeymap } from '@codemirror/comment';\nimport { rectangularSelection } from '@codemirror/rectangular-selection';\nimport { defaultHighlightStyle } from '@codemirror/highlight';\nimport { lintKeymap } from '@codemirror/lint';\n\n/**\nThis is an extension value that just pulls together a whole lot of\nextensions that you might want in a basic editor. It is meant as a\nconvenient helper to quickly set up CodeMirror without installing\nand importing a lot of packages.\n\nSpecifically, it includes...\n\n - [the default command bindings](https://codemirror.net/6/docs/ref/#commands.defaultKeymap)\n - [line numbers](https://codemirror.net/6/docs/ref/#gutter.lineNumbers)\n - [special character highlighting](https://codemirror.net/6/docs/ref/#view.highlightSpecialChars)\n - [the undo history](https://codemirror.net/6/docs/ref/#history.history)\n - [a fold gutter](https://codemirror.net/6/docs/ref/#fold.foldGutter)\n - [custom selection drawing](https://codemirror.net/6/docs/ref/#view.drawSelection)\n - [drop cursor](https://codemirror.net/6/docs/ref/#view.dropCursor)\n - [multiple selections](https://codemirror.net/6/docs/ref/#state.EditorState^allowMultipleSelections)\n - [reindentation on input](https://codemirror.net/6/docs/ref/#language.indentOnInput)\n - [the default highlight style](https://codemirror.net/6/docs/ref/#highlight.defaultHighlightStyle) (as fallback)\n - [bracket matching](https://codemirror.net/6/docs/ref/#matchbrackets.bracketMatching)\n - [bracket closing](https://codemirror.net/6/docs/ref/#closebrackets.closeBrackets)\n - [autocompletion](https://codemirror.net/6/docs/ref/#autocomplete.autocompletion)\n - [rectangular selection](https://codemirror.net/6/docs/ref/#rectangular-selection.rectangularSelection)\n - [active line highlighting](https://codemirror.net/6/docs/ref/#view.highlightActiveLine)\n - [active line gutter highlighting](https://codemirror.net/6/docs/ref/#gutter.highlightActiveLineGutter)\n - [selection match highlighting](https://codemirror.net/6/docs/ref/#search.highlightSelectionMatches)\n - [search](https://codemirror.net/6/docs/ref/#search.searchKeymap)\n - [commenting](https://codemirror.net/6/docs/ref/#comment.commentKeymap)\n - [linting](https://codemirror.net/6/docs/ref/#lint.lintKeymap)\n\n(You'll probably want to add some language package to your setup\ntoo.)\n\nThis package does not allow customization. The idea is that, once\nyou decide you want to configure your editor more precisely, you\ntake this package's source (which is just a bunch of imports and\nan array literal), copy it into your own code, and adjust it as\ndesired.\n*/\nconst basicSetup = [\n    /*@__PURE__*/lineNumbers(),\n    /*@__PURE__*/highlightActiveLineGutter(),\n    /*@__PURE__*/highlightSpecialChars(),\n    /*@__PURE__*/history(),\n    /*@__PURE__*/foldGutter(),\n    /*@__PURE__*/drawSelection(),\n    /*@__PURE__*/dropCursor(),\n    /*@__PURE__*/EditorState.allowMultipleSelections.of(true),\n    /*@__PURE__*/indentOnInput(),\n    defaultHighlightStyle.fallback,\n    /*@__PURE__*/bracketMatching(),\n    /*@__PURE__*/closeBrackets(),\n    /*@__PURE__*/autocompletion(),\n    /*@__PURE__*/rectangularSelection(),\n    /*@__PURE__*/highlightActiveLine(),\n    /*@__PURE__*/highlightSelectionMatches(),\n    /*@__PURE__*/keymap.of([\n        ...closeBracketsKeymap,\n        ...defaultKeymap,\n        ...searchKeymap,\n        ...historyKeymap,\n        ...foldKeymap,\n        ...commentKeymap,\n        ...completionKeymap,\n        ...lintKeymap\n    ])\n];\n\nexport { basicSetup };\n","import { Parser, NodeSet, NodeType, DefaultBufferLength, NodeProp, Tree } from '@lezer/common';\n\n/// A parse stack. These are used internally by the parser to track\n/// parsing progress. They also provide some properties and methods\n/// that external code such as a tokenizer can use to get information\n/// about the parse state.\nclass Stack {\n    /// @internal\n    constructor(\n    /// The parse that this stack is part of @internal\n    p, \n    /// Holds state, input pos, buffer index triplets for all but the\n    /// top state @internal\n    stack, \n    /// The current parse state @internal\n    state, \n    // The position at which the next reduce should take place. This\n    // can be less than `this.pos` when skipped expressions have been\n    // added to the stack (which should be moved outside of the next\n    // reduction)\n    /// @internal\n    reducePos, \n    /// The input position up to which this stack has parsed.\n    pos, \n    /// The dynamic score of the stack, including dynamic precedence\n    /// and error-recovery penalties\n    /// @internal\n    score, \n    // The output buffer. Holds (type, start, end, size) quads\n    // representing nodes created by the parser, where `size` is\n    // amount of buffer array entries covered by this node.\n    /// @internal\n    buffer, \n    // The base offset of the buffer. When stacks are split, the split\n    // instance shared the buffer history with its parent up to\n    // `bufferBase`, which is the absolute offset (including the\n    // offset of previous splits) into the buffer at which this stack\n    // starts writing.\n    /// @internal\n    bufferBase, \n    /// @internal\n    curContext, \n    /// @internal\n    lookAhead = 0, \n    // A parent stack from which this was split off, if any. This is\n    // set up so that it always points to a stack that has some\n    // additional buffer content, never to a stack with an equal\n    // `bufferBase`.\n    /// @internal\n    parent) {\n        this.p = p;\n        this.stack = stack;\n        this.state = state;\n        this.reducePos = reducePos;\n        this.pos = pos;\n        this.score = score;\n        this.buffer = buffer;\n        this.bufferBase = bufferBase;\n        this.curContext = curContext;\n        this.lookAhead = lookAhead;\n        this.parent = parent;\n    }\n    /// @internal\n    toString() {\n        return `[${this.stack.filter((_, i) => i % 3 == 0).concat(this.state)}]@${this.pos}${this.score ? \"!\" + this.score : \"\"}`;\n    }\n    // Start an empty stack\n    /// @internal\n    static start(p, state, pos = 0) {\n        let cx = p.parser.context;\n        return new Stack(p, [], state, pos, pos, 0, [], 0, cx ? new StackContext(cx, cx.start) : null, 0, null);\n    }\n    /// The stack's current [context](#lr.ContextTracker) value, if\n    /// any. Its type will depend on the context tracker's type\n    /// parameter, or it will be `null` if there is no context\n    /// tracker.\n    get context() { return this.curContext ? this.curContext.context : null; }\n    // Push a state onto the stack, tracking its start position as well\n    // as the buffer base at that point.\n    /// @internal\n    pushState(state, start) {\n        this.stack.push(this.state, start, this.bufferBase + this.buffer.length);\n        this.state = state;\n    }\n    // Apply a reduce action\n    /// @internal\n    reduce(action) {\n        let depth = action >> 19 /* ReduceDepthShift */, type = action & 65535 /* ValueMask */;\n        let { parser } = this.p;\n        let dPrec = parser.dynamicPrecedence(type);\n        if (dPrec)\n            this.score += dPrec;\n        if (depth == 0) {\n            // Zero-depth reductions are a special case—they add stuff to\n            // the stack without popping anything off.\n            if (type < parser.minRepeatTerm)\n                this.storeNode(type, this.reducePos, this.reducePos, 4, true);\n            this.pushState(parser.getGoto(this.state, type, true), this.reducePos);\n            this.reduceContext(type, this.reducePos);\n            return;\n        }\n        // Find the base index into `this.stack`, content after which will\n        // be dropped. Note that with `StayFlag` reductions we need to\n        // consume two extra frames (the dummy parent node for the skipped\n        // expression and the state that we'll be staying in, which should\n        // be moved to `this.state`).\n        let base = this.stack.length - ((depth - 1) * 3) - (action & 262144 /* StayFlag */ ? 6 : 0);\n        let start = this.stack[base - 2];\n        let bufferBase = this.stack[base - 1], count = this.bufferBase + this.buffer.length - bufferBase;\n        // Store normal terms or `R -> R R` repeat reductions\n        if (type < parser.minRepeatTerm || (action & 131072 /* RepeatFlag */)) {\n            let pos = parser.stateFlag(this.state, 1 /* Skipped */) ? this.pos : this.reducePos;\n            this.storeNode(type, start, pos, count + 4, true);\n        }\n        if (action & 262144 /* StayFlag */) {\n            this.state = this.stack[base];\n        }\n        else {\n            let baseStateID = this.stack[base - 3];\n            this.state = parser.getGoto(baseStateID, type, true);\n        }\n        while (this.stack.length > base)\n            this.stack.pop();\n        this.reduceContext(type, start);\n    }\n    // Shift a value into the buffer\n    /// @internal\n    storeNode(term, start, end, size = 4, isReduce = false) {\n        if (term == 0 /* Err */) { // Try to omit/merge adjacent error nodes\n            let cur = this, top = this.buffer.length;\n            if (top == 0 && cur.parent) {\n                top = cur.bufferBase - cur.parent.bufferBase;\n                cur = cur.parent;\n            }\n            if (top > 0 && cur.buffer[top - 4] == 0 /* Err */ && cur.buffer[top - 1] > -1) {\n                if (start == end)\n                    return;\n                if (cur.buffer[top - 2] >= start) {\n                    cur.buffer[top - 2] = end;\n                    return;\n                }\n            }\n        }\n        if (!isReduce || this.pos == end) { // Simple case, just append\n            this.buffer.push(term, start, end, size);\n        }\n        else { // There may be skipped nodes that have to be moved forward\n            let index = this.buffer.length;\n            if (index > 0 && this.buffer[index - 4] != 0 /* Err */)\n                while (index > 0 && this.buffer[index - 2] > end) {\n                    // Move this record forward\n                    this.buffer[index] = this.buffer[index - 4];\n                    this.buffer[index + 1] = this.buffer[index - 3];\n                    this.buffer[index + 2] = this.buffer[index - 2];\n                    this.buffer[index + 3] = this.buffer[index - 1];\n                    index -= 4;\n                    if (size > 4)\n                        size -= 4;\n                }\n            this.buffer[index] = term;\n            this.buffer[index + 1] = start;\n            this.buffer[index + 2] = end;\n            this.buffer[index + 3] = size;\n        }\n    }\n    // Apply a shift action\n    /// @internal\n    shift(action, next, nextEnd) {\n        let start = this.pos;\n        if (action & 131072 /* GotoFlag */) {\n            this.pushState(action & 65535 /* ValueMask */, this.pos);\n        }\n        else if ((action & 262144 /* StayFlag */) == 0) { // Regular shift\n            let nextState = action, { parser } = this.p;\n            if (nextEnd > this.pos || next <= parser.maxNode) {\n                this.pos = nextEnd;\n                if (!parser.stateFlag(nextState, 1 /* Skipped */))\n                    this.reducePos = nextEnd;\n            }\n            this.pushState(nextState, start);\n            this.shiftContext(next, start);\n            if (next <= parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n        else { // Shift-and-stay, which means this is a skipped token\n            this.pos = nextEnd;\n            this.shiftContext(next, start);\n            if (next <= this.p.parser.maxNode)\n                this.buffer.push(next, start, nextEnd, 4);\n        }\n    }\n    // Apply an action\n    /// @internal\n    apply(action, next, nextEnd) {\n        if (action & 65536 /* ReduceFlag */)\n            this.reduce(action);\n        else\n            this.shift(action, next, nextEnd);\n    }\n    // Add a prebuilt (reused) node into the buffer. @internal\n    useNode(value, next) {\n        let index = this.p.reused.length - 1;\n        if (index < 0 || this.p.reused[index] != value) {\n            this.p.reused.push(value);\n            index++;\n        }\n        let start = this.pos;\n        this.reducePos = this.pos = start + value.length;\n        this.pushState(next, start);\n        this.buffer.push(index, start, this.reducePos, -1 /* size == -1 means this is a reused value */);\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reuse(this.curContext.context, value, this, this.p.stream.reset(this.pos - value.length)));\n    }\n    // Split the stack. Due to the buffer sharing and the fact\n    // that `this.stack` tends to stay quite shallow, this isn't very\n    // expensive.\n    /// @internal\n    split() {\n        let parent = this;\n        let off = parent.buffer.length;\n        // Because the top of the buffer (after this.pos) may be mutated\n        // to reorder reductions and skipped tokens, and shared buffers\n        // should be immutable, this copies any outstanding skipped tokens\n        // to the new buffer, and puts the base pointer before them.\n        while (off > 0 && parent.buffer[off - 2] > parent.reducePos)\n            off -= 4;\n        let buffer = parent.buffer.slice(off), base = parent.bufferBase + off;\n        // Make sure parent points to an actual parent with content, if there is such a parent.\n        while (parent && base == parent.bufferBase)\n            parent = parent.parent;\n        return new Stack(this.p, this.stack.slice(), this.state, this.reducePos, this.pos, this.score, buffer, base, this.curContext, this.lookAhead, parent);\n    }\n    // Try to recover from an error by 'deleting' (ignoring) one token.\n    /// @internal\n    recoverByDelete(next, nextEnd) {\n        let isNode = next <= this.p.parser.maxNode;\n        if (isNode)\n            this.storeNode(next, this.pos, nextEnd, 4);\n        this.storeNode(0 /* Err */, this.pos, nextEnd, isNode ? 8 : 4);\n        this.pos = this.reducePos = nextEnd;\n        this.score -= 190 /* Delete */;\n    }\n    /// Check if the given term would be able to be shifted (optionally\n    /// after some reductions) on this stack. This can be useful for\n    /// external tokenizers that want to make sure they only provide a\n    /// given token when it applies.\n    canShift(term) {\n        for (let sim = new SimulatedStack(this);;) {\n            let action = this.p.parser.stateSlot(sim.state, 4 /* DefaultReduce */) || this.p.parser.hasAction(sim.state, term);\n            if ((action & 65536 /* ReduceFlag */) == 0)\n                return true;\n            if (action == 0)\n                return false;\n            sim.reduce(action);\n        }\n    }\n    // Apply up to Recover.MaxNext recovery actions that conceptually\n    // inserts some missing token or rule.\n    /// @internal\n    recoverByInsert(next) {\n        if (this.stack.length >= 300 /* MaxInsertStackDepth */)\n            return [];\n        let nextStates = this.p.parser.nextStates(this.state);\n        if (nextStates.length > 4 /* MaxNext */ << 1 || this.stack.length >= 120 /* DampenInsertStackDepth */) {\n            let best = [];\n            for (let i = 0, s; i < nextStates.length; i += 2) {\n                if ((s = nextStates[i + 1]) != this.state && this.p.parser.hasAction(s, next))\n                    best.push(nextStates[i], s);\n            }\n            if (this.stack.length < 120 /* DampenInsertStackDepth */)\n                for (let i = 0; best.length < 4 /* MaxNext */ << 1 && i < nextStates.length; i += 2) {\n                    let s = nextStates[i + 1];\n                    if (!best.some((v, i) => (i & 1) && v == s))\n                        best.push(nextStates[i], s);\n                }\n            nextStates = best;\n        }\n        let result = [];\n        for (let i = 0; i < nextStates.length && result.length < 4 /* MaxNext */; i += 2) {\n            let s = nextStates[i + 1];\n            if (s == this.state)\n                continue;\n            let stack = this.split();\n            stack.storeNode(0 /* Err */, stack.pos, stack.pos, 4, true);\n            stack.pushState(s, this.pos);\n            stack.shiftContext(nextStates[i], this.pos);\n            stack.score -= 200 /* Insert */;\n            result.push(stack);\n        }\n        return result;\n    }\n    // Force a reduce, if possible. Return false if that can't\n    // be done.\n    /// @internal\n    forceReduce() {\n        let reduce = this.p.parser.stateSlot(this.state, 5 /* ForcedReduce */);\n        if ((reduce & 65536 /* ReduceFlag */) == 0)\n            return false;\n        let { parser } = this.p;\n        if (!parser.validAction(this.state, reduce)) {\n            let depth = reduce >> 19 /* ReduceDepthShift */, term = reduce & 65535 /* ValueMask */;\n            let target = this.stack.length - depth * 3;\n            if (target < 0 || parser.getGoto(this.stack[target], term, false) < 0)\n                return false;\n            this.storeNode(0 /* Err */, this.reducePos, this.reducePos, 4, true);\n            this.score -= 100 /* Reduce */;\n        }\n        this.reduce(reduce);\n        return true;\n    }\n    /// @internal\n    forceAll() {\n        while (!this.p.parser.stateFlag(this.state, 2 /* Accepting */)) {\n            if (!this.forceReduce()) {\n                this.storeNode(0 /* Err */, this.pos, this.pos, 4, true);\n                break;\n            }\n        }\n        return this;\n    }\n    /// Check whether this state has no further actions (assumed to be a direct descendant of the\n    /// top state, since any other states must be able to continue\n    /// somehow). @internal\n    get deadEnd() {\n        if (this.stack.length != 3)\n            return false;\n        let { parser } = this.p;\n        return parser.data[parser.stateSlot(this.state, 1 /* Actions */)] == 65535 /* End */ &&\n            !parser.stateSlot(this.state, 4 /* DefaultReduce */);\n    }\n    /// Restart the stack (put it back in its start state). Only safe\n    /// when this.stack.length == 3 (state is directly below the top\n    /// state). @internal\n    restart() {\n        this.state = this.stack[0];\n        this.stack.length = 0;\n    }\n    /// @internal\n    sameState(other) {\n        if (this.state != other.state || this.stack.length != other.stack.length)\n            return false;\n        for (let i = 0; i < this.stack.length; i += 3)\n            if (this.stack[i] != other.stack[i])\n                return false;\n        return true;\n    }\n    /// Get the parser used by this stack.\n    get parser() { return this.p.parser; }\n    /// Test whether a given dialect (by numeric ID, as exported from\n    /// the terms file) is enabled.\n    dialectEnabled(dialectID) { return this.p.parser.dialect.flags[dialectID]; }\n    shiftContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.shift(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    reduceContext(term, start) {\n        if (this.curContext)\n            this.updateContext(this.curContext.tracker.reduce(this.curContext.context, term, this, this.p.stream.reset(start)));\n    }\n    /// @internal\n    emitContext() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -3)\n            this.buffer.push(this.curContext.hash, this.reducePos, this.reducePos, -3);\n    }\n    /// @internal\n    emitLookAhead() {\n        let last = this.buffer.length - 1;\n        if (last < 0 || this.buffer[last] != -4)\n            this.buffer.push(this.lookAhead, this.reducePos, this.reducePos, -4);\n    }\n    updateContext(context) {\n        if (context != this.curContext.context) {\n            let newCx = new StackContext(this.curContext.tracker, context);\n            if (newCx.hash != this.curContext.hash)\n                this.emitContext();\n            this.curContext = newCx;\n        }\n    }\n    /// @internal\n    setLookAhead(lookAhead) {\n        if (lookAhead > this.lookAhead) {\n            this.emitLookAhead();\n            this.lookAhead = lookAhead;\n        }\n    }\n    /// @internal\n    close() {\n        if (this.curContext && this.curContext.tracker.strict)\n            this.emitContext();\n        if (this.lookAhead > 0)\n            this.emitLookAhead();\n    }\n}\nclass StackContext {\n    constructor(tracker, context) {\n        this.tracker = tracker;\n        this.context = context;\n        this.hash = tracker.strict ? tracker.hash(context) : 0;\n    }\n}\nvar Recover;\n(function (Recover) {\n    Recover[Recover[\"Insert\"] = 200] = \"Insert\";\n    Recover[Recover[\"Delete\"] = 190] = \"Delete\";\n    Recover[Recover[\"Reduce\"] = 100] = \"Reduce\";\n    Recover[Recover[\"MaxNext\"] = 4] = \"MaxNext\";\n    Recover[Recover[\"MaxInsertStackDepth\"] = 300] = \"MaxInsertStackDepth\";\n    Recover[Recover[\"DampenInsertStackDepth\"] = 120] = \"DampenInsertStackDepth\";\n})(Recover || (Recover = {}));\n// Used to cheaply run some reductions to scan ahead without mutating\n// an entire stack\nclass SimulatedStack {\n    constructor(start) {\n        this.start = start;\n        this.state = start.state;\n        this.stack = start.stack;\n        this.base = this.stack.length;\n    }\n    reduce(action) {\n        let term = action & 65535 /* ValueMask */, depth = action >> 19 /* ReduceDepthShift */;\n        if (depth == 0) {\n            if (this.stack == this.start.stack)\n                this.stack = this.stack.slice();\n            this.stack.push(this.state, 0, 0);\n            this.base += 3;\n        }\n        else {\n            this.base -= (depth - 1) * 3;\n        }\n        let goto = this.start.p.parser.getGoto(this.stack[this.base - 3], term, true);\n        this.state = goto;\n    }\n}\n// This is given to `Tree.build` to build a buffer, and encapsulates\n// the parent-stack-walking necessary to read the nodes.\nclass StackBufferCursor {\n    constructor(stack, pos, index) {\n        this.stack = stack;\n        this.pos = pos;\n        this.index = index;\n        this.buffer = stack.buffer;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    static create(stack, pos = stack.bufferBase + stack.buffer.length) {\n        return new StackBufferCursor(stack, pos, pos - stack.bufferBase);\n    }\n    maybeNext() {\n        let next = this.stack.parent;\n        if (next != null) {\n            this.index = this.stack.bufferBase - next.bufferBase;\n            this.stack = next;\n            this.buffer = next.buffer;\n        }\n    }\n    get id() { return this.buffer[this.index - 4]; }\n    get start() { return this.buffer[this.index - 3]; }\n    get end() { return this.buffer[this.index - 2]; }\n    get size() { return this.buffer[this.index - 1]; }\n    next() {\n        this.index -= 4;\n        this.pos -= 4;\n        if (this.index == 0)\n            this.maybeNext();\n    }\n    fork() {\n        return new StackBufferCursor(this.stack, this.pos, this.index);\n    }\n}\n\nclass CachedToken {\n    constructor() {\n        this.start = -1;\n        this.value = -1;\n        this.end = -1;\n        this.extended = -1;\n        this.lookAhead = 0;\n        this.mask = 0;\n        this.context = 0;\n    }\n}\nconst nullToken = new CachedToken;\n/// [Tokenizers](#lr.ExternalTokenizer) interact with the input\n/// through this interface. It presents the input as a stream of\n/// characters, tracking lookahead and hiding the complexity of\n/// [ranges](#common.Parser.parse^ranges) from tokenizer code.\nclass InputStream {\n    /// @internal\n    constructor(\n    /// @internal\n    input, \n    /// @internal\n    ranges) {\n        this.input = input;\n        this.ranges = ranges;\n        /// @internal\n        this.chunk = \"\";\n        /// @internal\n        this.chunkOff = 0;\n        /// Backup chunk\n        this.chunk2 = \"\";\n        this.chunk2Pos = 0;\n        /// The character code of the next code unit in the input, or -1\n        /// when the stream is at the end of the input.\n        this.next = -1;\n        /// @internal\n        this.token = nullToken;\n        this.rangeIndex = 0;\n        this.pos = this.chunkPos = ranges[0].from;\n        this.range = ranges[0];\n        this.end = ranges[ranges.length - 1].to;\n        this.readNext();\n    }\n    resolveOffset(offset, assoc) {\n        let range = this.range, index = this.rangeIndex;\n        let pos = this.pos + offset;\n        while (pos < range.from) {\n            if (!index)\n                return null;\n            let next = this.ranges[--index];\n            pos -= range.from - next.to;\n            range = next;\n        }\n        while (assoc < 0 ? pos > range.to : pos >= range.to) {\n            if (index == this.ranges.length - 1)\n                return null;\n            let next = this.ranges[++index];\n            pos += next.from - range.to;\n            range = next;\n        }\n        return pos;\n    }\n    /// Look at a code unit near the stream position. `.peek(0)` equals\n    /// `.next`, `.peek(-1)` gives you the previous character, and so\n    /// on.\n    ///\n    /// Note that looking around during tokenizing creates dependencies\n    /// on potentially far-away content, which may reduce the\n    /// effectiveness incremental parsing—when looking forward—or even\n    /// cause invalid reparses when looking backward more than 25 code\n    /// units, since the library does not track lookbehind.\n    peek(offset) {\n        let idx = this.chunkOff + offset, pos, result;\n        if (idx >= 0 && idx < this.chunk.length) {\n            pos = this.pos + offset;\n            result = this.chunk.charCodeAt(idx);\n        }\n        else {\n            let resolved = this.resolveOffset(offset, 1);\n            if (resolved == null)\n                return -1;\n            pos = resolved;\n            if (pos >= this.chunk2Pos && pos < this.chunk2Pos + this.chunk2.length) {\n                result = this.chunk2.charCodeAt(pos - this.chunk2Pos);\n            }\n            else {\n                let i = this.rangeIndex, range = this.range;\n                while (range.to <= pos)\n                    range = this.ranges[++i];\n                this.chunk2 = this.input.chunk(this.chunk2Pos = pos);\n                if (pos + this.chunk2.length > range.to)\n                    this.chunk2 = this.chunk2.slice(0, range.to - pos);\n                result = this.chunk2.charCodeAt(0);\n            }\n        }\n        if (pos >= this.token.lookAhead)\n            this.token.lookAhead = pos + 1;\n        return result;\n    }\n    /// Accept a token. By default, the end of the token is set to the\n    /// current stream position, but you can pass an offset (relative to\n    /// the stream position) to change that.\n    acceptToken(token, endOffset = 0) {\n        let end = endOffset ? this.resolveOffset(endOffset, -1) : this.pos;\n        if (end == null || end < this.token.start)\n            throw new RangeError(\"Token end out of bounds\");\n        this.token.value = token;\n        this.token.end = end;\n    }\n    getChunk() {\n        if (this.pos >= this.chunk2Pos && this.pos < this.chunk2Pos + this.chunk2.length) {\n            let { chunk, chunkPos } = this;\n            this.chunk = this.chunk2;\n            this.chunkPos = this.chunk2Pos;\n            this.chunk2 = chunk;\n            this.chunk2Pos = chunkPos;\n            this.chunkOff = this.pos - this.chunkPos;\n        }\n        else {\n            this.chunk2 = this.chunk;\n            this.chunk2Pos = this.chunkPos;\n            let nextChunk = this.input.chunk(this.pos);\n            let end = this.pos + nextChunk.length;\n            this.chunk = end > this.range.to ? nextChunk.slice(0, this.range.to - this.pos) : nextChunk;\n            this.chunkPos = this.pos;\n            this.chunkOff = 0;\n        }\n    }\n    readNext() {\n        if (this.chunkOff >= this.chunk.length) {\n            this.getChunk();\n            if (this.chunkOff == this.chunk.length)\n                return this.next = -1;\n        }\n        return this.next = this.chunk.charCodeAt(this.chunkOff);\n    }\n    /// Move the stream forward N (defaults to 1) code units. Returns\n    /// the new value of [`next`](#lr.InputStream.next).\n    advance(n = 1) {\n        this.chunkOff += n;\n        while (this.pos + n >= this.range.to) {\n            if (this.rangeIndex == this.ranges.length - 1)\n                return this.setDone();\n            n -= this.range.to - this.pos;\n            this.range = this.ranges[++this.rangeIndex];\n            this.pos = this.range.from;\n        }\n        this.pos += n;\n        if (this.pos >= this.token.lookAhead)\n            this.token.lookAhead = this.pos + 1;\n        return this.readNext();\n    }\n    setDone() {\n        this.pos = this.chunkPos = this.end;\n        this.range = this.ranges[this.rangeIndex = this.ranges.length - 1];\n        this.chunk = \"\";\n        return this.next = -1;\n    }\n    /// @internal\n    reset(pos, token) {\n        if (token) {\n            this.token = token;\n            token.start = pos;\n            token.lookAhead = pos + 1;\n            token.value = token.extended = -1;\n        }\n        else {\n            this.token = nullToken;\n        }\n        if (this.pos != pos) {\n            this.pos = pos;\n            if (pos == this.end) {\n                this.setDone();\n                return this;\n            }\n            while (pos < this.range.from)\n                this.range = this.ranges[--this.rangeIndex];\n            while (pos >= this.range.to)\n                this.range = this.ranges[++this.rangeIndex];\n            if (pos >= this.chunkPos && pos < this.chunkPos + this.chunk.length) {\n                this.chunkOff = pos - this.chunkPos;\n            }\n            else {\n                this.chunk = \"\";\n                this.chunkOff = 0;\n            }\n            this.readNext();\n        }\n        return this;\n    }\n    /// @internal\n    read(from, to) {\n        if (from >= this.chunkPos && to <= this.chunkPos + this.chunk.length)\n            return this.chunk.slice(from - this.chunkPos, to - this.chunkPos);\n        if (from >= this.range.from && to <= this.range.to)\n            return this.input.read(from, to);\n        let result = \"\";\n        for (let r of this.ranges) {\n            if (r.from >= to)\n                break;\n            if (r.to > from)\n                result += this.input.read(Math.max(r.from, from), Math.min(r.to, to));\n        }\n        return result;\n    }\n}\n/// @internal\nclass TokenGroup {\n    constructor(data, id) {\n        this.data = data;\n        this.id = id;\n    }\n    token(input, stack) { readToken(this.data, input, stack, this.id); }\n}\nTokenGroup.prototype.contextual = TokenGroup.prototype.fallback = TokenGroup.prototype.extend = false;\n/// `@external tokens` declarations in the grammar should resolve to\n/// an instance of this class.\nclass ExternalTokenizer {\n    /// Create a tokenizer. The first argument is the function that,\n    /// given an input stream, scans for the types of tokens it\n    /// recognizes at the stream's position, and calls\n    /// [`acceptToken`](#lr.InputStream.acceptToken) when it finds\n    /// one.\n    constructor(\n    /// @internal\n    token, options = {}) {\n        this.token = token;\n        this.contextual = !!options.contextual;\n        this.fallback = !!options.fallback;\n        this.extend = !!options.extend;\n    }\n}\n// Tokenizer data is stored a big uint16 array containing, for each\n// state:\n//\n//  - A group bitmask, indicating what token groups are reachable from\n//    this state, so that paths that can only lead to tokens not in\n//    any of the current groups can be cut off early.\n//\n//  - The position of the end of the state's sequence of accepting\n//    tokens\n//\n//  - The number of outgoing edges for the state\n//\n//  - The accepting tokens, as (token id, group mask) pairs\n//\n//  - The outgoing edges, as (start character, end character, state\n//    index) triples, with end character being exclusive\n//\n// This function interprets that data, running through a stream as\n// long as new states with the a matching group mask can be reached,\n// and updating `token` when it matches a token.\nfunction readToken(data, input, stack, group) {\n    let state = 0, groupMask = 1 << group, { parser } = stack.p, { dialect } = parser;\n    scan: for (;;) {\n        if ((groupMask & data[state]) == 0)\n            break;\n        let accEnd = data[state + 1];\n        // Check whether this state can lead to a token in the current group\n        // Accept tokens in this state, possibly overwriting\n        // lower-precedence / shorter tokens\n        for (let i = state + 3; i < accEnd; i += 2)\n            if ((data[i + 1] & groupMask) > 0) {\n                let term = data[i];\n                if (dialect.allows(term) &&\n                    (input.token.value == -1 || input.token.value == term || parser.overrides(term, input.token.value))) {\n                    input.acceptToken(term);\n                    break;\n                }\n            }\n        // Do a binary search on the state's edges\n        for (let next = input.next, low = 0, high = data[state + 2]; low < high;) {\n            let mid = (low + high) >> 1;\n            let index = accEnd + mid + (mid << 1);\n            let from = data[index], to = data[index + 1];\n            if (next < from)\n                high = mid;\n            else if (next >= to)\n                low = mid + 1;\n            else {\n                state = data[index + 2];\n                input.advance();\n                continue scan;\n            }\n        }\n        break;\n    }\n}\n\n// See lezer-generator/src/encode.ts for comments about the encoding\n// used here\nfunction decodeArray(input, Type = Uint16Array) {\n    if (typeof input != \"string\")\n        return input;\n    let array = null;\n    for (let pos = 0, out = 0; pos < input.length;) {\n        let value = 0;\n        for (;;) {\n            let next = input.charCodeAt(pos++), stop = false;\n            if (next == 126 /* BigValCode */) {\n                value = 65535 /* BigVal */;\n                break;\n            }\n            if (next >= 92 /* Gap2 */)\n                next--;\n            if (next >= 34 /* Gap1 */)\n                next--;\n            let digit = next - 32 /* Start */;\n            if (digit >= 46 /* Base */) {\n                digit -= 46 /* Base */;\n                stop = true;\n            }\n            value += digit;\n            if (stop)\n                break;\n            value *= 46 /* Base */;\n        }\n        if (array)\n            array[out++] = value;\n        else\n            array = new Type(value);\n    }\n    return array;\n}\n\n// FIXME find some way to reduce recovery work done when the input\n// doesn't match the grammar at all.\n// Environment variable used to control console output\nconst verbose = typeof process != \"undefined\" && /\\bparse\\b/.test(process.env.LOG);\nlet stackIDs = null;\nvar Safety;\n(function (Safety) {\n    Safety[Safety[\"Margin\"] = 25] = \"Margin\";\n})(Safety || (Safety = {}));\nfunction cutAt(tree, pos, side) {\n    let cursor = tree.fullCursor();\n    cursor.moveTo(pos);\n    for (;;) {\n        if (!(side < 0 ? cursor.childBefore(pos) : cursor.childAfter(pos)))\n            for (;;) {\n                if ((side < 0 ? cursor.to < pos : cursor.from > pos) && !cursor.type.isError)\n                    return side < 0 ? Math.max(0, Math.min(cursor.to - 1, pos - 25 /* Margin */))\n                        : Math.min(tree.length, Math.max(cursor.from + 1, pos + 25 /* Margin */));\n                if (side < 0 ? cursor.prevSibling() : cursor.nextSibling())\n                    break;\n                if (!cursor.parent())\n                    return side < 0 ? 0 : tree.length;\n            }\n    }\n}\nclass FragmentCursor {\n    constructor(fragments, nodeSet) {\n        this.fragments = fragments;\n        this.nodeSet = nodeSet;\n        this.i = 0;\n        this.fragment = null;\n        this.safeFrom = -1;\n        this.safeTo = -1;\n        this.trees = [];\n        this.start = [];\n        this.index = [];\n        this.nextFragment();\n    }\n    nextFragment() {\n        let fr = this.fragment = this.i == this.fragments.length ? null : this.fragments[this.i++];\n        if (fr) {\n            this.safeFrom = fr.openStart ? cutAt(fr.tree, fr.from + fr.offset, 1) - fr.offset : fr.from;\n            this.safeTo = fr.openEnd ? cutAt(fr.tree, fr.to + fr.offset, -1) - fr.offset : fr.to;\n            while (this.trees.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n            }\n            this.trees.push(fr.tree);\n            this.start.push(-fr.offset);\n            this.index.push(0);\n            this.nextStart = this.safeFrom;\n        }\n        else {\n            this.nextStart = 1e9;\n        }\n    }\n    // `pos` must be >= any previously given `pos` for this cursor\n    nodeAt(pos) {\n        if (pos < this.nextStart)\n            return null;\n        while (this.fragment && this.safeTo <= pos)\n            this.nextFragment();\n        if (!this.fragment)\n            return null;\n        for (;;) {\n            let last = this.trees.length - 1;\n            if (last < 0) { // End of tree\n                this.nextFragment();\n                return null;\n            }\n            let top = this.trees[last], index = this.index[last];\n            if (index == top.children.length) {\n                this.trees.pop();\n                this.start.pop();\n                this.index.pop();\n                continue;\n            }\n            let next = top.children[index];\n            let start = this.start[last] + top.positions[index];\n            if (start > pos) {\n                this.nextStart = start;\n                return null;\n            }\n            if (next instanceof Tree) {\n                if (start == pos) {\n                    if (start < this.safeFrom)\n                        return null;\n                    let end = start + next.length;\n                    if (end <= this.safeTo) {\n                        let lookAhead = next.prop(NodeProp.lookAhead);\n                        if (!lookAhead || end + lookAhead < this.fragment.to)\n                            return next;\n                    }\n                }\n                this.index[last]++;\n                if (start + next.length >= Math.max(this.safeFrom, pos)) { // Enter this node\n                    this.trees.push(next);\n                    this.start.push(start);\n                    this.index.push(0);\n                }\n            }\n            else {\n                this.index[last]++;\n                this.nextStart = start + next.length;\n            }\n        }\n    }\n}\nclass TokenCache {\n    constructor(parser, stream) {\n        this.stream = stream;\n        this.tokens = [];\n        this.mainToken = null;\n        this.actions = [];\n        this.tokens = parser.tokenizers.map(_ => new CachedToken);\n    }\n    getActions(stack) {\n        let actionIndex = 0;\n        let main = null;\n        let { parser } = stack.p, { tokenizers } = parser;\n        let mask = parser.stateSlot(stack.state, 3 /* TokenizerMask */);\n        let context = stack.curContext ? stack.curContext.hash : 0;\n        let lookAhead = 0;\n        for (let i = 0; i < tokenizers.length; i++) {\n            if (((1 << i) & mask) == 0)\n                continue;\n            let tokenizer = tokenizers[i], token = this.tokens[i];\n            if (main && !tokenizer.fallback)\n                continue;\n            if (tokenizer.contextual || token.start != stack.pos || token.mask != mask || token.context != context) {\n                this.updateCachedToken(token, tokenizer, stack);\n                token.mask = mask;\n                token.context = context;\n            }\n            if (token.lookAhead > token.end + 25 /* Margin */)\n                lookAhead = Math.max(token.lookAhead, lookAhead);\n            if (token.value != 0 /* Err */) {\n                let startIndex = actionIndex;\n                if (token.extended > -1)\n                    actionIndex = this.addActions(stack, token.extended, token.end, actionIndex);\n                actionIndex = this.addActions(stack, token.value, token.end, actionIndex);\n                if (!tokenizer.extend) {\n                    main = token;\n                    if (actionIndex > startIndex)\n                        break;\n                }\n            }\n        }\n        while (this.actions.length > actionIndex)\n            this.actions.pop();\n        if (lookAhead)\n            stack.setLookAhead(lookAhead);\n        if (!main && stack.pos == this.stream.end) {\n            main = new CachedToken;\n            main.value = stack.p.parser.eofTerm;\n            main.start = main.end = stack.pos;\n            actionIndex = this.addActions(stack, main.value, main.end, actionIndex);\n        }\n        this.mainToken = main;\n        return this.actions;\n    }\n    getMainToken(stack) {\n        if (this.mainToken)\n            return this.mainToken;\n        let main = new CachedToken, { pos, p } = stack;\n        main.start = pos;\n        main.end = Math.min(pos + 1, p.stream.end);\n        main.value = pos == p.stream.end ? p.parser.eofTerm : 0 /* Err */;\n        return main;\n    }\n    updateCachedToken(token, tokenizer, stack) {\n        tokenizer.token(this.stream.reset(stack.pos, token), stack);\n        if (token.value > -1) {\n            let { parser } = stack.p;\n            for (let i = 0; i < parser.specialized.length; i++)\n                if (parser.specialized[i] == token.value) {\n                    let result = parser.specializers[i](this.stream.read(token.start, token.end), stack);\n                    if (result >= 0 && stack.p.parser.dialect.allows(result >> 1)) {\n                        if ((result & 1) == 0 /* Specialize */)\n                            token.value = result >> 1;\n                        else\n                            token.extended = result >> 1;\n                        break;\n                    }\n                }\n        }\n        else {\n            token.value = 0 /* Err */;\n            token.end = Math.min(stack.p.stream.end, stack.pos + 1);\n        }\n    }\n    putAction(action, token, end, index) {\n        // Don't add duplicate actions\n        for (let i = 0; i < index; i += 3)\n            if (this.actions[i] == action)\n                return index;\n        this.actions[index++] = action;\n        this.actions[index++] = token;\n        this.actions[index++] = end;\n        return index;\n    }\n    addActions(stack, token, end, index) {\n        let { state } = stack, { parser } = stack.p, { data } = parser;\n        for (let set = 0; set < 2; set++) {\n            for (let i = parser.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */);; i += 3) {\n                if (data[i] == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */) {\n                        i = pair(data, i + 2);\n                    }\n                    else {\n                        if (index == 0 && data[i + 1] == 2 /* Other */)\n                            index = this.putAction(pair(data, i + 1), token, end, index);\n                        break;\n                    }\n                }\n                if (data[i] == token)\n                    index = this.putAction(pair(data, i + 1), token, end, index);\n            }\n        }\n        return index;\n    }\n}\nvar Rec;\n(function (Rec) {\n    Rec[Rec[\"Distance\"] = 5] = \"Distance\";\n    Rec[Rec[\"MaxRemainingPerStep\"] = 3] = \"MaxRemainingPerStep\";\n    Rec[Rec[\"MinBufferLengthPrune\"] = 200] = \"MinBufferLengthPrune\";\n    Rec[Rec[\"ForceReduceLimit\"] = 10] = \"ForceReduceLimit\";\n})(Rec || (Rec = {}));\nclass Parse {\n    constructor(parser, input, fragments, ranges) {\n        this.parser = parser;\n        this.input = input;\n        this.ranges = ranges;\n        this.recovering = 0;\n        this.nextStackID = 0x2654; // ♔, ♕, ♖, ♗, ♘, ♙, ♠, ♡, ♢, ♣, ♤, ♥, ♦, ♧\n        this.minStackPos = 0;\n        this.reused = [];\n        this.stoppedAt = null;\n        this.stream = new InputStream(input, ranges);\n        this.tokens = new TokenCache(parser, this.stream);\n        this.topTerm = parser.top[1];\n        let { from } = ranges[0];\n        this.stacks = [Stack.start(this, parser.top[0], from)];\n        this.fragments = fragments.length && this.stream.end - from > parser.bufferLength * 4\n            ? new FragmentCursor(fragments, parser.nodeSet) : null;\n    }\n    get parsedPos() {\n        return this.minStackPos;\n    }\n    // Move the parser forward. This will process all parse stacks at\n    // `this.pos` and try to advance them to a further position. If no\n    // stack for such a position is found, it'll start error-recovery.\n    //\n    // When the parse is finished, this will return a syntax tree. When\n    // not, it returns `null`.\n    advance() {\n        let stacks = this.stacks, pos = this.minStackPos;\n        // This will hold stacks beyond `pos`.\n        let newStacks = this.stacks = [];\n        let stopped, stoppedTokens;\n        // Keep advancing any stacks at `pos` until they either move\n        // forward or can't be advanced. Gather stacks that can't be\n        // advanced further in `stopped`.\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i];\n            for (;;) {\n                this.tokens.mainToken = null;\n                if (stack.pos > pos) {\n                    newStacks.push(stack);\n                }\n                else if (this.advanceStack(stack, newStacks, stacks)) {\n                    continue;\n                }\n                else {\n                    if (!stopped) {\n                        stopped = [];\n                        stoppedTokens = [];\n                    }\n                    stopped.push(stack);\n                    let tok = this.tokens.getMainToken(stack);\n                    stoppedTokens.push(tok.value, tok.end);\n                }\n                break;\n            }\n        }\n        if (!newStacks.length) {\n            let finished = stopped && findFinished(stopped);\n            if (finished)\n                return this.stackToTree(finished);\n            if (this.parser.strict) {\n                if (verbose && stopped)\n                    console.log(\"Stuck with token \" + (this.tokens.mainToken ? this.parser.getName(this.tokens.mainToken.value) : \"none\"));\n                throw new SyntaxError(\"No parse at \" + pos);\n            }\n            if (!this.recovering)\n                this.recovering = 5 /* Distance */;\n        }\n        if (this.recovering && stopped) {\n            let finished = this.stoppedAt != null && stopped[0].pos > this.stoppedAt ? stopped[0]\n                : this.runRecovery(stopped, stoppedTokens, newStacks);\n            if (finished)\n                return this.stackToTree(finished.forceAll());\n        }\n        if (this.recovering) {\n            let maxRemaining = this.recovering == 1 ? 1 : this.recovering * 3 /* MaxRemainingPerStep */;\n            if (newStacks.length > maxRemaining) {\n                newStacks.sort((a, b) => b.score - a.score);\n                while (newStacks.length > maxRemaining)\n                    newStacks.pop();\n            }\n            if (newStacks.some(s => s.reducePos > pos))\n                this.recovering--;\n        }\n        else if (newStacks.length > 1) {\n            // Prune stacks that are in the same state, or that have been\n            // running without splitting for a while, to avoid getting stuck\n            // with multiple successful stacks running endlessly on.\n            outer: for (let i = 0; i < newStacks.length - 1; i++) {\n                let stack = newStacks[i];\n                for (let j = i + 1; j < newStacks.length; j++) {\n                    let other = newStacks[j];\n                    if (stack.sameState(other) ||\n                        stack.buffer.length > 200 /* MinBufferLengthPrune */ && other.buffer.length > 200 /* MinBufferLengthPrune */) {\n                        if (((stack.score - other.score) || (stack.buffer.length - other.buffer.length)) > 0) {\n                            newStacks.splice(j--, 1);\n                        }\n                        else {\n                            newStacks.splice(i--, 1);\n                            continue outer;\n                        }\n                    }\n                }\n            }\n        }\n        this.minStackPos = newStacks[0].pos;\n        for (let i = 1; i < newStacks.length; i++)\n            if (newStacks[i].pos < this.minStackPos)\n                this.minStackPos = newStacks[i].pos;\n        return null;\n    }\n    stopAt(pos) {\n        if (this.stoppedAt != null && this.stoppedAt < pos)\n            throw new RangeError(\"Can't move stoppedAt forward\");\n        this.stoppedAt = pos;\n    }\n    // Returns an updated version of the given stack, or null if the\n    // stack can't advance normally. When `split` and `stacks` are\n    // given, stacks split off by ambiguous operations will be pushed to\n    // `split`, or added to `stacks` if they move `pos` forward.\n    advanceStack(stack, stacks, split) {\n        let start = stack.pos, { parser } = this;\n        let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n        if (this.stoppedAt != null && start > this.stoppedAt)\n            return stack.forceReduce() ? stack : null;\n        if (this.fragments) {\n            let strictCx = stack.curContext && stack.curContext.tracker.strict, cxHash = strictCx ? stack.curContext.hash : 0;\n            for (let cached = this.fragments.nodeAt(start); cached;) {\n                let match = this.parser.nodeSet.types[cached.type.id] == cached.type ? parser.getGoto(stack.state, cached.type.id) : -1;\n                if (match > -1 && cached.length && (!strictCx || (cached.prop(NodeProp.contextHash) || 0) == cxHash)) {\n                    stack.useNode(cached, match);\n                    if (verbose)\n                        console.log(base + this.stackID(stack) + ` (via reuse of ${parser.getName(cached.type.id)})`);\n                    return true;\n                }\n                if (!(cached instanceof Tree) || cached.children.length == 0 || cached.positions[0] > 0)\n                    break;\n                let inner = cached.children[0];\n                if (inner instanceof Tree && cached.positions[0] == 0)\n                    cached = inner;\n                else\n                    break;\n            }\n        }\n        let defaultReduce = parser.stateSlot(stack.state, 4 /* DefaultReduce */);\n        if (defaultReduce > 0) {\n            stack.reduce(defaultReduce);\n            if (verbose)\n                console.log(base + this.stackID(stack) + ` (via always-reduce ${parser.getName(defaultReduce & 65535 /* ValueMask */)})`);\n            return true;\n        }\n        let actions = this.tokens.getActions(stack);\n        for (let i = 0; i < actions.length;) {\n            let action = actions[i++], term = actions[i++], end = actions[i++];\n            let last = i == actions.length || !split;\n            let localStack = last ? stack : stack.split();\n            localStack.apply(action, term, end);\n            if (verbose)\n                console.log(base + this.stackID(localStack) + ` (via ${(action & 65536 /* ReduceFlag */) == 0 ? \"shift\"\n                    : `reduce of ${parser.getName(action & 65535 /* ValueMask */)}`} for ${parser.getName(term)} @ ${start}${localStack == stack ? \"\" : \", split\"})`);\n            if (last)\n                return true;\n            else if (localStack.pos > start)\n                stacks.push(localStack);\n            else\n                split.push(localStack);\n        }\n        return false;\n    }\n    // Advance a given stack forward as far as it will go. Returns the\n    // (possibly updated) stack if it got stuck, or null if it moved\n    // forward and was given to `pushStackDedup`.\n    advanceFully(stack, newStacks) {\n        let pos = stack.pos;\n        for (;;) {\n            if (!this.advanceStack(stack, null, null))\n                return false;\n            if (stack.pos > pos) {\n                pushStackDedup(stack, newStacks);\n                return true;\n            }\n        }\n    }\n    runRecovery(stacks, tokens, newStacks) {\n        let finished = null, restarted = false;\n        for (let i = 0; i < stacks.length; i++) {\n            let stack = stacks[i], token = tokens[i << 1], tokenEnd = tokens[(i << 1) + 1];\n            let base = verbose ? this.stackID(stack) + \" -> \" : \"\";\n            if (stack.deadEnd) {\n                if (restarted)\n                    continue;\n                restarted = true;\n                stack.restart();\n                if (verbose)\n                    console.log(base + this.stackID(stack) + \" (restarted)\");\n                let done = this.advanceFully(stack, newStacks);\n                if (done)\n                    continue;\n            }\n            let force = stack.split(), forceBase = base;\n            for (let j = 0; force.forceReduce() && j < 10 /* ForceReduceLimit */; j++) {\n                if (verbose)\n                    console.log(forceBase + this.stackID(force) + \" (via force-reduce)\");\n                let done = this.advanceFully(force, newStacks);\n                if (done)\n                    break;\n                if (verbose)\n                    forceBase = this.stackID(force) + \" -> \";\n            }\n            for (let insert of stack.recoverByInsert(token)) {\n                if (verbose)\n                    console.log(base + this.stackID(insert) + \" (via recover-insert)\");\n                this.advanceFully(insert, newStacks);\n            }\n            if (this.stream.end > stack.pos) {\n                if (tokenEnd == stack.pos) {\n                    tokenEnd++;\n                    token = 0 /* Err */;\n                }\n                stack.recoverByDelete(token, tokenEnd);\n                if (verbose)\n                    console.log(base + this.stackID(stack) + ` (via recover-delete ${this.parser.getName(token)})`);\n                pushStackDedup(stack, newStacks);\n            }\n            else if (!finished || finished.score < stack.score) {\n                finished = stack;\n            }\n        }\n        return finished;\n    }\n    // Convert the stack's buffer to a syntax tree.\n    stackToTree(stack) {\n        stack.close();\n        return Tree.build({ buffer: StackBufferCursor.create(stack),\n            nodeSet: this.parser.nodeSet,\n            topID: this.topTerm,\n            maxBufferLength: this.parser.bufferLength,\n            reused: this.reused,\n            start: this.ranges[0].from,\n            length: stack.pos - this.ranges[0].from,\n            minRepeatType: this.parser.minRepeatTerm });\n    }\n    stackID(stack) {\n        let id = (stackIDs || (stackIDs = new WeakMap)).get(stack);\n        if (!id)\n            stackIDs.set(stack, id = String.fromCodePoint(this.nextStackID++));\n        return id + stack;\n    }\n}\nfunction pushStackDedup(stack, newStacks) {\n    for (let i = 0; i < newStacks.length; i++) {\n        let other = newStacks[i];\n        if (other.pos == stack.pos && other.sameState(stack)) {\n            if (newStacks[i].score < stack.score)\n                newStacks[i] = stack;\n            return;\n        }\n    }\n    newStacks.push(stack);\n}\nclass Dialect {\n    constructor(source, flags, disabled) {\n        this.source = source;\n        this.flags = flags;\n        this.disabled = disabled;\n    }\n    allows(term) { return !this.disabled || this.disabled[term] == 0; }\n}\nconst id = x => x;\n/// Context trackers are used to track stateful context (such as\n/// indentation in the Python grammar, or parent elements in the XML\n/// grammar) needed by external tokenizers. You declare them in a\n/// grammar file as `@context exportName from \"module\"`.\n///\n/// Context values should be immutable, and can be updated (replaced)\n/// on shift or reduce actions.\n///\n/// The export used in a `@context` declaration should be of this\n/// type.\nclass ContextTracker {\n    /// Define a context tracker.\n    constructor(spec) {\n        this.start = spec.start;\n        this.shift = spec.shift || id;\n        this.reduce = spec.reduce || id;\n        this.reuse = spec.reuse || id;\n        this.hash = spec.hash || (() => 0);\n        this.strict = spec.strict !== false;\n    }\n}\n/// A parser holds the parse tables for a given grammar, as generated\n/// by `lezer-generator`.\nclass LRParser extends Parser {\n    /// @internal\n    constructor(spec) {\n        super();\n        /// @internal\n        this.wrappers = [];\n        if (spec.version != 13 /* Version */)\n            throw new RangeError(`Parser version (${spec.version}) doesn't match runtime version (${13 /* Version */})`);\n        let nodeNames = spec.nodeNames.split(\" \");\n        this.minRepeatTerm = nodeNames.length;\n        for (let i = 0; i < spec.repeatNodeCount; i++)\n            nodeNames.push(\"\");\n        let topTerms = Object.keys(spec.topRules).map(r => spec.topRules[r][1]);\n        let nodeProps = [];\n        for (let i = 0; i < nodeNames.length; i++)\n            nodeProps.push([]);\n        function setProp(nodeID, prop, value) {\n            nodeProps[nodeID].push([prop, prop.deserialize(String(value))]);\n        }\n        if (spec.nodeProps)\n            for (let propSpec of spec.nodeProps) {\n                let prop = propSpec[0];\n                for (let i = 1; i < propSpec.length;) {\n                    let next = propSpec[i++];\n                    if (next >= 0) {\n                        setProp(next, prop, propSpec[i++]);\n                    }\n                    else {\n                        let value = propSpec[i + -next];\n                        for (let j = -next; j > 0; j--)\n                            setProp(propSpec[i++], prop, value);\n                        i++;\n                    }\n                }\n            }\n        this.nodeSet = new NodeSet(nodeNames.map((name, i) => NodeType.define({\n            name: i >= this.minRepeatTerm ? undefined : name,\n            id: i,\n            props: nodeProps[i],\n            top: topTerms.indexOf(i) > -1,\n            error: i == 0,\n            skipped: spec.skippedNodes && spec.skippedNodes.indexOf(i) > -1\n        })));\n        this.strict = false;\n        this.bufferLength = DefaultBufferLength;\n        let tokenArray = decodeArray(spec.tokenData);\n        this.context = spec.context;\n        this.specialized = new Uint16Array(spec.specialized ? spec.specialized.length : 0);\n        this.specializers = [];\n        if (spec.specialized)\n            for (let i = 0; i < spec.specialized.length; i++) {\n                this.specialized[i] = spec.specialized[i].term;\n                this.specializers[i] = spec.specialized[i].get;\n            }\n        this.states = decodeArray(spec.states, Uint32Array);\n        this.data = decodeArray(spec.stateData);\n        this.goto = decodeArray(spec.goto);\n        this.maxTerm = spec.maxTerm;\n        this.tokenizers = spec.tokenizers.map(value => typeof value == \"number\" ? new TokenGroup(tokenArray, value) : value);\n        this.topRules = spec.topRules;\n        this.dialects = spec.dialects || {};\n        this.dynamicPrecedences = spec.dynamicPrecedences || null;\n        this.tokenPrecTable = spec.tokenPrec;\n        this.termNames = spec.termNames || null;\n        this.maxNode = this.nodeSet.types.length - 1;\n        this.dialect = this.parseDialect();\n        this.top = this.topRules[Object.keys(this.topRules)[0]];\n    }\n    createParse(input, fragments, ranges) {\n        let parse = new Parse(this, input, fragments, ranges);\n        for (let w of this.wrappers)\n            parse = w(parse, input, fragments, ranges);\n        return parse;\n    }\n    /// Get a goto table entry @internal\n    getGoto(state, term, loose = false) {\n        let table = this.goto;\n        if (term >= table[0])\n            return -1;\n        for (let pos = table[term + 1];;) {\n            let groupTag = table[pos++], last = groupTag & 1;\n            let target = table[pos++];\n            if (last && loose)\n                return target;\n            for (let end = pos + (groupTag >> 1); pos < end; pos++)\n                if (table[pos] == state)\n                    return target;\n            if (last)\n                return -1;\n        }\n    }\n    /// Check if this state has an action for a given terminal @internal\n    hasAction(state, terminal) {\n        let data = this.data;\n        for (let set = 0; set < 2; set++) {\n            for (let i = this.stateSlot(state, set ? 2 /* Skip */ : 1 /* Actions */), next;; i += 3) {\n                if ((next = data[i]) == 65535 /* End */) {\n                    if (data[i + 1] == 1 /* Next */)\n                        next = data[i = pair(data, i + 2)];\n                    else if (data[i + 1] == 2 /* Other */)\n                        return pair(data, i + 2);\n                    else\n                        break;\n                }\n                if (next == terminal || next == 0 /* Err */)\n                    return pair(data, i + 1);\n            }\n        }\n        return 0;\n    }\n    /// @internal\n    stateSlot(state, slot) {\n        return this.states[(state * 6 /* Size */) + slot];\n    }\n    /// @internal\n    stateFlag(state, flag) {\n        return (this.stateSlot(state, 0 /* Flags */) & flag) > 0;\n    }\n    /// @internal\n    validAction(state, action) {\n        if (action == this.stateSlot(state, 4 /* DefaultReduce */))\n            return true;\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    return false;\n            }\n            if (action == pair(this.data, i + 1))\n                return true;\n        }\n    }\n    /// Get the states that can follow this one through shift actions or\n    /// goto jumps. @internal\n    nextStates(state) {\n        let result = [];\n        for (let i = this.stateSlot(state, 1 /* Actions */);; i += 3) {\n            if (this.data[i] == 65535 /* End */) {\n                if (this.data[i + 1] == 1 /* Next */)\n                    i = pair(this.data, i + 2);\n                else\n                    break;\n            }\n            if ((this.data[i + 2] & (65536 /* ReduceFlag */ >> 16)) == 0) {\n                let value = this.data[i + 1];\n                if (!result.some((v, i) => (i & 1) && v == value))\n                    result.push(this.data[i], value);\n            }\n        }\n        return result;\n    }\n    /// @internal\n    overrides(token, prev) {\n        let iPrev = findOffset(this.data, this.tokenPrecTable, prev);\n        return iPrev < 0 || findOffset(this.data, this.tokenPrecTable, token) < iPrev;\n    }\n    /// Configure the parser. Returns a new parser instance that has the\n    /// given settings modified. Settings not provided in `config` are\n    /// kept from the original parser.\n    configure(config) {\n        // Hideous reflection-based kludge to make it easy to create a\n        // slightly modified copy of a parser.\n        let copy = Object.assign(Object.create(LRParser.prototype), this);\n        if (config.props)\n            copy.nodeSet = this.nodeSet.extend(...config.props);\n        if (config.top) {\n            let info = this.topRules[config.top];\n            if (!info)\n                throw new RangeError(`Invalid top rule name ${config.top}`);\n            copy.top = info;\n        }\n        if (config.tokenizers)\n            copy.tokenizers = this.tokenizers.map(t => {\n                let found = config.tokenizers.find(r => r.from == t);\n                return found ? found.to : t;\n            });\n        if (config.contextTracker)\n            copy.context = config.contextTracker;\n        if (config.dialect)\n            copy.dialect = this.parseDialect(config.dialect);\n        if (config.strict != null)\n            copy.strict = config.strict;\n        if (config.wrap)\n            copy.wrappers = copy.wrappers.concat(config.wrap);\n        if (config.bufferLength != null)\n            copy.bufferLength = config.bufferLength;\n        return copy;\n    }\n    /// Returns the name associated with a given term. This will only\n    /// work for all terms when the parser was generated with the\n    /// `--names` option. By default, only the names of tagged terms are\n    /// stored.\n    getName(term) {\n        return this.termNames ? this.termNames[term] : String(term <= this.maxNode && this.nodeSet.types[term].name || term);\n    }\n    /// The eof term id is always allocated directly after the node\n    /// types. @internal\n    get eofTerm() { return this.maxNode + 1; }\n    /// The type of top node produced by the parser.\n    get topNode() { return this.nodeSet.types[this.top[1]]; }\n    /// @internal\n    dynamicPrecedence(term) {\n        let prec = this.dynamicPrecedences;\n        return prec == null ? 0 : prec[term] || 0;\n    }\n    /// @internal\n    parseDialect(dialect) {\n        let values = Object.keys(this.dialects), flags = values.map(() => false);\n        if (dialect)\n            for (let part of dialect.split(\" \")) {\n                let id = values.indexOf(part);\n                if (id >= 0)\n                    flags[id] = true;\n            }\n        let disabled = null;\n        for (let i = 0; i < values.length; i++)\n            if (!flags[i]) {\n                for (let j = this.dialects[values[i]], id; (id = this.data[j++]) != 65535 /* End */;)\n                    (disabled || (disabled = new Uint8Array(this.maxTerm + 1)))[id] = 1;\n            }\n        return new Dialect(dialect, flags, disabled);\n    }\n    /// (used by the output of the parser generator) @internal\n    static deserialize(spec) {\n        return new LRParser(spec);\n    }\n}\nfunction pair(data, off) { return data[off] | (data[off + 1] << 16); }\nfunction findOffset(data, start, term) {\n    for (let i = start, next; (next = data[i]) != 65535 /* End */; i++)\n        if (next == term)\n            return i - start;\n    return -1;\n}\nfunction findFinished(stacks) {\n    let best = null;\n    for (let stack of stacks) {\n        let stopped = stack.p.stoppedAt;\n        if ((stack.pos == stack.p.stream.end || stopped != null && stack.pos > stopped) &&\n            stack.p.parser.stateFlag(stack.state, 2 /* Accepting */) &&\n            (!best || best.score < stack.score))\n            best = stack;\n    }\n    return best;\n}\n\nexport { ContextTracker, ExternalTokenizer, InputStream, LRParser, Stack };\n","import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { NodeProp, parseMixed } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst scriptText = 53,\n  StartCloseScriptTag = 1,\n  styleText = 54,\n  StartCloseStyleTag = 2,\n  textareaText = 55,\n  StartCloseTextareaTag = 3,\n  StartTag = 4,\n  StartScriptTag = 5,\n  StartStyleTag = 6,\n  StartTextareaTag = 7,\n  StartCloseTag = 8,\n  NoMatchStartCloseTag = 9,\n  MismatchedStartCloseTag = 10,\n  missingCloseTag = 56,\n  IncompleteCloseTag = 11,\n  SelfCloseEndTag = 12,\n  commentContent$1 = 57,\n  Element = 18,\n  ScriptText = 27,\n  StyleText = 30,\n  TextareaText = 33,\n  OpenTag = 35,\n  Dialect_noMatch = 0;\n\n/* Hand-written tokenizers for HTML. */\n\nconst selfClosers = {\n  area: true, base: true, br: true, col: true, command: true,\n  embed: true, frame: true, hr: true, img: true, input: true,\n  keygen: true, link: true, meta: true, param: true, source: true,\n  track: true, wbr: true, menuitem: true\n};\n\nconst implicitlyClosed = {\n  dd: true, li: true, optgroup: true, option: true, p: true,\n  rp: true, rt: true, tbody: true, td: true, tfoot: true,\n  th: true, tr: true\n};\n\nconst closeOnOpen = {\n  dd: {dd: true, dt: true},\n  dt: {dd: true, dt: true},\n  li: {li: true},\n  option: {option: true, optgroup: true},\n  optgroup: {optgroup: true},\n  p: {\n    address: true, article: true, aside: true, blockquote: true, dir: true,\n    div: true, dl: true, fieldset: true, footer: true, form: true,\n    h1: true, h2: true, h3: true, h4: true, h5: true, h6: true,\n    header: true, hgroup: true, hr: true, menu: true, nav: true, ol: true,\n    p: true, pre: true, section: true, table: true, ul: true\n  },\n  rp: {rp: true, rt: true},\n  rt: {rp: true, rt: true},\n  tbody: {tbody: true, tfoot: true},\n  td: {td: true, th: true},\n  tfoot: {tbody: true},\n  th: {td: true, th: true},\n  thead: {tbody: true, tfoot: true},\n  tr: {tr: true}\n};\n\nfunction nameChar(ch) {\n  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161\n}\n\nfunction isSpace(ch) {\n  return ch == 9 || ch == 10 || ch == 13 || ch == 32\n}\n\nlet cachedName = null, cachedInput = null, cachedPos = 0;\nfunction tagNameAfter(input, offset) {\n  let pos = input.pos + offset;\n  if (cachedPos == pos && cachedInput == input) return cachedName\n  let next = input.peek(offset);\n  while (isSpace(next)) next = input.peek(++offset);\n  let name = \"\";\n  for (;;) {\n    if (!nameChar(next)) break\n    name += String.fromCharCode(next);\n    next = input.peek(++offset);\n  }\n  // Undefined to signal there's a <? or <!, null for just missing\n  cachedInput = input; cachedPos = pos;\n  return cachedName = name || (next == question || next == bang ? undefined : null)\n}\n\nconst lessThan = 60, greaterThan = 62, slash = 47, question = 63, bang = 33;\n\nfunction ElementContext(name, parent) {\n  this.name = name;\n  this.parent = parent;\n  this.hash = parent ? parent.hash : 0;\n  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);\n}\n\nconst startTagTerms = [StartTag, StartScriptTag, StartStyleTag, StartTextareaTag];\n\nconst elementContext = new ContextTracker({\n  start: null,\n  shift(context, term, stack, input) {\n    return startTagTerms.indexOf(term) > -1 ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  reduce(context, term) {\n    return term == Element && context ? context.parent : context\n  },\n  reuse(context, node, stack, input) {\n    let type = node.type.id;\n    return type == StartTag || type == OpenTag\n      ? new ElementContext(tagNameAfter(input, 1) || \"\", context) : context\n  },\n  hash(context) { return context ? context.hash : 0 },\n  strict: false\n});\n\nconst tagStart = new ExternalTokenizer((input, stack) => {\n  if (input.next != lessThan) {\n    // End of file, close any open tags\n    if (input.next < 0 && stack.context) input.acceptToken(missingCloseTag);\n    return\n  }\n  input.advance();\n  let close = input.next == slash;\n  if (close) input.advance();\n  let name = tagNameAfter(input, 0);\n  if (name === undefined) return\n  if (!name) return input.acceptToken(close ? IncompleteCloseTag : StartTag)\n\n  let parent = stack.context ? stack.context.name : null;\n  if (close) {\n    if (name == parent) return input.acceptToken(StartCloseTag)\n    if (parent && implicitlyClosed[parent]) return input.acceptToken(missingCloseTag, -2)\n    if (stack.dialectEnabled(Dialect_noMatch)) return input.acceptToken(NoMatchStartCloseTag)\n    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return\n    input.acceptToken(MismatchedStartCloseTag);\n  } else {\n    if (name == \"script\") return input.acceptToken(StartScriptTag)\n    if (name == \"style\") return input.acceptToken(StartStyleTag)\n    if (name == \"textarea\") return input.acceptToken(StartTextareaTag)\n    if (parent && closeOnOpen[parent] && closeOnOpen[parent][name]) input.acceptToken(missingCloseTag, -1);\n    else input.acceptToken(StartTag);\n  }\n}, {contextual: true});\n\nconst selfClosed = new ExternalTokenizer((input, stack) => {\n  let size = 1;\n  if (input.next == slash) {\n    if (input.peek(1) != greaterThan) return\n    size = 2;\n  } else if (input.next != greaterThan) {\n    return\n  }\n  if (stack.context && selfClosers[stack.context.name]) input.acceptToken(SelfCloseEndTag, size);\n});\n\nconst commentContent = new ExternalTokenizer(input => {\n  for (let endPos = 0, i = 0;; i++) {\n    if (input.next < 0) {\n      if (i) input.acceptToken(commentContent$1);\n      break\n    }\n    if (input.next == \"-->\".charCodeAt(endPos)) {\n      endPos++;\n      if (endPos == 3) {\n        if (i > 3) input.acceptToken(commentContent$1, -2);\n        break\n      }\n    } else {\n      endPos = 0;\n    }\n    input.advance();\n  }\n});\n\nfunction contentTokenizer(tag, textToken, endToken) {\n  let lastState = 2 + tag.length;\n  return new ExternalTokenizer(input => {\n    // state means:\n    // - 0 nothing matched\n    // - 1 '<' matched\n    // - 2 '</' + possibly whitespace matched\n    // - 3-(1+tag.length) part of the tag matched\n    // - lastState whole tag + possibly whitespace matched\n    for (let state = 0, matchedLen = 0, i = 0;; i++) {\n      if (input.next < 0) {\n        if (i) input.acceptToken(textToken);\n        break\n      }\n      if (state == 0 && input.next == lessThan ||\n          state == 1 && input.next == slash ||\n          state >= 2 && state < lastState && input.next == tag.charCodeAt(state - 2)) {\n        state++;\n        matchedLen++;\n      } else if ((state == 2 || state == lastState) && isSpace(input.next)) {\n        matchedLen++;\n      } else if (state == lastState && input.next == greaterThan) {\n        if (i > matchedLen)\n          input.acceptToken(textToken, -matchedLen);\n        else\n          input.acceptToken(endToken, -(matchedLen - 2));\n        break\n      } else if ((input.next == 10 /* '\\n' */ || input.next == 13 /* '\\r' */) && i) {\n        input.acceptToken(textToken, 1);\n        break\n      } else {\n        state = matchedLen = 0;\n      }\n      input.advance();\n    }\n  })\n}\n\nconst scriptTokens = contentTokenizer(\"script\", scriptText, StartCloseScriptTag);\n\nconst styleTokens = contentTokenizer(\"style\", styleText, StartCloseStyleTag);\n\nconst textareaTokens = contentTokenizer(\"textarea\", textareaText, StartCloseTextareaTag);\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 13,\n  states: \",fOVO!jOOO!TQ#tO'#CoO!YQ#tO'#CyO!_Q#tO'#C|O!dQ#tO'#DPO!iOXO'#CnO!tOYO'#CnO#PO[O'#CnO$YO!jO'#CnOOOW'#Cn'#CnO$aO$fO'#DSO$iQ#tO'#DUO$nQ#tO'#DVOOOW'#Dj'#DjOOOW'#DX'#DXQVO!jOOO$sQ&jO,59ZO${Q&jO,59eO%TQ&jO,59hO%]Q&zO,59kOOOX'#D]'#D]O%hOXO'#CwO%sOXO,59YOOOY'#D^'#D^O%{OYO'#CzO&WOYO,59YOOO['#D_'#D_O&`O[O'#C}O&kO[O,59YOOOW'#D`'#D`O&sO!jO,59YO&zQ#tO'#DQOOOW,59Y,59YOOOp'#Da'#DaO'PO$fO,59nOOOW,59n,59nO'XQ#tO,59pO'^Q#tO,59qOOOW-E7V-E7VO'cQ&zO'#CqOOQ`'#DY'#DYO'qQ&jO1G.uOOOX1G.u1G.uO'yQ&jO1G/POOOY1G/P1G/PO(RQ&jO1G/SOOO[1G/S1G/SO(ZQ&zO1G/VOOOW1G/V1G/VOOOW1G/X1G/XOOOX-E7Z-E7ZO(fQ#tO'#CxOOOW1G.t1G.tOOOY-E7[-E7[O(kQ#tO'#C{OOO[-E7]-E7]O(pQ#tO'#DOOOOW-E7^-E7^O(uQ#tO,59lOOOp-E7_-E7_OOOW1G/Y1G/YOOOW1G/[1G/[OOOW1G/]1G/]O(zQ,UO,59]OOQ`-E7W-E7WOOOX7+$a7+$aOOOY7+$k7+$kOOO[7+$n7+$nOOOW7+$q7+$qOOOW7+$s7+$sO)VQ#tO,59dO)[Q#tO,59gO)aQ#tO,59jOOOW1G/W1G/WO)fO7[O'#CtO)tOMhO'#CtOOQ`1G.w1G.wOOOW1G/O1G/OOOOW1G/R1G/ROOOW1G/U1G/UOOOO'#DZ'#DZO*SO7[O,59`OOQ`,59`,59`OOOO'#D['#D[O*bOMhO,59`OOOO-E7X-E7XOOQ`1G.z1G.zOOOO-E7Y-E7Y\",\n  stateData: \"*x~O!]OS~OSSOTPOUQOVROX[OYZOZ]O^]O_]O`]Oa]Ow]Oz^O!cYO~Od`O~OdaO~OdbO~OdcO~O!VdOPkP!YkP~O!WgOQnP!YnP~O!XjORqP!YqP~OSSOTPOUQOVROWoOX[OYZOZ]O^]O_]O`]Oa]Ow]O!cYO~O!YpO~P#[O!ZqO!dsO~OdtO~OduO~OfwOjzO~OfwOj|O~OfwOj!OO~O[!ROfwOj!QO~O!VdOPkX!YkX~OP!TO!Y!UO~O!WgOQnX!YnX~OQ!WO!Y!UO~O!XjORqX!YqX~OR!YO!Y!UO~O!Y!UO~P#[Od![O~O!ZqO!d!^O~Oj!_O~Oj!`O~Og!aOfeXjeX[eX~OfwOj!cO~OfwOj!dO~OfwOj!eO~O[!gOfwOj!fO~Od!hO~Od!iO~Od!jO~Oj!kO~Oi!nO!_!lO!a!mO~Oj!oO~Oj!pO~Oj!qO~O_!rO`!rO!_!tO!`!rO~O_!uO`!uO!a!tO!b!uO~O_!rO`!rO!_!xO!`!rO~O_!uO`!uO!a!xO!b!uO~O`_a!cwz!c~\",\n  goto: \"%i!_PPPPPPPPPPPPPPPPPP!`!fP!lPP!vPP!y!|#P#V#Y#]#c#f#i#o#u!`P!`!`P#{$R$e$k$q$w$}%T%ZPPPPPPPP%aX]OW_nXTOW_nax`abcy{}!PR!n!aRfTR!UfXUOW_nRiUR!UiXVOW_nRlVR!UlXWOW_nQpWR!UnXXOW_nQ_ORv_Qy`Q{aQ}bQ!PcX!by{}!PQ!s!lR!w!sQ!v!mR!y!vQeTR!SeQhUR!VhQkVR!XkQnWR!ZnQrYR!]rS^O_TmWn\",\n  nodeNames: \"⚠ StartCloseTag StartCloseTag StartCloseTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag SelfCloseEndTag Document Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue EndTag ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst MismatchedCloseTag CloseTag DoctypeDecl\",\n  maxTerm: 66,\n  context: elementContext,\n  nodeProps: [\n    [NodeProp.closedBy, -9,1,2,3,5,6,7,8,9,10,\"EndTag\",4,\"EndTag SelfCloseEndTag\",-4,19,29,32,35,\"CloseTag\"],\n    [NodeProp.group, -9,11,15,16,17,18,38,39,40,41,\"Entity\",14,\"Entity TextContent\",-3,27,30,33,\"TextContent Entity\"],\n    [NodeProp.openedBy, 12,\"StartTag\",26,\"StartTag StartCloseTag\",-4,28,31,34,36,\"OpenTag\"]\n  ],\n  skippedNodes: [0],\n  repeatNodeCount: 9,\n  tokenData: \"!#b!aR!WOX$kXY)sYZ)sZ]$k]^)s^p$kpq)sqr$krs*zsv$kvw+dwx2yx}$k}!O3f!O!P$k!P!Q7_!Q![$k![!]8u!]!^$k!^!_>b!_!`!!p!`!a8T!a!c$k!c!}8u!}#R$k#R#S8u#S#T$k#T#o8u#o$f$k$f$g&R$g%W$k%W%o8u%o%p$k%p&a8u&a&b$k&b1p8u1p4U$k4U4d8u4d4e$k4e$IS8u$IS$I`$k$I`$Ib8u$Ib$Kh$k$Kh%#t8u%#t&/x$k&/x&Et8u&Et&FV$k&FV;'S8u;'S;:j<t;:j?&r$k?&r?Ah8u?Ah?BY$k?BY?Mn8u?Mn~$k!Z$vc^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g~$k!R&[V^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&Rq&xT^P!bpOv&qwx'Xx!^&q!^!_'g!_~&qP'^R^POv'Xw!^'X!_~'Xp'lQ!bpOv'gx~'ga'yU^P!``Or'rrs'Xsv'rw!^'r!^!_(]!_~'r`(bR!``Or(]sv(]w~(]!Q(rT!``!bpOr(krs'gsv(kwx(]x~(kW)WXiWOX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!a*O^^P!``!bp!]^OX&RXY)sYZ)sZ]&R]^)s^p&Rpq)sqr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!Z+TT!_h^P!bpOv&qwx'Xx!^&q!^!_'g!_~&q!Z+kbiWaPOX,sXZ.QZ],s]^.Q^p,sqr,srs.Qst/]tw,swx.Qx!P,s!P!Q.Q!Q!],s!]!^)R!^!a.Q!a$f,s$f$g.Q$g~,s!Z,xbiWOX,sXZ.QZ],s]^.Q^p,sqr,srs.Qst)Rtw,swx.Qx!P,s!P!Q.Q!Q!],s!]!^.i!^!a.Q!a$f,s$f$g.Q$g~,s!R.TTOp.Qqs.Qt!].Q!]!^.d!^~.Q!R.iO_!R!Z.pXiW_!ROX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!Z/baiWOX0gXZ1qZ]0g]^1q^p0gqr0grs1qsw0gwx1qx!P0g!P!Q1q!Q!]0g!]!^)R!^!a1q!a$f0g$f$g1q$g~0g!Z0laiWOX0gXZ1qZ]0g]^1q^p0gqr0grs1qsw0gwx1qx!P0g!P!Q1q!Q!]0g!]!^2V!^!a1q!a$f0g$f$g1q$g~0g!R1tSOp1qq!]1q!]!^2Q!^~1q!R2VO`!R!Z2^XiW`!ROX)RZ])R^p)Rqr)Rsw)Rx!P)R!Q!^)R!a$f)R$g~)R!Z3SU!ax^P!``Or'rrs'Xsv'rw!^'r!^!_(]!_~'r!]3qe^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx}$k}!O5S!O!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g~$k!]5_d^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!`&R!`!a6m!a$f$k$f$g&R$g~$k!T6xV^P!``!bp!dQOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!X7hX^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_!`&R!`!a8T!a~&R!X8`VjU^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R!a9U!YfSdQ^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx}$k}!O8u!O!P8u!P!Q&R!Q![8u![!]8u!]!^$k!^!_(k!_!a&R!a!c$k!c!}8u!}#R$k#R#S8u#S#T$k#T#o8u#o$f$k$f$g&R$g$}$k$}%O8u%O%W$k%W%o8u%o%p$k%p&a8u&a&b$k&b1p8u1p4U8u4U4d8u4d4e$k4e$IS8u$IS$I`$k$I`$Ib8u$Ib$Je$k$Je$Jg8u$Jg$Kh$k$Kh%#t8u%#t&/x$k&/x&Et8u&Et&FV$k&FV;'S8u;'S;:j<t;:j?&r$k?&r?Ah8u?Ah?BY$k?BY?Mn8u?Mn~$k!a=Pe^PiW!``!bpOX$kXZ&RZ]$k]^&R^p$kpq&Rqr$krs&qsv$kvw)Rwx'rx!P$k!P!Q&R!Q!^$k!^!_(k!_!a&R!a$f$k$f$g&R$g;=`$k;=`<%l8u<%l~$k!R>iW!``!bpOq(kqr?Rrs'gsv(kwx(]x!a(k!a!bKj!b~(k!R?YZ!``!bpOr(krs'gsv(kwx(]x}(k}!O?{!O!f(k!f!gAR!g#W(k#W#XGz#X~(k!R@SV!``!bpOr(krs'gsv(kwx(]x}(k}!O@i!O~(k!R@rT!``!bp!cPOr(krs'gsv(kwx(]x~(k!RAYV!``!bpOr(krs'gsv(kwx(]x!q(k!q!rAo!r~(k!RAvV!``!bpOr(krs'gsv(kwx(]x!e(k!e!fB]!f~(k!RBdV!``!bpOr(krs'gsv(kwx(]x!v(k!v!wBy!w~(k!RCQV!``!bpOr(krs'gsv(kwx(]x!{(k!{!|Cg!|~(k!RCnV!``!bpOr(krs'gsv(kwx(]x!r(k!r!sDT!s~(k!RD[V!``!bpOr(krs'gsv(kwx(]x!g(k!g!hDq!h~(k!RDxW!``!bpOrDqrsEbsvDqvwEvwxFfx!`Dq!`!aGb!a~DqqEgT!bpOvEbvxEvx!`Eb!`!aFX!a~EbPEyRO!`Ev!`!aFS!a~EvPFXOzPqF`Q!bpzPOv'gx~'gaFkV!``OrFfrsEvsvFfvwEvw!`Ff!`!aGQ!a~FfaGXR!``zPOr(]sv(]w~(]!RGkT!``!bpzPOr(krs'gsv(kwx(]x~(k!RHRV!``!bpOr(krs'gsv(kwx(]x#c(k#c#dHh#d~(k!RHoV!``!bpOr(krs'gsv(kwx(]x#V(k#V#WIU#W~(k!RI]V!``!bpOr(krs'gsv(kwx(]x#h(k#h#iIr#i~(k!RIyV!``!bpOr(krs'gsv(kwx(]x#m(k#m#nJ`#n~(k!RJgV!``!bpOr(krs'gsv(kwx(]x#d(k#d#eJ|#e~(k!RKTV!``!bpOr(krs'gsv(kwx(]x#X(k#X#YDq#Y~(k!RKqW!``!bpOrKjrsLZsvKjvwLowxNPx!aKj!a!b! g!b~KjqL`T!bpOvLZvxLox!aLZ!a!bM^!b~LZPLrRO!aLo!a!bL{!b~LoPMORO!`Lo!`!aMX!a~LoPM^OwPqMcT!bpOvLZvxLox!`LZ!`!aMr!a~LZqMyQ!bpwPOv'gx~'gaNUV!``OrNPrsLosvNPvwLow!aNP!a!bNk!b~NPaNpV!``OrNPrsLosvNPvwLow!`NP!`!a! V!a~NPa! ^R!``wPOr(]sv(]w~(]!R! nW!``!bpOrKjrsLZsvKjvwLowxNPx!`Kj!`!a!!W!a~Kj!R!!aT!``!bpwPOr(krs'gsv(kwx(]x~(k!V!!{VgS^P!``!bpOr&Rrs&qsv&Rwx'rx!^&R!^!_(k!_~&R\",\n  tokenizers: [scriptTokens, styleTokens, textareaTokens, tagStart, selfClosed, commentContent, 0, 1, 2, 3, 4, 5],\n  topRules: {\"Document\":[0,13]},\n  dialects: {noMatch: 0},\n  tokenPrec: 446\n});\n\nfunction getAttrs(element, input) {\n  let attrs = Object.create(null);\n  for (let att of element.firstChild.getChildren(\"Attribute\")) {\n    let name = att.getChild(\"AttributeName\"), value = att.getChild(\"AttributeValue\") || att.getChild(\"UnquotedAttributeValue\");\n    if (name) attrs[input.read(name.from, name.to)] =\n      !value ? \"\" : value.name == \"AttributeValue\" ? input.read(value.from + 1, value.to - 1) : input.read(value.from, value.to);\n  }\n  return attrs\n}\n\nfunction maybeNest(node, input, tags) {\n  let attrs;\n  for (let tag of tags) {\n    if (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(node.node.parent, input))))\n      return {parser: tag.parser}\n  }\n  return null\n}\n\n// tags: {\n//   tag: \"script\" | \"style\" | \"textarea\",\n//   attrs?: ({[attr: string]: string}) => boolean,\n//   parser: Parser\n// }[]\n \nfunction configureNesting(tags) {\n  let script = [], style = [], textarea = [];\n  for (let tag of tags) {\n    let array = tag.tag == \"script\" ? script : tag.tag == \"style\" ? style : tag.tag == \"textarea\" ? textarea : null;\n    if (!array) throw new RangeError(\"Only script, style, and textarea tags can host nested parsers\")\n    array.push(tag);\n  }\n  return parseMixed((node, input) => {\n    let id = node.type.id;\n    if (id == ScriptText) return maybeNest(node, input, script)\n    if (id == StyleText) return maybeNest(node, input, style)\n    if (id == TextareaText) return maybeNest(node, input, textarea)\n    return null\n  })\n}\n\nexport { configureNesting, parser };\n","import { ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { NodeProp } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst descendantOp = 93,\n  Unit = 1,\n  callee = 94,\n  identifier = 95,\n  VariableName = 2;\n\n/* Hand-written tokenizers for CSS tokens that can't be\n   expressed by Lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197,\n               8198, 8199, 8200, 8201, 8202, 8232, 8233, 8239, 8287, 12288];\nconst colon = 58, parenL = 40, underscore = 95, bracketL = 91, dash = 45, period = 46,\n      hash = 35, percent = 37;\n\nfunction isAlpha(ch) { return ch >= 65 && ch <= 90 || ch >= 97 && ch <= 122 || ch >= 161 }\n\nfunction isDigit(ch) { return ch >= 48 && ch <= 57 }\n\nconst identifiers = new ExternalTokenizer((input, stack) => {\n  for (let inside = false, dashes = 0, i = 0;; i++) {\n    let {next} = input;\n    if (isAlpha(next) || next == dash || next == underscore || (inside && isDigit(next))) {\n      if (!inside && (next != dash || i > 0)) inside = true;\n      if (dashes === i && next == dash) dashes++;\n      input.advance();\n    } else {\n      if (inside)\n        input.acceptToken(next == parenL ? callee : dashes == 2 && stack.canShift(VariableName) ? VariableName : identifier);\n      break\n    }\n  }\n});\n\nconst descendant = new ExternalTokenizer(input => {\n  if (space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (isAlpha(next) || next == underscore || next == hash || next == period ||\n        next == bracketL || next == colon || next == dash)\n      input.acceptToken(descendantOp);\n  }\n});\n\nconst unitToken = new ExternalTokenizer(input => {\n  if (!space.includes(input.peek(-1))) {\n    let {next} = input;\n    if (next == percent) { input.advance(); input.acceptToken(Unit); }\n    if (isAlpha(next)) {\n      do { input.advance(); } while (isAlpha(input.next))\n      input.acceptToken(Unit);\n    }\n  }\n});\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_callee = {__proto__:null,lang:32, \"nth-child\":32, \"nth-last-child\":32, \"nth-of-type\":32, dir:32, url:60, \"url-prefix\":60, domain:60, regexp:60, selector:134};\nconst spec_AtKeyword = {__proto__:null,\"@import\":114, \"@media\":138, \"@charset\":142, \"@namespace\":146, \"@keyframes\":152, \"@supports\":164};\nconst spec_identifier = {__proto__:null,not:128, only:128, from:158, to:160};\nconst parser = LRParser.deserialize({\n  version: 13,\n  states: \"7WOYQ[OOOOQP'#Cd'#CdOOQP'#Cc'#CcO!ZQ[O'#CfO!}QXO'#CaO#UQ[O'#ChO#aQ[O'#DPO#fQ[O'#DTOOQP'#Ec'#EcO#kQdO'#DeO$VQ[O'#DrO#kQdO'#DtO$hQ[O'#DvO$sQ[O'#DyO$xQ[O'#EPO%WQ[O'#EROOQS'#Eb'#EbOOQS'#ES'#ESQYQ[OOOOQP'#Cg'#CgOOQP,59Q,59QO!ZQ[O,59QO%_Q[O'#EVO%yQWO,58{O&RQ[O,59SO#aQ[O,59kO#fQ[O,59oO%_Q[O,59sO%_Q[O,59uO%_Q[O,59vO'bQ[O'#D`OOQS,58{,58{OOQP'#Ck'#CkOOQO'#C}'#C}OOQP,59S,59SO'iQWO,59SO'nQWO,59SOOQP'#DR'#DROOQP,59k,59kOOQO'#DV'#DVO'sQ`O,59oOOQS'#Cp'#CpO#kQdO'#CqO'{QvO'#CsO)VQtO,5:POOQO'#Cx'#CxO'iQWO'#CwO)kQWO'#CyOOQS'#Ef'#EfOOQO'#Dh'#DhO)pQ[O'#DoO*OQWO'#EiO$xQ[O'#DmO*^QWO'#DpOOQO'#Ej'#EjO%|QWO,5:^O*cQpO,5:`OOQS'#Dx'#DxO*kQWO,5:bO*pQ[O,5:bOOQO'#D{'#D{O*xQWO,5:eO*}QWO,5:kO+VQWO,5:mOOQS-E8Q-E8QOOQP1G.l1G.lO+yQXO,5:qOOQO-E8T-E8TOOQS1G.g1G.gOOQP1G.n1G.nO'iQWO1G.nO'nQWO1G.nOOQP1G/V1G/VO,WQ`O1G/ZO,qQXO1G/_O-XQXO1G/aO-oQXO1G/bO.VQXO'#CdO.zQWO'#DaOOQS,59z,59zO/PQWO,59zO/XQ[O,59zO/`QdO'#CoO/gQ[O'#DOOOQP1G/Z1G/ZO#kQdO1G/ZO/nQpO,59]OOQS,59_,59_O#kQdO,59aO/vQWO1G/kOOQS,59c,59cO/{Q!bO,59eO0TQWO'#DhO0`QWO,5:TO0eQWO,5:ZO$xQ[O,5:VO$xQ[O'#EYO0mQWO,5;TO0xQWO,5:XO%_Q[O,5:[OOQS1G/x1G/xOOQS1G/z1G/zOOQS1G/|1G/|O1ZQWO1G/|O1`QdO'#D|OOQS1G0P1G0POOQS1G0V1G0VOOQS1G0X1G0XOOQP7+$Y7+$YOOQP7+$u7+$uO#kQdO7+$uO#kQdO,59{O1nQ[O'#EXO1xQWO1G/fOOQS1G/f1G/fO1xQWO1G/fO2QQtO'#ETO2uQdO'#EeO3PQWO,59ZO3UQXO'#EhO3]QWO,59jO3bQpO7+$uOOQS1G.w1G.wOOQS1G.{1G.{OOQS7+%V7+%VO3jQWO1G/PO#kQdO1G/oOOQO1G/u1G/uOOQO1G/q1G/qO3oQWO,5:tOOQO-E8W-E8WO3}QXO1G/vOOQS7+%h7+%hO4UQYO'#CsO%|QWO'#EZO4^QdO,5:hOOQS,5:h,5:hO4lQpO<<HaO4tQtO1G/gOOQO,5:s,5:sO5XQ[O,5:sOOQO-E8V-E8VOOQS7+%Q7+%QO5cQWO7+%QOOQS-E8R-E8RO#kQdO'#EUO5kQWO,5;POOQT1G.u1G.uO5sQWO,5;SOOQP1G/U1G/UOOQP<<Ha<<HaOOQS7+$k7+$kO5{QdO7+%ZOOQO7+%b7+%bOOQS,5:u,5:uOOQS-E8X-E8XOOQS1G0S1G0SOOQPAN={AN={O6SQtO'#EWO#kQdO'#EWO6}QdO7+%ROOQO7+%R7+%ROOQO1G0_1G0_OOQS<<Hl<<HlO7_QdO,5:pOOQO-E8S-E8SOOQO<<Hu<<HuO7iQtO,5:rOOQS-E8U-E8UOOQO<<Hm<<Hm\",\n  stateData: \"8j~O#TOSROS~OUWOXWO]TO^TOtUOxVO!Y_O!ZXO!gYO!iZO!k[O!n]O!t^O#RPO#WRO~O#RcO~O]hO^hOpfOtiOxjO|kO!PmO#PlO#WeO~O!RnO~P!`O`sO#QqO#RpO~O#RuO~O#RwO~OQ!QObzOf!QOh!QOn!PO#Q}O#RyO#Z{O~Ob!SO!b!UO!e!VO#R!RO!R#]P~Oh![On!PO#R!ZO~O#R!^O~Ob!SO!b!UO!e!VO#R!RO~O!W#]P~P$VOUWOXWO]TO^TOtUOxVO#RPO#WRO~OpfO!RnO~O`!hO#QqO#RpO~OQ!pOUWOXWO]TO^TOtUOxVO!Y_O!ZXO!gYO!iZO!k[O!n]O!t^O#R!oO#WRO~O!Q!qO~P&^Ob!tO~Ob!uO~Ov!vOz!wO~OP!yObgXjgX!WgX!bgX!egX#RgXagXQgXfgXhgXngXpgX#QgX#ZgXvgX!QgX!VgX~Ob!SOj!zO!b!UO!e!VO#R!RO!W#]P~Ob!}O~Ob!SO!b!UO!e!VO#R#OO~Op#SO!`#RO!R#]X!W#]X~Ob#VO~Oj!zO!W#XO~O!W#YO~Oh#ZOn!PO~O!R#[O~O!RnO!`#RO~O!RnO!W#_O~O]hO^hOtiOxjO|kO!PmO#PlO#WeO~Op!ya!R!yaa!ya~P+_Ov#aOz#bO~O]hO^hOtiOxjO#WeO~Op{i|{i!P{i!R{i#P{ia{i~P,`Op}i|}i!P}i!R}i#P}ia}i~P,`Op!Oi|!Oi!P!Oi!R!Oi#P!Oia!Oi~P,`O]WX]!UX^WXpWXtWXxWX|WX!PWX!RWX#PWX#WWX~O]#cO~O!Q#fO!W#dO~O!Q#fO~P&^Oa#XP~P#kOa#[P~P%_Oa#nOj!zO~O!W#pO~Oh#qOo#qO~O]!^Xa![X!`![X~O]#rO~Oa#sO!`#RO~Op#SO!R#]a!W#]a~O!`#ROp!aa!R!aa!W!aaa!aa~O!W#xO~O!Q#|O!q#zO!r#zO#Z#yO~O!Q!{X!W!{X~P&^O!Q$SO!W#dO~Oj!zOQ!wXa!wXb!wXf!wXh!wXn!wXp!wX#Q!wX#R!wX#Z!wX~Op$VOa#XX~P#kOa$XO~Oa#[X~P!`Oa$ZO~Oj!zOv$[O~Oa$]O~O!`#ROp!|a!R!|a!W!|a~Oa$_O~P+_OP!yO!RgX~O!Q$bO!q#zO!r#zO#Z#yO~Oj!zOv$cO~Oj!zOp$eO!V$gO!Q!Ti!W!Ti~P#kO!Q!{a!W!{a~P&^O!Q$iO!W#dO~Op$VOa#Xa~OpfOa#[a~Oa$lO~P#kOj!zOQ!zXb!zXf!zXh!zXn!zXp!zX!Q!zX!V!zX!W!zX#Q!zX#R!zX#Z!zX~Op$eO!V$oO!Q!Tq!W!Tq~P#kOa!xap!xa~P#kOj!zOQ!zab!zaf!zah!zan!zap!za!Q!za!V!za!W!za#Q!za#R!za#Z!za~Oo#Zj!Pj~\",\n  goto: \",O#_PPPPP#`P#h#vP#h$U#hPP$[PPP$b$k$kP$}P$kP$k%e%wPPP&a&g#hP&mP#hP&sP#hP#h#hPPP&y']'iPP#`PP'o'o'y'oP'oP'o'oP#`P#`P#`P'|#`P(P(SPP#`P#`(V(e(s(y)T)Z)e)kPPPPPP)q)yP*e*hP+^+a+j]`Obn!s#d$QiWObfklmn!s!u#V#d$QiQObfklmn!s!u#V#d$QQdRR!ceQrTR!ghQ!gsQ!|!OR#`!hq!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jp!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jT#z#[#{q!OXZz!t!w!z#b#c#i#r$O$V$^$e$f$jp!QXZz!t!w!z#b#c#i#r$O$V$^$e$f$jQ![[R#Z!]QtTR!ihQ!gtR#`!iQvUR!jiQxVR!kjQoSQ!fgQ#W!XQ#^!`Q#_!aR$`#zQ!rnQ#g!sQ$P#dR$h$QX!pn!s#d$Qa!WY^_|!S!U#R#SR#P!SR!][R!_]R#]!_QbOU!bb!s$QQ!snR$Q#dQ#i!tU$U#i$^$jQ$^#rR$j$VQ$W#iR$k$WQgSS!eg$YR$Y#kQ$f$OR$n$fQ#e!rS$R#e$TR$T#gQ#T!TR#v#TQ#{#[R$a#{]aObn!s#d$Q[SObn!s#d$QQ!dfQ!lkQ!mlQ!nmQ#k!uR#w#VR#j!tQ|XQ!YZQ!xz[#h!t#i#r$V$^$jQ#m!wQ#o!zQ#}#bQ$O#cS$d$O$fR$m$eR#l!uQ!XYQ!a_R!{|U!TY_|Q!`^Q#Q!SQ#U!UQ#t#RR#u#S\",\n  nodeNames: \"⚠ Unit VariableName Comment StyleSheet RuleSet UniversalSelector TagSelector TagName NestingSelector ClassSelector ClassName PseudoClassSelector : :: PseudoClassName PseudoClassName ) ( ArgList ValueName ParenthesizedValue ColorLiteral NumberLiteral StringLiteral BinaryExpression BinOp CallExpression Callee CallLiteral CallTag ParenthesizedContent , PseudoClassName ArgList IdSelector # IdName ] AttributeSelector [ AttributeName MatchOp ChildSelector ChildOp DescendantSelector SiblingSelector SiblingOp } { Block Declaration PropertyName Important ; ImportStatement AtKeyword import KeywordQuery FeatureQuery FeatureName BinaryQuery LogicOp UnaryQuery UnaryQueryOp ParenthesizedQuery SelectorQuery selector MediaStatement media CharsetStatement charset NamespaceStatement namespace NamespaceName KeyframesStatement keyframes KeyframeName KeyframeList from to SupportsStatement supports AtRule\",\n  maxTerm: 106,\n  nodeProps: [\n    [NodeProp.openedBy, 17,\"(\",48,\"{\"],\n    [NodeProp.closedBy, 18,\")\",49,\"}\"]\n  ],\n  skippedNodes: [0,3],\n  repeatNodeCount: 8,\n  tokenData: \"Ay~R![OX$wX^%]^p$wpq%]qr(crs+}st,otu2Uuv$wvw2rwx2}xy3jyz3uz{3z{|4_|}8U}!O8a!O!P8x!P!Q9Z!Q![;e![!]<Y!]!^<x!^!_$w!_!`=T!`!a=`!a!b$w!b!c>O!c!}$w!}#O?[#O#P$w#P#Q?g#Q#R2U#R#T$w#T#U?r#U#c$w#c#d@q#d#o$w#o#pAQ#p#q2U#q#rA]#r#sAh#s#y$w#y#z%]#z$f$w$f$g%]$g#BY$w#BY#BZ%]#BZ$IS$w$IS$I_%]$I_$I|$w$I|$JO%]$JO$JT$w$JT$JU%]$JU$KV$w$KV$KW%]$KW&FU$w&FU&FV%]&FV~$wW$zQOy%Qz~%QW%VQoWOy%Qz~%Q~%bf#T~OX%QX^&v^p%Qpq&vqy%Qz#y%Q#y#z&v#z$f%Q$f$g&v$g#BY%Q#BY#BZ&v#BZ$IS%Q$IS$I_&v$I_$I|%Q$I|$JO&v$JO$JT%Q$JT$JU&v$JU$KV%Q$KV$KW&v$KW&FU%Q&FU&FV&v&FV~%Q~&}f#T~oWOX%QX^&v^p%Qpq&vqy%Qz#y%Q#y#z&v#z$f%Q$f$g&v$g#BY%Q#BY#BZ&v#BZ$IS%Q$IS$I_&v$I_$I|%Q$I|$JO&v$JO$JT%Q$JT$JU&v$JU$KV%Q$KV$KW&v$KW&FU%Q&FU&FV&v&FV~%Q^(fSOy%Qz#]%Q#]#^(r#^~%Q^(wSoWOy%Qz#a%Q#a#b)T#b~%Q^)YSoWOy%Qz#d%Q#d#e)f#e~%Q^)kSoWOy%Qz#c%Q#c#d)w#d~%Q^)|SoWOy%Qz#f%Q#f#g*Y#g~%Q^*_SoWOy%Qz#h%Q#h#i*k#i~%Q^*pSoWOy%Qz#T%Q#T#U*|#U~%Q^+RSoWOy%Qz#b%Q#b#c+_#c~%Q^+dSoWOy%Qz#h%Q#h#i+p#i~%Q^+wQ!VUoWOy%Qz~%Q~,QUOY+}Zr+}rs,ds#O+}#O#P,i#P~+}~,iOh~~,lPO~+}_,tWtPOy%Qz!Q%Q!Q![-^![!c%Q!c!i-^!i#T%Q#T#Z-^#Z~%Q^-cWoWOy%Qz!Q%Q!Q![-{![!c%Q!c!i-{!i#T%Q#T#Z-{#Z~%Q^.QWoWOy%Qz!Q%Q!Q![.j![!c%Q!c!i.j!i#T%Q#T#Z.j#Z~%Q^.qWfUoWOy%Qz!Q%Q!Q![/Z![!c%Q!c!i/Z!i#T%Q#T#Z/Z#Z~%Q^/bWfUoWOy%Qz!Q%Q!Q![/z![!c%Q!c!i/z!i#T%Q#T#Z/z#Z~%Q^0PWoWOy%Qz!Q%Q!Q![0i![!c%Q!c!i0i!i#T%Q#T#Z0i#Z~%Q^0pWfUoWOy%Qz!Q%Q!Q![1Y![!c%Q!c!i1Y!i#T%Q#T#Z1Y#Z~%Q^1_WoWOy%Qz!Q%Q!Q![1w![!c%Q!c!i1w!i#T%Q#T#Z1w#Z~%Q^2OQfUoWOy%Qz~%QY2XSOy%Qz!_%Q!_!`2e!`~%QY2lQzQoWOy%Qz~%QX2wQXPOy%Qz~%Q~3QUOY2}Zw2}wx,dx#O2}#O#P3d#P~2}~3gPO~2}_3oQbVOy%Qz~%Q~3zOa~_4RSUPjSOy%Qz!_%Q!_!`2e!`~%Q_4fUjS!PPOy%Qz!O%Q!O!P4x!P!Q%Q!Q![7_![~%Q^4}SoWOy%Qz!Q%Q!Q![5Z![~%Q^5bWoW#ZUOy%Qz!Q%Q!Q![5Z![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%Q^6PWoWOy%Qz{%Q{|6i|}%Q}!O6i!O!Q%Q!Q![6z![~%Q^6nSoWOy%Qz!Q%Q!Q![6z![~%Q^7RSoW#ZUOy%Qz!Q%Q!Q![6z![~%Q^7fYoW#ZUOy%Qz!O%Q!O!P5Z!P!Q%Q!Q![7_![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%Q_8ZQpVOy%Qz~%Q^8fUjSOy%Qz!O%Q!O!P4x!P!Q%Q!Q![7_![~%Q_8}S#WPOy%Qz!Q%Q!Q![5Z![~%Q~9`RjSOy%Qz{9i{~%Q~9nSoWOy9iyz9zz{:o{~9i~9}ROz9zz{:W{~9z~:ZTOz9zz{:W{!P9z!P!Q:j!Q~9z~:oOR~~:tUoWOy9iyz9zz{:o{!P9i!P!Q;W!Q~9i~;_QR~oWOy%Qz~%Q^;jY#ZUOy%Qz!O%Q!O!P5Z!P!Q%Q!Q![7_![!g%Q!g!h5z!h#X%Q#X#Y5z#Y~%QX<_S]POy%Qz![%Q![!]<k!]~%QX<rQ^PoWOy%Qz~%Q_<}Q!WVOy%Qz~%QY=YQzQOy%Qz~%QX=eS|POy%Qz!`%Q!`!a=q!a~%QX=xQ|PoWOy%Qz~%QX>RUOy%Qz!c%Q!c!}>e!}#T%Q#T#o>e#o~%QX>lY!YPoWOy%Qz}%Q}!O>e!O!Q%Q!Q![>e![!c%Q!c!}>e!}#T%Q#T#o>e#o~%QX?aQxPOy%Qz~%Q^?lQvUOy%Qz~%QX?uSOy%Qz#b%Q#b#c@R#c~%QX@WSoWOy%Qz#W%Q#W#X@d#X~%QX@kQ!`PoWOy%Qz~%QX@tSOy%Qz#f%Q#f#g@d#g~%QXAVQ!RPOy%Qz~%Q_AbQ!QVOy%Qz~%QZAmS!PPOy%Qz!_%Q!_!`2e!`~%Q\",\n  tokenizers: [descendant, unitToken, identifiers, 0, 1, 2, 3],\n  topRules: {\"StyleSheet\":[0,4]},\n  specialized: [{term: 94, get: value => spec_callee[value] || -1},{term: 56, get: value => spec_AtKeyword[value] || -1},{term: 95, get: value => spec_identifier[value] || -1}],\n  tokenPrec: 1078\n});\n\nexport { parser };\n","import { parser } from '@lezer/css';\nimport { syntaxTree, LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags as tags$1 } from '@codemirror/highlight';\n\nlet _properties = null;\nfunction properties() {\n    if (!_properties && typeof document == \"object\" && document.body) {\n        let names = [];\n        for (let prop in document.body.style) {\n            if (!/[A-Z]|^-|^(item|length)$/.test(prop))\n                names.push(prop);\n        }\n        _properties = names.sort().map(name => ({ type: \"property\", label: name }));\n    }\n    return _properties || [];\n}\nconst pseudoClasses = /*@__PURE__*/[\n    \"active\", \"after\", \"before\", \"checked\", \"default\",\n    \"disabled\", \"empty\", \"enabled\", \"first-child\", \"first-letter\",\n    \"first-line\", \"first-of-type\", \"focus\", \"hover\", \"in-range\",\n    \"indeterminate\", \"invalid\", \"lang\", \"last-child\", \"last-of-type\",\n    \"link\", \"not\", \"nth-child\", \"nth-last-child\", \"nth-last-of-type\",\n    \"nth-of-type\", \"only-of-type\", \"only-child\", \"optional\", \"out-of-range\",\n    \"placeholder\", \"read-only\", \"read-write\", \"required\", \"root\",\n    \"selection\", \"target\", \"valid\", \"visited\"\n].map(name => ({ type: \"class\", label: name }));\nconst values = /*@__PURE__*/[\n    \"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"after-white-space\",\n    \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\",\n    \"antialiased\", \"appworkspace\", \"asterisks\", \"attr\", \"auto\", \"auto-flow\", \"avoid\", \"avoid-column\",\n    \"avoid-page\", \"avoid-region\", \"axis-pan\", \"background\", \"backwards\", \"baseline\", \"below\",\n    \"bidi-override\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\",\n    \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\",\n    \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"capitalize\",\n    \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\",\n    \"cjk-decimal\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"color\", \"color-burn\",\n    \"color-dodge\", \"column\", \"column-reverse\", \"compact\", \"condensed\", \"contain\", \"content\",\n    \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\",\n    \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"darken\", \"dashed\", \"decimal\",\n    \"decimal-leading-zero\", \"default\", \"default-button\", \"dense\", \"destination-atop\", \"destination-in\",\n    \"destination-out\", \"destination-over\", \"difference\", \"disc\", \"discard\", \"disclosure-closed\",\n    \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\",\n    \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\",\n    \"ethiopic-abegede-gez\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-gez\", \"ew-resize\", \"exclusion\",\n    \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fill-box\",\n    \"fixed\", \"flat\", \"flex\", \"flex-end\", \"flex-start\", \"footnotes\", \"forwards\", \"from\",\n    \"geometricPrecision\", \"graytext\", \"grid\", \"groove\", \"hand\", \"hard-light\", \"help\", \"hidden\", \"hide\",\n    \"higher\", \"highlight\", \"highlighttext\", \"horizontal\", \"hsl\", \"hsla\", \"hue\", \"icon\", \"ignore\",\n    \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\",\n    \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-grid\",\n    \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"justify\", \"keep-all\",\n    \"landscape\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"lighten\", \"line-through\", \"linear\",\n    \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\",\n    \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lowercase\", \"ltr\", \"luminosity\", \"manipulation\",\n    \"match\", \"matrix\", \"matrix3d\", \"medium\", \"menu\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\",\n    \"mix\", \"monospace\", \"move\", \"multiple\", \"multiple_mask_images\", \"multiply\", \"n-resize\", \"narrower\",\n    \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\",\n    \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\",\n    \"oblique\", \"opacity\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"outset\", \"outside\",\n    \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\",\n    \"perspective\", \"pinch-zoom\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\",\n    \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\",\n    \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\",\n    \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\",\n    \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\",\n    \"row\", \"row-resize\", \"row-reverse\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"saturation\",\n    \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"screen\", \"scroll\", \"scrollbar\", \"scroll-position\",\n    \"se-resize\", \"self-start\", \"self-end\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\",\n    \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\",\n    \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\",\n    \"small-caption\", \"smaller\", \"soft-light\", \"solid\", \"source-atop\", \"source-in\", \"source-out\",\n    \"source-over\", \"space\", \"space-around\", \"space-between\", \"space-evenly\", \"spell-out\", \"square\", \"start\",\n    \"static\", \"status-bar\", \"stretch\", \"stroke\", \"stroke-box\", \"sub\", \"subpixel-antialiased\", \"svg_masks\",\n    \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"system-ui\", \"table\", \"table-caption\", \"table-cell\",\n    \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\",\n    \"table-row-group\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thick\", \"thin\",\n    \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"to\", \"top\",\n    \"transform\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\",\n    \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"unidirectional-pan\", \"unset\", \"up\", \"upper-latin\",\n    \"uppercase\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"view-box\", \"visible\", \"visibleFill\",\n    \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\",\n    \"windowtext\", \"words\", \"wrap\", \"wrap-reverse\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\"\n].map(name => ({ type: \"keyword\", label: name })).concat(/*@__PURE__*/[\n    \"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\",\n    \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\",\n    \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\",\n    \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\",\n    \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\",\n    \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\",\n    \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\",\n    \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\",\n    \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\",\n    \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\",\n    \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\",\n    \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\",\n    \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\",\n    \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\",\n    \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\",\n    \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\",\n    \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\",\n    \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\",\n    \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\",\n    \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\",\n    \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\",\n    \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\",\n    \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\",\n    \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\",\n    \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\",\n    \"whitesmoke\", \"yellow\", \"yellowgreen\"\n].map(name => ({ type: \"constant\", label: name })));\nconst tags = /*@__PURE__*/[\n    \"a\", \"abbr\", \"address\", \"article\", \"aside\", \"b\", \"bdi\", \"bdo\", \"blockquote\", \"body\",\n    \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"dd\", \"del\",\n    \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"figcaption\", \"figure\", \"footer\",\n    \"form\", \"header\", \"hgroup\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"hr\", \"html\", \"i\", \"iframe\",\n    \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"main\", \"meter\", \"nav\", \"ol\", \"output\",\n    \"p\", \"pre\", \"ruby\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"sub\", \"summary\",\n    \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"tr\", \"u\", \"ul\"\n].map(name => ({ type: \"type\", label: name }));\nconst span = /^[\\w-]*/;\n/**\nCSS property and value keyword completion source.\n*/\nconst cssCompletionSource = context => {\n    let { state, pos } = context, node = syntaxTree(state).resolveInner(pos, -1);\n    if (node.name == \"PropertyName\")\n        return { from: node.from, options: properties(), span };\n    if (node.name == \"ValueName\")\n        return { from: node.from, options: values, span };\n    if (node.name == \"PseudoClassName\")\n        return { from: node.from, options: pseudoClasses, span };\n    if (node.name == \"TagName\") {\n        for (let { parent } = node; parent; parent = parent.parent)\n            if (parent.name == \"Block\")\n                return { from: node.from, options: properties(), span };\n        return { from: node.from, options: tags, span };\n    }\n    if (!context.explicit)\n        return null;\n    let above = node.resolve(pos), before = above.childBefore(pos);\n    if (before && before.name == \":\" && above.name == \"PseudoClassSelector\")\n        return { from: pos, options: pseudoClasses, span };\n    if (before && before.name == \":\" && above.name == \"Declaration\" || above.name == \"ArgList\")\n        return { from: pos, options: values, span };\n    if (above.name == \"Block\")\n        return { from: pos, options: properties(), span };\n    return null;\n};\n\n/**\nA language provider based on the [Lezer CSS\nparser](https://github.com/lezer-parser/css), extended with\nhighlighting and indentation information.\n*/\nconst cssLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Declaration: /*@__PURE__*/continuedIndent()\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Block: foldInside\n            }),\n            /*@__PURE__*/styleTags({\n                \"import charset namespace keyframes\": tags$1.definitionKeyword,\n                \"media supports\": tags$1.controlKeyword,\n                \"from to selector\": tags$1.keyword,\n                NamespaceName: tags$1.namespace,\n                KeyframeName: tags$1.labelName,\n                TagName: tags$1.tagName,\n                ClassName: tags$1.className,\n                PseudoClassName: /*@__PURE__*/tags$1.constant(tags$1.className),\n                IdName: tags$1.labelName,\n                \"FeatureName PropertyName\": tags$1.propertyName,\n                AttributeName: tags$1.attributeName,\n                NumberLiteral: tags$1.number,\n                KeywordQuery: tags$1.keyword,\n                UnaryQueryOp: tags$1.operatorKeyword,\n                \"CallTag ValueName\": tags$1.atom,\n                VariableName: tags$1.variableName,\n                Callee: tags$1.operatorKeyword,\n                Unit: tags$1.unit,\n                \"UniversalSelector NestingSelector\": tags$1.definitionOperator,\n                AtKeyword: tags$1.keyword,\n                MatchOp: tags$1.compareOperator,\n                \"ChildOp SiblingOp, LogicOp\": tags$1.logicOperator,\n                BinOp: tags$1.arithmeticOperator,\n                Important: tags$1.modifier,\n                Comment: tags$1.blockComment,\n                ParenthesizedContent: /*@__PURE__*/tags$1.special(tags$1.name),\n                ColorLiteral: tags$1.color,\n                StringLiteral: tags$1.string,\n                \":\": tags$1.punctuation,\n                \"PseudoOp #\": tags$1.derefOperator,\n                \"; ,\": tags$1.separator,\n                \"( )\": tags$1.paren,\n                \"[ ]\": tags$1.squareBracket,\n                \"{ }\": tags$1.brace\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*\\}$/,\n        wordChars: \"-\"\n    }\n});\n// FIXME remove on next major version\nconst cssCompletion = /*@__PURE__*/cssLanguage.data.of({ autocomplete: cssCompletionSource });\n/**\nLanguage support for CSS.\n*/\nfunction css() {\n    return new LanguageSupport(cssLanguage, cssCompletion);\n}\n\nexport { css, cssCompletion, cssCompletionSource, cssLanguage };\n","import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';\nimport { NodeProp } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst noSemi = 275,\n  incdec = 1,\n  incdecPrefix = 2,\n  templateContent = 276,\n  templateDollarBrace = 277,\n  templateEnd = 278,\n  insertSemi = 279,\n  TSExtends = 3,\n  spaces = 281,\n  newline = 282,\n  LineComment = 4,\n  BlockComment = 5,\n  Dialect_ts = 1;\n\n/* Hand-written tokenizers for JavaScript tokens that can't be\n   expressed by lezer's built-in tokenizer. */\n\nconst space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,\n               8201, 8202, 8232, 8233, 8239, 8287, 12288];\n\nconst braceR = 125, braceL = 123, semicolon = 59, slash = 47, star = 42,\n      plus = 43, minus = 45, dollar = 36, backtick = 96, backslash = 92;\n\nconst trackNewline = new ContextTracker({\n  start: false,\n  shift(context, term) {\n    return term == LineComment || term == BlockComment || term == spaces ? context : term == newline\n  },\n  strict: false\n});\n\nconst insertSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if ((next == braceR || next == -1 || stack.context) && stack.canShift(insertSemi))\n    input.acceptToken(insertSemi);\n}, {contextual: true, fallback: true});\n\nconst noSemicolon = new ExternalTokenizer((input, stack) => {\n  let {next} = input, after;\n  if (space.indexOf(next) > -1) return\n  if (next == slash && ((after = input.peek(1)) == slash || after == star)) return\n  if (next != braceR && next != semicolon && next != -1 && !stack.context && stack.canShift(noSemi))\n    input.acceptToken(noSemi);\n}, {contextual: true});\n\nconst incdecToken = new ExternalTokenizer((input, stack) => {\n  let {next} = input;\n  if (next == plus || next == minus) {\n    input.advance();\n    if (next == input.next) {\n      input.advance();\n      let mayPostfix = !stack.context && stack.canShift(incdec);\n      input.acceptToken(mayPostfix ? incdec : incdecPrefix);\n    }\n  }\n}, {contextual: true});\n\nconst template = new ExternalTokenizer(input => {\n  for (let afterDollar = false, i = 0;; i++) {\n    let {next} = input;\n    if (next < 0) {\n      if (i) input.acceptToken(templateContent);\n      break\n    } else if (next == backtick) {\n      if (i) input.acceptToken(templateContent);\n      else input.acceptToken(templateEnd, 1);\n      break\n    } else if (next == braceL && afterDollar) {\n      if (i == 1) input.acceptToken(templateDollarBrace, 1);\n      else input.acceptToken(templateContent, -1);\n      break\n    } else if (next == 10 /* \"\\n\" */ && i) {\n      // Break up template strings on lines, to avoid huge tokens\n      input.advance();\n      input.acceptToken(templateContent);\n      break\n    } else if (next == backslash) {\n      input.advance();\n    }\n    afterDollar = next == dollar;\n    input.advance();\n  }\n});\n\nfunction tsExtends(value, stack) {\n  return value == \"extends\" && stack.dialectEnabled(Dialect_ts) ? TSExtends : -1\n}\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_identifier = {__proto__:null,export:16, as:21, from:25, default:30, async:35, function:36, this:46, true:54, false:54, void:60, typeof:64, null:78, super:80, new:114, await:131, yield:133, delete:134, class:144, extends:146, public:189, private:189, protected:189, readonly:191, instanceof:212, in:214, const:216, import:248, keyof:299, unique:303, infer:309, is:343, abstract:363, implements:365, type:367, let:370, var:372, interface:379, enum:383, namespace:389, module:391, declare:395, global:399, for:420, of:429, while:432, with:436, do:440, if:444, else:446, switch:450, case:456, try:462, catch:464, finally:466, return:470, throw:474, break:478, continue:482, debugger:486};\nconst spec_word = {__proto__:null,async:101, get:103, set:105, public:153, private:153, protected:153, static:155, abstract:157, override:159, readonly:165, new:347};\nconst spec_LessThan = {__proto__:null,\"<\":121};\nconst parser = LRParser.deserialize({\n  version: 13,\n  states: \"$1WO`QYOOO'QQ!LdO'#CgO'XOSO'#DSO)dQYO'#DXO)tQYO'#DdO){QYO'#DnO-xQYO'#DtOOQO'#EX'#EXO.]QWO'#EWO.bQWO'#EWOOQ!LS'#Eb'#EbO0aQ!LdO'#IqO2wQ!LdO'#IrO3eQWO'#EvO3jQpO'#F]OOQ!LS'#FO'#FOO3rO!bO'#FOO4QQWO'#FdO5_QWO'#FcOOQ!LS'#Ir'#IrOOQ!LQ'#Iq'#IqOOQQ'#J['#J[O5dQWO'#HjO5iQ!LYO'#HkOOQQ'#Ic'#IcOOQQ'#Hl'#HlQ`QYOOO){QYO'#DfO5qQWO'#GWO5vQ#tO'#ClO6UQWO'#EVO6aQWO'#EcO6fQ#tO'#E}O7QQWO'#GWO7VQWO'#G[O7bQWO'#G[O7pQWO'#G_O7pQWO'#G`O7pQWO'#GbO5qQWO'#GeO8aQWO'#GhO9oQWO'#CcO:PQWO'#GuO:XQWO'#G{O:XQWO'#G}O`QYO'#HPO:XQWO'#HRO:XQWO'#HUO:^QWO'#H[O:cQ!LZO'#H`O){QYO'#HbO:nQ!LZO'#HdO:yQ!LZO'#HfO5iQ!LYO'#HhO){QYO'#IsOOOS'#Hn'#HnO;UOSO,59nOOQ!LS,59n,59nO=gQbO'#CgO=qQYO'#HoO>OQWO'#ItO?}QbO'#ItO'dQYO'#ItO@UQWO,59sO@lQ&jO'#D^OAeQWO'#EXOArQWO'#JPOA}QWO'#JOOBVQWO,5:uOB[QWO'#I}OBcQWO'#DuO5vQ#tO'#EVOBqQWO'#EVOB|Q`O'#E}OOQ!LS,5:O,5:OOCUQYO,5:OOESQ!LdO,5:YOEpQWO,5:`OFZQ!LYO'#I|O7VQWO'#I{OFbQWO'#I{OFjQWO,5:tOFoQWO'#I{OF}QYO,5:rOH}QWO'#ESOJXQWO,5:rOKhQWO'#DhOKoQYO'#DmOKyQ&jO,5:{O){QYO,5:{OOQQ'#En'#EnOOQQ'#Ep'#EpO){QYO,5:}O){QYO,5:}O){QYO,5:}O){QYO,5:}O){QYO,5:}O){QYO,5:}O){QYO,5:}O){QYO,5:}O){QYO,5:}O){QYO,5:}O){QYO,5:}OOQQ'#Et'#EtOLRQYO,5;_OOQ!LS,5;d,5;dOOQ!LS,5;e,5;eONRQWO,5;eOOQ!LS,5;f,5;fO){QYO'#HyONWQ!LYO,5<PONrQWO,5:}O){QYO,5;bO! [QpO'#JTONyQpO'#JTO! cQpO'#JTO! tQpO,5;mOOOO,5;w,5;wO!!SQYO'#F_OOOO'#Hx'#HxO3rO!bO,5;jO!!ZQpO'#FaOOQ!LS,5;j,5;jO!!wQ,UO'#CqOOQ!LS'#Ct'#CtO!#[QWO'#CtO!#aOSO'#CxO!#}Q#tO,5;|O!$UQWO,5<OO!%bQWO'#FnO!%oQWO'#FoO!%tQWO'#FsO!&vQ&jO'#FwO!'iQ,UO'#IlOOQ!LS'#Il'#IlO!'sQWO'#IkO!(RQWO'#IjOOQ!LS'#Cr'#CrOOQ!LS'#Cy'#CyO!(ZQWO'#C{OJ^QWO'#FfOJ^QWO'#FhO!(`QWO'#FjO!(eQWO'#FkO!(jQWO'#FqOJ^QWO'#FvO!(oQWO'#EYO!)WQWO,5;}O`QYO,5>UOOQQ'#If'#IfOOQQ,5>V,5>VOOQQ-E;j-E;jO!+SQ!LdO,5:QOOQ!LQ'#Co'#CoO!+sQ#tO,5<rOOQO'#Ce'#CeO!,UQWO'#CpO!,^Q!LYO'#IgO5_QWO'#IgO:^QWO,59WO!,lQpO,59WO!,tQ#tO,59WO5vQ#tO,59WO!-PQWO,5:rO!-XQWO'#GtO!-dQWO'#J`O){QYO,5;gO!-lQ&jO,5;iO!-qQWO,5=_O!-vQWO,5=_O!-{QWO,5=_O5iQ!LYO,5=_O5qQWO,5<rO!.ZQWO'#EZO!.lQ&jO'#E[OOQ!LQ'#I}'#I}O!.}Q!LYO'#J]O5iQ!LYO,5<vO7pQWO,5<|OOQO'#Cq'#CqO!/YQpO,5<yO!/bQ#tO,5<zO!/mQWO,5<|O!/rQ`O,5=PO:^QWO'#GjO5qQWO'#GlO!/zQWO'#GlO5vQ#tO'#GoO!0PQWO'#GoOOQQ,5=S,5=SO!0UQWO'#GpO!0^QWO'#ClO!0cQWO,58}O!0mQWO,58}O!2oQYO,58}OOQQ,58},58}O!2|Q!LYO,58}O){QYO,58}O!3XQYO'#GwOOQQ'#Gx'#GxOOQQ'#Gy'#GyO`QYO,5=aO!3iQWO,5=aO){QYO'#DtO`QYO,5=gO`QYO,5=iO!3nQWO,5=kO`QYO,5=mO!3sQWO,5=pO!3xQYO,5=vOOQQ,5=z,5=zO){QYO,5=zO5iQ!LYO,5=|OOQQ,5>O,5>OO!7yQWO,5>OOOQQ,5>Q,5>QO!7yQWO,5>QOOQQ,5>S,5>SO!8OQ`O,5?_OOOS-E;l-E;lOOQ!LS1G/Y1G/YO!8TQbO,5>ZO){QYO,5>ZOOQO-E;m-E;mO!8_QWO,5?`O!8gQbO,5?`O!8nQWO,5?jOOQ!LS1G/_1G/_O!8vQpO'#DQOOQO'#Iv'#IvO){QYO'#IvO!9eQpO'#IvO!:SQpO'#D_O!:eQ&jO'#D_O!<pQYO'#D_O!<wQWO'#IuO!=PQWO,59xO!=UQWO'#E]O!=dQWO'#JQO!=lQWO,5:vO!>SQ&jO'#D_O){QYO,5?kO!>^QWO'#HtO!8nQWO,5?jOOQ!LQ1G0a1G0aO!?jQ&jO'#DxOOQ!LS,5:a,5:aO){QYO,5:aOH}QWO,5:aO!?qQWO,5:aO:^QWO,5:qO!,lQpO,5:qO!,tQ#tO,5:qO5vQ#tO,5:qOOQ!LS1G/j1G/jOOQ!LS1G/z1G/zOOQ!LQ'#ER'#ERO){QYO,5?hO!?|Q!LYO,5?hO!@_Q!LYO,5?hO!@fQWO,5?gO!@nQWO'#HvO!@fQWO,5?gOOQ!LQ1G0`1G0`O7VQWO,5?gOOQ!LS1G0^1G0^O!AYQ!LdO1G0^O!AyQ!LbO,5:nOOQ!LS'#Fm'#FmO!BgQ!LdO'#IlOF}QYO1G0^O!DfQ#tO'#IwO!DpQWO,5:SO!DuQbO'#IxO){QYO'#IxO!EPQWO,5:XOOQ!LS'#DQ'#DQOOQ!LS1G0g1G0gO!EUQWO1G0gO!GgQ!LdO1G0iO!GnQ!LdO1G0iO!JRQ!LdO1G0iO!JYQ!LdO1G0iO!LaQ!LdO1G0iO!LtQ!LdO1G0iO# eQ!LdO1G0iO# lQ!LdO1G0iO#$PQ!LdO1G0iO#$WQ!LdO1G0iO#%{Q!LdO1G0iO#(uQ7^O'#CgO#*pQ7^O1G0yO#,kQ7^O'#IrOOQ!LS1G1P1G1PO#-OQ!LdO,5>eOOQ!LQ-E;w-E;wO#-oQ!LdO1G0iOOQ!LS1G0i1G0iO#/qQ!LdO1G0|O#0bQpO,5;oO#0gQpO,5;pO#0lQpO'#FWO#1QQWO'#FVOOQO'#JU'#JUOOQO'#Hw'#HwO#1VQpO1G1XOOQ!LS1G1X1G1XOOOO1G1b1G1bO#1eQ7^O'#IqO#1oQWO,5;yOLRQYO,5;yOOOO-E;v-E;vOOQ!LS1G1U1G1UOOQ!LS,5;{,5;{O#1tQpO,5;{OOQ!LS,59`,59`OH}QWO'#InOOOS'#Hm'#HmO#1yOSO,59dOOQ!LS,59d,59dO){QYO1G1hO!(eQWO'#H{O#2UQWO,5<aOOQ!LS,5<^,5<^OOQO'#GR'#GROJ^QWO,5<lOOQO'#GT'#GTOJ^QWO,5<nOJ^QWO,5<pOOQO1G1j1G1jO#2aQ`O'#CoO#2tQ`O,5<YO#2{QWO'#JXO5qQWO'#JXO#3ZQWO,5<[OJ^QWO,5<ZO#3`Q`O'#FmO#3mQ`O'#JYO#3wQWO'#JYOH}QWO'#JYO#3|QWO,5<_OOQ!LQ'#Dc'#DcO#4RQWO'#FpO#4^QpO'#FxO!&qQ&jO'#FxO!&qQ&jO'#FzO#4oQWO'#F{O!(jQWO'#GOOOQO'#H}'#H}O#4tQ&jO,5<cOOQ!LS,5<c,5<cO#4{Q&jO'#FxO#5ZQ&jO'#FyO#5cQ&jO'#FyOOQ!LS,5<q,5<qOJ^QWO,5?VOJ^QWO,5?VO#5hQWO'#IOO#5sQWO,5?UOOQ!LS'#Cg'#CgO#6gQ#tO,59gOOQ!LS,59g,59gO#7YQ#tO,5<QO#7{Q#tO,5<SO#8VQWO,5<UOOQ!LS,5<V,5<VO#8[QWO,5<]O#8aQ#tO,5<bOF}QYO1G1iO#8qQWO1G1iOOQQ1G3p1G3pOOQ!LS1G/l1G/lONRQWO1G/lOOQQ1G2^1G2^OH}QWO1G2^O){QYO1G2^OH}QWO1G2^O#8vQWO1G2^O#9UQWO,59[O#:_QWO'#ESOOQ!LQ,5?R,5?RO#:iQ!LYO,5?ROOQQ1G.r1G.rO:^QWO1G.rO!,lQpO1G.rO!,tQ#tO1G.rO#:wQWO1G0^O#:|QWO'#CgO#;XQWO'#JaO#;aQWO,5=`O#;fQWO'#JaO#;kQWO'#JaO#;pQWO'#IWO#<OQWO,5?zO#<WQbO1G1ROOQ!LS1G1T1G1TO5qQWO1G2yO#<_QWO1G2yO#<dQWO1G2yO#<iQWO1G2yOOQQ1G2y1G2yO#<nQ#tO1G2^O7VQWO'#JOO7VQWO'#E]O7VQWO'#IQO#=PQ!LYO,5?wOOQQ1G2b1G2bO!/mQWO1G2hOH}QWO1G2eO#=[QWO1G2eOOQQ1G2f1G2fOH}QWO1G2fO#=aQWO1G2fO#=iQ&jO'#GdOOQQ1G2h1G2hO!&qQ&jO'#ISO!/rQ`O1G2kOOQQ1G2k1G2kOOQQ,5=U,5=UO#=qQ#tO,5=WO5qQWO,5=WO#4oQWO,5=ZO5_QWO,5=ZO!,lQpO,5=ZO!,tQ#tO,5=ZO5vQ#tO,5=ZO#>SQWO'#J_O#>_QWO,5=[OOQQ1G.i1G.iO#>dQ!LYO1G.iO#>oQWO1G.iO!(ZQWO1G.iO5iQ!LYO1G.iO#>tQbO,5?|O#?OQWO,5?|O#?ZQYO,5=cO#?bQWO,5=cO7VQWO,5?|OOQQ1G2{1G2{O`QYO1G2{OOQQ1G3R1G3ROOQQ1G3T1G3TO:XQWO1G3VO#?gQYO1G3XO#CbQYO'#HWOOQQ1G3[1G3[O:^QWO1G3bO#CoQWO1G3bO5iQ!LYO1G3fOOQQ1G3h1G3hOOQ!LQ'#Ft'#FtO5iQ!LYO1G3jO5iQ!LYO1G3lOOOS1G4y1G4yO#CwQ`O,5<PO#DPQbO1G3uO#DZQWO1G4zO#DcQWO1G5UO#DkQWO,5?bOLRQYO,5:wO7VQWO,5:wO:^QWO,59yOLRQYO,59yO!,lQpO,59yO#DpQ7^O,59yOOQO,5:w,5:wO#DzQ&jO'#HpO#EbQWO,5?aOOQ!LS1G/d1G/dO#EjQ&jO'#HuO#FOQWO,5?lOOQ!LQ1G0b1G0bO!:eQ&jO,59yO#FWQbO1G5VOOQO,5>`,5>`O7VQWO,5>`OOQO-E;r-E;rOOQ!LQ'#EO'#EOO#FbQ!LrO'#EPO!?bQ&jO'#DyOOQO'#Hs'#HsO#F|Q&jO,5:dOOQ!LS,5:d,5:dO#GTQ&jO'#DyO#GfQ&jO'#DyO#GmQ&jO'#EUO#GpQ&jO'#EPO#G}Q&jO'#EPO!?bQ&jO'#EPO#HbQWO1G/{O#HgQ`O1G/{OOQ!LS1G/{1G/{O){QYO1G/{OH}QWO1G/{OOQ!LS1G0]1G0]O:^QWO1G0]O!,lQpO1G0]O!,tQ#tO1G0]O#HnQ!LdO1G5SO){QYO1G5SO#IOQ!LYO1G5SO#IaQWO1G5RO7VQWO,5>bOOQO,5>b,5>bO#IiQWO,5>bOOQO-E;t-E;tO#IaQWO1G5RO#IwQ!LdO,59gO#KvQ!LdO,5<QO#MxQ!LdO,5<SO$ zQ!LdO,5<bOOQ!LS7+%x7+%xO$$SQ!LdO7+%xO$$sQWO'#HqO$$}QWO,5?cOOQ!LS1G/n1G/nO$%VQYO'#HrO$%dQWO,5?dO$%lQbO,5?dOOQ!LS1G/s1G/sOOQ!LS7+&R7+&RO$%vQ7^O,5:YO){QYO7+&eO$&QQ7^O,5:QOOQO1G1Z1G1ZOOQO1G1[1G1[O$&_QMhO,5;rOLRQYO,5;qOOQO-E;u-E;uOOQ!LS7+&s7+&sOOOO7+&|7+&|OOOO1G1e1G1eO$&jQWO1G1eOOQ!LS1G1g1G1gO$&oQ`O,5?YOOOS-E;k-E;kOOQ!LS1G/O1G/OO$&vQ!LdO7+'SOOQ!LS,5>g,5>gO$'gQWO,5>gOOQ!LS1G1{1G1{P$'lQWO'#H{POQ!LS-E;y-E;yO$(]Q#tO1G2WO$)OQ#tO1G2YO$)YQ#tO1G2[OOQ!LS1G1t1G1tO$)aQWO'#HzO$)oQWO,5?sO$)oQWO,5?sO$)wQWO,5?sO$*SQWO,5?sOOQO1G1v1G1vO$*bQ#tO1G1uO$*rQWO'#H|O$+SQWO,5?tOH}QWO,5?tO$+[Q`O,5?tOOQ!LS1G1y1G1yO5iQ!LYO,5<dO5iQ!LYO,5<eO$+fQWO,5<eO#4jQWO,5<eO!,lQpO,5<dO$+kQWO,5<fO5iQ!LYO,5<gO$+fQWO,5<jOOQO-E;{-E;{OOQ!LS1G1}1G1}O!&qQ&jO,5<dO$+sQWO,5<eO!&qQ&jO,5<fO!&qQ&jO,5<eO$,OQ#tO1G4qO$,YQ#tO1G4qOOQO,5>j,5>jOOQO-E;|-E;|O!-lQ&jO,59iO){QYO,59iO$,gQWO1G1pOJ^QWO1G1wO$,lQ!LdO7+'TOOQ!LS7+'T7+'TOF}QYO7+'TOOQ!LS7+%W7+%WO$-]Q`O'#JZO#HbQWO7+'xO$-gQWO7+'xO$-oQ`O7+'xOOQQ7+'x7+'xOH}QWO7+'xO){QYO7+'xOH}QWO7+'xOOQO1G.v1G.vO$-yQ!LbO'#CgO$.ZQ!LbO,5<hO$.xQWO,5<hOOQ!LQ1G4m1G4mOOQQ7+$^7+$^O:^QWO7+$^O!,lQpO7+$^OF}QYO7+%xO$.}QWO'#IVO$/]QWO,5?{OOQO1G2z1G2zO5qQWO,5?{O$/]QWO,5?{O$/eQWO,5?{OOQO,5>r,5>rOOQO-E<U-E<UOOQ!LS7+&m7+&mO$/jQWO7+(eO5iQ!LYO7+(eO5qQWO7+(eO$/oQWO7+(eO$/tQWO7+'xOOQ!LQ,5>l,5>lOOQ!LQ-E<O-E<OOOQQ7+(S7+(SO$0SQ!LbO7+(POH}QWO7+(PO$0^Q`O7+(QOOQQ7+(Q7+(QOH}QWO7+(QO$0eQWO'#J^O$0pQWO,5=OOOQO,5>n,5>nOOQO-E<Q-E<QOOQQ7+(V7+(VO$1jQ&jO'#GmOOQQ1G2r1G2rOH}QWO1G2rO){QYO1G2rOH}QWO1G2rO$1qQWO1G2rO$2PQ#tO1G2rO5iQ!LYO1G2uO#4oQWO1G2uO5_QWO1G2uO!,lQpO1G2uO!,tQ#tO1G2uO$2bQWO'#IUO$2mQWO,5?yO$2uQ&jO,5?yOOQ!LQ1G2v1G2vOOQQ7+$T7+$TO$2zQWO7+$TO5iQ!LYO7+$TO$3PQWO7+$TO){QYO1G5hO){QYO1G5iO$3UQYO1G2}O$3]QWO1G2}O$3bQYO1G2}O$3iQ!LYO1G5hOOQQ7+(g7+(gO5iQ!LYO7+(qO`QYO7+(sOOQQ'#Jd'#JdOOQQ'#IX'#IXO$3sQYO,5=rOOQQ,5=r,5=rO){QYO'#HXO$4QQWO'#HZOOQQ7+(|7+(|O$4VQYO7+(|O7VQWO7+(|OOQQ7+)Q7+)QOOQQ7+)U7+)UOOQQ7+)W7+)WOOQO1G4|1G4|O$8TQ7^O1G0cO$8_QWO1G0cOOQO1G/e1G/eO$8jQ7^O1G/eO:^QWO1G/eOLRQYO'#D_OOQO,5>[,5>[OOQO-E;n-E;nOOQO,5>a,5>aOOQO-E;s-E;sO!,lQpO1G/eOOQO1G3z1G3zO:^QWO,5:eOOQO,5:k,5:kO){QYO,5:kO$8tQ!LYO,5:kO$9PQ!LYO,5:kO!,lQpO,5:eOOQO-E;q-E;qOOQ!LS1G0O1G0OO!?bQ&jO,5:eO$9_Q&jO,5:eO$9pQ!LrO,5:kO$:[Q&jO,5:eO!?bQ&jO,5:kOOQO,5:p,5:pO$:cQ&jO,5:kO$:pQ!LYO,5:kOOQ!LS7+%g7+%gO#HbQWO7+%gO#HgQ`O7+%gOOQ!LS7+%w7+%wO:^QWO7+%wO!,lQpO7+%wO$;UQ!LdO7+*nO){QYO7+*nOOQO1G3|1G3|O7VQWO1G3|O$;fQWO7+*mO$;nQ!LdO1G2WO$=pQ!LdO1G2YO$?rQ!LdO1G1uO$AzQ#tO,5>]OOQO-E;o-E;oO$BUQbO,5>^O){QYO,5>^OOQO-E;p-E;pO$B`QWO1G5OO$BhQ7^O1G0^O$DoQ7^O1G0iO$DvQ7^O1G0iO$FwQ7^O1G0iO$GOQ7^O1G0iO$HsQ7^O1G0iO$IWQ7^O1G0iO$KeQ7^O1G0iO$KlQ7^O1G0iO$MmQ7^O1G0iO$MtQ7^O1G0iO% iQ7^O1G0iO% |Q!LdO<<JPO%!mQ7^O1G0iO%$]Q7^O'#IlO%&YQ7^O1G0|OLRQYO'#FYOOQO'#JV'#JVOOQO1G1^1G1^O%&gQWO1G1]O%&lQ7^O,5>eOOOO7+'P7+'POOOS1G4t1G4tOOQ!LS1G4R1G4ROJ^QWO7+'vO%&vQWO,5>fO5qQWO,5>fOOQO-E;x-E;xO%'UQWO1G5_O%'UQWO1G5_O%'^QWO1G5_O%'iQ`O,5>hO%'sQWO,5>hOH}QWO,5>hOOQO-E;z-E;zO%'xQ`O1G5`O%(SQWO1G5`OOQO1G2O1G2OOOQO1G2P1G2PO5iQ!LYO1G2PO$+fQWO1G2PO5iQ!LYO1G2OO%([QWO1G2QOH}QWO1G2QOOQO1G2R1G2RO5iQ!LYO1G2UO!,lQpO1G2OO#4jQWO1G2PO%(aQWO1G2QO%(iQWO1G2POJ^QWO7+*]OOQ!LS1G/T1G/TO%(tQWO1G/TOOQ!LS7+'[7+'[O%(yQ#tO7+'cO%)ZQ!LdO<<JoOOQ!LS<<Jo<<JoOH}QWO'#IPO%)zQWO,5?uOOQQ<<Kd<<KdOH}QWO<<KdO#HbQWO<<KdO%*SQWO<<KdO%*[Q`O<<KdOH}QWO1G2SOOQQ<<Gx<<GxO:^QWO<<GxO%*fQ!LdO<<IdOOQ!LS<<Id<<IdOOQO,5>q,5>qO%+VQWO,5>qO#;kQWO,5>qOOQO-E<T-E<TO%+[QWO1G5gO%+[QWO1G5gO5qQWO1G5gO%+dQWO<<LPOOQQ<<LP<<LPO%+iQWO<<LPO5iQ!LYO<<LPO){QYO<<KdOH}QWO<<KdOOQQ<<Kk<<KkO$0SQ!LbO<<KkOOQQ<<Kl<<KlO$0^Q`O<<KlO%+nQ&jO'#IRO%+yQWO,5?xOLRQYO,5?xOOQQ1G2j1G2jO#FbQ!LrO'#EPO!?bQ&jO'#GnOOQO'#IT'#ITO%,RQ&jO,5=XOOQQ,5=X,5=XO%,YQ&jO'#EPO%,eQ&jO'#EPO%,|Q&jO'#EPO%-WQ&jO'#GnO%-iQWO7+(^O%-nQWO7+(^O%-vQ`O7+(^OOQQ7+(^7+(^OH}QWO7+(^O){QYO7+(^OH}QWO7+(^O%.QQWO7+(^OOQQ7+(a7+(aO5iQ!LYO7+(aO#4oQWO7+(aO5_QWO7+(aO!,lQpO7+(aO%.`QWO,5>pOOQO-E<S-E<SOOQO'#Gq'#GqO%.kQWO1G5eO5iQ!LYO<<GoOOQQ<<Go<<GoO%.sQWO<<GoO%.xQWO7++SO%.}QWO7++TOOQQ7+(i7+(iO%/SQWO7+(iO%/XQYO7+(iO%/`QWO7+(iO){QYO7++SO){QYO7++TOOQQ<<L]<<L]OOQQ<<L_<<L_OOQQ-E<V-E<VOOQQ1G3^1G3^O%/eQWO,5=sOOQQ,5=u,5=uO:^QWO<<LhO%/jQWO<<LhOLRQYO7+%}OOQO7+%P7+%PO%/oQ7^O1G5VO:^QWO7+%POOQO1G0P1G0PO%/yQ!LdO1G0VOOQO1G0V1G0VO){QYO1G0VO%0TQ!LYO1G0VO:^QWO1G0PO!,lQpO1G0PO!?bQ&jO1G0PO%0`Q!LYO1G0VO%0nQ&jO1G0PO%1PQ!LYO1G0VO%1eQ!LrO1G0VO%1oQ&jO1G0PO!?bQ&jO1G0VOOQ!LS<<IR<<IROOQ!LS<<Ic<<IcO:^QWO<<IcO%1vQ!LdO<<NYOOQO7+)h7+)hO%2WQ!LdO7+'cO%4`QbO1G3xO%4jQ7^O7+%xO%4wQ7^O,59gO%6tQ7^O,5<QO%8qQ7^O,5<SO%:nQ7^O,5<bO%<^Q7^O7+'SO%<kQ7^O7+'TO%<xQWO,5;tOOQO7+&w7+&wO%<}Q#tO<<KbOOQO1G4Q1G4QO%=_QWO1G4QO%=jQWO1G4QO%=xQWO7+*yO%=xQWO7+*yOH}QWO1G4SO%>QQ`O1G4SO%>[QWO7+*zOOQO7+'k7+'kO5iQ!LYO7+'kOOQO7+'j7+'jO$+fQWO7+'lO%>dQ`O7+'lOOQO7+'p7+'pO5iQ!LYO7+'jO$+fQWO7+'kO%>kQWO7+'lOH}QWO7+'lO#4jQWO7+'kO%>pQ#tO<<MwOOQ!LS7+$o7+$oO%>zQ`O,5>kOOQO-E;}-E;}O#HbQWOANAOOOQQANAOANAOOH}QWOANAOO%?UQ!LbO7+'nOOQQAN=dAN=dO5qQWO1G4]OOQO1G4]1G4]O%?cQWO1G4]O%?hQWO7++RO%?hQWO7++RO5iQ!LYOANAkO%?pQWOANAkOOQQANAkANAkO%?uQWOANAOO%?}Q`OANAOOOQQANAVANAVOOQQANAWANAWO%@XQWO,5>mOOQO-E<P-E<PO%@dQ7^O1G5dO#4oQWO,5=YO5_QWO,5=YO!,lQpO,5=YOOQO-E<R-E<ROOQQ1G2s1G2sO$9pQ!LrO,5:kO!?bQ&jO,5=YO%@nQ&jO,5=YO%APQ&jO,5:kOOQQ<<Kx<<KxOH}QWO<<KxO%-iQWO<<KxO%AZQWO<<KxO%AcQ`O<<KxO){QYO<<KxOH}QWO<<KxOOQQ<<K{<<K{O5iQ!LYO<<K{O#4oQWO<<K{O5_QWO<<K{O%AmQ&jO1G4[O%ArQWO7++POOQQAN=ZAN=ZO5iQ!LYOAN=ZOOQQ<<Nn<<NnOOQQ<<No<<NoOOQQ<<LT<<LTO%AzQWO<<LTO%BPQYO<<LTO%BWQWO<<NnO%B]QWO<<NoOOQQ1G3_1G3_OOQQANBSANBSO:^QWOANBSO%BbQ7^O<<IiOOQO<<Hk<<HkOOQO7+%q7+%qO%/yQ!LdO7+%qO){QYO7+%qOOQO7+%k7+%kO:^QWO7+%kO!,lQpO7+%kO%BlQ!LYO7+%qO!?bQ&jO7+%kO%BwQ!LYO7+%qO%CVQ&jO7+%kO%ChQ!LYO7+%qOOQ!LSAN>}AN>}O%C|Q!LdO<<KbO%FUQ7^O<<JPO%FcQ7^O1G1uO%HRQ7^O1G2WO%JOQ7^O1G2YO%K{Q7^O<<JoO%LYQ7^O<<IdOOQO1G1`1G1`OOQO7+)l7+)lO%LgQWO7+)lO%LrQWO<<NeO%LzQ`O7+)nOOQO<<KV<<KVO5iQ!LYO<<KWO$+fQWO<<KWOOQO<<KU<<KUO5iQ!LYO<<KVO%MUQ`O<<KWO$+fQWO<<KVOOQQG26jG26jO#HbQWOG26jOOQO7+)w7+)wO5qQWO7+)wO%M]QWO<<NmOOQQG27VG27VO5iQ!LYOG27VOH}QWOG26jOLRQYO1G4XO%MeQWO7++OO5iQ!LYO1G2tO#4oQWO1G2tO5_QWO1G2tO!,lQpO1G2tO!?bQ&jO1G2tO%1eQ!LrO1G0VO%MmQ&jO1G2tO%-iQWOANAdOOQQANAdANAdOH}QWOANAdO%NOQWOANAdO%NWQ`OANAdOOQQANAgANAgO5iQ!LYOANAgO#4oQWOANAgOOQO'#Gr'#GrOOQO7+)v7+)vOOQQG22uG22uOOQQANAoANAoO%NbQWOANAoOOQQANDYANDYOOQQANDZANDZO%NgQYOG27nOOQO<<I]<<I]O%/yQ!LdO<<I]OOQO<<IV<<IVO:^QWO<<IVO){QYO<<I]O!,lQpO<<IVO&$eQ!LYO<<I]O!?bQ&jO<<IVO&$pQ!LYO<<I]O&%OQ7^O7+'cOOQO<<MW<<MWOOQOAN@rAN@rO5iQ!LYOAN@rOOQOAN@qAN@qO$+fQWOAN@rO5iQ!LYOAN@qOOQQLD,ULD,UOOQO<<Mc<<McOOQQLD,qLD,qO#HbQWOLD,UO&&nQ7^O7+)sOOQO7+(`7+(`O5iQ!LYO7+(`O#4oQWO7+(`O5_QWO7+(`O!,lQpO7+(`O!?bQ&jO7+(`OOQQG27OG27OO%-iQWOG27OOH}QWOG27OOOQQG27RG27RO5iQ!LYOG27ROOQQG27ZG27ZO:^QWOLD-YOOQOAN>wAN>wOOQOAN>qAN>qO%/yQ!LdOAN>wO:^QWOAN>qO){QYOAN>wO!,lQpOAN>qO&&xQ!LYOAN>wO&'TQ7^O<<KbOOQOG26^G26^O5iQ!LYOG26^OOQOG26]G26]OOQQ!$( p!$( pOOQO<<Kz<<KzO5iQ!LYO<<KzO#4oQWO<<KzO5_QWO<<KzO!,lQpO<<KzOOQQLD,jLD,jO%-iQWOLD,jOOQQLD,mLD,mOOQQ!$(!t!$(!tOOQOG24cG24cOOQOG24]G24]O%/yQ!LdOG24cO:^QWOG24]O){QYOG24cOOQOLD+xLD+xOOQOANAfANAfO5iQ!LYOANAfO#4oQWOANAfO5_QWOANAfOOQQ!$(!U!$(!UOOQOLD)}LD)}OOQOLD)wLD)wO%/yQ!LdOLD)}OOQOG27QG27QO5iQ!LYOG27QO#4oQWOG27QOOQO!$'Mi!$'MiOOQOLD,lLD,lO5iQ!LYOLD,lOOQO!$(!W!$(!WOLRQYO'#DnO&(sQbO'#IqOLRQYO'#DfO&(zQ!LdO'#CgO&)eQbO'#CgO&)uQYO,5:rOLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO,5:}OLRQYO'#HyO&+uQWO,5<PO&-XQWO,5:}OLRQYO,5;bO!(ZQWO'#C{O!(ZQWO'#C{OH}QWO'#FfO&+}QWO'#FfOH}QWO'#FhO&+}QWO'#FhOH}QWO'#FvO&+}QWO'#FvOLRQYO,5?kO&)uQYO1G0^O&-`Q7^O'#CgOLRQYO1G1hOH}QWO,5<lO&+}QWO,5<lOH}QWO,5<nO&+}QWO,5<nOH}QWO,5<ZO&+}QWO,5<ZO&)uQYO1G1iOLRQYO7+&eOH}QWO1G1wO&+}QWO1G1wO&)uQYO7+'TO&)uQYO7+%xOH}QWO7+'vO&+}QWO7+'vO&-jQWO'#EWO&-oQWO'#EWO&-wQWO'#EvO&-|QWO'#EcO&.RQWO'#JPO&.^QWO'#I}O&.iQWO,5:rO&.nQ#tO,5;|O&.uQWO'#FoO&.zQWO'#FoO&/PQWO,5;}O&/XQWO,5:rO&/aQ7^O1G0yO&/hQWO,5<]O&/mQWO,5<]O&/rQWO1G1iO&/wQWO1G0^O&/|Q#tO1G2[O&0TQ#tO1G2[O4QQWO'#FdO5_QWO'#FcOBqQWO'#EVOLRQYO,5;_O!(jQWO'#FqO!(jQWO'#FqOJ^QWO,5<pOJ^QWO,5<p\",\n  stateData: \"&1Q~O'TOS'UOSSOSTOS~OPTOQTOWyO]cO^hOanObmOgcOiTOjcOkcOnTOpTOuROwcOxcOycO!PSO!ZkO!`UO!cTO!dTO!eTO!fTO!gTO!jlO#`sO#ppO#t^O${qO$}tO%PrO%QrO%TuO%VvO%YwO%ZwO%]xO%jzO%p{O%r|O%t}O%v!OO%y!PO&P!QO&T!RO&V!SO&X!TO&Z!UO&]!VO'WPO'aQO'mYO'zaO~OPZXYZX^ZXiZXrZXsZXuZX}ZX!]ZX!^ZX!`ZX!fZX!wZX#ScX#WZX#XZX#YZX#ZZX#[ZX#]ZX#^ZX#_ZX#aZX#cZX#eZX#fZX#kZX'RZX'aZX'nZX'uZX'vZX~O!X$hX~P$zO'O!XO'P!WO'Q!ZO~OPTOQTO]cOa!jOb!iOgcOiTOjcOkcOnTOpTOuROwcOxcOycO!P!bO!ZkO!`UO!cTO!dTO!eTO!fTO!gTO!j!hO#p!kO#t^O'W![O'aQO'mYO'zaO~O|!`O}!]Oz'hPz'rP~P'dO!O!lO~P`OPTOQTO]cOa!jOb!iOgcOiTOjcOkcOnTOpTOuROwcOxcOycO!P!bO!ZkO!`UO!cTO!dTO!eTO!fTO!gTO!j!hO#p!kO#t^O'W9VO'aQO'mYO'zaO~OPTOQTO]cOa!jOb!iOgcOiTOjcOkcOnTOpTOuROwcOxcOycO!P!bO!ZkO!`UO!cTO!dTO!eTO!fTO!gTO!j!hO#p!kO#t^O'aQO'mYO'zaO~O|!qO#Q!tO#R!qO'W9WO!_'oP~P+{O#S!uO~O!X!vO#S!uO~OP#]OY#cOi#QOr!zOs!zOu!{O}#aO!]#SO!^!xO!`!yO!f#]O#W#OO#X#PO#Y#PO#Z#PO#[#RO#]#SO#^#SO#_#SO#a#TO#c#VO#e#XO#f#YO'aQO'n#ZO'u!|O'v!}O~O^'eX'R'eX!_'eXz'eX!P'eX$|'eX!X'eX~P.jO!w#dO#k#dOP'fXY'fX^'fXi'fXr'fXs'fXu'fX}'fX!]'fX!^'fX!`'fX!f'fX#W'fX#X'fX#Y'fX#Z'fX#['fX#]'fX#^'fX#a'fX#c'fX#e'fX#f'fX'a'fX'n'fX'u'fX'v'fX~O#_'fX'R'fXz'fX!_'fX'c'fX!P'fX$|'fX!X'fX~P0zO!w#dO~O#v#eO#}#iO~O!P#jO#t^O$Q#kO$S#mO~O]#pOg#}Oi#qOj#pOk#pOn$OOp$POu#wO!P#xO!Z$UO!`#uO#R$VO#p$SO$Z$QO$]$RO$`$TO'W#oO'a#rO'['^P~O!`$WO~O!X$YO~O^$ZO'R$ZO~O'W$_O~O!`$WO'W$_O'X$aO']$bO~Ob$hO!`$WO'W$_O~O#_#SO~O]$qOr$mO!P$jO!`$lO$}$pO'W$_O'X$aO[(SP~O!j$rO~Ou$sO!P$tO'W$_O~Ou$sO!P$tO%V$xO'W$_O~O'W$yO~O#`sO$}tO%PrO%QrO%TuO%VvO%YwO%ZwO~Oa%SOb%RO!j%PO${%QO%_%OO~P7uOa%VObmO!P%UO!jlO#`sO${qO%PrO%QrO%TuO%VvO%YwO%ZwO%]xO~O_%YO!w%]O$}%WO'X$aO~P8tO!`%^O!c%bO~O!`%cO~O!PSO~O^$ZO&}%kO'R$ZO~O^$ZO&}%nO'R$ZO~O^$ZO&}%pO'R$ZO~O'O!XO'P!WO'Q%tO~OPZXYZXiZXrZXsZXuZX}ZX}cX!]ZX!^ZX!`ZX!fZX!wZX!wcX#ScX#WZX#XZX#YZX#ZZX#[ZX#]ZX#^ZX#_ZX#aZX#cZX#eZX#fZX#kZX'aZX'nZX'uZX'vZX~OzZXzcX~P;aO|%vOz&cX}&cX~P){O}!]Oz'hX~OP#]OY#cOi#QOr!zOs!zOu!{O}!]O!]#SO!^!xO!`!yO!f#]O#W#OO#X#PO#Y#PO#Z#PO#[#RO#]#SO#^#SO#_#SO#a#TO#c#VO#e#XO#f#YO'aQO'n#ZO'u!|O'v!}O~Oz'hX~P>WOz%{O~Ou&OO!S&YO!T&RO!U&RO'X$aO~O]&POj&PO|&SO'd%|O!O'iP!O'tP~P@ZOz'qX}'qX!X'qX!_'qX'n'qX~O!w'qX#S!{X!O'qX~PASO!w&ZOz'sX}'sX~O}&[Oz'rX~Oz&^O~O!w#dO~PASOR&bO!P&_O!k&aO'W$_O~Ob&gO!`$WO'W$_O~Or$mO!`$lO~O!O&hO~P`Or!zOs!zOu!{O!^!xO!`!yO'aQOP!baY!bai!ba}!ba!]!ba!f!ba#W!ba#X!ba#Y!ba#Z!ba#[!ba#]!ba#^!ba#_!ba#a!ba#c!ba#e!ba#f!ba'n!ba'u!ba'v!ba~O^!ba'R!baz!ba!_!ba'c!ba!P!ba$|!ba!X!ba~PC]O!_&iO~O!X!vO!w&kO'n&jO}'pX^'pX'R'pX~O!_'pX~PEuO}&oO!_'oX~O!_&qO~Ou$sO!P$tO#R&rO'W$_O~OPTOQTO]cOa!jOb!iOgcOiTOjcOkcOnTOpTOuROwcOxcOycO!PSO!ZkO!`UO!cTO!dTO!eTO!fTO!gTO!j!hO#p!kO#t^O'W9VO'aQO'mYO'zaO~O]#pOg#}Oi#qOj#pOk#pOn$OOp9iOu#wO!P#xO!Z:lO!`#uO#R9oO#p$SO$Z9kO$]9mO$`$TO'W&vO'a#rO~O#S&xO~O]#pOg#}Oi#qOj#pOk#pOn$OOp$POu#wO!P#xO!Z$UO!`#uO#R$VO#p$SO$Z$QO$]$RO$`$TO'W&vO'a#rO~O'['kP~PJ^O|&|O!_'lP~P){O'd'OO'mYO~OP9SOQ9SO]cOa:jOb!iOgcOi9SOjcOkcOn9SOp9SOuROwcOxcOycO!P!bO!Z9UO!`UO!c9SO!d9SO!e9SO!f9SO!g9SO!j!hO#p!kO#t^O'W'^O'aQO'mYO'z:hO~O!`!yO~O}#aO^$Xa'R$Xa!_$Xaz$Xa!P$Xa$|$Xa!X$Xa~O#`'eO~PH}O!X'gO!P'wX#s'wX#v'wX#}'wX~Or'hO~PNyOr'hO!P'wX#s'wX#v'wX#}'wX~O!P'jO#s'nO#v'iO#}'oO~O|'rO~PLRO#v#eO#}'uO~Or$aXu$aX!^$aX'n$aX'u$aX'v$aX~OReX}eX!weX'[eX'[$aX~P!!cOj'wO~O'O'yO'P'xO'Q'{O~Or'}Ou(OO'n#ZO'u(QO'v(SO~O'['|O~P!#lO'[(VO~O]#pOg#}Oi#qOj#pOk#pOn$OOp9iOu#wO!P#xO!Z:lO!`#uO#R9oO#p$SO$Z9kO$]9mO$`$TO'a#rO~O|(ZO'W(WO!_'{P~P!$ZO#S(]O~O|(aO'W(^Oz'|P~P!$ZO^(jOi(oOu(gO!S(mO!T(fO!U(fO!`(dO!t(nO$s(iO'X$aO'd(cO~O!O(lO~P!&RO!^!xOr'`Xu'`X'n'`X'u'`X'v'`X}'`X!w'`X~O'['`X#i'`X~P!&}OR(rO!w(qO}'_X'['_X~O}(sO'['^X~O'W(uO~O!`(zO~O'W&vO~O!`(dO~Ou$sO|!qO!P$tO#Q!tO#R!qO'W$_O!_'oP~O!X!vO#S)OO~OP#]OY#cOi#QOr!zOs!zOu!{O!]#SO!^!xO!`!yO!f#]O#W#OO#X#PO#Y#PO#Z#PO#[#RO#]#SO#^#SO#_#SO#a#TO#c#VO#e#XO#f#YO'aQO'n#ZO'u!|O'v!}O~O^!Ya}!Ya'R!Yaz!Ya!_!Ya'c!Ya!P!Ya$|!Ya!X!Ya~P!)`OR)WO!P&_O!k)VO$|)UO']$bO~O'W$yO'['^P~O!X)ZO!P'ZX^'ZX'R'ZX~O!`$WO']$bO~O!`$WO'W$_O']$bO~O!X!vO#S&xO~O$})gO'W)cO!O(TP~O})hO[(SX~O'd'OO~OY)lO~O[)mO~O!P$jO'W$_O'X$aO[(SP~Ou$sO|)rO!P$tO'W$_Oz'rP~O]&VOj&VO|)sO'd'OO!O'tP~O})tO^(PX'R(PX~O!w)xO']$bO~OR){O!P#xO']$bO~O!P)}O~Or*PO!PSO~O!j*UO~Ob*ZO~O'W(uO!O(RP~Ob$hO~O$}tO'W$yO~P8tOY*aO[*`O~OPTOQTO]cOanObmOgcOiTOjcOkcOnTOpTOuROwcOxcOycO!ZkO!`UO!cTO!dTO!eTO!fTO!gTO!jlO#t^O${qO'aQO'mYO'zaO~O!P!bO#p!kO'W9VO~P!0uO[*`O^$ZO'R$ZO~O^*eO#`*gO%P*gO%Q*gO~P){O!`%^O~O%p*lO~O!P*nO~O&Q*qO&R*pOP&OaQ&OaW&Oa]&Oa^&Oaa&Oab&Oag&Oai&Oaj&Oak&Oan&Oap&Oau&Oaw&Oax&Oay&Oa!P&Oa!Z&Oa!`&Oa!c&Oa!d&Oa!e&Oa!f&Oa!g&Oa!j&Oa#`&Oa#p&Oa#t&Oa${&Oa$}&Oa%P&Oa%Q&Oa%T&Oa%V&Oa%Y&Oa%Z&Oa%]&Oa%j&Oa%p&Oa%r&Oa%t&Oa%v&Oa%y&Oa&P&Oa&T&Oa&V&Oa&X&Oa&Z&Oa&]&Oa&|&Oa'W&Oa'a&Oa'm&Oa'z&Oa!O&Oa%w&Oa_&Oa%|&Oa~O'W*tO~O'c*wO~Oz&ca}&ca~P!)`O}!]Oz'ha~Oz'ha~P>WO}&[Oz'ra~O}tX}!VX!OtX!O!VX!XtX!X!VX!`!VX!wtX']!VX~O!X+OO!w*}O}#PX}'jX!O#PX!O'jX!X'jX!`'jX']'jX~O!X+QO!`$WO']$bO}!RX!O!RX~O]%}Oj%}Ou&OO'd(cO~OP9SOQ9SO]cOa:jOb!iOgcOi9SOjcOkcOn9SOp9SOuROwcOxcOycO!P!bO!Z9UO!`UO!c9SO!d9SO!e9SO!f9SO!g9SO!j!hO#p!kO#t^O'aQO'mYO'z:hO~O'W9sO~P!:sO}+UO!O'iX~O!O+WO~O!X+OO!w*}O}#PX!O#PX~O}+XO!O'tX~O!O+ZO~O]%}Oj%}Ou&OO'X$aO'd(cO~O!T+[O!U+[O~P!=qOu$sO|+_O!P$tO'W$_Oz&hX}&hX~O^+dO!S+gO!T+cO!U+cO!n+kO!o+iO!p+jO!q+hO!t+lO'X$aO'd(cO'm+aO~O!O+fO~P!>rOR+qO!P&_O!k+pO~O!w+wO}'pa!_'pa^'pa'R'pa~O!X!vO~P!?|O}&oO!_'oa~Ou$sO|+zO!P$tO#Q+|O#R+zO'W$_O}&jX!_&jX~O^!zi}!zi'R!ziz!zi!_!zi'c!zi!P!zi$|!zi!X!zi~P!)`O#S!va}!va!_!va!w!va!P!va^!va'R!vaz!va~P!#lO#S'`XP'`XY'`X^'`Xi'`Xs'`X!]'`X!`'`X!f'`X#W'`X#X'`X#Y'`X#Z'`X#['`X#]'`X#^'`X#_'`X#a'`X#c'`X#e'`X#f'`X'R'`X'a'`X!_'`Xz'`X!P'`X'c'`X$|'`X!X'`X~P!&}O},VO'['kX~P!#lO'[,XO~O},YO!_'lX~P!)`O!_,]O~Oz,^O~OP#]Or!zOs!zOu!{O!^!xO!`!yO!f#]O'aQOY#Vi^#Vii#Vi}#Vi!]#Vi#X#Vi#Y#Vi#Z#Vi#[#Vi#]#Vi#^#Vi#_#Vi#a#Vi#c#Vi#e#Vi#f#Vi'R#Vi'n#Vi'u#Vi'v#Viz#Vi!_#Vi'c#Vi!P#Vi$|#Vi!X#Vi~O#W#Vi~P!EZO#W#OO~P!EZOP#]Or!zOs!zOu!{O!^!xO!`!yO!f#]O#W#OO#X#PO#Y#PO#Z#PO'aQOY#Vi^#Vi}#Vi!]#Vi#[#Vi#]#Vi#^#Vi#_#Vi#a#Vi#c#Vi#e#Vi#f#Vi'R#Vi'n#Vi'u#Vi'v#Viz#Vi!_#Vi'c#Vi!P#Vi$|#Vi!X#Vi~Oi#Vi~P!GuOi#QO~P!GuOP#]Oi#QOr!zOs!zOu!{O!^!xO!`!yO!f#]O#W#OO#X#PO#Y#PO#Z#PO#[#RO'aQO^#Vi}#Vi#a#Vi#c#Vi#e#Vi#f#Vi'R#Vi'n#Vi'u#Vi'v#Viz#Vi!_#Vi'c#Vi!P#Vi$|#Vi!X#Vi~OY#Vi!]#Vi#]#Vi#^#Vi#_#Vi~P!JaOY#cO!]#SO#]#SO#^#SO#_#SO~P!JaOP#]OY#cOi#QOr!zOs!zOu!{O!]#SO!^!xO!`!yO!f#]O#W#OO#X#PO#Y#PO#Z#PO#[#RO#]#SO#^#SO#_#SO#a#TO'aQO^#Vi}#Vi#c#Vi#e#Vi#f#Vi'R#Vi'n#Vi'v#Viz#Vi!_#Vi'c#Vi!P#Vi$|#Vi!X#Vi~O'u#Vi~P!MXO'u!|O~P!MXOP#]OY#cOi#QOr!zOs!zOu!{O!]#SO!^!xO!`!yO!f#]O#W#OO#X#PO#Y#PO#Z#PO#[#RO#]#SO#^#SO#_#SO#a#TO#c#VO'aQO'u!|O^#Vi}#Vi#e#Vi#f#Vi'R#Vi'n#Viz#Vi!_#Vi'c#Vi!P#Vi$|#Vi!X#Vi~O'v#Vi~P# sO'v!}O~P# sOP#]OY#cOi#QOr!zOs!zOu!{O!]#SO!^!xO!`!yO!f#]O#W#OO#X#PO#Y#PO#Z#PO#[#RO#]#SO#^#SO#_#SO#a#TO#c#VO#e#XO'aQO'u!|O'v!}O~O^#Vi}#Vi#f#Vi'R#Vi'n#Viz#Vi!_#Vi'c#Vi!P#Vi$|#Vi!X#Vi~P#$_OPZXYZXiZXrZXsZXuZX!]ZX!^ZX!`ZX!fZX!wZX#ScX#WZX#XZX#YZX#ZZX#[ZX#]ZX#^ZX#_ZX#aZX#cZX#eZX#fZX#kZX'aZX'nZX'uZX'vZX}ZX!OZX~O#iZX~P#&rOP#]OY9gOi9[Or!zOs!zOu!{O!]9^O!^!xO!`!yO!f#]O#W9YO#X9ZO#Y9ZO#Z9ZO#[9]O#]9^O#^9^O#_9^O#a9_O#c9aO#e9cO#f9dO'aQO'n#ZO'u!|O'v!}O~O#i,`O~P#(|OP'fXY'fXi'fXr'fXs'fXu'fX!]'fX!^'fX!`'fX!f'fX#W'fX#X'fX#Y'fX#Z'fX#['fX#]'fX#^'fX#a'fX#c'fX#e'fX#f'fX'a'fX'n'fX'u'fX'v'fX}'fX~O!w9hO#k9hO#_'fX#i'fX!O'fX~P#*wO^&ma}&ma'R&ma!_&ma'c&maz&ma!P&ma$|&ma!X&ma~P!)`OP#ViY#Vi^#Vii#Vis#Vi}#Vi!]#Vi!^#Vi!`#Vi!f#Vi#W#Vi#X#Vi#Y#Vi#Z#Vi#[#Vi#]#Vi#^#Vi#_#Vi#a#Vi#c#Vi#e#Vi#f#Vi'R#Vi'a#Viz#Vi!_#Vi'c#Vi!P#Vi$|#Vi!X#Vi~P!#lO^#ji}#ji'R#jiz#ji!_#ji'c#ji!P#ji$|#ji!X#ji~P!)`O#v,bO~O#v,cO~O!X'gO!w,dO!P#zX#s#zX#v#zX#}#zX~O|,eO~O!P'jO#s,gO#v'iO#},hO~O}9eO!O'eX~P#(|O!O,iO~O#},kO~O'O'yO'P'xO'Q,nO~O],qOj,qOz,rO~O}cX!XcX!_cX!_$aX'ncX~P!!cO!_,xO~P!#lO},yO!X!vO'n&jO!_'{X~O!_-OO~Oz$aX}$aX!X$hX~P!!cO}-QOz'|X~P!#lO!X-SO~Oz-UO~O|(ZO'W$_O!_'{P~Oi-YO!X!vO!`$WO']$bO'n&jO~O!X)ZO~O!O-`O~P!&RO!T-aO!U-aO'X$aO'd(cO~Ou-cO'd(cO~O!t-dO~O'W$yO}&rX'[&rX~O}(sO'['^a~Or-iOs-iOu-jO'noa'uoa'voa}oa!woa~O'[oa#ioa~P#5{Or'}Ou(OO'n$Ya'u$Ya'v$Ya}$Ya!w$Ya~O'[$Ya#i$Ya~P#6qOr'}Ou(OO'n$[a'u$[a'v$[a}$[a!w$[a~O'[$[a#i$[a~P#7dO]-kO~O#S-lO~O'[$ja}$ja#i$ja!w$ja~P!#lO#S-oO~OR-xO!P&_O!k-wO$|-vO~O'[-yO~O]#pOi#qOj#pOk#pOn$OOp9iOu#wO!P#xO!Z:lO!`#uO#R9oO#p$SO$Z9kO$]9mO$`$TO'a#rO~Og-{O'W-zO~P#9ZO!X)ZO!P'Za^'Za'R'Za~O#S.RO~OYZX}cX!OcX~O}.SO!O(TX~O!O.UO~OY.VO~O'W)cO~O!P$jO'W$_O[&zX}&zX~O})hO[(Sa~O!_.[O~P!)`O].^O~OY._O~O[.`O~OR-xO!P&_O!k-wO$|-vO']$bO~O})tO^(Pa'R(Pa~O!w.fO~OR.iO!P#xO~O'd'OO!O(QP~OR.sO!P.oO!k.rO$|.qO']$bO~OY.}O}.{O!O(RX~O!O/OO~O[/QO^$ZO'R$ZO~O]/RO~O#_/TO%n/UO~P0zO!w#dO#_/TO%n/UO~O^/VO~P){O^/XO~O%w/]OP%uiQ%uiW%ui]%ui^%uia%uib%uig%uii%uij%uik%uin%uip%uiu%uiw%uix%uiy%ui!P%ui!Z%ui!`%ui!c%ui!d%ui!e%ui!f%ui!g%ui!j%ui#`%ui#p%ui#t%ui${%ui$}%ui%P%ui%Q%ui%T%ui%V%ui%Y%ui%Z%ui%]%ui%j%ui%p%ui%r%ui%t%ui%v%ui%y%ui&P%ui&T%ui&V%ui&X%ui&Z%ui&]%ui&|%ui'W%ui'a%ui'm%ui'z%ui!O%ui_%ui%|%ui~O_/cO!O/aO%|/bO~P`O!PSO!`/fO~O}#aO'c$Xa~Oz&ci}&ci~P!)`O}!]Oz'hi~O}&[Oz'ri~Oz/jO~O}!Ra!O!Ra~P#(|O]%}Oj%}O|/pO'd(cO}&dX!O&dX~P@ZO}+UO!O'ia~O]&VOj&VO|)sO'd'OO}&iX!O&iX~O}+XO!O'ta~Oz'si}'si~P!)`O^$ZO!X!vO!`$WO!f/{O!w/yO'R$ZO']$bO'n&jO~O!O0OO~P!>rO!T0PO!U0PO'X$aO'd(cO'm+aO~O!S0QO~P#GTO!PSO!S0QO!q0SO!t0TO~P#GTO!S0QO!o0VO!p0VO!q0SO!t0TO~P#GTO!P&_O~O!P&_O~P!#lO}'pi!_'pi^'pi'R'pi~P!)`O!w0`O}'pi!_'pi^'pi'R'pi~O}&oO!_'oi~Ou$sO!P$tO#R0bO'W$_O~O#SoaPoaYoa^oaioa!]oa!^oa!`oa!foa#Woa#Xoa#Yoa#Zoa#[oa#]oa#^oa#_oa#aoa#coa#eoa#foa'Roa'aoa!_oazoa!Poa'coa$|oa!Xoa~P#5{O#S$YaP$YaY$Ya^$Yai$Yas$Ya!]$Ya!^$Ya!`$Ya!f$Ya#W$Ya#X$Ya#Y$Ya#Z$Ya#[$Ya#]$Ya#^$Ya#_$Ya#a$Ya#c$Ya#e$Ya#f$Ya'R$Ya'a$Ya!_$Yaz$Ya!P$Ya'c$Ya$|$Ya!X$Ya~P#6qO#S$[aP$[aY$[a^$[ai$[as$[a!]$[a!^$[a!`$[a!f$[a#W$[a#X$[a#Y$[a#Z$[a#[$[a#]$[a#^$[a#_$[a#a$[a#c$[a#e$[a#f$[a'R$[a'a$[a!_$[az$[a!P$[a'c$[a$|$[a!X$[a~P#7dO#S$jaP$jaY$ja^$jai$jas$ja}$ja!]$ja!^$ja!`$ja!f$ja#W$ja#X$ja#Y$ja#Z$ja#[$ja#]$ja#^$ja#_$ja#a$ja#c$ja#e$ja#f$ja'R$ja'a$ja!_$jaz$ja!P$ja!w$ja'c$ja$|$ja!X$ja~P!#lO^!zq}!zq'R!zqz!zq!_!zq'c!zq!P!zq$|!zq!X!zq~P!)`O}&eX'[&eX~PJ^O},VO'['ka~O|0jO}&fX!_&fX~P){O},YO!_'la~O},YO!_'la~P!)`O#i!ba!O!ba~PC]O#i!Ya}!Ya!O!Ya~P#(|O!P0}O#t^O#{1OO~O!O1SO~O'c1TO~P!#lO^$Uq}$Uq'R$Uqz$Uq!_$Uq'c$Uq!P$Uq$|$Uq!X$Uq~P!)`Oz1UO~O],qOj,qO~Or'}Ou(OO'v(SO'n$ti'u$ti}$ti!w$ti~O'[$ti#i$ti~P$'tOr'}Ou(OO'n$vi'u$vi'v$vi}$vi!w$vi~O'[$vi#i$vi~P$(gO#i1VO~P!#lO|1XO'W$_O}&nX!_&nX~O},yO!_'{a~O},yO!X!vO!_'{a~O},yO!X!vO'n&jO!_'{a~O'[$ci}$ci#i$ci!w$ci~P!#lO|1`O'W(^Oz&pX}&pX~P!$ZO}-QOz'|a~O}-QOz'|a~P!#lO!X!vO~O!X!vO#_1jO~Oi1nO!X!vO'n&jO~O}'_i'['_i~P!#lO!w1qO}'_i'['_i~P!#lO!_1tO~O^$Vq}$Vq'R$Vqz$Vq!_$Vq'c$Vq!P$Vq$|$Vq!X$Vq~P!)`O}1xO!P'}X~P!#lO!P&_O$|1{O~O!P&_O$|1{O~P!#lO!P$aX$qZX^$aX'R$aX~P!!cO$q2POrfXufX!PfX'nfX'ufX'vfX^fX'RfX~O$q2PO~O$}2WO'W)cO}&yX!O&yX~O}.SO!O(Ta~OY2[O~O[2]O~O]2`O~OR2bO!P&_O!k2aO$|1{O~O^$ZO'R$ZO~P!#lO!P#xO~P!#lO}2gO!w2iO!O(QX~O!O2jO~Ou(gO!S2sO!T2lO!U2lO!n2rO!o2qO!p2qO!t2pO'X$aO'd(cO'm+aO~O!O2oO~P$0uOR2zO!P.oO!k2yO$|2xO~OR2zO!P.oO!k2yO$|2xO']$bO~O'W(uO}&xX!O&xX~O}.{O!O(Ra~O'd3TO~O]3VO~O[3XO~O!_3[O~P){O^3^O~O^3^O~P){O#_3`O%n3aO~PEuO_/cO!O3eO%|/bO~P`O!X3gO~O&R3hOP&OqQ&OqW&Oq]&Oq^&Oqa&Oqb&Oqg&Oqi&Oqj&Oqk&Oqn&Oqp&Oqu&Oqw&Oqx&Oqy&Oq!P&Oq!Z&Oq!`&Oq!c&Oq!d&Oq!e&Oq!f&Oq!g&Oq!j&Oq#`&Oq#p&Oq#t&Oq${&Oq$}&Oq%P&Oq%Q&Oq%T&Oq%V&Oq%Y&Oq%Z&Oq%]&Oq%j&Oq%p&Oq%r&Oq%t&Oq%v&Oq%y&Oq&P&Oq&T&Oq&V&Oq&X&Oq&Z&Oq&]&Oq&|&Oq'W&Oq'a&Oq'm&Oq'z&Oq!O&Oq%w&Oq_&Oq%|&Oq~O}#Pi!O#Pi~P#(|O!w3jO}#Pi!O#Pi~O}!Ri!O!Ri~P#(|O^$ZO!w3qO'R$ZO~O^$ZO!X!vO!w3qO'R$ZO~O!T3uO!U3uO'X$aO'd(cO'm+aO~O^$ZO!X!vO!`$WO!f3vO!w3qO'R$ZO']$bO'n&jO~O!S3wO~P$9_O!S3wO!q3zO!t3{O~P$9_O^$ZO!X!vO!f3vO!w3qO'R$ZO'n&jO~O}'pq!_'pq^'pq'R'pq~P!)`O}&oO!_'oq~O#S$tiP$tiY$ti^$tii$tis$ti!]$ti!^$ti!`$ti!f$ti#W$ti#X$ti#Y$ti#Z$ti#[$ti#]$ti#^$ti#_$ti#a$ti#c$ti#e$ti#f$ti'R$ti'a$ti!_$tiz$ti!P$ti'c$ti$|$ti!X$ti~P$'tO#S$viP$viY$vi^$vii$vis$vi!]$vi!^$vi!`$vi!f$vi#W$vi#X$vi#Y$vi#Z$vi#[$vi#]$vi#^$vi#_$vi#a$vi#c$vi#e$vi#f$vi'R$vi'a$vi!_$viz$vi!P$vi'c$vi$|$vi!X$vi~P$(gO#S$ciP$ciY$ci^$cii$cis$ci}$ci!]$ci!^$ci!`$ci!f$ci#W$ci#X$ci#Y$ci#Z$ci#[$ci#]$ci#^$ci#_$ci#a$ci#c$ci#e$ci#f$ci'R$ci'a$ci!_$ciz$ci!P$ci!w$ci'c$ci$|$ci!X$ci~P!#lO}&ea'[&ea~P!#lO}&fa!_&fa~P!)`O},YO!_'li~O#i!zi}!zi!O!zi~P#(|OP#]Or!zOs!zOu!{O!^!xO!`!yO!f#]O'aQOY#Vii#Vi!]#Vi#X#Vi#Y#Vi#Z#Vi#[#Vi#]#Vi#^#Vi#_#Vi#a#Vi#c#Vi#e#Vi#f#Vi#i#Vi'n#Vi'u#Vi'v#Vi}#Vi!O#Vi~O#W#Vi~P$BuO#W9YO~P$BuOP#]Or!zOs!zOu!{O!^!xO!`!yO!f#]O#W9YO#X9ZO#Y9ZO#Z9ZO'aQOY#Vi!]#Vi#[#Vi#]#Vi#^#Vi#_#Vi#a#Vi#c#Vi#e#Vi#f#Vi#i#Vi'n#Vi'u#Vi'v#Vi}#Vi!O#Vi~Oi#Vi~P$D}Oi9[O~P$D}OP#]Oi9[Or!zOs!zOu!{O!^!xO!`!yO!f#]O#W9YO#X9ZO#Y9ZO#Z9ZO#[9]O'aQO#a#Vi#c#Vi#e#Vi#f#Vi#i#Vi'n#Vi'u#Vi'v#Vi}#Vi!O#Vi~OY#Vi!]#Vi#]#Vi#^#Vi#_#Vi~P$GVOY9gO!]9^O#]9^O#^9^O#_9^O~P$GVOP#]OY9gOi9[Or!zOs!zOu!{O!]9^O!^!xO!`!yO!f#]O#W9YO#X9ZO#Y9ZO#Z9ZO#[9]O#]9^O#^9^O#_9^O#a9_O'aQO#c#Vi#e#Vi#f#Vi#i#Vi'n#Vi'v#Vi}#Vi!O#Vi~O'u#Vi~P$IkO'u!|O~P$IkOP#]OY9gOi9[Or!zOs!zOu!{O!]9^O!^!xO!`!yO!f#]O#W9YO#X9ZO#Y9ZO#Z9ZO#[9]O#]9^O#^9^O#_9^O#a9_O#c9aO'aQO'u!|O#e#Vi#f#Vi#i#Vi'n#Vi}#Vi!O#Vi~O'v#Vi~P$KsO'v!}O~P$KsOP#]OY9gOi9[Or!zOs!zOu!{O!]9^O!^!xO!`!yO!f#]O#W9YO#X9ZO#Y9ZO#Z9ZO#[9]O#]9^O#^9^O#_9^O#a9_O#c9aO#e9cO'aQO'u!|O'v!}O~O#f#Vi#i#Vi'n#Vi}#Vi!O#Vi~P$M{O^#gy}#gy'R#gyz#gy!_#gy'c#gy!P#gy$|#gy!X#gy~P!)`OP#ViY#Vii#Vis#Vi!]#Vi!^#Vi!`#Vi!f#Vi#W#Vi#X#Vi#Y#Vi#Z#Vi#[#Vi#]#Vi#^#Vi#_#Vi#a#Vi#c#Vi#e#Vi#f#Vi#i#Vi'a#Vi}#Vi!O#Vi~P!#lO!^!xOP'`XY'`Xi'`Xr'`Xs'`Xu'`X!]'`X!`'`X!f'`X#W'`X#X'`X#Y'`X#Z'`X#['`X#]'`X#^'`X#_'`X#a'`X#c'`X#e'`X#f'`X#i'`X'a'`X'n'`X'u'`X'v'`X}'`X!O'`X~O#i#ji}#ji!O#ji~P#(|O!O4]O~O}&ma!O&ma~P#(|O!X!vO'n&jO}&na!_&na~O},yO!_'{i~O},yO!X!vO!_'{i~Oz&pa}&pa~P!#lO!X4dO~O}-QOz'|i~P!#lO}-QOz'|i~Oz4jO~O!X!vO#_4pO~Oi4qO!X!vO'n&jO~Oz4sO~O'[$eq}$eq#i$eq!w$eq~P!#lO^$Vy}$Vy'R$Vyz$Vy!_$Vy'c$Vy!P$Vy$|$Vy!X$Vy~P!)`O}1xO!P'}a~O!P&_O$|4xO~O!P&_O$|4xO~P!#lO^!zy}!zy'R!zyz!zy!_!zy'c!zy!P!zy$|!zy!X!zy~P!)`OY4{O~O}.SO!O(Ti~O]5QO~O[5RO~O'd'OO}&uX!O&uX~O}2gO!O(Qa~O!O5`O~P$0uOu-cO'd(cO'm+aO~O!S5cO!T5bO!U5bO!t0TO'X$aO'd(cO'm+aO~O!o5dO!p5dO~P%,eO!T5bO!U5bO'X$aO'd(cO'm+aO~O!P.oO~O!P.oO$|5fO~O!P.oO$|5fO~P!#lOR5kO!P.oO!k5jO$|5fO~OY5pO}&xa!O&xa~O}.{O!O(Ri~O]5sO~O!_5tO~O!_5uO~O!_5vO~O!_5vO~P){O^5xO~O!X5{O~O!_5}O~O}'si!O'si~P#(|O^$ZO'R$ZO~P!)`O^$ZO!w6SO'R$ZO~O^$ZO!X!vO!w6SO'R$ZO~O!T6XO!U6XO'X$aO'd(cO'm+aO~O^$ZO!X!vO!f6YO!w6SO'R$ZO'n&jO~O!`$WO']$bO~P%1PO!S6ZO~P%0nO}'py!_'py^'py'R'py~P!)`O#S$eqP$eqY$eq^$eqi$eqs$eq}$eq!]$eq!^$eq!`$eq!f$eq#W$eq#X$eq#Y$eq#Z$eq#[$eq#]$eq#^$eq#_$eq#a$eq#c$eq#e$eq#f$eq'R$eq'a$eq!_$eqz$eq!P$eq!w$eq'c$eq$|$eq!X$eq~P!#lO}&fi!_&fi~P!)`O#i!zq}!zq!O!zq~P#(|Or-iOs-iOu-jOPoaYoaioa!]oa!^oa!`oa!foa#Woa#Xoa#Yoa#Zoa#[oa#]oa#^oa#_oa#aoa#coa#eoa#foa#ioa'aoa'noa'uoa'voa}oa!Ooa~Or'}Ou(OOP$YaY$Yai$Yas$Ya!]$Ya!^$Ya!`$Ya!f$Ya#W$Ya#X$Ya#Y$Ya#Z$Ya#[$Ya#]$Ya#^$Ya#_$Ya#a$Ya#c$Ya#e$Ya#f$Ya#i$Ya'a$Ya'n$Ya'u$Ya'v$Ya}$Ya!O$Ya~Or'}Ou(OOP$[aY$[ai$[as$[a!]$[a!^$[a!`$[a!f$[a#W$[a#X$[a#Y$[a#Z$[a#[$[a#]$[a#^$[a#_$[a#a$[a#c$[a#e$[a#f$[a#i$[a'a$[a'n$[a'u$[a'v$[a}$[a!O$[a~OP$jaY$jai$jas$ja!]$ja!^$ja!`$ja!f$ja#W$ja#X$ja#Y$ja#Z$ja#[$ja#]$ja#^$ja#_$ja#a$ja#c$ja#e$ja#f$ja#i$ja'a$ja}$ja!O$ja~P!#lO#i$Uq}$Uq!O$Uq~P#(|O#i$Vq}$Vq!O$Vq~P#(|O!O6eO~O'[$xy}$xy#i$xy!w$xy~P!#lO!X!vO}&ni!_&ni~O!X!vO'n&jO}&ni!_&ni~O},yO!_'{q~Oz&pi}&pi~P!#lO}-QOz'|q~Oz6lO~P!#lOz6lO~O}'_y'['_y~P!#lO}&sa!P&sa~P!#lO!P$pq^$pq'R$pq~P!#lOY6tO~O}.SO!O(Tq~O]6wO~O!P&_O$|6xO~O!P&_O$|6xO~P!#lO!w6yO}&ua!O&ua~O}2gO!O(Qi~P#(|O!T7PO!U7PO'X$aO'd(cO'm+aO~O!S7RO!t3{O~P%@nO!P.oO$|7UO~O!P.oO$|7UO~P!#lO'd7[O~O}.{O!O(Rq~O!_7_O~O!_7_O~P){O!_7aO~O!_7bO~O}#Py!O#Py~P#(|O^$ZO!w7hO'R$ZO~O^$ZO!X!vO!w7hO'R$ZO~O!T7kO!U7kO'X$aO'd(cO'm+aO~O^$ZO!X!vO!f7lO!w7hO'R$ZO'n&jO~O#S$xyP$xyY$xy^$xyi$xys$xy}$xy!]$xy!^$xy!`$xy!f$xy#W$xy#X$xy#Y$xy#Z$xy#[$xy#]$xy#^$xy#_$xy#a$xy#c$xy#e$xy#f$xy'R$xy'a$xy!_$xyz$xy!P$xy!w$xy'c$xy$|$xy!X$xy~P!#lO#i#gy}#gy!O#gy~P#(|OP$ciY$cii$cis$ci!]$ci!^$ci!`$ci!f$ci#W$ci#X$ci#Y$ci#Z$ci#[$ci#]$ci#^$ci#_$ci#a$ci#c$ci#e$ci#f$ci#i$ci'a$ci}$ci!O$ci~P!#lOr'}Ou(OO'v(SOP$tiY$tii$tis$ti!]$ti!^$ti!`$ti!f$ti#W$ti#X$ti#Y$ti#Z$ti#[$ti#]$ti#^$ti#_$ti#a$ti#c$ti#e$ti#f$ti#i$ti'a$ti'n$ti'u$ti}$ti!O$ti~Or'}Ou(OOP$viY$vii$vis$vi!]$vi!^$vi!`$vi!f$vi#W$vi#X$vi#Y$vi#Z$vi#[$vi#]$vi#^$vi#_$vi#a$vi#c$vi#e$vi#f$vi#i$vi'a$vi'n$vi'u$vi'v$vi}$vi!O$vi~O#i$Vy}$Vy!O$Vy~P#(|O#i!zy}!zy!O!zy~P#(|O!X!vO}&nq!_&nq~O},yO!_'{y~Oz&pq}&pq~P!#lOz7rO~P!#lO}.SO!O(Ty~O}2gO!O(Qq~O!T8OO!U8OO'X$aO'd(cO'm+aO~O!P.oO$|8RO~O!P.oO$|8RO~P!#lO!_8UO~O&R8VOP&O!ZQ&O!ZW&O!Z]&O!Z^&O!Za&O!Zb&O!Zg&O!Zi&O!Zj&O!Zk&O!Zn&O!Zp&O!Zu&O!Zw&O!Zx&O!Zy&O!Z!P&O!Z!Z&O!Z!`&O!Z!c&O!Z!d&O!Z!e&O!Z!f&O!Z!g&O!Z!j&O!Z#`&O!Z#p&O!Z#t&O!Z${&O!Z$}&O!Z%P&O!Z%Q&O!Z%T&O!Z%V&O!Z%Y&O!Z%Z&O!Z%]&O!Z%j&O!Z%p&O!Z%r&O!Z%t&O!Z%v&O!Z%y&O!Z&P&O!Z&T&O!Z&V&O!Z&X&O!Z&Z&O!Z&]&O!Z&|&O!Z'W&O!Z'a&O!Z'm&O!Z'z&O!Z!O&O!Z%w&O!Z_&O!Z%|&O!Z~O^$ZO!w8[O'R$ZO~O^$ZO!X!vO!w8[O'R$ZO~OP$eqY$eqi$eqs$eq!]$eq!^$eq!`$eq!f$eq#W$eq#X$eq#Y$eq#Z$eq#[$eq#]$eq#^$eq#_$eq#a$eq#c$eq#e$eq#f$eq#i$eq'a$eq}$eq!O$eq~P!#lO}&uq!O&uq~P#(|O^$ZO!w8qO'R$ZO~OP$xyY$xyi$xys$xy!]$xy!^$xy!`$xy!f$xy#W$xy#X$xy#Y$xy#Z$xy#[$xy#]$xy#^$xy#_$xy#a$xy#c$xy#e$xy#f$xy#i$xy'a$xy}$xy!O$xy~P!#lO'c'eX~P.jO'cZXzZX!_ZX%nZX!PZX$|ZX!XZX~P$zO!XcX!_ZX!_cX'ncX~P;aOP9SOQ9SO]cOa:jOb!iOgcOi9SOjcOkcOn9SOp9SOuROwcOxcOycO!PSO!Z9UO!`UO!c9SO!d9SO!e9SO!f9SO!g9SO!j!hO#p!kO#t^O'W'^O'aQO'mYO'z:hO~O}9eO!O$Xa~O]#pOg#}Oi#qOj#pOk#pOn$OOp9jOu#wO!P#xO!Z:mO!`#uO#R9pO#p$SO$Z9lO$]9nO$`$TO'W&vO'a#rO~O#`'eO~P&+}O!OZX!OcX~P;aO#S9XO~O!X!vO#S9XO~O!w9hO~O#_9^O~O!w9qO}'sX!O'sX~O!w9hO}'qX!O'qX~O#S9rO~O'[9tO~P!#lO#S9yO~O#S9zO~O!X!vO#S9{O~O!X!vO#S9rO~O#i9|O~P#(|O#S9}O~O#S:OO~O#S:PO~O#S:QO~O#i:RO~P!#lO#i:SO~P!#lO#t~!^!n!p!q#Q#R'z$Z$]$`$q${$|$}%T%V%Y%Z%]%_~TS#t'z#Xy'T'U#v'T'W'd~\",\n  goto: \"#Dk(XPPPPPPP(YP(jP*^PPPP-sPP.Y3j5^5qP5qPPP5q5qP5qP7_PP7dP7xPPPP<XPPPP<X>wPPP>}AYP<XPCsPPPPEk<XPPPPPGd<XPPJcK`PPPPKdL|PMUNVPK`<X<X!#^!&V!*v!*v!.TPPP!.[!1O<XPPPPPPPPPP!3sP!5UPP<X!6cP<XP<X<X<X<XP<X!8vPP!;mP!>`!>h!>l!>lP!;jP!>p!>pP!AcP!Ag<X<X!Am!D_5qP5qP5q5qP!Eb5q5q!GY5q!I[5q!J|5q5q!Kj!Md!Md!Mh!Md!MpP!MdP5q!Nl5q# v5q5q-sPPP##TPP##m##mP##mP#$S##mPP#$YP#$PP#$P#$lMQ#$P#%Z#%a#%d(Y#%g(YP#%n#%n#%nP(YP(YP(YP(YPP(YP#%t#%wP#%w(YPPP(YP(YP(YP(YP(YP(Y(Y#%{#&V#&]#&c#&q#&w#&}#'X#'_#'i#'o#'}#(T#(Z#(i#)O#*b#*p#*v#*|#+S#+Y#+d#+j#+p#+z#,^#,dPPPPPPPPP#,jPP#-^#1[PP#2r#2y#3RP#7_PP#7c#9v#?p#?t#?w#?z#@V#@YPP#@]#@a#AO#As#Aw#BZPP#B_#Be#BiP#Bl#Bp#Bs#Cc#Cy#DO#DR#DU#D[#D_#Dc#DgmhOSj}!m$Y%a%d%e%g*i*n/]/`Q$gmQ$npQ%XyS&R!b+UQ&f!iS(f#x(kQ)a$hQ)n$pQ*Y%RQ+[&YS+c&_+eQ+u&gQ-a(mQ.z*ZY0P+g+h+i+j+kS2l.o2nU3u0Q0S0VU5b2q2r2sS6X3w3zS7P5c5dQ7k6ZR8O7R$l[ORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#a#d$Y$l%Y%]%a%c%d%e%g%k%v&O&Z&a&k&x&|'|)O)V*e*i*n+p+w,Y,`-j-o-w.R.r/T/U/V/X/]/`/b/y0`0j2a2y3^3`3a3q5j5x6S7h8[8q!j'`#[#j&S'r*}+Q,e/p0}2i3j6y9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kQ(v$PQ)f$jQ*[%UQ*c%^Q,P9iQ-|)ZQ.X)gQ/S*aQ2V.SQ3R.{Q4U9jR4}2WpeOSjy}!m$Y%W%a%d%e%g*i*n/]/`R*^%Y&WVOSTjkn}!S!W!]!j!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#[#a#d#j$Y$l%Y%]%^%a%c%d%e%g%k%v&O&Z&a&k&x&|'r'|)O)V*e*i*n*}+Q+p+w,Y,`,e-j-o-w.R.r/T/U/V/X/]/`/b/p/y0`0j0}2a2i2y3^3`3a3j3q5j5x6S6y7h8[8q9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:j:kW!cRU!`&SQ$`lQ$fmS$kp$pv$urs!q!t$W$s&[&o&r)r)s)t*g+O+_+z+|/f0bQ$}wQ&c!hQ&e!iS(Y#u(dS)`$g$hQ)d$jQ)q$rQ*T%PQ*X%RS+t&f&gQ,}(ZQ.Q)aQ.W)gQ.Y)hQ.])lQ.u*US.y*Y*ZQ0^+uQ1W,yQ2U.SQ2Y.VQ2_._Q3Q.zQ4a1XQ4|2WQ5P2[Q6s4{R7u6t!Y$dm!i$f$g$h&Q&e&f&g(e)`)a+R+b+t+u-Z.Q/u/|0R0^1m3t3y6V7i8]Q)X$`Q)y$zQ)|${Q*W%RQ.a)qQ.t*TU.x*X*Y*ZQ2{.uS3P.y.zQ5]2kQ5o3QS6}5^5aS7|7O7QQ8g7}R8v8hW#{a$b(s:hS$zt%WQ${uQ$|vR)w$x$V#za!v!x#c#u#w$Q$R$V&b'x(R(T(U(](a(q(r)U)W)Z)x){+q,V-Q-S-l-v-x.f.i.q.s1V1`1j1q1x1{2P2b2x2z4d4p4x5f5k6x7U8R9g9k9l9m9n9o9p9u9v9w9x9y9z9}:O:R:S:h:n:oV(w$P9i9jU&V!b$t+XQ'P!zQ)k$mQ.j)}Q1r-iR5X2g&YcORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#[#a#d#j$Y$l%Y%]%^%a%c%d%e%g%k%v&O&S&Z&a&k&x&|'r'|)O)V*e*i*n*}+Q+p+w,Y,`,e-j-o-w.R.r/T/U/V/X/]/`/b/p/y0`0j0}2a2i2y3^3`3a3j3q5j5x6S6y7h8[8q9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:k$]#`Z!_!n$^%u%y&t&{'R'S'T'U'V'W'X'Y'Z'[']'_'b'f'p)j*y+S+]+v,U,[,_,a,o-m/k/n0_0i0m0n0o0p0q0r0s0t0u0v0w0x0y0|1R1v2S3l3o4P4S4T4Y4Z5Z6O6R6_6c6d7e7x8Y8o8z9T:a&ZcORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#[#a#d#j$Y$l%Y%]%^%a%c%d%e%g%k%v&O&S&Z&a&k&x&|'r'|)O)V*e*i*n*}+Q+p+w,Y,`,e-j-o-w.R.r/T/U/V/X/]/`/b/p/y0`0j0}2a2i2y3^3`3a3j3q5j5x6S6y7h8[8q9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kQ&T!bR/q+UY%}!b&R&Y+U+[S(e#x(kS+b&_+eS-Z(f(mQ-[(gQ-b(nQ.l*PU/|+c+g+hU0R+i+j+kS0W+l2pQ1m-aQ1o-cQ1p-dS2k.o2nU3t0P0Q0SQ3x0TQ3y0VS5^2l2sS5a2q2rU6V3u3w3zQ6[3{S7O5b5cQ7Q5dS7i6X6ZS7}7P7RQ8]7kR8h8OlhOSj}!m$Y%a%d%e%g*i*n/]/`Q%i!QS&s!u9XQ)^$eQ*R$}Q*S%OQ+r&dS,T&x9rS-n)O9{Q.O)_Q.n*QQ/d*pQ/e*qQ/m+PQ0U+iQ0[+sS1w-o:PQ2Q.PS2T.R:QQ3k/oQ3n/wQ3}0]Q4z2RQ5|3hQ6P3mQ6T3sQ6]4OQ7c5}Q7f6UQ8X7gQ8l8VQ8n8ZR8y8p$W#_Z!_!n%u%y&t&{'R'S'T'U'V'W'X'Y'Z'[']'_'b'f'p)j*y+S+]+v,U,[,_,o-m/k/n0_0i0m0n0o0p0q0r0s0t0u0v0w0x0y0|1R1v2S3l3o4P4S4T4Y4Z5Z6O6R6_6c6d7e7x8Y8o8z9T:aU(p#y&w0{T)S$^,a$W#^Z!_!n%u%y&t&{'R'S'T'U'V'W'X'Y'Z'[']'_'b'f'p)j*y+S+]+v,U,[,_,o-m/k/n0_0i0m0n0o0p0q0r0s0t0u0v0w0x0y0|1R1v2S3l3o4P4S4T4Y4Z5Z6O6R6_6c6d7e7x8Y8o8z9T:aQ'a#_S)R$^,aR-p)S&YcORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#[#a#d#j$Y$l%Y%]%^%a%c%d%e%g%k%v&O&S&Z&a&k&x&|'r'|)O)V*e*i*n*}+Q+p+w,Y,`,e-j-o-w.R.r/T/U/V/X/]/`/b/p/y0`0j0}2a2i2y3^3`3a3j3q5j5x6S6y7h8[8q9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kQ%d{Q%e|Q%g!OQ%h!PR/[*lQ&`!hQ)T$`Q+o&cS-u)X)qS0X+m+nW1z-r-s-t.aS3|0Y0ZU4w1|1}2OU6q4v5T5UQ7t6rR8c7wT+d&_+eS+b&_+eU/|+c+g+hU0R+i+j+kS0W+l2pS2k.o2nU3t0P0Q0SQ3x0TQ3y0VS5^2l2sS5a2q2rU6V3u3w3zQ6[3{S7O5b5cQ7Q5dS7i6X6ZS7}7P7RQ8]7kR8h8OS+d&_+eT2m.o2nS&m!p/YQ,|(YQ-X(eS/{+b2kQ1],}S1g-Y-bU3v0R0W5aQ4`1WS4n1n1pU6Y3x3y7QQ6g4aQ6p4qR7l6[Q!wXS&l!p/YQ)P$XQ)[$cQ)b$iQ+x&mQ,{(YQ-W(eQ-](hQ-})]Q.v*VS/z+b2kS1[,|,}S1f-X-bQ1i-[Q1l-^Q2}.wW3r/{0R0W5aQ4_1WQ4c1]S4h1g1pQ4o1oQ5m3OW6W3v3x3y7QS6f4`4aQ6k4jQ6n4nQ6{5[Q7Y5nS7j6Y6[Q7n6gQ7p6lQ7s6pQ7z6|Q8T7ZQ8^7lQ8a7rQ8e7{Q8t8fQ8|8uQ9Q8}Q:Z:UQ:d:_R:e:`$nWORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#a#d$Y$l%Y%]%^%a%c%d%e%g%k%v&O&Z&a&k&x&|'|)O)V*e*i*n+p+w,Y,`-j-o-w.R.r/T/U/V/X/]/`/b/y0`0j2a2y3^3`3a3q5j5x6S7h8[8qS!wn!j!j:T#[#j&S'r*}+Q,e/p0}2i3j6y9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kR:Z:j$nXORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#a#d$Y$l%Y%]%^%a%c%d%e%g%k%v&O&Z&a&k&x&|'|)O)V*e*i*n+p+w,Y,`-j-o-w.R.r/T/U/V/X/]/`/b/y0`0j2a2y3^3`3a3q5j5x6S7h8[8qQ$Xb!Y$cm!i$f$g$h&Q&e&f&g(e)`)a+R+b+t+u-Z.Q/u/|0R0^1m3t3y6V7i8]S$in!jQ)]$dQ*V%RW.w*W*X*Y*ZU3O.x.y.zQ5[2kS5n3P3QU6|5]5^5aQ7Z5oU7{6}7O7QS8f7|7}S8u8g8hQ8}8v!j:U#[#j&S'r*}+Q,e/p0}2i3j6y9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kQ:_:iR:`:j$f]OSTjk}!S!W!]!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#a#d$Y$l%Y%]%a%c%d%e%g%k%v&O&Z&a&k&x&|'|)O)V*e*i*n+p+w,Y,`-j-o-w.R.r/T/U/V/X/]/`/b/y0`0j2a2y3^3`3a3q5j5x6S7h8[8qU!gRU!`v$urs!q!t$W$s&[&o&r)r)s)t*g+O+_+z+|/f0bQ*d%^!h:V#[#j'r*}+Q,e/p0}2i3j6y9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kR:Y&SS&W!b$tR/s+X$l[ORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#a#d$Y$l%Y%]%a%c%d%e%g%k%v&O&Z&a&k&x&|'|)O)V*e*i*n+p+w,Y,`-j-o-w.R.r/T/U/V/X/]/`/b/y0`0j2a2y3^3`3a3q5j5x6S7h8[8q!j'`#[#j&S'r*}+Q,e/p0}2i3j6y9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kR*c%^$noORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#a#d$Y$l%Y%]%^%a%c%d%e%g%k%v&O&Z&a&k&x&|'|)O)V*e*i*n+p+w,Y,`-j-o-w.R.r/T/U/V/X/]/`/b/y0`0j2a2y3^3`3a3q5j5x6S7h8[8qQ'P!z!k:W#[#j&S'r*}+Q,e/p0}2i3j6y9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:k!h#UZ!_$^%u%y&t&{'Y'Z'[']'b'f)j*y+]+v,U,[,o-m0_0i0y1v2S3o4P4S6R7e8Y8o8z9T!R9`'_'p+S,a/k/n0m0u0v0w0x0|1R3l4T4Y4Z5Z6O6_6c6d7x:a!d#WZ!_$^%u%y&t&{'[']'b'f)j*y+]+v,U,[,o-m0_0i0y1v2S3o4P4S6R7e8Y8o8z9T}9b'_'p+S,a/k/n0m0w0x0|1R3l4T4Y4Z5Z6O6_6c6d7x:a!`#[Z!_$^%u%y&t&{'b'f)j*y+]+v,U,[,o-m0_0i0y1v2S3o4P4S6R7e8Y8o8z9Tl(U#s&y(},w-P-e-f0g1u4^4r:[:f:gx:k'_'p+S,a/k/n0m0|1R3l4T4Y4Z5Z6O6_6c6d7x:a!`:n&u'd(X(_+n,S,l-T-q-t.e.g0Z0f1^1b2O2d2f2v4R4e4k4t4y5U5i6^6i6o7WZ:o0z4X6`7m8_&YcORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#[#a#d#j$Y$l%Y%]%^%a%c%d%e%g%k%v&O&S&Z&a&k&x&|'r'|)O)V*e*i*n*}+Q+p+w,Y,`,e-j-o-w.R.r/T/U/V/X/]/`/b/p/y0`0j0}2a2i2y3^3`3a3j3q5j5x6S6y7h8[8q9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kS#k`#lR1O,d&a_ORSTU`jk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#[#a#d#j#l$Y$l%Y%]%^%a%c%d%e%g%k%v&O&S&Z&a&k&x&|'r'|)O)V*e*i*n*}+Q+p+w,Y,`,d,e-j-o-w.R.r/T/U/V/X/]/`/b/p/y0`0j0}2a2i2y3^3`3a3j3q5j5x6S6y7h8[8q9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kS#f^#mT'i#h'mT#g^#mT'k#h'm&a`ORSTU`jk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#[#a#d#j#l$Y$l%Y%]%^%a%c%d%e%g%k%v&O&S&Z&a&k&x&|'r'|)O)V*e*i*n*}+Q+p+w,Y,`,d,e-j-o-w.R.r/T/U/V/X/]/`/b/p/y0`0j0}2a2i2y3^3`3a3j3q5j5x6S6y7h8[8q9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:kT#k`#lQ#n`R't#l$nbORSTUjk}!S!W!]!`!m!u!y!{#O#P#Q#R#S#T#U#V#W#X#Y#a#d$Y$l%Y%]%^%a%c%d%e%g%k%v&O&Z&a&k&x&|'|)O)V*e*i*n+p+w,Y,`-j-o-w.R.r/T/U/V/X/]/`/b/y0`0j2a2y3^3`3a3q5j5x6S7h8[8q!k:i#[#j&S'r*}+Q,e/p0}2i3j6y9S9U9X9Y9Z9[9]9^9_9`9a9b9c9d9e9h9q9r9t9{9|:P:Q:k#RdOSUj}!S!W!m!{#j$Y%Y%]%^%a%c%d%e%g%k&O&a'r)V*e*i*n+p,e-j-w.r/T/U/V/X/]/`/b0}2a2y3^3`3a5j5xt#ya!x$Q$R$V(R(T(U(](q(r,V-l1V1q:h:n:o!|&w!v#c#u#w&b'x(a)U)W)Z)x){+q-Q-S-v-x.f.i.q.s1`1j1x1{2P2b2x2z4d4p4x5f5k6x7U8R9k9m9o9u9w9y9}:RQ({$TQ,p'}c0{9g9l9n9p9v9x9z:O:St#va!x$Q$R$V(R(T(U(](q(r,V-l1V1q:h:n:oS(h#x(kQ(|$UQ-^(i!|:]!v#c#u#w&b'x(a)U)W)Z)x){+q-Q-S-v-x.f.i.q.s1`1j1x1{2P2b2x2z4d4p4x5f5k6x7U8R9k9m9o9u9w9y9}:Rb:^9g9l9n9p9v9x9z:O:SQ:b:lR:c:mt#ya!x$Q$R$V(R(T(U(](q(r,V-l1V1q:h:n:o!|&w!v#c#u#w&b'x(a)U)W)Z)x){+q-Q-S-v-x.f.i.q.s1`1j1x1{2P2b2x2z4d4p4x5f5k6x7U8R9k9m9o9u9w9y9}:Rc0{9g9l9n9p9v9x9z:O:SlfOSj}!m$Y%a%d%e%g*i*n/]/`Q(`#wQ*u%nQ*v%pR1_-Q$U#za!v!x#c#u#w$Q$R$V&b'x(R(T(U(](a(q(r)U)W)Z)x){+q,V-Q-S-l-v-x.f.i.q.s1V1`1j1q1x1{2P2b2x2z4d4p4x5f5k6x7U8R9g9k9l9m9n9o9p9u9v9w9x9y9z9}:O:R:S:h:n:oQ)z${Q.h)|Q2e.gR5W2fT(j#x(kS(j#x(kT2m.o2nQ)[$cQ-](hQ-})]Q.v*VQ2}.wQ5m3OQ6{5[Q7Y5nQ7z6|Q8T7ZQ8e7{Q8t8fQ8|8uR9Q8}l(R#s&y(},w-P-e-f0g1u4^4r:[:f:g!`9u&u'd(X(_+n,S,l-T-q-t.e.g0Z0f1^1b2O2d2f2v4R4e4k4t4y5U5i6^6i6o7WZ9v0z4X6`7m8_n(T#s&y(},u,w-P-e-f0g1u4^4r:[:f:g!b9w&u'd(X(_+n,S,l-T-q-t.e.g0Z0d0f1^1b2O2d2f2v4R4e4k4t4y5U5i6^6i6o7W]9x0z4X6`6a7m8_peOSjy}!m$Y%W%a%d%e%g*i*n/]/`Q%TxR*e%^peOSjy}!m$Y%W%a%d%e%g*i*n/]/`R%TxQ*O$|R.d)wqeOSjy}!m$Y%W%a%d%e%g*i*n/]/`Q.p*TS2w.t.uW5e2t2u2v2{U7T5g5h5iU8P7S7V7WQ8i8QR8w8jQ%[yR*_%WR3U.}R7]5pS$kp$pR.Y)hQ%azR*i%bR*o%hT/^*n/`QjOQ!mST$]j!mQ'z#rR,m'zQ!YQR%s!YQ!^RU%w!^%x*zQ%x!_R*z%yQ+V&TR/r+VQ,W&yR0h,WQ,Z&{S0k,Z0lR0l,[Q+e&_R/}+eQ&]!eQ*{%zT+`&]*{Q+Y&WR/t+YQ&p!rQ+y&nU+}&p+y0cR0c,OQ'm#hR,f'mQ#l`R's#lQ#bZU'c#b*x9fQ*x9TR9f'pQ,z(YW1Y,z1Z4b6hU1Z,{,|,}S4b1[1]R6h4c#q(P#s&u&y'd(X(_(x(y(}+n,Q,R,S,l,u,v,w-P-T-e-f-q-t.e.g0Z0d0e0f0g0z1^1b1u2O2d2f2v4R4V4W4X4^4e4k4r4t4y5U5i6^6`6a6b6i6o7W7m8_:[:f:gQ-R(_U1a-R1c4fQ1c-TR4f1bQ(k#xR-_(kQ(t#|R-h(tQ1y-qR4u1yQ)u$vR.c)uQ2h.jS5Y2h6zR6z5ZQ*Q$}R.m*QQ2n.oR5_2nQ.|*[S3S.|5qR5q3UQ.T)dW2X.T2Z5O6uQ2Z.WQ5O2YR6u5PQ)i$kR.Z)iQ/`*nR3d/`WiOSj!mQ%f}Q)Q$YQ*h%aQ*j%dQ*k%eQ*m%gQ/Z*iS/^*n/`R3c/]Q$[gQ%j!RQ%m!TQ%o!UQ%q!VQ)p$qQ)v$wQ*^%[Q*s%lS/P*_*bQ/g*rQ/h*uQ/i*vS/x+b2kQ1d-VQ1e-WQ1k-]Q2^.^Q2c.eQ2|.vQ3W/RQ3b/[Y3p/z/{0R0W5aQ4g1fQ4i1hQ4l1lQ5S2`Q5V2dQ5l2}Q5r3V[6Q3o3r3v3x3y7QQ6j4hQ6m4mQ6v5QQ7X5mQ7^5sW7d6R6W6Y6[Q7o6kQ7q6nQ7v6wQ7y6{Q8S7YU8W7e7j7lQ8`7pQ8b7sQ8d7zQ8k8TS8m8Y8^Q8r8aQ8s8eQ8x8oQ8{8tQ9O8zQ9P8|R9R9QQ$emQ&d!iU)_$f$g$hQ+P&QU+s&e&f&gQ-V(eS.P)`)aQ/o+RQ/w+bS0]+t+uQ1h-ZQ2R.QQ3m/uS3s/|0RQ4O0^Q4m1mS6U3t3yQ7g6VQ8Z7iR8p8]S#ta:hR)Y$bU#|a$b:hR-g(sQ#saS&u!v)ZQ&y!xQ'd#cQ(X#uQ(_#wQ(x$QQ(y$RQ(}$VQ+n&bQ,Q9kQ,R9mQ,S9oQ,l'xQ,u(RQ,v(TQ,w(UQ-P(]Q-T(aQ-e(qQ-f(rd-q)U-v.q1{2x4x5f6x7U8RQ-t)WQ.e)xQ.g){Q0Z+qQ0d9uQ0e9wQ0f9yQ0g,VQ0z9gQ1^-QQ1b-SQ1u-lQ2O-xQ2d.fQ2f.iQ2v.sQ4R9}Q4V9lQ4W9nQ4X9pQ4^1VQ4e1`Q4k1jQ4r1qQ4t1xQ4y2PQ5U2bQ5i2zQ6^:RQ6`9zQ6a9vQ6b9xQ6i4dQ6o4pQ7W5kQ7m:OQ8_:SQ:[:hQ:f:nR:g:oT'y#r'zlgOSj}!m$Y%a%d%e%g*i*n/]/`S!oU%cQ%l!SQ%r!WQ'Q!{Q'q#jS*b%Y%]Q*f%^Q*r%kQ*|&OQ+m&aQ,j'rQ-s)VQ/W*eQ0Y+pQ1Q,eQ1s-jQ1}-wQ2u.rQ3Y/TQ3Z/UQ3]/VQ3_/XQ3f/bQ4[0}Q5T2aQ5h2yQ5w3^Q5y3`Q5z3aQ7V5jR7`5x!vZOSUj}!S!m!{$Y%Y%]%^%a%c%d%e%g%k&O&a)V*e*i*n+p-j-w.r/T/U/V/X/]/`/b2a2y3^3`3a5j5xQ!_RQ!nTQ$^kQ%u!]Q%y!`Q&t!uQ&{!yQ'R#OQ'S#PQ'T#QQ'U#RQ'V#SQ'W#TQ'X#UQ'Y#VQ'Z#WQ'[#XQ']#YQ'_#[Q'b#aQ'f#dW'p#j'r,e0}Q)j$lQ*y%vS+S&S/pQ+]&ZQ+v&kQ,U&xQ,[&|Q,_9SQ,a9UQ,o'|Q-m)OQ/k*}Q/n+QQ0_+wQ0i,YQ0m9XQ0n9YQ0o9ZQ0p9[Q0q9]Q0r9^Q0s9_Q0t9`Q0u9aQ0v9bQ0w9cQ0x9dQ0y,`Q0|9hQ1R9eQ1v-oQ2S.RQ3l9qQ3o/yQ4P0`Q4S0jQ4T9rQ4Y9tQ4Z9{Q5Z2iQ6O3jQ6R3qQ6_9|Q6c:PQ6d:QQ7e6SQ7x6yQ8Y7hQ8o8[Q8z8qQ9T!WR:a:kT!XQ!YR!aRR&U!bS&Q!b+US+R&R&YR/u+[R&z!xR&}!yT!sU$WS!rU$WU$vrs*gS&n!q!tQ+{&oQ,O&rQ.b)tS0a+z+|R4Q0b[!dR!`$s&[)r+_h!pUrs!q!t$W&o&r)t+z+|0bQ/Y*gQ/l+OQ3i/fT:X&S)sT!fR$sS!eR$sS%z!`)rS+T&S)sQ+^&[R/v+_T&X!b$tQ#h^R'v#mT'l#h'mR1P,dT([#u(dR(b#wQ-r)UQ1|-vQ2t.qQ4v1{Q5g2xQ6r4xQ7S5fQ7w6xQ8Q7UR8j8RlhOSj}!m$Y%a%d%e%g*i*n/]/`Q%ZyR*^%WV$wrs*gR.k)}R*]%UQ$opR)o$pR)e$jT%_z%bT%`z%bT/_*n/`\",\n  nodeNames: \"⚠ ArithOp ArithOp extends LineComment BlockComment Script ExportDeclaration export Star as VariableName from String ; default FunctionDeclaration async function VariableDefinition TypeParamList TypeDefinition ThisType this LiteralType ArithOp Number BooleanLiteral TemplateType VoidType void TypeofType typeof MemberExpression . ?. PropertyName [ TemplateString null super RegExp ] ArrayExpression Spread , } { ObjectExpression Property async get set PropertyDefinition Block : NewExpression new TypeArgList CompareOp < ) ( ArgList UnaryExpression await yield delete LogicOp BitOp ParenthesizedExpression ClassExpression class extends ClassBody MethodDeclaration Privacy static abstract override PrivatePropertyDefinition PropertyDeclaration readonly Optional TypeAnnotation Equals StaticBlock FunctionExpression ArrowFunction ParamList ParamList ArrayPattern ObjectPattern PatternProperty Privacy readonly Arrow MemberExpression PrivatePropertyName BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp instanceof in const CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport import ImportMeta JSXElement JSXSelfCloseEndTag JSXStartTag JSXSelfClosingTag JSXIdentifier JSXNamespacedName JSXMemberExpression JSXSpreadAttribute JSXAttribute JSXAttributeValue JSXEscape JSXEndTag JSXOpenTag JSXFragmentTag JSXText JSXEscape JSXStartCloseTag JSXCloseTag PrefixCast ArrowFunction TypeParamList SequenceExpression KeyofType keyof UniqueType unique ImportType InferredType infer TypeName ParenthesizedType FunctionSignature ParamList NewSignature IndexedType TupleType Label ArrayType ReadonlyType ObjectType MethodType PropertyType IndexSignature CallSignature TypePredicate is NewSignature new UnionType LogicOp IntersectionType LogicOp ConditionalType ParameterizedType ClassDeclaration abstract implements type VariableDeclaration let var TypeAliasDeclaration InterfaceDeclaration interface EnumDeclaration enum EnumBody NamespaceDeclaration namespace module AmbientDeclaration declare GlobalDeclaration global ClassDeclaration ClassBody MethodDeclaration AmbientFunctionDeclaration ExportGroup VariableName VariableName ImportDeclaration ImportGroup ForStatement for ForSpec ForInSpec ForOfSpec of WhileStatement while WithStatement with DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel TryStatement try catch finally ReturnStatement return ThrowStatement throw BreakStatement break ContinueStatement continue DebuggerStatement debugger LabeledStatement ExpressionStatement\",\n  maxTerm: 330,\n  context: trackNewline,\n  nodeProps: [\n    [NodeProp.group, -26,7,14,16,54,180,184,187,188,190,193,196,207,209,215,217,219,221,224,230,234,236,238,240,242,244,245,\"Statement\",-30,11,13,23,26,27,38,39,40,41,43,48,56,64,70,71,87,88,97,99,115,118,120,121,122,123,125,126,144,145,147,\"Expression\",-22,22,24,28,29,31,148,150,152,153,155,156,157,159,160,161,163,164,165,174,176,178,179,\"Type\",-3,75,81,86,\"ClassItem\"],\n    [NodeProp.closedBy, 37,\"]\",47,\"}\",62,\")\",128,\"JSXSelfCloseEndTag JSXEndTag\",142,\"JSXEndTag\"],\n    [NodeProp.openedBy, 42,\"[\",46,\"{\",61,\"(\",127,\"JSXStartTag\",137,\"JSXStartTag JSXStartCloseTag\"]\n  ],\n  skippedNodes: [0,4,5],\n  repeatNodeCount: 28,\n  tokenData: \"!C}~R!`OX%TXY%cYZ'RZ[%c[]%T]^'R^p%Tpq%cqr'crs(kst0htu2`uv4pvw5ewx6cxy<yyz=Zz{=k{|>k|}?O}!O>k!O!P?`!P!QCl!Q!R!0[!R![!1q![!]!7s!]!^!8V!^!_!8g!_!`!9d!`!a!:[!a!b!<R!b!c%T!c!}2`!}#O!=d#O#P%T#P#Q!=t#Q#R!>U#R#S2`#S#T!>i#T#o2`#o#p!>y#p#q!?O#q#r!?f#r#s!?x#s$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$I|2`$I|$I}!Bq$I}$JO!Bq$JO$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`W%YR$QWO!^%T!_#o%T#p~%T,T%jg$QW'T+{OX%TXY%cYZ%TZ[%c[p%Tpq%cq!^%T!_#o%T#p$f%T$f$g%c$g#BY%T#BY#BZ%c#BZ$IS%T$IS$I_%c$I_$JT%T$JT$JU%c$JU$KV%T$KV$KW%c$KW&FU%T&FU&FV%c&FV?HT%T?HT?HU%c?HU~%T,T'YR$QW'U+{O!^%T!_#o%T#p~%T$T'jS$QW!f#{O!^%T!_!`'v!`#o%T#p~%T$O'}S#a#v$QWO!^%T!_!`(Z!`#o%T#p~%T$O(bR#a#v$QWO!^%T!_#o%T#p~%T'u(rZ$QW]!ROY(kYZ)eZr(krs*rs!^(k!^!_+U!_#O(k#O#P-b#P#o(k#o#p+U#p~(k&r)jV$QWOr)ers*Ps!^)e!^!_*a!_#o)e#o#p*a#p~)e&r*WR#{&j$QWO!^%T!_#o%T#p~%T&j*dROr*ars*ms~*a&j*rO#{&j'u*{R#{&j$QW]!RO!^%T!_#o%T#p~%T'm+ZV]!ROY+UYZ*aZr+Urs+ps#O+U#O#P+w#P~+U'm+wO#{&j]!R'm+zROr+Urs,Ts~+U'm,[U#{&j]!ROY,nZr,nrs-Vs#O,n#O#P-[#P~,n!R,sU]!ROY,nZr,nrs-Vs#O,n#O#P-[#P~,n!R-[O]!R!R-_PO~,n'u-gV$QWOr(krs-|s!^(k!^!_+U!_#o(k#o#p+U#p~(k'u.VZ#{&j$QW]!ROY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x!Z/PZ$QW]!ROY.xYZ%TZr.xrs/rs!^.x!^!_,n!_#O.x#O#P0S#P#o.x#o#p,n#p~.x!Z/yR$QW]!RO!^%T!_#o%T#p~%T!Z0XT$QWO!^.x!^!_,n!_#o.x#o#p,n#p~.xy0mZ$QWOt%Ttu1`u!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`y1g]$QW'mqOt%Ttu1`u!Q%T!Q![1`![!^%T!_!c%T!c!}1`!}#R%T#R#S1`#S#T%T#T#o1`#p$g%T$g~1`&i2k_$QW#vS'W%k'dpOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`[3q_$QW#vSOt%Ttu3ju}%T}!O3j!O!Q%T!Q![3j![!^%T!_!c%T!c!}3j!}#R%T#R#S3j#S#T%T#T#o3j#p$g%T$g~3j$O4wS#Y#v$QWO!^%T!_!`5T!`#o%T#p~%T$O5[R$QW#k#vO!^%T!_#o%T#p~%T%r5lU'v%j$QWOv%Tvw6Ow!^%T!_!`5T!`#o%T#p~%T$O6VS$QW#e#vO!^%T!_!`5T!`#o%T#p~%T'u6jZ$QW]!ROY6cYZ7]Zw6cwx*rx!^6c!^!_8T!_#O6c#O#P:T#P#o6c#o#p8T#p~6c&r7bV$QWOw7]wx*Px!^7]!^!_7w!_#o7]#o#p7w#p~7]&j7zROw7wwx*mx~7w'm8YV]!ROY8TYZ7wZw8Twx+px#O8T#O#P8o#P~8T'm8rROw8Twx8{x~8T'm9SU#{&j]!ROY9fZw9fwx-Vx#O9f#O#P9}#P~9f!R9kU]!ROY9fZw9fwx-Vx#O9f#O#P9}#P~9f!R:QPO~9f'u:YV$QWOw6cwx:ox!^6c!^!_8T!_#o6c#o#p8T#p~6c'u:xZ#{&j$QW]!ROY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k!Z;rZ$QW]!ROY;kYZ%TZw;kwx/rx!^;k!^!_9f!_#O;k#O#P<e#P#o;k#o#p9f#p~;k!Z<jT$QWO!^;k!^!_9f!_#o;k#o#p9f#p~;k%V=QR!`$}$QWO!^%T!_#o%T#p~%TZ=bR!_R$QWO!^%T!_#o%T#p~%T%R=tU'X!R#Z#v$QWOz%Tz{>W{!^%T!_!`5T!`#o%T#p~%T$O>_S#W#v$QWO!^%T!_!`5T!`#o%T#p~%T$u>rSi$m$QWO!^%T!_!`5T!`#o%T#p~%T&i?VR}&a$QWO!^%T!_#o%T#p~%T&i?gVr%n$QWO!O%T!O!P?|!P!Q%T!Q![@r![!^%T!_#o%T#p~%Ty@RT$QWO!O%T!O!P@b!P!^%T!_#o%T#p~%Ty@iR|q$QWO!^%T!_#o%T#p~%Ty@yZ$QWjqO!Q%T!Q![@r![!^%T!_!g%T!g!hAl!h#R%T#R#S@r#S#X%T#X#YAl#Y#o%T#p~%TyAqZ$QWO{%T{|Bd|}%T}!OBd!O!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%TyBiV$QWO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%TyCVV$QWjqO!Q%T!Q![CO![!^%T!_#R%T#R#SCO#S#o%T#p~%T,TCs`$QW#X#vOYDuYZ%TZzDuz{Jl{!PDu!P!Q!-e!Q!^Du!^!_Fx!_!`!.^!`!a!/]!a!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXD|[$QWyPOYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~DuXEy_$QWyPO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%TPF}VyPOYFxZ!PFx!P!QGd!Q!}Fx!}#OG{#O#PHh#P~FxPGiUyP#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGdPHOTOYG{Z#OG{#O#PH_#P#QFx#Q~G{PHbQOYG{Z~G{PHkQOYFxZ~FxXHvY$QWOYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~HqXIkV$QWOYHqYZ%TZ!^Hq!^!_G{!_#oHq#o#pG{#p~HqXJVV$QWOYDuYZ%TZ!^Du!^!_Fx!_#oDu#o#pFx#p~Du,TJs^$QWyPOYJlYZKoZzJlz{NQ{!PJl!P!Q!,R!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl,TKtV$QWOzKoz{LZ{!^Ko!^!_M]!_#oKo#o#pM]#p~Ko,TL`X$QWOzKoz{LZ{!PKo!P!QL{!Q!^Ko!^!_M]!_#oKo#o#pM]#p~Ko,TMSR$QWT+{O!^%T!_#o%T#p~%T+{M`ROzM]z{Mi{~M]+{MlTOzM]z{Mi{!PM]!P!QM{!Q~M]+{NQOT+{,TNX^$QWyPOYJlYZKoZzJlz{NQ{!PJl!P!Q! T!Q!^Jl!^!_!!]!_!}Jl!}#O!'|#O#P!+a#P#oJl#o#p!!]#p~Jl,T! ^_$QWT+{yPO!^%T!_#Z%T#Z#[Er#[#]%T#]#^Er#^#a%T#a#bEr#b#g%T#g#hEr#h#i%T#i#jEr#j#m%T#m#nEr#n#o%T#p~%T+{!!bYyPOY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!&x!Q!}!!]!}#O!$`#O#P!&f#P~!!]+{!#VYyPOY!!]YZM]Zz!!]z{!#Q{!P!!]!P!Q!#u!Q!}!!]!}#O!$`#O#P!&f#P~!!]+{!#|UT+{yP#Z#[Gd#]#^Gd#a#bGd#g#hGd#i#jGd#m#nGd+{!$cWOY!$`YZM]Zz!$`z{!${{#O!$`#O#P!&S#P#Q!!]#Q~!$`+{!%OYOY!$`YZM]Zz!$`z{!${{!P!$`!P!Q!%n!Q#O!$`#O#P!&S#P#Q!!]#Q~!$`+{!%sTT+{OYG{Z#OG{#O#PH_#P#QFx#Q~G{+{!&VTOY!$`YZM]Zz!$`z{!${{~!$`+{!&iTOY!!]YZM]Zz!!]z{!#Q{~!!]+{!&}_yPOzM]z{Mi{#ZM]#Z#[!&x#[#]M]#]#^!&x#^#aM]#a#b!&x#b#gM]#g#h!&x#h#iM]#i#j!&x#j#mM]#m#n!&x#n~M],T!(R[$QWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|,T!(|^$QWOY!'|YZKoZz!'|z{!(w{!P!'|!P!Q!)x!Q!^!'|!^!_!$`!_#O!'|#O#P!*o#P#QJl#Q#o!'|#o#p!$`#p~!'|,T!*PY$QWT+{OYHqYZ%TZ!^Hq!^!_G{!_#OHq#O#PIf#P#QDu#Q#oHq#o#pG{#p~Hq,T!*tX$QWOY!'|YZKoZz!'|z{!(w{!^!'|!^!_!$`!_#o!'|#o#p!$`#p~!'|,T!+fX$QWOYJlYZKoZzJlz{NQ{!^Jl!^!_!!]!_#oJl#o#p!!]#p~Jl,T!,Yc$QWyPOzKoz{LZ{!^Ko!^!_M]!_#ZKo#Z#[!,R#[#]Ko#]#^!,R#^#aKo#a#b!,R#b#gKo#g#h!,R#h#iKo#i#j!,R#j#mKo#m#n!,R#n#oKo#o#pM]#p~Ko,T!-lV$QWS+{OY!-eYZ%TZ!^!-e!^!_!.R!_#o!-e#o#p!.R#p~!-e+{!.WQS+{OY!.RZ~!.R$P!.g[$QW#k#vyPOYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Du]!/f[#sS$QWyPOYDuYZ%TZ!PDu!P!QEr!Q!^Du!^!_Fx!_!}Du!}#OHq#O#PJQ#P#oDu#o#pFx#p~Duy!0cd$QWjqO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#U%T#U#V!3X#V#X%T#X#YAl#Y#b%T#b#c!2w#c#d!4m#d#l%T#l#m!5{#m#o%T#p~%Ty!1x_$QWjqO!O%T!O!P@r!P!Q%T!Q![!1q![!^%T!_!g%T!g!hAl!h#R%T#R#S!1q#S#X%T#X#YAl#Y#b%T#b#c!2w#c#o%T#p~%Ty!3OR$QWjqO!^%T!_#o%T#p~%Ty!3^W$QWO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#o%T#p~%Ty!3}Y$QWjqO!Q%T!Q!R!3v!R!S!3v!S!^%T!_#R%T#R#S!3v#S#b%T#b#c!2w#c#o%T#p~%Ty!4rV$QWO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#o%T#p~%Ty!5`X$QWjqO!Q%T!Q!Y!5X!Y!^%T!_#R%T#R#S!5X#S#b%T#b#c!2w#c#o%T#p~%Ty!6QZ$QWO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#o%T#p~%Ty!6z]$QWjqO!Q%T!Q![!6s![!^%T!_!c%T!c!i!6s!i#R%T#R#S!6s#S#T%T#T#Z!6s#Z#b%T#b#c!2w#c#o%T#p~%T%w!7|R!XV$QW#i%hO!^%T!_#o%T#p~%T!P!8^R^w$QWO!^%T!_#o%T#p~%T+c!8rR']d!]%Y#t&s'zP!P!Q!8{!^!_!9Q!_!`!9_W!9QO$SW#v!9VP#[#v!_!`!9Y#v!9_O#k#v#v!9dO#]#v%w!9kT!w%o$QWO!^%T!_!`'v!`!a!9z!a#o%T#p~%T$P!:RR#S#w$QWO!^%T!_#o%T#p~%T%w!:gT'[!s#]#v#}S$QWO!^%T!_!`!:v!`!a!;W!a#o%T#p~%T$O!:}R#]#v$QWO!^%T!_#o%T#p~%T$O!;_T#[#v$QWO!^%T!_!`5T!`!a!;n!a#o%T#p~%T$O!;uS#[#v$QWO!^%T!_!`5T!`#o%T#p~%T%w!<YV'n%o$QWO!O%T!O!P!<o!P!^%T!_!a%T!a!b!=P!b#o%T#p~%T$`!<vRs$W$QWO!^%T!_#o%T#p~%T$O!=WS$QW#f#vO!^%T!_!`5T!`#o%T#p~%T&e!=kRu&]$QWO!^%T!_#o%T#p~%TZ!={RzR$QWO!^%T!_#o%T#p~%T$O!>]S#c#v$QWO!^%T!_!`5T!`#o%T#p~%T$P!>pR$QW'a#wO!^%T!_#o%T#p~%T~!?OO!P~%r!?VT'u%j$QWO!^%T!_!`5T!`#o%T#p#q!=P#q~%T$u!?oR!O$k$QW'cQO!^%T!_#o%T#p~%TX!@PR!gP$QWO!^%T!_#o%T#p~%T,T!@gr$QW'T+{#vS'W%k'dpOX%TXY%cYZ%TZ[%c[p%Tpq%cqt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$f%T$f$g%c$g#BY2`#BY#BZ!@Y#BZ$IS2`$IS$I_!@Y$I_$JT2`$JT$JU!@Y$JU$KV2`$KV$KW!@Y$KW&FU2`&FU&FV!@Y&FV?HT2`?HT?HU!@Y?HU~2`,T!CO_$QW'U+{#vS'W%k'dpOt%Ttu2`u}%T}!O3j!O!Q%T!Q![2`![!^%T!_!c%T!c!}2`!}#R%T#R#S2`#S#T%T#T#o2`#p$g%T$g~2`\",\n  tokenizers: [noSemicolon, incdecToken, template, 0, 1, 2, 3, 4, 5, 6, 7, 8, insertSemicolon],\n  topRules: {\"Script\":[0,6]},\n  dialects: {jsx: 11282, ts: 11284},\n  dynamicPrecedences: {\"145\":1,\"172\":1},\n  specialized: [{term: 284, get: (value, stack) => (tsExtends(value, stack) << 1)},{term: 284, get: value => spec_identifier[value] || -1},{term: 296, get: value => spec_word[value] || -1},{term: 59, get: value => spec_LessThan[value] || -1}],\n  tokenPrec: 11305\n});\n\nexport { parser };\n","import { parser } from '@lezer/javascript';\nimport { LRLanguage, indentNodeProp, continuedIndent, flatIndent, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@codemirror/highlight';\nimport { snippetCompletion, ifNotIn, completeFromList } from '@codemirror/autocomplete';\n\n/**\nA collection of JavaScript-related\n[snippets](https://codemirror.net/6/docs/ref/#autocomplete.snippet).\n*/\nconst snippets = [\n    /*@__PURE__*/snippetCompletion(\"function ${name}(${params}) {\\n\\t${}\\n}\", {\n        label: \"function\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${index} = 0; ${index} < ${bound}; ${index}++) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"for (let ${name} of ${collection}) {\\n\\t${}\\n}\", {\n        label: \"for\",\n        detail: \"of loop\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"try {\\n\\t${}\\n} catch (${error}) {\\n\\t${}\\n}\", {\n        label: \"try\",\n        detail: \"block\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"class ${name} {\\n\\tconstructor(${params}) {\\n\\t\\t${}\\n\\t}\\n}\", {\n        label: \"class\",\n        detail: \"definition\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import {${names}} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"named\",\n        type: \"keyword\"\n    }),\n    /*@__PURE__*/snippetCompletion(\"import ${name} from \\\"${module}\\\"\\n${}\", {\n        label: \"import\",\n        detail: \"default\",\n        type: \"keyword\"\n    })\n];\n\n/**\nA language provider based on the [Lezer JavaScript\nparser](https://github.com/lezer-parser/javascript), extended with\nhighlighting and indentation information.\n*/\nconst javascriptLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                IfStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|else\\b)/ }),\n                TryStatement: /*@__PURE__*/continuedIndent({ except: /^\\s*({|catch\\b|finally\\b)/ }),\n                LabeledStatement: flatIndent,\n                SwitchBody: context => {\n                    let after = context.textAfter, closed = /^\\s*\\}/.test(after), isCase = /^\\s*(case|default)\\b/.test(after);\n                    return context.baseIndent + (closed ? 0 : isCase ? 1 : 2) * context.unit;\n                },\n                Block: /*@__PURE__*/delimitedIndent({ closing: \"}\" }),\n                ArrowFunction: cx => cx.baseIndent + cx.unit,\n                \"TemplateString BlockComment\": () => -1,\n                \"Statement Property\": /*@__PURE__*/continuedIndent({ except: /^{/ }),\n                JSXElement(context) {\n                    let closed = /^\\s*<\\//.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                JSXEscape(context) {\n                    let closed = /\\s*\\}/.test(context.textAfter);\n                    return context.lineIndent(context.node.from) + (closed ? 0 : context.unit);\n                },\n                \"JSXOpenTag JSXSelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Block ClassBody SwitchBody EnumBody ObjectExpression ArrayExpression\": foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            }),\n            /*@__PURE__*/styleTags({\n                \"get set async static\": tags.modifier,\n                \"for while do if else switch try catch finally return throw break continue default case\": tags.controlKeyword,\n                \"in of await yield void typeof delete instanceof\": tags.operatorKeyword,\n                \"export import let var const function class extends\": tags.definitionKeyword,\n                \"with debugger from as new\": tags.keyword,\n                TemplateString: /*@__PURE__*/tags.special(tags.string),\n                Super: tags.atom,\n                BooleanLiteral: tags.bool,\n                this: tags.self,\n                null: tags.null,\n                Star: tags.modifier,\n                VariableName: tags.variableName,\n                \"CallExpression/VariableName\": /*@__PURE__*/tags.function(tags.variableName),\n                VariableDefinition: /*@__PURE__*/tags.definition(tags.variableName),\n                Label: tags.labelName,\n                PropertyName: tags.propertyName,\n                PrivatePropertyName: /*@__PURE__*/tags.special(tags.propertyName),\n                \"CallExpression/MemberExpression/PropertyName\": /*@__PURE__*/tags.function(tags.propertyName),\n                \"FunctionDeclaration/VariableDefinition\": /*@__PURE__*/tags.function(/*@__PURE__*/tags.definition(tags.variableName)),\n                \"ClassDeclaration/VariableDefinition\": /*@__PURE__*/tags.definition(tags.className),\n                PropertyDefinition: /*@__PURE__*/tags.definition(tags.propertyName),\n                PrivatePropertyDefinition: /*@__PURE__*/tags.definition(/*@__PURE__*/tags.special(tags.propertyName)),\n                UpdateOp: tags.updateOperator,\n                LineComment: tags.lineComment,\n                BlockComment: tags.blockComment,\n                Number: tags.number,\n                String: tags.string,\n                ArithOp: tags.arithmeticOperator,\n                LogicOp: tags.logicOperator,\n                BitOp: tags.bitwiseOperator,\n                CompareOp: tags.compareOperator,\n                RegExp: tags.regexp,\n                Equals: tags.definitionOperator,\n                \"Arrow : Spread\": tags.punctuation,\n                \"( )\": tags.paren,\n                \"[ ]\": tags.squareBracket,\n                \"{ }\": tags.brace,\n                \".\": tags.derefOperator,\n                \", ;\": tags.separator,\n                TypeName: tags.typeName,\n                TypeDefinition: /*@__PURE__*/tags.definition(tags.typeName),\n                \"type enum interface implements namespace module declare\": tags.definitionKeyword,\n                \"abstract global privacy readonly override\": tags.modifier,\n                \"is keyof unique infer\": tags.operatorKeyword,\n                JSXAttributeValue: tags.attributeValue,\n                JSXText: tags.content,\n                \"JSXStartTag JSXStartCloseTag JSXSelfCloseEndTag JSXEndTag\": tags.angleBracket,\n                \"JSXIdentifier JSXNameSpacedName\": tags.tagName,\n                \"JSXAttribute/JSXIdentifier JSXAttribute/JSXNameSpacedName\": tags.attributeName\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"(\", \"[\", \"{\", \"'\", '\"', \"`\"] },\n        commentTokens: { line: \"//\", block: { open: \"/*\", close: \"*/\" } },\n        indentOnInput: /^\\s*(?:case |default:|\\{|\\}|<\\/)$/,\n        wordChars: \"$\"\n    }\n});\n/**\nA language provider for TypeScript.\n*/\nconst typescriptLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"ts\" });\n/**\nLanguage provider for JSX.\n*/\nconst jsxLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"jsx\" });\n/**\nLanguage provider for JSX + TypeScript.\n*/\nconst tsxLanguage = /*@__PURE__*/javascriptLanguage.configure({ dialect: \"jsx ts\" });\n/**\nJavaScript support. Includes [snippet](https://codemirror.net/6/docs/ref/#lang-javascript.snippets)\ncompletion.\n*/\nfunction javascript(config = {}) {\n    let lang = config.jsx ? (config.typescript ? tsxLanguage : jsxLanguage)\n        : config.typescript ? typescriptLanguage : javascriptLanguage;\n    return new LanguageSupport(lang, javascriptLanguage.data.of({\n        autocomplete: ifNotIn([\"LineComment\", \"BlockComment\", \"String\"], completeFromList(snippets))\n    }));\n}\n\n/**\nConnects an [ESLint](https://eslint.org/) linter to CodeMirror's\n[lint](https://codemirror.net/6/docs/ref/#lint) integration. `eslint` should be an instance of the\n[`Linter`](https://eslint.org/docs/developer-guide/nodejs-api#linter)\nclass, and `config` an optional ESLint configuration. The return\nvalue of this function can be passed to [`linter`](https://codemirror.net/6/docs/ref/#lint.linter)\nto create a JavaScript linting extension.\n\nNote that ESLint targets node, and is tricky to run in the\nbrowser. The [eslint4b](https://github.com/mysticatea/eslint4b)\nand\n[eslint4b-prebuilt](https://github.com/marijnh/eslint4b-prebuilt/)\npackages may help with that.\n*/\nfunction esLint(eslint, config) {\n    if (!config) {\n        config = {\n            parserOptions: { ecmaVersion: 2019, sourceType: \"module\" },\n            env: { browser: true, node: true, es6: true, es2015: true, es2017: true, es2020: true },\n            rules: {}\n        };\n        eslint.getRules().forEach((desc, name) => {\n            if (desc.meta.docs.recommended)\n                config.rules[name] = 2;\n        });\n    }\n    return (view) => {\n        let { state } = view, found = [];\n        for (let { from, to } of javascriptLanguage.findRegions(state)) {\n            let fromLine = state.doc.lineAt(from), offset = { line: fromLine.number - 1, col: from - fromLine.from, pos: from };\n            for (let d of eslint.verify(state.sliceDoc(from, to), config))\n                found.push(translateDiagnostic(d, state.doc, offset));\n        }\n        return found;\n    };\n}\nfunction mapPos(line, col, doc, offset) {\n    return doc.line(line + offset.line).from + col + (line == 1 ? offset.col - 1 : -1);\n}\nfunction translateDiagnostic(input, doc, offset) {\n    let start = mapPos(input.line, input.column, doc, offset);\n    let result = {\n        from: start,\n        to: input.endLine != null && input.endColumn != 1 ? mapPos(input.endLine, input.endColumn, doc, offset) : start,\n        message: input.message,\n        source: input.ruleId ? \"jshint:\" + input.ruleId : \"jshint\",\n        severity: input.severity == 1 ? \"warning\" : \"error\",\n    };\n    if (input.fix) {\n        let { range, text } = input.fix, from = range[0] + offset.pos - start, to = range[1] + offset.pos - start;\n        result.actions = [{\n                name: \"fix\",\n                apply(view, start) {\n                    view.dispatch({ changes: { from: start + from, to: start + to, insert: text }, scrollIntoView: true });\n                }\n            }];\n    }\n    return result;\n}\n\nexport { esLint, javascript, javascriptLanguage, jsxLanguage, snippets, tsxLanguage, typescriptLanguage };\n","import { parser, configureNesting } from '@lezer/html';\nimport { cssLanguage, css } from '@codemirror/lang-css';\nimport { javascriptLanguage, javascript } from '@codemirror/lang-javascript';\nimport { EditorView } from '@codemirror/view';\nimport { EditorSelection } from '@codemirror/state';\nimport { syntaxTree, LRLanguage, indentNodeProp, foldNodeProp, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@codemirror/highlight';\n\nconst Targets = [\"_blank\", \"_self\", \"_top\", \"_parent\"];\nconst Charsets = [\"ascii\", \"utf-8\", \"utf-16\", \"latin1\", \"latin1\"];\nconst Methods = [\"get\", \"post\", \"put\", \"delete\"];\nconst Encs = [\"application/x-www-form-urlencoded\", \"multipart/form-data\", \"text/plain\"];\nconst Bool = [\"true\", \"false\"];\nconst S = {}; // Empty tag spec\nconst Tags = {\n    a: {\n        attrs: {\n            href: null, ping: null, type: null,\n            media: null,\n            target: Targets,\n            hreflang: null\n        }\n    },\n    abbr: S,\n    acronym: S,\n    address: S,\n    applet: S,\n    area: {\n        attrs: {\n            alt: null, coords: null, href: null, target: null, ping: null,\n            media: null, hreflang: null, type: null,\n            shape: [\"default\", \"rect\", \"circle\", \"poly\"]\n        }\n    },\n    article: S,\n    aside: S,\n    audio: {\n        attrs: {\n            src: null, mediagroup: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"],\n            preload: [\"none\", \"metadata\", \"auto\"],\n            autoplay: [\"autoplay\"],\n            loop: [\"loop\"],\n            controls: [\"controls\"]\n        }\n    },\n    b: S,\n    base: { attrs: { href: null, target: Targets } },\n    basefont: S,\n    bdi: S,\n    bdo: S,\n    big: S,\n    blockquote: { attrs: { cite: null } },\n    body: S,\n    br: S,\n    button: {\n        attrs: {\n            form: null, formaction: null, name: null, value: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"autofocus\"],\n            formenctype: Encs,\n            formmethod: Methods,\n            formnovalidate: [\"novalidate\"],\n            formtarget: Targets,\n            type: [\"submit\", \"reset\", \"button\"]\n        }\n    },\n    canvas: { attrs: { width: null, height: null } },\n    caption: S,\n    center: S,\n    cite: S,\n    code: S,\n    col: { attrs: { span: null } },\n    colgroup: { attrs: { span: null } },\n    command: {\n        attrs: {\n            type: [\"command\", \"checkbox\", \"radio\"],\n            label: null, icon: null, radiogroup: null, command: null, title: null,\n            disabled: [\"disabled\"],\n            checked: [\"checked\"]\n        }\n    },\n    data: { attrs: { value: null } },\n    datagrid: { attrs: { disabled: [\"disabled\"], multiple: [\"multiple\"] } },\n    datalist: { attrs: { data: null } },\n    dd: S,\n    del: { attrs: { cite: null, datetime: null } },\n    details: { attrs: { open: [\"open\"] } },\n    dfn: S,\n    dir: S,\n    div: S,\n    dl: S,\n    dt: S,\n    em: S,\n    embed: { attrs: { src: null, type: null, width: null, height: null } },\n    eventsource: { attrs: { src: null } },\n    fieldset: { attrs: { disabled: [\"disabled\"], form: null, name: null } },\n    figcaption: S,\n    figure: S,\n    font: S,\n    footer: S,\n    form: {\n        attrs: {\n            action: null, name: null,\n            \"accept-charset\": Charsets,\n            autocomplete: [\"on\", \"off\"],\n            enctype: Encs,\n            method: Methods,\n            novalidate: [\"novalidate\"],\n            target: Targets\n        }\n    },\n    frame: S,\n    frameset: S,\n    h1: S, h2: S, h3: S, h4: S, h5: S, h6: S,\n    head: {\n        children: [\"title\", \"base\", \"link\", \"style\", \"meta\", \"script\", \"noscript\", \"command\"]\n    },\n    header: S,\n    hgroup: S,\n    hr: S,\n    html: {\n        attrs: { manifest: null }\n    },\n    i: S,\n    iframe: {\n        attrs: {\n            src: null, srcdoc: null, name: null, width: null, height: null,\n            sandbox: [\"allow-top-navigation\", \"allow-same-origin\", \"allow-forms\", \"allow-scripts\"],\n            seamless: [\"seamless\"]\n        }\n    },\n    img: {\n        attrs: {\n            alt: null, src: null, ismap: null, usemap: null, width: null, height: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"]\n        }\n    },\n    input: {\n        attrs: {\n            alt: null, dirname: null, form: null, formaction: null,\n            height: null, list: null, max: null, maxlength: null, min: null,\n            name: null, pattern: null, placeholder: null, size: null, src: null,\n            step: null, value: null, width: null,\n            accept: [\"audio/*\", \"video/*\", \"image/*\"],\n            autocomplete: [\"on\", \"off\"],\n            autofocus: [\"autofocus\"],\n            checked: [\"checked\"],\n            disabled: [\"disabled\"],\n            formenctype: Encs,\n            formmethod: Methods,\n            formnovalidate: [\"novalidate\"],\n            formtarget: Targets,\n            multiple: [\"multiple\"],\n            readonly: [\"readonly\"],\n            required: [\"required\"],\n            type: [\"hidden\", \"text\", \"search\", \"tel\", \"url\", \"email\", \"password\", \"datetime\", \"date\", \"month\",\n                \"week\", \"time\", \"datetime-local\", \"number\", \"range\", \"color\", \"checkbox\", \"radio\",\n                \"file\", \"submit\", \"image\", \"reset\", \"button\"]\n        }\n    },\n    ins: { attrs: { cite: null, datetime: null } },\n    kbd: S,\n    keygen: {\n        attrs: {\n            challenge: null, form: null, name: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            keytype: [\"RSA\"]\n        }\n    },\n    label: { attrs: { for: null, form: null } },\n    legend: S,\n    li: { attrs: { value: null } },\n    link: {\n        attrs: {\n            href: null, type: null,\n            hreflang: null,\n            media: null,\n            sizes: [\"all\", \"16x16\", \"16x16 32x32\", \"16x16 32x32 64x64\"]\n        }\n    },\n    map: { attrs: { name: null } },\n    mark: S,\n    menu: { attrs: { label: null, type: [\"list\", \"context\", \"toolbar\"] } },\n    meta: {\n        attrs: {\n            content: null,\n            charset: Charsets,\n            name: [\"viewport\", \"application-name\", \"author\", \"description\", \"generator\", \"keywords\"],\n            \"http-equiv\": [\"content-language\", \"content-type\", \"default-style\", \"refresh\"]\n        }\n    },\n    meter: { attrs: { value: null, min: null, low: null, high: null, max: null, optimum: null } },\n    nav: S,\n    noframes: S,\n    noscript: S,\n    object: {\n        attrs: {\n            data: null, type: null, name: null, usemap: null, form: null, width: null, height: null,\n            typemustmatch: [\"typemustmatch\"]\n        }\n    },\n    ol: { attrs: { reversed: [\"reversed\"], start: null, type: [\"1\", \"a\", \"A\", \"i\", \"I\"] },\n        children: [\"li\", \"script\", \"template\", \"ul\", \"ol\"] },\n    optgroup: { attrs: { disabled: [\"disabled\"], label: null } },\n    option: { attrs: { disabled: [\"disabled\"], label: null, selected: [\"selected\"], value: null } },\n    output: { attrs: { for: null, form: null, name: null } },\n    p: S,\n    param: { attrs: { name: null, value: null } },\n    pre: S,\n    progress: { attrs: { value: null, max: null } },\n    q: { attrs: { cite: null } },\n    rp: S,\n    rt: S,\n    ruby: S,\n    s: S,\n    samp: S,\n    script: {\n        attrs: {\n            type: [\"text/javascript\"],\n            src: null,\n            async: [\"async\"],\n            defer: [\"defer\"],\n            charset: Charsets\n        }\n    },\n    section: S,\n    select: {\n        attrs: {\n            form: null, name: null, size: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            multiple: [\"multiple\"]\n        }\n    },\n    small: S,\n    source: { attrs: { src: null, type: null, media: null } },\n    span: S,\n    strike: S,\n    strong: S,\n    style: {\n        attrs: {\n            type: [\"text/css\"],\n            media: null,\n            scoped: null\n        }\n    },\n    sub: S,\n    summary: S,\n    sup: S,\n    table: S,\n    tbody: S,\n    td: { attrs: { colspan: null, rowspan: null, headers: null } },\n    textarea: {\n        attrs: {\n            dirname: null, form: null, maxlength: null, name: null, placeholder: null,\n            rows: null, cols: null,\n            autofocus: [\"autofocus\"],\n            disabled: [\"disabled\"],\n            readonly: [\"readonly\"],\n            required: [\"required\"],\n            wrap: [\"soft\", \"hard\"]\n        }\n    },\n    tfoot: S,\n    th: { attrs: { colspan: null, rowspan: null, headers: null, scope: [\"row\", \"col\", \"rowgroup\", \"colgroup\"] } },\n    thead: S,\n    time: { attrs: { datetime: null } },\n    title: S,\n    tr: S,\n    track: {\n        attrs: {\n            src: null, label: null, default: null,\n            kind: [\"subtitles\", \"captions\", \"descriptions\", \"chapters\", \"metadata\"],\n            srclang: null\n        }\n    },\n    tt: S,\n    u: S,\n    ul: { children: [\"li\", \"script\", \"template\", \"ul\", \"ol\"] },\n    var: S,\n    video: {\n        attrs: {\n            src: null, poster: null, width: null, height: null,\n            crossorigin: [\"anonymous\", \"use-credentials\"],\n            preload: [\"auto\", \"metadata\", \"none\"],\n            autoplay: [\"autoplay\"],\n            mediagroup: [\"movie\"],\n            muted: [\"muted\"],\n            controls: [\"controls\"]\n        }\n    },\n    wbr: S\n};\nconst GlobalAttrs = {\n    accesskey: null,\n    class: null,\n    contenteditable: Bool,\n    contextmenu: null,\n    dir: [\"ltr\", \"rtl\", \"auto\"],\n    draggable: [\"true\", \"false\", \"auto\"],\n    dropzone: [\"copy\", \"move\", \"link\", \"string:\", \"file:\"],\n    hidden: [\"hidden\"],\n    id: null,\n    inert: [\"inert\"],\n    itemid: null,\n    itemprop: null,\n    itemref: null,\n    itemscope: [\"itemscope\"],\n    itemtype: null,\n    lang: [\"ar\", \"bn\", \"de\", \"en-GB\", \"en-US\", \"es\", \"fr\", \"hi\", \"id\", \"ja\", \"pa\", \"pt\", \"ru\", \"tr\", \"zh\"],\n    spellcheck: Bool,\n    autocorrect: Bool,\n    autocapitalize: Bool,\n    style: null,\n    tabindex: null,\n    title: null,\n    translate: [\"yes\", \"no\"],\n    onclick: null,\n    rel: [\"stylesheet\", \"alternate\", \"author\", \"bookmark\", \"help\", \"license\", \"next\", \"nofollow\", \"noreferrer\", \"prefetch\", \"prev\", \"search\", \"tag\"],\n    role: /*@__PURE__*/\"alert application article banner button cell checkbox complementary contentinfo dialog document feed figure form grid gridcell heading img list listbox listitem main navigation region row rowgroup search switch tab table tabpanel textbox timer\".split(\" \"),\n    \"aria-activedescendant\": null,\n    \"aria-atomic\": Bool,\n    \"aria-autocomplete\": [\"inline\", \"list\", \"both\", \"none\"],\n    \"aria-busy\": Bool,\n    \"aria-checked\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n    \"aria-controls\": null,\n    \"aria-describedby\": null,\n    \"aria-disabled\": Bool,\n    \"aria-dropeffect\": null,\n    \"aria-expanded\": [\"true\", \"false\", \"undefined\"],\n    \"aria-flowto\": null,\n    \"aria-grabbed\": [\"true\", \"false\", \"undefined\"],\n    \"aria-haspopup\": Bool,\n    \"aria-hidden\": Bool,\n    \"aria-invalid\": [\"true\", \"false\", \"grammar\", \"spelling\"],\n    \"aria-label\": null,\n    \"aria-labelledby\": null,\n    \"aria-level\": null,\n    \"aria-live\": [\"off\", \"polite\", \"assertive\"],\n    \"aria-multiline\": Bool,\n    \"aria-multiselectable\": Bool,\n    \"aria-owns\": null,\n    \"aria-posinset\": null,\n    \"aria-pressed\": [\"true\", \"false\", \"mixed\", \"undefined\"],\n    \"aria-readonly\": Bool,\n    \"aria-relevant\": null,\n    \"aria-required\": Bool,\n    \"aria-selected\": [\"true\", \"false\", \"undefined\"],\n    \"aria-setsize\": null,\n    \"aria-sort\": [\"ascending\", \"descending\", \"none\", \"other\"],\n    \"aria-valuemax\": null,\n    \"aria-valuemin\": null,\n    \"aria-valuenow\": null,\n    \"aria-valuetext\": null\n};\nconst AllTags = /*@__PURE__*/Object.keys(Tags);\nconst GlobalAttrNames = /*@__PURE__*/Object.keys(GlobalAttrs);\nfunction elementName(doc, tree, max = doc.length) {\n    if (!tree)\n        return \"\";\n    let tag = tree.firstChild;\n    let name = tag && tag.getChild(\"TagName\");\n    return name ? doc.sliceString(name.from, Math.min(name.to, max)) : \"\";\n}\nfunction findParentElement(tree, skip = false) {\n    for (let cur = tree.parent; cur; cur = cur.parent)\n        if (cur.name == \"Element\") {\n            if (skip)\n                skip = false;\n            else\n                return cur;\n        }\n    return null;\n}\nfunction allowedChildren(doc, tree) {\n    let parentInfo = Tags[elementName(doc, findParentElement(tree, true))];\n    return (parentInfo === null || parentInfo === void 0 ? void 0 : parentInfo.children) || AllTags;\n}\nfunction openTags(doc, tree) {\n    let open = [];\n    for (let parent = tree; parent = findParentElement(parent);) {\n        let tagName = elementName(doc, parent);\n        if (tagName && parent.lastChild.name == \"CloseTag\")\n            break;\n        if (tagName && open.indexOf(tagName) < 0 && (tree.name == \"EndTag\" || tree.from >= parent.firstChild.to))\n            open.push(tagName);\n    }\n    return open;\n}\nconst identifier = /^[:\\-\\.\\w\\u00b7-\\uffff]+$/;\nfunction completeTag(state, tree, from, to) {\n    let end = /\\s*>/.test(state.sliceDoc(to, to + 5)) ? \"\" : \">\";\n    return { from, to,\n        options: allowedChildren(state.doc, tree).map(tagName => ({ label: tagName, type: \"type\" })).concat(openTags(state.doc, tree).map((tag, i) => ({ label: \"/\" + tag, apply: \"/\" + tag + end, type: \"type\", boost: 99 - i }))),\n        span: /^\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/ };\n}\nfunction completeCloseTag(state, tree, from, to) {\n    let end = /\\s*>/.test(state.sliceDoc(to, to + 5)) ? \"\" : \">\";\n    return { from, to,\n        options: openTags(state.doc, tree).map((tag, i) => ({ label: tag, apply: tag + end, type: \"type\", boost: 99 - i })),\n        span: identifier };\n}\nfunction completeStartTag(state, tree, pos) {\n    let options = [], level = 0;\n    for (let tagName of allowedChildren(state.doc, tree))\n        options.push({ label: \"<\" + tagName, type: \"type\" });\n    for (let open of openTags(state.doc, tree))\n        options.push({ label: \"</\" + open + \">\", type: \"type\", boost: 99 - level++ });\n    return { from: pos, to: pos, options, span: /^<\\/?[:\\-\\.\\w\\u00b7-\\uffff]*$/ };\n}\nfunction completeAttrName(state, tree, from, to) {\n    let elt = findParentElement(tree), info = elt ? Tags[elementName(state.doc, elt)] : null;\n    let names = (info && info.attrs ? Object.keys(info.attrs).concat(GlobalAttrNames) : GlobalAttrNames);\n    return { from, to,\n        options: names.map(attrName => ({ label: attrName, type: \"property\" })),\n        span: identifier };\n}\nfunction completeAttrValue(state, tree, from, to) {\n    var _a;\n    let nameNode = (_a = tree.parent) === null || _a === void 0 ? void 0 : _a.getChild(\"AttributeName\");\n    let options = [], span = undefined;\n    if (nameNode) {\n        let attrName = state.sliceDoc(nameNode.from, nameNode.to);\n        let attrs = GlobalAttrs[attrName];\n        if (!attrs) {\n            let elt = findParentElement(tree), info = elt ? Tags[elementName(state.doc, elt)] : null;\n            attrs = (info === null || info === void 0 ? void 0 : info.attrs) && info.attrs[attrName];\n        }\n        if (attrs) {\n            let base = state.sliceDoc(from, to).toLowerCase(), quoteStart = '\"', quoteEnd = '\"';\n            if (/^['\"]/.test(base)) {\n                span = base[0] == '\"' ? /^[^\"]*$/ : /^[^']*$/;\n                quoteStart = \"\";\n                quoteEnd = state.sliceDoc(to, to + 1) == base[0] ? \"\" : base[0];\n                base = base.slice(1);\n                from++;\n            }\n            else {\n                span = /^[^\\s<>='\"]*$/;\n            }\n            for (let value of attrs)\n                options.push({ label: value, apply: quoteStart + value + quoteEnd, type: \"constant\" });\n        }\n    }\n    return { from, to, options, span };\n}\n/**\nHTML tag completion. Opens and closes tags and attributes in a\ncontext-aware way.\n*/\nfunction htmlCompletionSource(context) {\n    let { state, pos } = context, around = syntaxTree(state).resolveInner(pos), tree = around.resolve(pos, -1);\n    for (let scan = pos, before; around == tree && (before = tree.childBefore(scan));) {\n        let last = before.lastChild;\n        if (!last || !last.type.isError || last.from < last.to)\n            break;\n        around = tree = before;\n        scan = last.from;\n    }\n    if (tree.name == \"TagName\") {\n        return tree.parent && /CloseTag$/.test(tree.parent.name) ? completeCloseTag(state, tree, tree.from, pos)\n            : completeTag(state, tree, tree.from, pos);\n    }\n    else if (tree.name == \"StartTag\") {\n        return completeTag(state, tree, pos, pos);\n    }\n    else if (tree.name == \"StartCloseTag\" || tree.name == \"IncompleteCloseTag\") {\n        return completeCloseTag(state, tree, pos, pos);\n    }\n    else if (context.explicit && (tree.name == \"OpenTag\" || tree.name == \"SelfClosingTag\") || tree.name == \"AttributeName\") {\n        return completeAttrName(state, tree, tree.name == \"AttributeName\" ? tree.from : pos, pos);\n    }\n    else if (tree.name == \"Is\" || tree.name == \"AttributeValue\" || tree.name == \"UnquotedAttributeValue\") {\n        return completeAttrValue(state, tree, tree.name == \"Is\" ? pos : tree.from, pos);\n    }\n    else if (context.explicit && (around.name == \"Element\" || around.name == \"Text\" || around.name == \"Document\")) {\n        return completeStartTag(state, tree, pos);\n    }\n    else {\n        return null;\n    }\n}\n\n/**\nA language provider based on the [Lezer HTML\nparser](https://github.com/lezer-parser/html), extended with the\nJavaScript and CSS parsers to parse the content of `<script>` and\n`<style>` tags.\n*/\nconst htmlLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Element(context) {\n                    let after = /^(\\s*)(<\\/)?/.exec(context.textAfter);\n                    if (context.node.to <= context.pos + after[0].length)\n                        return context.continue();\n                    return context.lineIndent(context.node.from) + (after[2] ? 0 : context.unit);\n                },\n                \"OpenTag CloseTag SelfClosingTag\"(context) {\n                    return context.column(context.node.from) + context.unit;\n                },\n                Document(context) {\n                    if (context.pos + /\\s*/.exec(context.textAfter)[0].length < context.node.to)\n                        return context.continue();\n                    let endElt = null, close;\n                    for (let cur = context.node;;) {\n                        let last = cur.lastChild;\n                        if (!last || last.name != \"Element\" || last.to != cur.to)\n                            break;\n                        endElt = cur = last;\n                    }\n                    if (endElt && !((close = endElt.lastChild) && (close.name == \"CloseTag\" || close.name == \"SelfClosingTag\")))\n                        return context.lineIndent(endElt.from) + context.unit;\n                    return null;\n                }\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                Element(node) {\n                    let first = node.firstChild, last = node.lastChild;\n                    if (!first || first.name != \"OpenTag\")\n                        return null;\n                    return { from: first.to, to: last.name == \"CloseTag\" ? last.from : node.to };\n                }\n            }),\n            /*@__PURE__*/styleTags({\n                \"Text RawText\": tags.content,\n                \"StartTag StartCloseTag SelfCloserEndTag EndTag SelfCloseEndTag\": tags.angleBracket,\n                TagName: tags.tagName,\n                \"MismatchedCloseTag/TagName\": [tags.tagName, tags.invalid],\n                AttributeName: tags.attributeName,\n                \"AttributeValue UnquotedAttributeValue\": tags.attributeValue,\n                Is: tags.definitionOperator,\n                \"EntityReference CharacterReference\": tags.character,\n                Comment: tags.blockComment,\n                ProcessingInst: tags.processingInstruction,\n                DoctypeDecl: tags.documentMeta\n            })\n        ],\n        wrap: /*@__PURE__*/configureNesting([\n            { tag: \"script\",\n                attrs(attrs) {\n                    return !attrs.type || /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i.test(attrs.type);\n                },\n                parser: javascriptLanguage.parser },\n            { tag: \"style\",\n                attrs(attrs) {\n                    return (!attrs.lang || attrs.lang == \"css\") && (!attrs.type || /^(text\\/)?(x-)?(stylesheet|css)$/i.test(attrs.type));\n                },\n                parser: cssLanguage.parser }\n        ])\n    }),\n    languageData: {\n        commentTokens: { block: { open: \"<!--\", close: \"-->\" } },\n        indentOnInput: /^\\s*<\\/\\w+\\W$/,\n        wordChars: \"-._\"\n    }\n});\n// FIXME remove on next major version\nconst htmlCompletion = /*@__PURE__*/htmlLanguage.data.of({ autocomplete: htmlCompletionSource });\n/**\nLanguage support for HTML, including\n[`htmlCompletion`](https://codemirror.net/6/docs/ref/#lang-html.htmlCompletion) and JavaScript and\nCSS support extensions.\n*/\nfunction html(config = {}) {\n    let lang = htmlLanguage;\n    if (config.matchClosingTags === false)\n        lang = lang.configure({ dialect: \"noMatch\" });\n    return new LanguageSupport(lang, [\n        htmlCompletion,\n        config.autoCloseTags !== false ? autoCloseTags : [],\n        javascript().support,\n        css().support\n    ]);\n}\n/**\nExtension that will automatically insert close tags when a `>` or\n`/` is typed.\n*/\nconst autoCloseTags = /*@__PURE__*/EditorView.inputHandler.of((view, from, to, text) => {\n    if (view.composing || view.state.readOnly || from != to || (text != \">\" && text != \"/\") ||\n        !htmlLanguage.isActiveAt(view.state, from, -1))\n        return false;\n    let { state } = view;\n    let changes = state.changeByRange(range => {\n        var _a, _b, _c;\n        let { head } = range, around = syntaxTree(state).resolveInner(head, -1), name;\n        if (around.name == \"TagName\" || around.name == \"StartTag\")\n            around = around.parent;\n        if (text == \">\" && around.name == \"OpenTag\") {\n            if (((_b = (_a = around.parent) === null || _a === void 0 ? void 0 : _a.lastChild) === null || _b === void 0 ? void 0 : _b.name) != \"CloseTag\" && (name = elementName(state.doc, around.parent, head)))\n                return { range: EditorSelection.cursor(head + 1), changes: { from: head, insert: `></${name}>` } };\n        }\n        else if (text == \"/\" && around.name == \"OpenTag\") {\n            let empty = around.parent, base = empty === null || empty === void 0 ? void 0 : empty.parent;\n            if (empty.from == head - 1 && ((_c = base.lastChild) === null || _c === void 0 ? void 0 : _c.name) != \"CloseTag\" && (name = elementName(state.doc, base, head))) {\n                let insert = `/${name}>`;\n                return { range: EditorSelection.cursor(head + insert.length), changes: { from: head, insert } };\n            }\n        }\n        return { range };\n    });\n    if (changes.changes.empty)\n        return false;\n    view.dispatch(changes, { userEvent: \"input.type\", scrollIntoView: true });\n    return true;\n});\n\nexport { autoCloseTags, html, htmlCompletion, htmlCompletionSource, htmlLanguage };\n","import { LRParser } from '@lezer/lr';\nimport { NodeProp } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst parser = LRParser.deserialize({\n  version: 13,\n  states: \"$bOVQPOOOOQO'#Cb'#CbOnQPO'#CeOvQPO'#CjOOQO'#Cp'#CpQOQPOOOOQO'#Cg'#CgO}QPO'#CfO!SQPO'#CrOOQO,59P,59PO![QPO,59PO!aQPO'#CuOOQO,59U,59UO!iQPO,59UOVQPO,59QOqQPO'#CkO!nQPO,59^OOQO1G.k1G.kOVQPO'#ClO!vQPO,59aOOQO1G.p1G.pOOQO1G.l1G.lOOQO,59V,59VOOQO-E6i-E6iOOQO,59W,59WOOQO-E6j-E6j\",\n  stateData: \"#O~OcOS~OQSORSOSSOTSOWQO]ROePO~OVXOeUO~O[[O~PVOg^O~Oh_OVfX~OVaO~OhbO[iX~O[dO~Oh_OVfa~OhbO[ia~O\",\n  goto: \"!kjPPPPPPkPPkqwPPk{!RPPP!XP!ePP!hXSOR^bQWQRf_TVQ_Q`WRg`QcZRicQTOQZRQe^RhbRYQR]R\",\n  nodeNames: \"⚠ JsonText True False Null Number String } { Object Property PropertyName ] [ Array\",\n  maxTerm: 25,\n  nodeProps: [\n    [NodeProp.openedBy, 7,\"{\",12,\"[\"],\n    [NodeProp.closedBy, 8,\"}\",13,\"]\"]\n  ],\n  skippedNodes: [0],\n  repeatNodeCount: 2,\n  tokenData: \"(p~RaXY!WYZ!W]^!Wpq!Wrs!]|}$i}!O$n!Q!R$w!R![&V![!]&h!}#O&m#P#Q&r#Y#Z&w#b#c'f#h#i'}#o#p(f#q#r(k~!]Oc~~!`Upq!]qr!]rs!rs#O!]#O#P!w#P~!]~!wOe~~!zXrs!]!P!Q!]#O#P!]#U#V!]#Y#Z!]#b#c!]#f#g!]#h#i!]#i#j#g~#jR!Q![#s!c!i#s#T#Z#s~#vR!Q![$P!c!i$P#T#Z$P~$SR!Q![$]!c!i$]#T#Z$]~$`R!Q![!]!c!i!]#T#Z!]~$nOh~~$qQ!Q!R$w!R![&V~$|RT~!O!P%V!g!h%k#X#Y%k~%YP!Q![%]~%bRT~!Q![%]!g!h%k#X#Y%k~%nR{|%w}!O%w!Q![%}~%zP!Q![%}~&SPT~!Q![%}~&[ST~!O!P%V!Q![&V!g!h%k#X#Y%k~&mOg~~&rO]~~&wO[~~&zP#T#U&}~'QP#`#a'T~'WP#g#h'Z~'^P#X#Y'a~'fOR~~'iP#i#j'l~'oP#`#a'r~'uP#`#a'x~'}OS~~(QP#f#g(T~(WP#i#j(Z~(^P#X#Y(a~(fOQ~~(kOW~~(pOV~\",\n  tokenizers: [0],\n  topRules: {\"JsonText\":[0,1]},\n  tokenPrec: 0\n});\n\nexport { parser };\n","import { parser } from '@lezer/json';\nimport { LRLanguage, indentNodeProp, continuedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@codemirror/highlight';\n\n/**\nCalls\n[`JSON.parse`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse)\non the document and, if that throws an error, reports it as a\nsingle diagnostic.\n*/\nconst jsonParseLinter = () => (view) => {\n    try {\n        JSON.parse(view.state.doc.toString());\n    }\n    catch (e) {\n        if (!(e instanceof SyntaxError))\n            throw e;\n        const pos = getErrorPosition(e, view.state.doc);\n        return [{\n                from: pos,\n                message: e.message,\n                severity: 'error',\n                to: pos\n            }];\n    }\n    return [];\n};\nfunction getErrorPosition(error, doc) {\n    let m;\n    if (m = error.message.match(/at position (\\d+)/))\n        return Math.min(+m[1], doc.length);\n    if (m = error.message.match(/at line (\\d+) column (\\d+)/))\n        return Math.min(doc.line(+m[1]).from + (+m[2]) - 1, doc.length);\n    return 0;\n}\n\n/**\nA language provider that provides JSON parsing.\n*/\nconst jsonLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                Object: /*@__PURE__*/continuedIndent({ except: /^\\s*\\}/ }),\n                Array: /*@__PURE__*/continuedIndent({ except: /^\\s*\\]/ })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                \"Object Array\": foldInside\n            }),\n            /*@__PURE__*/styleTags({\n                String: tags.string,\n                Number: tags.number,\n                \"True False\": tags.bool,\n                PropertyName: tags.propertyName,\n                null: tags.null,\n                \",\": tags.separator,\n                \"[ ]\": tags.squareBracket,\n                \"{ }\": tags.brace\n            })\n        ]\n    }),\n    languageData: {\n        closeBrackets: { brackets: [\"[\", \"{\", '\"'] },\n        indentOnInput: /^\\s*[\\}\\]]$/\n    }\n});\n/**\nJSON language support.\n*/\nfunction json() {\n    return new LanguageSupport(jsonLanguage);\n}\n\nexport { json, jsonLanguage, jsonParseLinter };\n","import { EditorView } from '@codemirror/view';\nimport { HighlightStyle, tags } from '@codemirror/highlight';\n\n// Using https://github.com/one-dark/vscode-one-dark-theme/ as reference for the colors\nconst chalky = \"#e5c07b\", coral = \"#e06c75\", cyan = \"#56b6c2\", invalid = \"#ffffff\", ivory = \"#abb2bf\", stone = \"#7d8799\", // Brightened compared to original to increase contrast\nmalibu = \"#61afef\", sage = \"#98c379\", whiskey = \"#d19a66\", violet = \"#c678dd\", darkBackground = \"#21252b\", highlightBackground = \"#2c313a\", background = \"#282c34\", tooltipBackground = \"#353a42\", selection = \"#3E4451\", cursor = \"#528bff\";\n/**\nThe editor theme styles for One Dark.\n*/\nconst oneDarkTheme = /*@__PURE__*/EditorView.theme({\n    \"&\": {\n        color: ivory,\n        backgroundColor: background\n    },\n    \".cm-content\": {\n        caretColor: cursor\n    },\n    \"&.cm-focused .cm-cursor\": { borderLeftColor: cursor },\n    \"&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection\": { backgroundColor: selection },\n    \".cm-panels\": { backgroundColor: darkBackground, color: ivory },\n    \".cm-panels.cm-panels-top\": { borderBottom: \"2px solid black\" },\n    \".cm-panels.cm-panels-bottom\": { borderTop: \"2px solid black\" },\n    \".cm-searchMatch\": {\n        backgroundColor: \"#72a1ff59\",\n        outline: \"1px solid #457dff\"\n    },\n    \".cm-searchMatch.cm-searchMatch-selected\": {\n        backgroundColor: \"#6199ff2f\"\n    },\n    \".cm-activeLine\": { backgroundColor: highlightBackground },\n    \".cm-selectionMatch\": { backgroundColor: \"#aafe661a\" },\n    \"&.cm-focused .cm-matchingBracket, &.cm-focused .cm-nonmatchingBracket\": {\n        backgroundColor: \"#bad0f847\",\n        outline: \"1px solid #515a6b\"\n    },\n    \".cm-gutters\": {\n        backgroundColor: background,\n        color: stone,\n        border: \"none\"\n    },\n    \".cm-activeLineGutter\": {\n        backgroundColor: highlightBackground\n    },\n    \".cm-foldPlaceholder\": {\n        backgroundColor: \"transparent\",\n        border: \"none\",\n        color: \"#ddd\"\n    },\n    \".cm-tooltip\": {\n        border: \"none\",\n        backgroundColor: tooltipBackground\n    },\n    \".cm-tooltip .cm-tooltip-arrow:before\": {\n        borderTopColor: \"transparent\",\n        borderBottomColor: \"transparent\"\n    },\n    \".cm-tooltip .cm-tooltip-arrow:after\": {\n        borderTopColor: tooltipBackground,\n        borderBottomColor: tooltipBackground\n    },\n    \".cm-tooltip-autocomplete\": {\n        \"& > ul > li[aria-selected]\": {\n            backgroundColor: highlightBackground,\n            color: ivory\n        }\n    }\n}, { dark: true });\n/**\nThe highlighting style for code in the One Dark theme.\n*/\nconst oneDarkHighlightStyle = /*@__PURE__*/HighlightStyle.define([\n    { tag: tags.keyword,\n        color: violet },\n    { tag: [tags.name, tags.deleted, tags.character, tags.propertyName, tags.macroName],\n        color: coral },\n    { tag: [/*@__PURE__*/tags.function(tags.variableName), tags.labelName],\n        color: malibu },\n    { tag: [tags.color, /*@__PURE__*/tags.constant(tags.name), /*@__PURE__*/tags.standard(tags.name)],\n        color: whiskey },\n    { tag: [/*@__PURE__*/tags.definition(tags.name), tags.separator],\n        color: ivory },\n    { tag: [tags.typeName, tags.className, tags.number, tags.changed, tags.annotation, tags.modifier, tags.self, tags.namespace],\n        color: chalky },\n    { tag: [tags.operator, tags.operatorKeyword, tags.url, tags.escape, tags.regexp, tags.link, /*@__PURE__*/tags.special(tags.string)],\n        color: cyan },\n    { tag: [tags.meta, tags.comment],\n        color: stone },\n    { tag: tags.strong,\n        fontWeight: \"bold\" },\n    { tag: tags.emphasis,\n        fontStyle: \"italic\" },\n    { tag: tags.strikethrough,\n        textDecoration: \"line-through\" },\n    { tag: tags.link,\n        color: stone,\n        textDecoration: \"underline\" },\n    { tag: tags.heading,\n        fontWeight: \"bold\",\n        color: coral },\n    { tag: [tags.atom, tags.bool, /*@__PURE__*/tags.special(tags.variableName)],\n        color: whiskey },\n    { tag: [tags.processingInstruction, tags.string, tags.inserted],\n        color: sage },\n    { tag: tags.invalid,\n        color: invalid },\n]);\n/**\nExtension to enable the One Dark theme (both the editor theme and\nthe highlight style).\n*/\nconst oneDark = [oneDarkTheme, oneDarkHighlightStyle];\n\nexport { oneDark, oneDarkHighlightStyle, oneDarkTheme };\n","import { EditorState, EditorView, basicSetup } from \"@codemirror/basic-setup\";\r\nimport { html as cmHtml } from \"@codemirror/lang-html\";\r\nimport { json as cmJson } from \"@codemirror/lang-json\";\r\nimport { defaultHighlightStyle } from \"@codemirror/highlight\";\r\nimport { oneDarkTheme, oneDarkHighlightStyle } from \"@codemirror/theme-one-dark\";\r\nimport { HPCCResizeElement, attribute, property, ChangeMap, customElement, display, html, ref } from \"../common\";\r\n\r\nconst template = html<HPCCCodemirrorElement>`\\\r\n<div ${ref(\"_div\")}>\r\n</div>`;\r\n\r\nconst styles = `\\\r\n${display(\"inline-block\")}\r\n\r\n:host {\r\n}\r\n\r\n.cm-editor {\r\n    border: 1px solid #ddd;\r\n}\r\n`;\r\n\r\n@customElement(\"hpcc-codemirror\", { template, styles })\r\nexport class HPCCCodemirrorElement extends HPCCResizeElement {\r\n\r\n    /**  \r\n     * Text to be displayed in the editor\r\n     * \r\n     * @typeParam html - HTML document\r\n     * @typeParam JSON - JSON document\r\n     * \r\n     * @defaultValue html\r\n     */\r\n    @attribute mode: \"html\" | \"json\" = \"html\";\r\n\r\n    /**  \r\n     * Text to be displayed in the editor\r\n     * \r\n     * @typeParam light - Light theme\r\n     * @typeParam dark - Dark theme\r\n     * \r\n     * @defaultValue light\r\n     */\r\n    @attribute theme: \"light\" | \"dark\" = \"light\";\r\n\r\n    /**  \r\n   * Text to be displayed in the editor\r\n   */\r\n    @property text: string = \"\";\r\n    private _text: string;\r\n\r\n    protected _cmLight = [defaultHighlightStyle];\r\n    protected _cmDark = [oneDarkTheme, oneDarkHighlightStyle];\r\n    protected _cmJson = cmJson();\r\n    protected _cmHtml = cmHtml();\r\n\r\n    _div: HTMLDivElement;\r\n    protected _view: EditorView;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    protected extension() {\r\n        const retVal = [basicSetup];\r\n        switch (this.mode) {\r\n            case \"json\":\r\n                retVal.push(this._cmJson);\r\n                break;\r\n            case \"html\":\r\n            default:\r\n                retVal.push(this._cmHtml);\r\n                break;\r\n        }\r\n        switch (this.theme) {\r\n            case \"dark\":\r\n                retVal.push(this._cmDark);\r\n                break;\r\n            case \"light\":\r\n            default:\r\n                retVal.push(this._cmLight);\r\n                break;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    enter() {\r\n        super.enter();\r\n        this._view = new EditorView({\r\n            state: EditorState.create({\r\n                doc: this.text,\r\n                extensions: this.extension()\r\n            }),\r\n            parent: this._div,\r\n            dispatch: (tr) => {\r\n                this._view.update([tr]);\r\n                if (!tr.changes.empty) {\r\n                    this._text = this._view.state.doc.toString();\r\n                    this.$emit(\"change\", this._text);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        this._view.dom.style.height = `${this.clientHeight}px`;\r\n        if (changes.type || changes.theme) {\r\n            this._view.dispatch({\r\n                reconfigure: {\r\n                    full: this.extension(),\r\n                }\r\n            } as any);\r\n        }\r\n        if (changes.text) {\r\n            this._view.dispatch({\r\n                changes: {\r\n                    from: 0,\r\n                    to: this._view.state.doc.length,\r\n                    insert: this.text\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    exit() {\r\n        this._view.destroy();\r\n        super.exit();\r\n    }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * An object which can produce an iterator over its values.\r\n */\r\nexport interface IIterable<T> {\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   *\r\n   * #### Notes\r\n   * Depending on the iterable, the returned iterator may or may not be\r\n   * a new object. A collection or other container-like object should\r\n   * typically return a new iterator, while an iterator itself should\r\n   * normally return `this`.\r\n   */\r\n  iter(): IIterator<T>;\r\n}\r\n\r\n/**\r\n * An object which traverses a collection of values.\r\n *\r\n * #### Notes\r\n * An `IIterator` is itself an `IIterable`. Most implementations of\r\n * `IIterator` should simply return `this` from the `iter()` method.\r\n */\r\nexport interface IIterator<T> extends IIterable<T> {\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   *\r\n   * #### Notes\r\n   * The cloned iterator can be consumed independently of the current\r\n   * iterator. In essence, it is a copy of the iterator value stream\r\n   * which starts at the current location.\r\n   *\r\n   * This can be useful for lookahead and stream duplication.\r\n   */\r\n  clone(): IIterator<T>;\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   *\r\n   * #### Notes\r\n   * The `undefined` value is used to signal the end of iteration and\r\n   * should therefore not be used as a value in a collection.\r\n   *\r\n   * The use of the `undefined` sentinel is an explicit design choice\r\n   * which favors performance over purity. The ES6 iterator design of\r\n   * returning a `{ value, done }` pair is suboptimal, as it requires\r\n   * an object allocation on each iteration; and an `isDone()` method\r\n   * would increase implementation and runtime complexity.\r\n   */\r\n  next(): T | undefined;\r\n}\r\n\r\n/**\r\n * A type alias for an iterable or builtin array-like object.\r\n */\r\nexport type IterableOrArrayLike<T> = IIterable<T> | ArrayLike<T>;\r\n\r\n/**\r\n * Create an iterator for an iterable object.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @returns A new iterator for the given object.\r\n *\r\n * #### Notes\r\n * This function allows iteration algorithms to operate on user-defined\r\n * iterable types and builtin array-like objects in a uniform fashion.\r\n */\r\nexport function iter<T>(object: IterableOrArrayLike<T>): IIterator<T> {\r\n  let it: IIterator<T>;\r\n  if (typeof (object as any).iter === 'function') {\r\n    it = (object as IIterable<T>).iter();\r\n  } else {\r\n    it = new ArrayIterator<T>(object as ArrayLike<T>);\r\n  }\r\n  return it;\r\n}\r\n\r\n/**\r\n * Create an iterator for the keys in an object.\r\n *\r\n * @param object - The object of interest.\r\n *\r\n * @returns A new iterator for the keys in the given object.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { each, keys } from '@lumino/algorithm';\r\n *\r\n * let data = { one: 1, two: 2, three: 3 };\r\n *\r\n * each(keys(data), key => { console.log(key); }); // 'one', 'two', 'three'\r\n * ```\r\n */\r\nexport function iterKeys<T>(object: {\r\n  readonly [key: string]: T;\r\n}): IIterator<string> {\r\n  return new KeyIterator(object);\r\n}\r\n\r\n/**\r\n * Create an iterator for the values in an object.\r\n *\r\n * @param object - The object of interest.\r\n *\r\n * @returns A new iterator for the values in the given object.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { each, values } from '@lumino/algorithm';\r\n *\r\n * let data = { one: 1, two: 2, three: 3 };\r\n *\r\n * each(values(data), value => { console.log(value); }); // 1, 2, 3\r\n * ```\r\n */\r\nexport function iterValues<T>(object: {\r\n  readonly [key: string]: T;\r\n}): IIterator<T> {\r\n  return new ValueIterator<T>(object);\r\n}\r\n\r\n/**\r\n * Create an iterator for the items in an object.\r\n *\r\n * @param object - The object of interest.\r\n *\r\n * @returns A new iterator for the items in the given object.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { each, items } from '@lumino/algorithm';\r\n *\r\n * let data = { one: 1, two: 2, three: 3 };\r\n *\r\n * each(items(data), value => { console.log(value); }); // ['one', 1], ['two', 2], ['three', 3]\r\n * ```\r\n */\r\nexport function iterItems<T>(object: {\r\n  readonly [key: string]: T;\r\n}): IIterator<[string, T]> {\r\n  return new ItemIterator<T>(object);\r\n}\r\n\r\n/**\r\n * Create an iterator for an iterator-like function.\r\n *\r\n * @param fn - A function which behaves like an iterator `next` method.\r\n *\r\n * @returns A new iterator for the given function.\r\n *\r\n * #### Notes\r\n * The returned iterator **cannot** be cloned.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { each, iterFn } from '@lumino/algorithm';\r\n *\r\n * let it = iterFn((() => {\r\n *   let i = 0;\r\n *   return () => i > 3 ? undefined : i++;\r\n * })());\r\n *\r\n * each(it, v => { console.log(v); }); // 0, 1, 2, 3\r\n * ```\r\n */\r\nexport function iterFn<T>(fn: () => T | undefined): IIterator<T> {\r\n  return new FnIterator<T>(fn);\r\n}\r\n\r\n/**\r\n * Invoke a function for each value in an iterable.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @param fn - The callback function to invoke for each value.\r\n *\r\n * #### Notes\r\n * Iteration can be terminated early by returning `false` from the\r\n * callback function.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { each } from '@lumino/algorithm';\r\n *\r\n * let data = [5, 7, 0, -2, 9];\r\n *\r\n * each(data, value => { console.log(value); });\r\n * ```\r\n */\r\nexport function each<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (value: T, index: number) => boolean | void\r\n): void {\r\n  let index = 0;\r\n  let it = iter(object);\r\n  let value: T | undefined;\r\n  while ((value = it.next()) !== undefined) {\r\n    if (fn(value, index++) === false) {\r\n      return;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Test whether all values in an iterable satisfy a predicate.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @param fn - The predicate function to invoke for each value.\r\n *\r\n * @returns `true` if all values pass the test, `false` otherwise.\r\n *\r\n * #### Notes\r\n * Iteration terminates on the first `false` predicate result.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { every } from '@lumino/algorithm';\r\n *\r\n * let data = [5, 7, 1];\r\n *\r\n * every(data, value => value % 2 === 0);  // false\r\n * every(data, value => value % 2 === 1);  // true\r\n * ```\r\n */\r\nexport function every<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (value: T, index: number) => boolean\r\n): boolean {\r\n  let index = 0;\r\n  let it = iter(object);\r\n  let value: T | undefined;\r\n  while ((value = it.next()) !== undefined) {\r\n    if (!fn(value, index++)) {\r\n      return false;\r\n    }\r\n  }\r\n  return true;\r\n}\r\n\r\n/**\r\n * Test whether any value in an iterable satisfies a predicate.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @param fn - The predicate function to invoke for each value.\r\n *\r\n * @returns `true` if any value passes the test, `false` otherwise.\r\n *\r\n * #### Notes\r\n * Iteration terminates on the first `true` predicate result.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { some } from '@lumino/algorithm';\r\n *\r\n * let data = [5, 7, 1];\r\n *\r\n * some(data, value => value === 7);  // true\r\n * some(data, value => value === 3);  // false\r\n * ```\r\n */\r\nexport function some<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (value: T, index: number) => boolean\r\n): boolean {\r\n  let index = 0;\r\n  let it = iter(object);\r\n  let value: T | undefined;\r\n  while ((value = it.next()) !== undefined) {\r\n    if (fn(value, index++)) {\r\n      return true;\r\n    }\r\n  }\r\n  return false;\r\n}\r\n\r\n/**\r\n * Create an array from an iterable of values.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @returns A new array of values from the given object.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { iter, toArray } from '@lumino/algorithm';\r\n *\r\n * let data = [1, 2, 3, 4, 5, 6];\r\n *\r\n * let stream = iter(data);\r\n *\r\n * toArray(stream);  // [1, 2, 3, 4, 5, 6];\r\n * ```\r\n */\r\nexport function toArray<T>(object: IterableOrArrayLike<T>): T[] {\r\n  let index = 0;\r\n  let result: T[] = [];\r\n  let it = iter(object);\r\n  let value: T | undefined;\r\n  while ((value = it.next()) !== undefined) {\r\n    result[index++] = value;\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Create an object from an iterable of key/value pairs.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @returns A new object mapping keys to values.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { toObject } from '@lumino/algorithm';\r\n *\r\n * let data = [['one', 1], ['two', 2], ['three', 3]];\r\n *\r\n * toObject(data);  // { one: 1, two: 2, three: 3 }\r\n * ```\r\n */\r\nexport function toObject<T>(\r\n  object: IterableOrArrayLike<[string, T]>\r\n): { [key: string]: T } {\r\n  let it = iter(object);\r\n  let pair: [string, T] | undefined;\r\n  let result: { [key: string]: T } = {};\r\n  while ((pair = it.next()) !== undefined) {\r\n    result[pair[0]] = pair[1];\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * An iterator for an array-like object.\r\n *\r\n * #### Notes\r\n * This iterator can be used for any builtin JS array-like object.\r\n */\r\nexport class ArrayIterator<T> implements IIterator<T> {\r\n  /**\r\n   * Construct a new array iterator.\r\n   *\r\n   * @param source - The array-like object of interest.\r\n   */\r\n  constructor(source: ArrayLike<T>) {\r\n    this._source = source;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<T> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<T> {\r\n    let result = new ArrayIterator<T>(this._source);\r\n    result._index = this._index;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): T | undefined {\r\n    if (this._index >= this._source.length) {\r\n      return undefined;\r\n    }\r\n    return this._source[this._index++];\r\n  }\r\n\r\n  private _index = 0;\r\n  private _source: ArrayLike<T>;\r\n}\r\n\r\n/**\r\n * An iterator for the keys in an object.\r\n *\r\n * #### Notes\r\n * This iterator can be used for any JS object.\r\n */\r\nexport class KeyIterator implements IIterator<string> {\r\n  /**\r\n   * Construct a new key iterator.\r\n   *\r\n   * @param source - The object of interest.\r\n   *\r\n   * @param keys - The keys to iterate, if known.\r\n   */\r\n  constructor(\r\n    source: { readonly [key: string]: any },\r\n    keys = Object.keys(source)\r\n  ) {\r\n    this._source = source;\r\n    this._keys = keys;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<string> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<string> {\r\n    let result = new KeyIterator(this._source, this._keys);\r\n    result._index = this._index;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): string | undefined {\r\n    if (this._index >= this._keys.length) {\r\n      return undefined;\r\n    }\r\n    let key = this._keys[this._index++];\r\n    if (key in this._source) {\r\n      return key;\r\n    }\r\n    return this.next();\r\n  }\r\n\r\n  private _index = 0;\r\n  private _keys: string[];\r\n  private _source: { readonly [key: string]: any };\r\n}\r\n\r\n/**\r\n * An iterator for the values in an object.\r\n *\r\n * #### Notes\r\n * This iterator can be used for any JS object.\r\n */\r\nexport class ValueIterator<T> implements IIterator<T> {\r\n  /**\r\n   * Construct a new value iterator.\r\n   *\r\n   * @param source - The object of interest.\r\n   *\r\n   * @param keys - The keys to iterate, if known.\r\n   */\r\n  constructor(\r\n    source: { readonly [key: string]: T },\r\n    keys = Object.keys(source)\r\n  ) {\r\n    this._source = source;\r\n    this._keys = keys;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<T> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<T> {\r\n    let result = new ValueIterator<T>(this._source, this._keys);\r\n    result._index = this._index;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): T | undefined {\r\n    if (this._index >= this._keys.length) {\r\n      return undefined;\r\n    }\r\n    let key = this._keys[this._index++];\r\n    if (key in this._source) {\r\n      return this._source[key];\r\n    }\r\n    return this.next();\r\n  }\r\n\r\n  private _index = 0;\r\n  private _keys: string[];\r\n  private _source: { readonly [key: string]: T };\r\n}\r\n\r\n/**\r\n * An iterator for the items in an object.\r\n *\r\n * #### Notes\r\n * This iterator can be used for any JS object.\r\n */\r\nexport class ItemIterator<T> implements IIterator<[string, T]> {\r\n  /**\r\n   * Construct a new item iterator.\r\n   *\r\n   * @param source - The object of interest.\r\n   *\r\n   * @param keys - The keys to iterate, if known.\r\n   */\r\n  constructor(\r\n    source: { readonly [key: string]: T },\r\n    keys = Object.keys(source)\r\n  ) {\r\n    this._source = source;\r\n    this._keys = keys;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<[string, T]> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<[string, T]> {\r\n    let result = new ItemIterator<T>(this._source, this._keys);\r\n    result._index = this._index;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): [string, T] | undefined {\r\n    if (this._index >= this._keys.length) {\r\n      return undefined;\r\n    }\r\n    let key = this._keys[this._index++];\r\n    if (key in this._source) {\r\n      return [key, this._source[key]];\r\n    }\r\n    return this.next();\r\n  }\r\n\r\n  private _index = 0;\r\n  private _keys: string[];\r\n  private _source: { readonly [key: string]: T };\r\n}\r\n\r\n/**\r\n * An iterator for an iterator-like function.\r\n */\r\nexport class FnIterator<T> implements IIterator<T> {\r\n  /**\r\n   * Construct a new function iterator.\r\n   *\r\n   * @param fn - The iterator-like function of interest.\r\n   */\r\n  constructor(fn: () => T | undefined) {\r\n    this._fn = fn;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<T> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<T> {\r\n    throw new Error('An `FnIterator` cannot be cloned.');\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): T | undefined {\r\n    return this._fn.call(undefined);\r\n  }\r\n\r\n  private _fn: () => T | undefined;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * The namespace for array-specific algorithms.\r\n */\r\nexport namespace ArrayExt {\r\n  /**\r\n   * Find the index of the first occurrence of a value in an array.\r\n   *\r\n   * @param array - The array-like object to search.\r\n   *\r\n   * @param value - The value to locate in the array. Values are\r\n   *   compared using strict `===` equality.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The index of the first occurrence of the value, or `-1`\r\n   *   if the value is not found.\r\n   *\r\n   * #### Notes\r\n   * If `stop < start` the search will wrap at the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = ['one', 'two', 'three', 'four', 'one'];\r\n   * ArrayExt.firstIndexOf(data, 'red');        // -1\r\n   * ArrayExt.firstIndexOf(data, 'one');        // 0\r\n   * ArrayExt.firstIndexOf(data, 'one', 1);     // 4\r\n   * ArrayExt.firstIndexOf(data, 'two', 2);     // -1\r\n   * ArrayExt.firstIndexOf(data, 'two', 2, 1);  // 1\r\n   * ```\r\n   */\r\n  export function firstIndexOf<T>(\r\n    array: ArrayLike<T>,\r\n    value: T,\r\n    start = 0,\r\n    stop = -1\r\n  ): number {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return -1;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let span: number;\r\n    if (stop < start) {\r\n      span = stop + 1 + (n - start);\r\n    } else {\r\n      span = stop - start + 1;\r\n    }\r\n    for (let i = 0; i < span; ++i) {\r\n      let j = (start + i) % n;\r\n      if (array[j] === value) {\r\n        return j;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Find the index of the last occurrence of a value in an array.\r\n   *\r\n   * @param array - The array-like object to search.\r\n   *\r\n   * @param value - The value to locate in the array. Values are\r\n   *   compared using strict `===` equality.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The index of the last occurrence of the value, or `-1`\r\n   *   if the value is not found.\r\n   *\r\n   * #### Notes\r\n   * If `start < stop` the search will wrap at the front of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = ['one', 'two', 'three', 'four', 'one'];\r\n   * ArrayExt.lastIndexOf(data, 'red');        // -1\r\n   * ArrayExt.lastIndexOf(data, 'one');        // 4\r\n   * ArrayExt.lastIndexOf(data, 'one', 1);     // 0\r\n   * ArrayExt.lastIndexOf(data, 'two', 0);     // -1\r\n   * ArrayExt.lastIndexOf(data, 'two', 0, 1);  // 1\r\n   * ```\r\n   */\r\n  export function lastIndexOf<T>(\r\n    array: ArrayLike<T>,\r\n    value: T,\r\n    start = -1,\r\n    stop = 0\r\n  ): number {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return -1;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let span: number;\r\n    if (start < stop) {\r\n      span = start + 1 + (n - stop);\r\n    } else {\r\n      span = start - stop + 1;\r\n    }\r\n    for (let i = 0; i < span; ++i) {\r\n      let j = (start - i + n) % n;\r\n      if (array[j] === value) {\r\n        return j;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Find the index of the first value which matches a predicate.\r\n   *\r\n   * @param array - The array-like object to search.\r\n   *\r\n   * @param fn - The predicate function to apply to the values.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The index of the first matching value, or `-1` if no\r\n   *   matching value is found.\r\n   *\r\n   * #### Notes\r\n   * If `stop < start` the search will wrap at the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * Modifying the length of the array while searching.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function isEven(value: number): boolean {\r\n   *   return value % 2 === 0;\r\n   * }\r\n   *\r\n   * let data = [1, 2, 3, 4, 3, 2, 1];\r\n   * ArrayExt.findFirstIndex(data, isEven);       // 1\r\n   * ArrayExt.findFirstIndex(data, isEven, 4);    // 5\r\n   * ArrayExt.findFirstIndex(data, isEven, 6);    // -1\r\n   * ArrayExt.findFirstIndex(data, isEven, 6, 5); // 1\r\n   * ```\r\n   */\r\n  export function findFirstIndex<T>(\r\n    array: ArrayLike<T>,\r\n    fn: (value: T, index: number) => boolean,\r\n    start = 0,\r\n    stop = -1\r\n  ): number {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return -1;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let span: number;\r\n    if (stop < start) {\r\n      span = stop + 1 + (n - start);\r\n    } else {\r\n      span = stop - start + 1;\r\n    }\r\n    for (let i = 0; i < span; ++i) {\r\n      let j = (start + i) % n;\r\n      if (fn(array[j], j)) {\r\n        return j;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Find the index of the last value which matches a predicate.\r\n   *\r\n   * @param object - The array-like object to search.\r\n   *\r\n   * @param fn - The predicate function to apply to the values.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The index of the last matching value, or `-1` if no\r\n   *   matching value is found.\r\n   *\r\n   * #### Notes\r\n   * If `start < stop` the search will wrap at the front of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * Modifying the length of the array while searching.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function isEven(value: number): boolean {\r\n   *   return value % 2 === 0;\r\n   * }\r\n   *\r\n   * let data = [1, 2, 3, 4, 3, 2, 1];\r\n   * ArrayExt.findLastIndex(data, isEven);        // 5\r\n   * ArrayExt.findLastIndex(data, isEven, 4);     // 3\r\n   * ArrayExt.findLastIndex(data, isEven, 0);     // -1\r\n   * ArrayExt.findLastIndex(data, isEven, 0, 1);  // 5\r\n   * ```\r\n   */\r\n  export function findLastIndex<T>(\r\n    array: ArrayLike<T>,\r\n    fn: (value: T, index: number) => boolean,\r\n    start = -1,\r\n    stop = 0\r\n  ): number {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return -1;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let d: number;\r\n    if (start < stop) {\r\n      d = start + 1 + (n - stop);\r\n    } else {\r\n      d = start - stop + 1;\r\n    }\r\n    for (let i = 0; i < d; ++i) {\r\n      let j = (start - i + n) % n;\r\n      if (fn(array[j], j)) {\r\n        return j;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Find the first value which matches a predicate.\r\n   *\r\n   * @param array - The array-like object to search.\r\n   *\r\n   * @param fn - The predicate function to apply to the values.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The first matching value, or `undefined` if no matching\r\n   *   value is found.\r\n   *\r\n   * #### Notes\r\n   * If `stop < start` the search will wrap at the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * Modifying the length of the array while searching.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function isEven(value: number): boolean {\r\n   *   return value % 2 === 0;\r\n   * }\r\n   *\r\n   * let data = [1, 2, 3, 4, 3, 2, 1];\r\n   * ArrayExt.findFirstValue(data, isEven);       // 2\r\n   * ArrayExt.findFirstValue(data, isEven, 2);    // 4\r\n   * ArrayExt.findFirstValue(data, isEven, 6);    // undefined\r\n   * ArrayExt.findFirstValue(data, isEven, 6, 5); // 2\r\n   * ```\r\n   */\r\n  export function findFirstValue<T>(\r\n    array: ArrayLike<T>,\r\n    fn: (value: T, index: number) => boolean,\r\n    start = 0,\r\n    stop = -1\r\n  ): T | undefined {\r\n    let index = findFirstIndex(array, fn, start, stop);\r\n    return index !== -1 ? array[index] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Find the last value which matches a predicate.\r\n   *\r\n   * @param object - The array-like object to search.\r\n   *\r\n   * @param fn - The predicate function to apply to the values.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The last matching value, or `undefined` if no matching\r\n   *   value is found.\r\n   *\r\n   * #### Notes\r\n   * If `start < stop` the search will wrap at the front of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * Modifying the length of the array while searching.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function isEven(value: number): boolean {\r\n   *   return value % 2 === 0;\r\n   * }\r\n   *\r\n   * let data = [1, 2, 3, 4, 3, 2, 1];\r\n   * ArrayExt.findLastValue(data, isEven);        // 2\r\n   * ArrayExt.findLastValue(data, isEven, 4);     // 4\r\n   * ArrayExt.findLastValue(data, isEven, 0);     // undefined\r\n   * ArrayExt.findLastValue(data, isEven, 0, 1);  // 2\r\n   * ```\r\n   */\r\n  export function findLastValue<T>(\r\n    array: ArrayLike<T>,\r\n    fn: (value: T, index: number) => boolean,\r\n    start = -1,\r\n    stop = 0\r\n  ): T | undefined {\r\n    let index = findLastIndex(array, fn, start, stop);\r\n    return index !== -1 ? array[index] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Find the index of the first element which compares `>=` to a value.\r\n   *\r\n   * @param array - The sorted array-like object to search.\r\n   *\r\n   * @param value - The value to locate in the array.\r\n   *\r\n   * @param fn - The 3-way comparison function to apply to the values.\r\n   *   It should return `< 0` if an element is less than a value, `0` if\r\n   *   an element is equal to a value, or `> 0` if an element is greater\r\n   *   than a value.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The index of the first element which compares `>=` to the\r\n   *   value, or `length` if there is no such element. If the computed\r\n   *   index for `stop` is less than `start`, then the computed index\r\n   *   for `start` is returned.\r\n   *\r\n   * #### Notes\r\n   * The array must already be sorted in ascending order according to\r\n   * the comparison function.\r\n   *\r\n   * #### Complexity\r\n   * Logarithmic.\r\n   *\r\n   * #### Undefined Behavior\r\n   * Searching a range which is not sorted in ascending order.\r\n   *\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * Modifying the length of the array while searching.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function numberCmp(a: number, b: number): number {\r\n   *   return a - b;\r\n   * }\r\n   *\r\n   * let data = [0, 3, 4, 7, 7, 9];\r\n   * ArrayExt.lowerBound(data, 0, numberCmp);   // 0\r\n   * ArrayExt.lowerBound(data, 6, numberCmp);   // 3\r\n   * ArrayExt.lowerBound(data, 7, numberCmp);   // 3\r\n   * ArrayExt.lowerBound(data, -1, numberCmp);  // 0\r\n   * ArrayExt.lowerBound(data, 10, numberCmp);  // 6\r\n   * ```\r\n   */\r\n  export function lowerBound<T, U>(\r\n    array: ArrayLike<T>,\r\n    value: U,\r\n    fn: (element: T, value: U) => number,\r\n    start = 0,\r\n    stop = -1\r\n  ): number {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return 0;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let begin = start;\r\n    let span = stop - start + 1;\r\n    while (span > 0) {\r\n      let half = span >> 1;\r\n      let middle = begin + half;\r\n      if (fn(array[middle], value) < 0) {\r\n        begin = middle + 1;\r\n        span -= half + 1;\r\n      } else {\r\n        span = half;\r\n      }\r\n    }\r\n    return begin;\r\n  }\r\n\r\n  /**\r\n   * Find the index of the first element which compares `>` than a value.\r\n   *\r\n   * @param array - The sorted array-like object to search.\r\n   *\r\n   * @param value - The value to locate in the array.\r\n   *\r\n   * @param fn - The 3-way comparison function to apply to the values.\r\n   *   It should return `< 0` if an element is less than a value, `0` if\r\n   *   an element is equal to a value, or `> 0` if an element is greater\r\n   *   than a value.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The index of the first element which compares `>` than the\r\n   *   value, or `length` if there is no such element. If the computed\r\n   *   index for `stop` is less than `start`, then the computed index\r\n   *   for `start` is returned.\r\n   *\r\n   * #### Notes\r\n   * The array must already be sorted in ascending order according to\r\n   * the comparison function.\r\n   *\r\n   * #### Complexity\r\n   * Logarithmic.\r\n   *\r\n   * #### Undefined Behavior\r\n   * Searching a range which is not sorted in ascending order.\r\n   *\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * Modifying the length of the array while searching.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function numberCmp(a: number, b: number): number {\r\n   *   return a - b;\r\n   * }\r\n   *\r\n   * let data = [0, 3, 4, 7, 7, 9];\r\n   * ArrayExt.upperBound(data, 0, numberCmp);   // 1\r\n   * ArrayExt.upperBound(data, 6, numberCmp);   // 3\r\n   * ArrayExt.upperBound(data, 7, numberCmp);   // 5\r\n   * ArrayExt.upperBound(data, -1, numberCmp);  // 0\r\n   * ArrayExt.upperBound(data, 10, numberCmp);  // 6\r\n   * ```\r\n   */\r\n  export function upperBound<T, U>(\r\n    array: ArrayLike<T>,\r\n    value: U,\r\n    fn: (element: T, value: U) => number,\r\n    start = 0,\r\n    stop = -1\r\n  ): number {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return 0;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let begin = start;\r\n    let span = stop - start + 1;\r\n    while (span > 0) {\r\n      let half = span >> 1;\r\n      let middle = begin + half;\r\n      if (fn(array[middle], value) > 0) {\r\n        span = half;\r\n      } else {\r\n        begin = middle + 1;\r\n        span -= half + 1;\r\n      }\r\n    }\r\n    return begin;\r\n  }\r\n\r\n  /**\r\n   * Test whether two arrays are shallowly equal.\r\n   *\r\n   * @param a - The first array-like object to compare.\r\n   *\r\n   * @param b - The second array-like object to compare.\r\n   *\r\n   * @param fn - The comparison function to apply to the elements. It\r\n   *   should return `true` if the elements are \"equal\". The default\r\n   *   compares elements using strict `===` equality.\r\n   *\r\n   * @returns Whether the two arrays are shallowly equal.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * Modifying the length of the arrays while comparing.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let d1 = [0, 3, 4, 7, 7, 9];\r\n   * let d2 = [0, 3, 4, 7, 7, 9];\r\n   * let d3 = [42];\r\n   * ArrayExt.shallowEqual(d1, d2);  // true\r\n   * ArrayExt.shallowEqual(d2, d3);  // false\r\n   * ```\r\n   */\r\n  export function shallowEqual<T>(\r\n    a: ArrayLike<T>,\r\n    b: ArrayLike<T>,\r\n    fn?: (a: T, b: T) => boolean\r\n  ): boolean {\r\n    // Check for object identity first.\r\n    if (a === b) {\r\n      return true;\r\n    }\r\n\r\n    // Bail early if the lengths are different.\r\n    if (a.length !== b.length) {\r\n      return false;\r\n    }\r\n\r\n    // Compare each element for equality.\r\n    for (let i = 0, n = a.length; i < n; ++i) {\r\n      if (fn ? !fn(a[i], b[i]) : a[i] !== b[i]) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // The array are shallowly equal.\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Create a slice of an array subject to an optional step.\r\n   *\r\n   * @param array - The array-like object of interest.\r\n   *\r\n   * @param options - The options for configuring the slice.\r\n   *\r\n   * @returns A new array with the specified values.\r\n   *\r\n   * @throws An exception if the slice `step` is `0`.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start`, `stop`, or `step` which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = [0, 3, 4, 7, 7, 9];\r\n   * ArrayExt.slice(data);                         // [0, 3, 4, 7, 7, 9]\r\n   * ArrayExt.slice(data, { start: 2 });           // [4, 7, 7, 9]\r\n   * ArrayExt.slice(data, { start: 0, stop: 4 });  // [0, 3, 4, 7]\r\n   * ArrayExt.slice(data, { step: 2 });            // [0, 4, 7]\r\n   * ArrayExt.slice(data, { step: -1 });           // [9, 7, 7, 4, 3, 0]\r\n   * ```\r\n   */\r\n  export function slice<T>(\r\n    array: ArrayLike<T>,\r\n    options: slice.IOptions = {}\r\n  ): T[] {\r\n    // Extract the options.\r\n    let { start, stop, step } = options;\r\n\r\n    // Set up the `step` value.\r\n    if (step === undefined) {\r\n      step = 1;\r\n    }\r\n\r\n    // Validate the step size.\r\n    if (step === 0) {\r\n      throw new Error('Slice `step` cannot be zero.');\r\n    }\r\n\r\n    // Look up the length of the array.\r\n    let n = array.length;\r\n\r\n    // Set up the `start` value.\r\n    if (start === undefined) {\r\n      start = step < 0 ? n - 1 : 0;\r\n    } else if (start < 0) {\r\n      start = Math.max(start + n, step < 0 ? -1 : 0);\r\n    } else if (start >= n) {\r\n      start = step < 0 ? n - 1 : n;\r\n    }\r\n\r\n    // Set up the `stop` value.\r\n    if (stop === undefined) {\r\n      stop = step < 0 ? -1 : n;\r\n    } else if (stop < 0) {\r\n      stop = Math.max(stop + n, step < 0 ? -1 : 0);\r\n    } else if (stop >= n) {\r\n      stop = step < 0 ? n - 1 : n;\r\n    }\r\n\r\n    // Compute the slice length.\r\n    let length;\r\n    if ((step < 0 && stop >= start) || (step > 0 && start >= stop)) {\r\n      length = 0;\r\n    } else if (step < 0) {\r\n      length = Math.floor((stop - start + 1) / step + 1);\r\n    } else {\r\n      length = Math.floor((stop - start - 1) / step + 1);\r\n    }\r\n\r\n    // Compute the sliced result.\r\n    let result: T[] = [];\r\n    for (let i = 0; i < length; ++i) {\r\n      result[i] = array[start + i * step];\r\n    }\r\n\r\n    // Return the result.\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `slice` function statics.\r\n   */\r\n  export namespace slice {\r\n    /**\r\n     * The options for the `slice` function.\r\n     */\r\n    export interface IOptions {\r\n      /**\r\n       * The starting index of the slice, inclusive.\r\n       *\r\n       * Negative values are taken as an offset from the end\r\n       * of the array.\r\n       *\r\n       * The default is `0` if `step > 0` else `n - 1`.\r\n       */\r\n      start?: number;\r\n\r\n      /**\r\n       * The stopping index of the slice, exclusive.\r\n       *\r\n       * Negative values are taken as an offset from the end\r\n       * of the array.\r\n       *\r\n       * The default is `n` if `step > 0` else `-n - 1`.\r\n       */\r\n      stop?: number;\r\n\r\n      /**\r\n       * The step value for the slice.\r\n       *\r\n       * This must not be `0`.\r\n       *\r\n       * The default is `1`.\r\n       */\r\n      step?: number;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * An array-like object which supports item assignment.\r\n   */\r\n  export type MutableArrayLike<T> = {\r\n    readonly length: number;\r\n    [index: number]: T;\r\n  };\r\n\r\n  /**\r\n   * Move an element in an array from one index to another.\r\n   *\r\n   * @param array - The mutable array-like object of interest.\r\n   *\r\n   * @param fromIndex - The index of the element to move. Negative\r\n   *   values are taken as an offset from the end of the array.\r\n   *\r\n   * @param toIndex - The target index of the element. Negative\r\n   *   values are taken as an offset from the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `fromIndex` or `toIndex` which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from from '@lumino/algorithm';\r\n   *\r\n   * let data = [0, 1, 2, 3, 4];\r\n   * ArrayExt.move(data, 1, 2);  // [0, 2, 1, 3, 4]\r\n   * ArrayExt.move(data, 4, 2);  // [0, 2, 4, 1, 3]\r\n   * ```\r\n   */\r\n  export function move<T>(\r\n    array: MutableArrayLike<T>,\r\n    fromIndex: number,\r\n    toIndex: number\r\n  ): void {\r\n    let n = array.length;\r\n    if (n <= 1) {\r\n      return;\r\n    }\r\n    if (fromIndex < 0) {\r\n      fromIndex = Math.max(0, fromIndex + n);\r\n    } else {\r\n      fromIndex = Math.min(fromIndex, n - 1);\r\n    }\r\n    if (toIndex < 0) {\r\n      toIndex = Math.max(0, toIndex + n);\r\n    } else {\r\n      toIndex = Math.min(toIndex, n - 1);\r\n    }\r\n    if (fromIndex === toIndex) {\r\n      return;\r\n    }\r\n    let value = array[fromIndex];\r\n    let d = fromIndex < toIndex ? 1 : -1;\r\n    for (let i = fromIndex; i !== toIndex; i += d) {\r\n      array[i] = array[i + d];\r\n    }\r\n    array[toIndex] = value;\r\n  }\r\n\r\n  /**\r\n   * Reverse an array in-place.\r\n   *\r\n   * @param array - The mutable array-like object of interest.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   reversed, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   reversed, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start` or  `stop` index which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = [0, 1, 2, 3, 4];\r\n   * ArrayExt.reverse(data, 1, 3);  // [0, 3, 2, 1, 4]\r\n   * ArrayExt.reverse(data, 3);     // [0, 3, 2, 4, 1]\r\n   * ArrayExt.reverse(data);        // [1, 4, 2, 3, 0]\r\n   * ```\r\n   */\r\n  export function reverse<T>(\r\n    array: MutableArrayLike<T>,\r\n    start = 0,\r\n    stop = -1\r\n  ): void {\r\n    let n = array.length;\r\n    if (n <= 1) {\r\n      return;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    while (start < stop) {\r\n      let a = array[start];\r\n      let b = array[stop];\r\n      array[start++] = b;\r\n      array[stop--] = a;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Rotate the elements of an array in-place.\r\n   *\r\n   * @param array - The mutable array-like object of interest.\r\n   *\r\n   * @param delta - The amount of rotation to apply to the elements. A\r\n   *   positive value will rotate the elements to the left. A negative\r\n   *   value will rotate the elements to the right.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   rotated, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   rotated, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `delta`, `start`, or `stop` which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = [0, 1, 2, 3, 4];\r\n   * ArrayExt.rotate(data, 2);        // [2, 3, 4, 0, 1]\r\n   * ArrayExt.rotate(data, -2);       // [0, 1, 2, 3, 4]\r\n   * ArrayExt.rotate(data, 10);       // [0, 1, 2, 3, 4]\r\n   * ArrayExt.rotate(data, 9);        // [4, 0, 1, 2, 3]\r\n   * ArrayExt.rotate(data, 2, 1, 3);  // [4, 2, 0, 1, 3]\r\n   * ```\r\n   */\r\n  export function rotate<T>(\r\n    array: MutableArrayLike<T>,\r\n    delta: number,\r\n    start = 0,\r\n    stop = -1\r\n  ): void {\r\n    let n = array.length;\r\n    if (n <= 1) {\r\n      return;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    if (start >= stop) {\r\n      return;\r\n    }\r\n    let length = stop - start + 1;\r\n    if (delta > 0) {\r\n      delta = delta % length;\r\n    } else if (delta < 0) {\r\n      delta = ((delta % length) + length) % length;\r\n    }\r\n    if (delta === 0) {\r\n      return;\r\n    }\r\n    let pivot = start + delta;\r\n    reverse(array, start, pivot - 1);\r\n    reverse(array, pivot, stop);\r\n    reverse(array, start, stop);\r\n  }\r\n\r\n  /**\r\n   * Fill an array with a static value.\r\n   *\r\n   * @param array - The mutable array-like object to fill.\r\n   *\r\n   * @param value - The static value to use to fill the array.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   filled, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   filled, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * #### Notes\r\n   * If `stop < start` the fill will wrap at the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * A `start` or `stop` which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = ['one', 'two', 'three', 'four'];\r\n   * ArrayExt.fill(data, 'r');        // ['r', 'r', 'r', 'r']\r\n   * ArrayExt.fill(data, 'g', 1);     // ['r', 'g', 'g', 'g']\r\n   * ArrayExt.fill(data, 'b', 2, 3);  // ['r', 'g', 'b', 'b']\r\n   * ArrayExt.fill(data, 'z', 3, 1);  // ['z', 'z', 'b', 'z']\r\n   * ```\r\n   */\r\n  export function fill<T>(\r\n    array: MutableArrayLike<T>,\r\n    value: T,\r\n    start = 0,\r\n    stop = -1\r\n  ): void {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let span: number;\r\n    if (stop < start) {\r\n      span = stop + 1 + (n - start);\r\n    } else {\r\n      span = stop - start + 1;\r\n    }\r\n    for (let i = 0; i < span; ++i) {\r\n      array[(start + i) % n] = value;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Insert a value into an array at a specific index.\r\n   *\r\n   * @param array - The array of interest.\r\n   *\r\n   * @param index - The index at which to insert the value. Negative\r\n   *   values are taken as an offset from the end of the array.\r\n   *\r\n   * @param value - The value to set at the specified index.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = [0, 1, 2];\r\n   * ArrayExt.insert(data, 0, -1);  // [-1, 0, 1, 2]\r\n   * ArrayExt.insert(data, 2, 12);  // [-1, 0, 12, 1, 2]\r\n   * ArrayExt.insert(data, -1, 7);  // [-1, 0, 12, 1, 7, 2]\r\n   * ArrayExt.insert(data, 6, 19);  // [-1, 0, 12, 1, 7, 2, 19]\r\n   * ```\r\n   */\r\n  export function insert<T>(array: Array<T>, index: number, value: T): void {\r\n    let n = array.length;\r\n    if (index < 0) {\r\n      index = Math.max(0, index + n);\r\n    } else {\r\n      index = Math.min(index, n);\r\n    }\r\n    for (let i = n; i > index; --i) {\r\n      array[i] = array[i - 1];\r\n    }\r\n    array[index] = value;\r\n  }\r\n\r\n  /**\r\n   * Remove and return a value at a specific index in an array.\r\n   *\r\n   * @param array - The array of interest.\r\n   *\r\n   * @param index - The index of the value to remove. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The value at the specified index, or `undefined` if the\r\n   *   index is out of range.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` which is non-integral.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = [0, 12, 23, 39, 14, 12, 75];\r\n   * ArrayExt.removeAt(data, 2);   // 23\r\n   * ArrayExt.removeAt(data, -2);  // 12\r\n   * ArrayExt.removeAt(data, 10);  // undefined;\r\n   * ```\r\n   */\r\n  export function removeAt<T>(array: Array<T>, index: number): T | undefined {\r\n    let n = array.length;\r\n    if (index < 0) {\r\n      index += n;\r\n    }\r\n    if (index < 0 || index >= n) {\r\n      return undefined;\r\n    }\r\n    let value = array[index];\r\n    for (let i = index + 1; i < n; ++i) {\r\n      array[i - 1] = array[i];\r\n    }\r\n    array.length = n - 1;\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Remove the first occurrence of a value from an array.\r\n   *\r\n   * @param array - The array of interest.\r\n   *\r\n   * @param value - The value to remove from the array. Values are\r\n   *   compared using strict `===` equality.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The index of the removed value, or `-1` if the value\r\n   *   is not contained in the array.\r\n   *\r\n   * #### Notes\r\n   * If `stop < start` the search will wrap at the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = [0, 12, 23, 39, 14, 12, 75];\r\n   * ArrayExt.removeFirstOf(data, 12);        // 1\r\n   * ArrayExt.removeFirstOf(data, 17);        // -1\r\n   * ArrayExt.removeFirstOf(data, 39, 3);     // -1\r\n   * ArrayExt.removeFirstOf(data, 39, 3, 2);  // 2\r\n   * ```\r\n   */\r\n  export function removeFirstOf<T>(\r\n    array: Array<T>,\r\n    value: T,\r\n    start = 0,\r\n    stop = -1\r\n  ): number {\r\n    let index = firstIndexOf(array, value, start, stop);\r\n    if (index !== -1) {\r\n      removeAt(array, index);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Remove the last occurrence of a value from an array.\r\n   *\r\n   * @param array - The array of interest.\r\n   *\r\n   * @param value - The value to remove from the array. Values are\r\n   *   compared using strict `===` equality.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The index of the removed value, or `-1` if the value\r\n   *   is not contained in the array.\r\n   *\r\n   * #### Notes\r\n   * If `start < stop` the search will wrap at the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = [0, 12, 23, 39, 14, 12, 75];\r\n   * ArrayExt.removeLastOf(data, 12);        // 5\r\n   * ArrayExt.removeLastOf(data, 17);        // -1\r\n   * ArrayExt.removeLastOf(data, 39, 2);     // -1\r\n   * ArrayExt.removeLastOf(data, 39, 2, 3);  // 3\r\n   * ```\r\n   */\r\n  export function removeLastOf<T>(\r\n    array: Array<T>,\r\n    value: T,\r\n    start = -1,\r\n    stop = 0\r\n  ): number {\r\n    let index = lastIndexOf(array, value, start, stop);\r\n    if (index !== -1) {\r\n      removeAt(array, index);\r\n    }\r\n    return index;\r\n  }\r\n\r\n  /**\r\n   * Remove all occurrences of a value from an array.\r\n   *\r\n   * @param array - The array of interest.\r\n   *\r\n   * @param value - The value to remove from the array. Values are\r\n   *   compared using strict `===` equality.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The number of elements removed from the array.\r\n   *\r\n   * #### Notes\r\n   * If `stop < start` the search will conceptually wrap at the end of\r\n   * the array, however the array will be traversed front-to-back.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * let data = [14, 12, 23, 39, 14, 12, 19, 14];\r\n   * ArrayExt.removeAllOf(data, 12);        // 2\r\n   * ArrayExt.removeAllOf(data, 17);        // 0\r\n   * ArrayExt.removeAllOf(data, 14, 1, 4);  // 1\r\n   * ```\r\n   */\r\n  export function removeAllOf<T>(\r\n    array: Array<T>,\r\n    value: T,\r\n    start = 0,\r\n    stop = -1\r\n  ): number {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return 0;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let count = 0;\r\n    for (let i = 0; i < n; ++i) {\r\n      if (start <= stop && i >= start && i <= stop && array[i] === value) {\r\n        count++;\r\n      } else if (\r\n        stop < start &&\r\n        (i <= stop || i >= start) &&\r\n        array[i] === value\r\n      ) {\r\n        count++;\r\n      } else if (count > 0) {\r\n        array[i - count] = array[i];\r\n      }\r\n    }\r\n    if (count > 0) {\r\n      array.length = n - count;\r\n    }\r\n    return count;\r\n  }\r\n\r\n  /**\r\n   * Remove the first occurrence of a value which matches a predicate.\r\n   *\r\n   * @param array - The array of interest.\r\n   *\r\n   * @param fn - The predicate function to apply to the values.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The removed `{ index, value }`, which will be `-1` and\r\n   *   `undefined` if the value is not contained in the array.\r\n   *\r\n   * #### Notes\r\n   * If `stop < start` the search will wrap at the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function isEven(value: number): boolean {\r\n   *   return value % 2 === 0;\r\n   * }\r\n   *\r\n   * let data = [0, 12, 23, 39, 14, 12, 75];\r\n   * ArrayExt.removeFirstWhere(data, isEven);     // { index: 0, value: 0 }\r\n   * ArrayExt.removeFirstWhere(data, isEven, 2);  // { index: 3, value: 14 }\r\n   * ArrayExt.removeFirstWhere(data, isEven, 4);  // { index: -1, value: undefined }\r\n   * ```\r\n   */\r\n  export function removeFirstWhere<T>(\r\n    array: Array<T>,\r\n    fn: (value: T, index: number) => boolean,\r\n    start = 0,\r\n    stop = -1\r\n  ): { index: number; value: T | undefined } {\r\n    let value: T | undefined;\r\n    let index = findFirstIndex(array, fn, start, stop);\r\n    if (index !== -1) {\r\n      value = removeAt(array, index);\r\n    }\r\n    return { index, value };\r\n  }\r\n\r\n  /**\r\n   * Remove the last occurrence of a value which matches a predicate.\r\n   *\r\n   * @param array - The array of interest.\r\n   *\r\n   * @param fn - The predicate function to apply to the values.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The removed `{ index, value }`, which will be `-1` and\r\n   *   `undefined` if the value is not contained in the array.\r\n   *\r\n   * #### Notes\r\n   * If `start < stop` the search will wrap at the end of the array.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function isEven(value: number): boolean {\r\n   *   return value % 2 === 0;\r\n   * }\r\n   *\r\n   * let data = [0, 12, 23, 39, 14, 12, 75];\r\n   * ArrayExt.removeLastWhere(data, isEven);        // { index: 5, value: 12 }\r\n   * ArrayExt.removeLastWhere(data, isEven, 2);     // { index: 1, value: 12 }\r\n   * ArrayExt.removeLastWhere(data, isEven, 2, 1);  // { index: -1, value: undefined }\r\n   * ```\r\n   */\r\n  export function removeLastWhere<T>(\r\n    array: Array<T>,\r\n    fn: (value: T, index: number) => boolean,\r\n    start = -1,\r\n    stop = 0\r\n  ): { index: number; value: T | undefined } {\r\n    let value: T | undefined;\r\n    let index = findLastIndex(array, fn, start, stop);\r\n    if (index !== -1) {\r\n      value = removeAt(array, index);\r\n    }\r\n    return { index, value };\r\n  }\r\n\r\n  /**\r\n   * Remove all occurrences of values which match a predicate.\r\n   *\r\n   * @param array - The array of interest.\r\n   *\r\n   * @param fn - The predicate function to apply to the values.\r\n   *\r\n   * @param start - The index of the first element in the range to be\r\n   *   searched, inclusive. The default value is `0`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @param stop - The index of the last element in the range to be\r\n   *   searched, inclusive. The default value is `-1`. Negative values\r\n   *   are taken as an offset from the end of the array.\r\n   *\r\n   * @returns The number of elements removed from the array.\r\n   *\r\n   * #### Notes\r\n   * If `stop < start` the search will conceptually wrap at the end of\r\n   * the array, however the array will be traversed front-to-back.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { ArrayExt } from '@lumino/algorithm';\r\n   *\r\n   * function isEven(value: number): boolean {\r\n   *   return value % 2 === 0;\r\n   * }\r\n   *\r\n   * function isNegative(value: number): boolean {\r\n   *   return value < 0;\r\n   * }\r\n   *\r\n   * let data = [0, 12, -13, -9, 23, 39, 14, -15, 12, 75];\r\n   * ArrayExt.removeAllWhere(data, isEven);            // 4\r\n   * ArrayExt.removeAllWhere(data, isNegative, 0, 3);  // 2\r\n   * ```\r\n   */\r\n  export function removeAllWhere<T>(\r\n    array: Array<T>,\r\n    fn: (value: T, index: number) => boolean,\r\n    start = 0,\r\n    stop = -1\r\n  ): number {\r\n    let n = array.length;\r\n    if (n === 0) {\r\n      return 0;\r\n    }\r\n    if (start < 0) {\r\n      start = Math.max(0, start + n);\r\n    } else {\r\n      start = Math.min(start, n - 1);\r\n    }\r\n    if (stop < 0) {\r\n      stop = Math.max(0, stop + n);\r\n    } else {\r\n      stop = Math.min(stop, n - 1);\r\n    }\r\n    let count = 0;\r\n    for (let i = 0; i < n; ++i) {\r\n      if (start <= stop && i >= start && i <= stop && fn(array[i], i)) {\r\n        count++;\r\n      } else if (stop < start && (i <= stop || i >= start) && fn(array[i], i)) {\r\n        count++;\r\n      } else if (count > 0) {\r\n        array[i - count] = array[i];\r\n      }\r\n    }\r\n    if (count > 0) {\r\n      array.length = n - count;\r\n    }\r\n    return count;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { IIterator, iter, IterableOrArrayLike } from './iter';\r\n\r\n/**\r\n * Chain together several iterables.\r\n *\r\n * @param objects - The iterable or array-like objects of interest.\r\n *\r\n * @returns An iterator which yields the values of the iterables\r\n *   in the order in which they are supplied.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { chain, toArray } from '@lumino/algorithm';\r\n *\r\n * let data1 = [1, 2, 3];\r\n * let data2 = [4, 5, 6];\r\n *\r\n * let stream = chain(data1, data2);\r\n *\r\n * toArray(stream);  // [1, 2, 3, 4, 5, 6]\r\n * ```\r\n */\r\nexport function chain<T>(...objects: IterableOrArrayLike<T>[]): IIterator<T> {\r\n  return new ChainIterator<T>(iter(objects.map(iter)));\r\n}\r\n\r\n/**\r\n * An iterator which chains together several iterators.\r\n */\r\nexport class ChainIterator<T> implements IIterator<T> {\r\n  /**\r\n   * Construct a new chain iterator.\r\n   *\r\n   * @param source - The iterator of iterators of interest.\r\n   */\r\n  constructor(source: IIterator<IIterator<T>>) {\r\n    this._source = source;\r\n    this._active = undefined;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<T> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<T> {\r\n    let result = new ChainIterator<T>(this._source.clone());\r\n    result._active = this._active && this._active.clone();\r\n    result._cloned = true;\r\n    this._cloned = true;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): T | undefined {\r\n    if (this._active === undefined) {\r\n      let active = this._source.next();\r\n      if (active === undefined) {\r\n        return undefined;\r\n      }\r\n      this._active = this._cloned ? active.clone() : active;\r\n    }\r\n    let value = this._active.next();\r\n    if (value !== undefined) {\r\n      return value;\r\n    }\r\n    this._active = undefined;\r\n    return this.next();\r\n  }\r\n\r\n  private _source: IIterator<IIterator<T>>;\r\n  private _active: IIterator<T> | undefined;\r\n  private _cloned = false;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { iter, IterableOrArrayLike } from './iter';\r\n\r\n/**\r\n * Find the first value in an iterable which matches a predicate.\r\n *\r\n * @param object - The iterable or array-like object to search.\r\n *\r\n * @param fn - The predicate function to apply to the values.\r\n *\r\n * @returns The first matching value, or `undefined` if no matching\r\n *   value is found.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { find } from '@lumino/algorithm';\r\n *\r\n * interface IAnimal { species: string, name: string };\r\n *\r\n * function isCat(value: IAnimal): boolean {\r\n *   return value.species === 'cat';\r\n * }\r\n *\r\n * let data: IAnimal[] = [\r\n *   { species: 'dog', name: 'spot' },\r\n *   { species: 'cat', name: 'fluffy' },\r\n *   { species: 'alligator', name: 'pocho' }\r\n * ];\r\n *\r\n * find(data, isCat).name;  // 'fluffy'\r\n * ```\r\n */\r\nexport function find<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (value: T, index: number) => boolean\r\n): T | undefined {\r\n  let index = 0;\r\n  let it = iter(object);\r\n  let value: T | undefined;\r\n  while ((value = it.next()) !== undefined) {\r\n    if (fn(value, index++)) {\r\n      return value;\r\n    }\r\n  }\r\n  return undefined;\r\n}\r\n\r\n/**\r\n * Find the index of the first value which matches a predicate.\r\n *\r\n * @param object - The iterable or array-like object to search.\r\n *\r\n * @param fn - The predicate function to apply to the values.\r\n *\r\n * @returns The index of the first matching value, or `-1` if no\r\n *   matching value is found.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { findIndex } from '@lumino/algorithm';\r\n *\r\n * interface IAnimal { species: string, name: string };\r\n *\r\n * function isCat(value: IAnimal): boolean {\r\n *   return value.species === 'cat';\r\n * }\r\n *\r\n * let data: IAnimal[] = [\r\n *   { species: 'dog', name: 'spot' },\r\n *   { species: 'cat', name: 'fluffy' },\r\n *   { species: 'alligator', name: 'pocho' }\r\n * ];\r\n *\r\n * findIndex(data, isCat);  // 1\r\n * ```\r\n */\r\nexport function findIndex<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (value: T, index: number) => boolean\r\n): number {\r\n  let index = 0;\r\n  let it = iter(object);\r\n  let value: T | undefined;\r\n  while ((value = it.next()) !== undefined) {\r\n    if (fn(value, index++)) {\r\n      return index - 1;\r\n    }\r\n  }\r\n  return -1;\r\n}\r\n\r\n/**\r\n * Find the minimum value in an iterable.\r\n *\r\n * @param object - The iterable or array-like object to search.\r\n *\r\n * @param fn - The 3-way comparison function to apply to the values.\r\n *   It should return `< 0` if the first value is less than the second.\r\n *   `0` if the values are equivalent, or `> 0` if the first value is\r\n *   greater than the second.\r\n *\r\n * @returns The minimum value in the iterable. If multiple values are\r\n *   equivalent to the minimum, the left-most value is returned. If\r\n *   the iterable is empty, this returns `undefined`.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { min } from '@lumino/algorithm';\r\n *\r\n * function numberCmp(a: number, b: number): number {\r\n *   return a - b;\r\n * }\r\n *\r\n * min([7, 4, 0, 3, 9, 4], numberCmp);  // 0\r\n * ```\r\n */\r\nexport function min<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (first: T, second: T) => number\r\n): T | undefined {\r\n  let it = iter(object);\r\n  let value = it.next();\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  let result = value;\r\n  while ((value = it.next()) !== undefined) {\r\n    if (fn(value, result) < 0) {\r\n      result = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Find the maximum value in an iterable.\r\n *\r\n * @param object - The iterable or array-like object to search.\r\n *\r\n * @param fn - The 3-way comparison function to apply to the values.\r\n *   It should return `< 0` if the first value is less than the second.\r\n *   `0` if the values are equivalent, or `> 0` if the first value is\r\n *   greater than the second.\r\n *\r\n * @returns The maximum value in the iterable. If multiple values are\r\n *   equivalent to the maximum, the left-most value is returned. If\r\n *   the iterable is empty, this returns `undefined`.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { max } from '@lumino/algorithm';\r\n *\r\n * function numberCmp(a: number, b: number): number {\r\n *   return a - b;\r\n * }\r\n *\r\n * max([7, 4, 0, 3, 9, 4], numberCmp);  // 9\r\n * ```\r\n */\r\nexport function max<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (first: T, second: T) => number\r\n): T | undefined {\r\n  let it = iter(object);\r\n  let value = it.next();\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  let result = value;\r\n  while ((value = it.next()) !== undefined) {\r\n    if (fn(value, result) > 0) {\r\n      result = value;\r\n    }\r\n  }\r\n  return result;\r\n}\r\n\r\n/**\r\n * Find the minimum and maximum values in an iterable.\r\n *\r\n * @param object - The iterable or array-like object to search.\r\n *\r\n * @param fn - The 3-way comparison function to apply to the values.\r\n *   It should return `< 0` if the first value is less than the second.\r\n *   `0` if the values are equivalent, or `> 0` if the first value is\r\n *   greater than the second.\r\n *\r\n * @returns A 2-tuple of the `[min, max]` values in the iterable. If\r\n *   multiple values are equivalent, the left-most values are returned.\r\n *   If the iterable is empty, this returns `undefined`.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { minmax } from '@lumino/algorithm';\r\n *\r\n * function numberCmp(a: number, b: number): number {\r\n *   return a - b;\r\n * }\r\n *\r\n * minmax([7, 4, 0, 3, 9, 4], numberCmp);  // [0, 9]\r\n * ```\r\n */\r\nexport function minmax<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (first: T, second: T) => number\r\n): [T, T] | undefined {\r\n  let it = iter(object);\r\n  let value = it.next();\r\n  if (value === undefined) {\r\n    return undefined;\r\n  }\r\n  let vmin = value;\r\n  let vmax = value;\r\n  while ((value = it.next()) !== undefined) {\r\n    if (fn(value, vmin) < 0) {\r\n      vmin = value;\r\n    } else if (fn(value, vmax) > 0) {\r\n      vmax = value;\r\n    }\r\n  }\r\n  return [vmin, vmax];\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { IIterator } from './iter';\r\n\r\n/**\r\n * Create an iterator of evenly spaced values.\r\n *\r\n * @param start - The starting value for the range, inclusive.\r\n *\r\n * @param stop - The stopping value for the range, exclusive.\r\n *\r\n * @param step - The distance between each value.\r\n *\r\n * @returns An iterator which produces evenly spaced values.\r\n *\r\n * #### Notes\r\n * In the single argument form of `range(stop)`, `start` defaults to\r\n * `0` and `step` defaults to `1`.\r\n *\r\n * In the two argument form of `range(start, stop)`, `step` defaults\r\n * to `1`.\r\n */\r\nexport function range(\r\n  start: number,\r\n  stop?: number,\r\n  step?: number\r\n): IIterator<number> {\r\n  if (stop === undefined) {\r\n    return new RangeIterator(0, start, 1);\r\n  }\r\n  if (step === undefined) {\r\n    return new RangeIterator(start, stop, 1);\r\n  }\r\n  return new RangeIterator(start, stop, step);\r\n}\r\n\r\n/**\r\n * An iterator which produces a range of evenly spaced values.\r\n */\r\nexport class RangeIterator implements IIterator<number> {\r\n  /**\r\n   * Construct a new range iterator.\r\n   *\r\n   * @param start - The starting value for the range, inclusive.\r\n   *\r\n   * @param stop - The stopping value for the range, exclusive.\r\n   *\r\n   * @param step - The distance between each value.\r\n   */\r\n  constructor(start: number, stop: number, step: number) {\r\n    this._start = start;\r\n    this._stop = stop;\r\n    this._step = step;\r\n    this._length = Private.rangeLength(start, stop, step);\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<number> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<number> {\r\n    let result = new RangeIterator(this._start, this._stop, this._step);\r\n    result._index = this._index;\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): number | undefined {\r\n    if (this._index >= this._length) {\r\n      return undefined;\r\n    }\r\n    return this._start + this._step * this._index++;\r\n  }\r\n\r\n  private _index = 0;\r\n  private _length: number;\r\n  private _start: number;\r\n  private _stop: number;\r\n  private _step: number;\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Compute the effective length of a range.\r\n   *\r\n   * @param start - The starting value for the range, inclusive.\r\n   *\r\n   * @param stop - The stopping value for the range, exclusive.\r\n   *\r\n   * @param step - The distance between each value.\r\n   *\r\n   * @returns The number of steps need to traverse the range.\r\n   */\r\n  export function rangeLength(\r\n    start: number,\r\n    stop: number,\r\n    step: number\r\n  ): number {\r\n    if (step === 0) {\r\n      return Infinity;\r\n    }\r\n    if (start > stop && step > 0) {\r\n      return 0;\r\n    }\r\n    if (start < stop && step < 0) {\r\n      return 0;\r\n    }\r\n    return Math.ceil((stop - start) / step);\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { iter, IterableOrArrayLike } from './iter';\r\n\r\n/**\r\n * Summarize all values in an iterable using a reducer function.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @param fn - The reducer function to invoke for each value.\r\n *\r\n * @param initial - The initial value to start accumulation.\r\n *\r\n * @returns The final accumulated value.\r\n *\r\n * #### Notes\r\n * The `reduce` function follows the conventions of `Array#reduce`.\r\n *\r\n * If the iterator is empty, an initial value is required. That value\r\n * will be used as the return value. If no initial value is provided,\r\n * an error will be thrown.\r\n *\r\n * If the iterator contains a single item and no initial value is\r\n * provided, the single item is used as the return value.\r\n *\r\n * Otherwise, the reducer is invoked for each element in the iterable.\r\n * If an initial value is not provided, the first element will be used\r\n * as the initial accumulated value.\r\n *\r\n * #### Complexity\r\n * Linear.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { reduce } from '@lumino/algorithm';\r\n *\r\n * let data = [1, 2, 3, 4, 5];\r\n *\r\n * let sum = reduce(data, (a, value) => a + value);  // 15\r\n * ```\r\n */\r\nexport function reduce<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (accumulator: T, value: T, index: number) => T\r\n): T;\r\nexport function reduce<T, U>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (accumulator: U, value: T, index: number) => U,\r\n  initial: U\r\n): U;\r\nexport function reduce<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  fn: (accumulator: any, value: T, index: number) => any,\r\n  initial?: any\r\n): any {\r\n  // Setup the iterator and fetch the first value.\r\n  let index = 0;\r\n  let it = iter(object);\r\n  let first = it.next();\r\n\r\n  // An empty iterator and no initial value is an error.\r\n  if (first === undefined && initial === undefined) {\r\n    throw new TypeError('Reduce of empty iterable with no initial value.');\r\n  }\r\n\r\n  // If the iterator is empty, return the initial value.\r\n  if (first === undefined) {\r\n    return initial;\r\n  }\r\n\r\n  // If the iterator has a single item and no initial value, the\r\n  // reducer is not invoked and the first item is the return value.\r\n  let second = it.next();\r\n  if (second === undefined && initial === undefined) {\r\n    return first;\r\n  }\r\n\r\n  // If iterator has a single item and an initial value is provided,\r\n  // the reducer is invoked and that result is the return value.\r\n  if (second === undefined) {\r\n    return fn(initial, first, index++);\r\n  }\r\n\r\n  // Setup the initial accumlated value.\r\n  let accumulator: any;\r\n  if (initial === undefined) {\r\n    accumulator = fn(first, second, index++);\r\n  } else {\r\n    accumulator = fn(fn(initial, first, index++), second, index++);\r\n  }\r\n\r\n  // Iterate the rest of the values, updating the accumulator.\r\n  let next: T | undefined;\r\n  while ((next = it.next()) !== undefined) {\r\n    accumulator = fn(accumulator, next, index++);\r\n  }\r\n\r\n  // Return the final accumulated value.\r\n  return accumulator;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { each, IterableOrArrayLike } from './iter';\r\n\r\n/**\r\n * Topologically sort an iterable of edges.\r\n *\r\n * @param edges - The iterable or array-like object of edges to sort.\r\n *   An edge is represented as a 2-tuple of `[fromNode, toNode]`.\r\n *\r\n * @returns The topologically sorted array of nodes.\r\n *\r\n * #### Notes\r\n * If a cycle is present in the graph, the cycle will be ignored and\r\n * the return value will be only approximately sorted.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { topologicSort } from '@lumino/algorithm';\r\n *\r\n * let data = [\r\n *   ['d', 'e'],\r\n *   ['c', 'd'],\r\n *   ['a', 'b'],\r\n *   ['b', 'c']\r\n * ];\r\n *\r\n * topologicSort(data);  // ['a', 'b', 'c', 'd', 'e']\r\n * ```\r\n */\r\nexport function topologicSort<T>(edges: IterableOrArrayLike<[T, T]>): T[] {\r\n  // Setup the shared sorting state.\r\n  let sorted: T[] = [];\r\n  let visited = new Set<T>();\r\n  let graph = new Map<T, T[]>();\r\n\r\n  // Add the edges to the graph.\r\n  each(edges, addEdge);\r\n\r\n  // Visit each node in the graph.\r\n  graph.forEach((v, k) => {\r\n    visit(k);\r\n  });\r\n\r\n  // Return the sorted results.\r\n  return sorted;\r\n\r\n  // Add an edge to the graph.\r\n  function addEdge(edge: [T, T]): void {\r\n    let [fromNode, toNode] = edge;\r\n    let children = graph.get(toNode);\r\n    if (children) {\r\n      children.push(fromNode);\r\n    } else {\r\n      graph.set(toNode, [fromNode]);\r\n    }\r\n  }\r\n\r\n  // Recursively visit the node.\r\n  function visit(node: T): void {\r\n    if (visited.has(node)) {\r\n      return;\r\n    }\r\n    visited.add(node);\r\n    let children = graph.get(node);\r\n    if (children) {\r\n      children.forEach(visit);\r\n    }\r\n    sorted.push(node);\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { IIterator, iter, IterableOrArrayLike } from './iter';\r\n\r\n/**\r\n * Iterate over an iterable using a stepped increment.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @param step - The distance to step on each iteration. A value\r\n *   of less than `1` will behave the same as a value of `1`.\r\n *\r\n * @returns An iterator which traverses the iterable step-wise.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { stride, toArray } from '@lumino/algorithm';\r\n *\r\n * let data = [1, 2, 3, 4, 5, 6];\r\n *\r\n * let stream = stride(data, 2);\r\n *\r\n * toArray(stream);  // [1, 3, 5];\r\n * ```\r\n */\r\nexport function stride<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  step: number\r\n): IIterator<T> {\r\n  return new StrideIterator<T>(iter(object), step);\r\n}\r\n\r\n/**\r\n * An iterator which traverses a source iterator step-wise.\r\n */\r\nexport class StrideIterator<T> implements IIterator<T> {\r\n  /**\r\n   * Construct a new stride iterator.\r\n   *\r\n   * @param source - The iterator of values of interest.\r\n   *\r\n   * @param step - The distance to step on each iteration. A value\r\n   *   of less than `1` will behave the same as a value of `1`.\r\n   */\r\n  constructor(source: IIterator<T>, step: number) {\r\n    this._source = source;\r\n    this._step = step;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<T> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<T> {\r\n    return new StrideIterator<T>(this._source.clone(), this._step);\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): T | undefined {\r\n    let value = this._source.next();\r\n    for (let n = this._step - 1; n > 0; --n) {\r\n      this._source.next();\r\n    }\r\n    return value;\r\n  }\r\n\r\n  private _source: IIterator<T>;\r\n  private _step: number;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * The namespace for string-specific algorithms.\r\n */\r\nexport namespace StringExt {\r\n  /**\r\n   * Find the indices of characters in a source text.\r\n   *\r\n   * @param source - The source text which should be searched.\r\n   *\r\n   * @param query - The characters to locate in the source text.\r\n   *\r\n   * @param start - The index to start the search.\r\n   *\r\n   * @returns The matched indices, or `null` if there is no match.\r\n   *\r\n   * #### Complexity\r\n   * Linear on `sourceText`.\r\n   *\r\n   * #### Notes\r\n   * In order for there to be a match, all of the characters in `query`\r\n   * **must** appear in `source` in the order given by `query`.\r\n   *\r\n   * Characters are matched using strict `===` equality.\r\n   */\r\n  export function findIndices(\r\n    source: string,\r\n    query: string,\r\n    start = 0\r\n  ): number[] | null {\r\n    let indices = new Array<number>(query.length);\r\n    for (let i = 0, j = start, n = query.length; i < n; ++i, ++j) {\r\n      j = source.indexOf(query[i], j);\r\n      if (j === -1) {\r\n        return null;\r\n      }\r\n      indices[i] = j;\r\n    }\r\n    return indices;\r\n  }\r\n\r\n  /**\r\n   * The result of a string match function.\r\n   */\r\n  export interface IMatchResult {\r\n    /**\r\n     * A score which indicates the strength of the match.\r\n     *\r\n     * The documentation of a given match function should specify\r\n     * whether a lower or higher score is a stronger match.\r\n     */\r\n    score: number;\r\n\r\n    /**\r\n     * The indices of the matched characters in the source text.\r\n     *\r\n     * The indices will appear in increasing order.\r\n     */\r\n    indices: number[];\r\n  }\r\n\r\n  /**\r\n   * A string matcher which uses a sum-of-squares algorithm.\r\n   *\r\n   * @param source - The source text which should be searched.\r\n   *\r\n   * @param query - The characters to locate in the source text.\r\n   *\r\n   * @param start - The index to start the search.\r\n   *\r\n   * @returns The match result, or `null` if there is no match.\r\n   *   A lower `score` represents a stronger match.\r\n   *\r\n   * #### Complexity\r\n   * Linear on `sourceText`.\r\n   *\r\n   * #### Notes\r\n   * This scoring algorithm uses a sum-of-squares approach to determine\r\n   * the score. In order for there to be a match, all of the characters\r\n   * in `query` **must** appear in `source` in order. The index of each\r\n   * matching character is squared and added to the score. This means\r\n   * that early and consecutive character matches are preferred, while\r\n   * late matches are heavily penalized.\r\n   */\r\n  export function matchSumOfSquares(\r\n    source: string,\r\n    query: string,\r\n    start = 0\r\n  ): IMatchResult | null {\r\n    let indices = findIndices(source, query, start);\r\n    if (!indices) {\r\n      return null;\r\n    }\r\n    let score = 0;\r\n    for (let i = 0, n = indices.length; i < n; ++i) {\r\n      let j = indices[i] - start;\r\n      score += j * j;\r\n    }\r\n    return { score, indices };\r\n  }\r\n\r\n  /**\r\n   * A string matcher which uses a sum-of-deltas algorithm.\r\n   *\r\n   * @param source - The source text which should be searched.\r\n   *\r\n   * @param query - The characters to locate in the source text.\r\n   *\r\n   * @param start - The index to start the search.\r\n   *\r\n   * @returns The match result, or `null` if there is no match.\r\n   *   A lower `score` represents a stronger match.\r\n   *\r\n   * #### Complexity\r\n   * Linear on `sourceText`.\r\n   *\r\n   * #### Notes\r\n   * This scoring algorithm uses a sum-of-deltas approach to determine\r\n   * the score. In order for there to be a match, all of the characters\r\n   * in `query` **must** appear in `source` in order. The delta between\r\n   * the indices are summed to create the score. This means that groups\r\n   * of matched characters are preferred, while fragmented matches are\r\n   * penalized.\r\n   */\r\n  export function matchSumOfDeltas(\r\n    source: string,\r\n    query: string,\r\n    start = 0\r\n  ): IMatchResult | null {\r\n    let indices = findIndices(source, query, start);\r\n    if (!indices) {\r\n      return null;\r\n    }\r\n    let score = 0;\r\n    let last = start - 1;\r\n    for (let i = 0, n = indices.length; i < n; ++i) {\r\n      let j = indices[i];\r\n      score += j - last - 1;\r\n      last = j;\r\n    }\r\n    return { score, indices };\r\n  }\r\n\r\n  /**\r\n   * Highlight the matched characters of a source text.\r\n   *\r\n   * @param source - The text which should be highlighted.\r\n   *\r\n   * @param indices - The indices of the matched characters. They must\r\n   *   appear in increasing order and must be in bounds of the source.\r\n   *\r\n   * @param fn - The function to apply to the matched chunks.\r\n   *\r\n   * @returns An array of unmatched and highlighted chunks.\r\n   */\r\n  export function highlight<T>(\r\n    source: string,\r\n    indices: ReadonlyArray<number>,\r\n    fn: (chunk: string) => T\r\n  ): Array<string | T> {\r\n    // Set up the result array.\r\n    let result: Array<string | T> = [];\r\n\r\n    // Set up the counter variables.\r\n    let k = 0;\r\n    let last = 0;\r\n    let n = indices.length;\r\n\r\n    // Iterator over each index.\r\n    while (k < n) {\r\n      // Set up the chunk indices.\r\n      let i = indices[k];\r\n      let j = indices[k];\r\n\r\n      // Advance the right chunk index until it's non-contiguous.\r\n      while (++k < n && indices[k] === j + 1) {\r\n        j++;\r\n      }\r\n\r\n      // Extract the unmatched text.\r\n      if (last < i) {\r\n        result.push(source.slice(last, i));\r\n      }\r\n\r\n      // Extract and highlight the matched text.\r\n      if (i < j + 1) {\r\n        result.push(fn(source.slice(i, j + 1)));\r\n      }\r\n\r\n      // Update the last visited index.\r\n      last = j + 1;\r\n    }\r\n\r\n    // Extract any remaining unmatched text.\r\n    if (last < source.length) {\r\n      result.push(source.slice(last));\r\n    }\r\n\r\n    // Return the highlighted result.\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * A 3-way string comparison function.\r\n   *\r\n   * @param a - The first string of interest.\r\n   *\r\n   * @param b - The second string of interest.\r\n   *\r\n   * @returns `-1` if `a < b`, else `1` if `a > b`, else `0`.\r\n   */\r\n  export function cmp(a: string, b: string): number {\r\n    return a < b ? -1 : a > b ? 1 : 0;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { IIterator, iter, IterableOrArrayLike } from './iter';\r\n\r\n/**\r\n * Take a fixed number of items from an iterable.\r\n *\r\n * @param object - The iterable or array-like object of interest.\r\n *\r\n * @param count - The number of items to take from the iterable.\r\n *\r\n * @returns An iterator which yields the specified number of items\r\n *   from the source iterable.\r\n *\r\n * #### Notes\r\n * The returned iterator will exhaust early if the source iterable\r\n * contains an insufficient number of items.\r\n */\r\nexport function take<T>(\r\n  object: IterableOrArrayLike<T>,\r\n  count: number\r\n): IIterator<T> {\r\n  return new TakeIterator<T>(iter(object), count);\r\n}\r\n\r\n/**\r\n * An iterator which takes a fixed number of items from a source.\r\n */\r\nexport class TakeIterator<T> implements IIterator<T> {\r\n  /**\r\n   * Construct a new take iterator.\r\n   *\r\n   * @param source - The iterator of interest.\r\n   *\r\n   * @param count - The number of items to take from the source.\r\n   */\r\n  constructor(source: IIterator<T>, count: number) {\r\n    this._source = source;\r\n    this._count = count;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<T> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<T> {\r\n    return new TakeIterator<T>(this._source.clone(), this._count);\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): T | undefined {\r\n    if (this._count <= 0) {\r\n      return undefined;\r\n    }\r\n    let value = this._source.next();\r\n    if (value === undefined) {\r\n      return undefined;\r\n    }\r\n    this._count--;\r\n    return value;\r\n  }\r\n\r\n  private _count: number;\r\n  private _source: IIterator<T>;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { IIterator, iter, IterableOrArrayLike } from './iter';\r\n\r\n/**\r\n * Iterate several iterables in lockstep.\r\n *\r\n * @param objects - The iterable or array-like objects of interest.\r\n *\r\n * @returns An iterator which yields successive tuples of values where\r\n *   each value is taken in turn from the provided iterables. It will\r\n *   be as long as the shortest provided iterable.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { zip, toArray } from '@lumino/algorithm';\r\n *\r\n * let data1 = [1, 2, 3];\r\n * let data2 = [4, 5, 6];\r\n *\r\n * let stream = zip(data1, data2);\r\n *\r\n * toArray(stream);  // [[1, 4], [2, 5], [3, 6]]\r\n * ```\r\n */\r\nexport function zip<T>(...objects: IterableOrArrayLike<T>[]): IIterator<T[]> {\r\n  return new ZipIterator<T>(objects.map(iter));\r\n}\r\n\r\n/**\r\n * An iterator which iterates several sources in lockstep.\r\n */\r\nexport class ZipIterator<T> implements IIterator<T[]> {\r\n  /**\r\n   * Construct a new zip iterator.\r\n   *\r\n   * @param source - The iterators of interest.\r\n   */\r\n  constructor(source: IIterator<T>[]) {\r\n    this._source = source;\r\n  }\r\n\r\n  /**\r\n   * Get an iterator over the object's values.\r\n   *\r\n   * @returns An iterator which yields the object's values.\r\n   */\r\n  iter(): IIterator<T[]> {\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Create an independent clone of the iterator.\r\n   *\r\n   * @returns A new independent clone of the iterator.\r\n   */\r\n  clone(): IIterator<T[]> {\r\n    return new ZipIterator<T>(this._source.map(it => it.clone()));\r\n  }\r\n\r\n  /**\r\n   * Get the next value from the iterator.\r\n   *\r\n   * @returns The next value from the iterator, or `undefined`.\r\n   */\r\n  next(): T[] | undefined {\r\n    let result = new Array<T>(this._source.length);\r\n    for (let i = 0, n = this._source.length; i < n; ++i) {\r\n      let value = this._source[i].next();\r\n      if (value === undefined) {\r\n        return undefined;\r\n      }\r\n      result[i] = value;\r\n    }\r\n    return result;\r\n  }\r\n\r\n  private _source: IIterator<T>[];\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2019, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * The namespace for clipboard related functionality.\r\n */\r\nexport namespace ClipboardExt {\r\n  /**\r\n   * Copy text to the system clipboard.\r\n   *\r\n   * @param text - The text to copy to the clipboard.\r\n   */\r\n  export function copyText(text: string): void {\r\n    // Fetch the document body.\r\n    const body = document.body;\r\n\r\n    // Set up the clipboard event listener.\r\n    const handler = (event: ClipboardEvent) => {\r\n      // Stop the event propagation.\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n\r\n      // Set the clipboard data.\r\n      event.clipboardData!.setData('text', text);\r\n\r\n      // Remove the event listener.\r\n      body.removeEventListener('copy', handler, true);\r\n    };\r\n\r\n    // Add the event listener.\r\n    body.addEventListener('copy', handler, true);\r\n\r\n    // Trigger the event.\r\n    document.execCommand('copy');\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * The namespace for element related utilities.\r\n */\r\nexport namespace ElementExt {\r\n  /**\r\n   * An object which holds the border and padding data for an element.\r\n   */\r\n  export interface IBoxSizing {\r\n    /**\r\n     * The top border width, in pixels.\r\n     */\r\n    borderTop: number;\r\n\r\n    /**\r\n     * The left border width, in pixels.\r\n     */\r\n    borderLeft: number;\r\n\r\n    /**\r\n     * The right border width, in pixels.\r\n     */\r\n    borderRight: number;\r\n\r\n    /**\r\n     * The bottom border width, in pixels.\r\n     */\r\n    borderBottom: number;\r\n\r\n    /**\r\n     * The top padding width, in pixels.\r\n     */\r\n    paddingTop: number;\r\n\r\n    /**\r\n     * The left padding width, in pixels.\r\n     */\r\n    paddingLeft: number;\r\n\r\n    /**\r\n     * The right padding width, in pixels.\r\n     */\r\n    paddingRight: number;\r\n\r\n    /**\r\n     * The bottom padding width, in pixels.\r\n     */\r\n    paddingBottom: number;\r\n\r\n    /**\r\n     * The sum of horizontal border and padding.\r\n     */\r\n    horizontalSum: number;\r\n\r\n    /**\r\n     * The sum of vertical border and padding.\r\n     */\r\n    verticalSum: number;\r\n  }\r\n\r\n  /**\r\n   * Compute the box sizing for an element.\r\n   *\r\n   * @param element - The element of interest.\r\n   *\r\n   * @returns The box sizing data for the specified element.\r\n   */\r\n  export function boxSizing(element: Element): IBoxSizing {\r\n    let style = window.getComputedStyle(element);\r\n    let bt = parseFloat(style.borderTopWidth!) || 0;\r\n    let bl = parseFloat(style.borderLeftWidth!) || 0;\r\n    let br = parseFloat(style.borderRightWidth!) || 0;\r\n    let bb = parseFloat(style.borderBottomWidth!) || 0;\r\n    let pt = parseFloat(style.paddingTop!) || 0;\r\n    let pl = parseFloat(style.paddingLeft!) || 0;\r\n    let pr = parseFloat(style.paddingRight!) || 0;\r\n    let pb = parseFloat(style.paddingBottom!) || 0;\r\n    let hs = bl + pl + pr + br;\r\n    let vs = bt + pt + pb + bb;\r\n    return {\r\n      borderTop: bt,\r\n      borderLeft: bl,\r\n      borderRight: br,\r\n      borderBottom: bb,\r\n      paddingTop: pt,\r\n      paddingLeft: pl,\r\n      paddingRight: pr,\r\n      paddingBottom: pb,\r\n      horizontalSum: hs,\r\n      verticalSum: vs\r\n    };\r\n  }\r\n\r\n  /**\r\n   * An object which holds the min and max size data for an element.\r\n   */\r\n  export interface ISizeLimits {\r\n    /**\r\n     * The minimum width, in pixels.\r\n     */\r\n    minWidth: number;\r\n\r\n    /**\r\n     * The minimum height, in pixels.\r\n     */\r\n    minHeight: number;\r\n\r\n    /**\r\n     * The maximum width, in pixels.\r\n     */\r\n    maxWidth: number;\r\n\r\n    /**\r\n     * The maximum height, in pixels.\r\n     */\r\n    maxHeight: number;\r\n  }\r\n\r\n  /**\r\n   * Compute the size limits for an element.\r\n   *\r\n   * @param element - The element of interest.\r\n   *\r\n   * @returns The size limit data for the specified element.\r\n   */\r\n  export function sizeLimits(element: Element): ISizeLimits {\r\n    let style = window.getComputedStyle(element);\r\n    let minWidth = parseFloat(style.minWidth!) || 0;\r\n    let minHeight = parseFloat(style.minHeight!) || 0;\r\n    let maxWidth = parseFloat(style.maxWidth!) || Infinity;\r\n    let maxHeight = parseFloat(style.maxHeight!) || Infinity;\r\n    maxWidth = Math.max(minWidth, maxWidth);\r\n    maxHeight = Math.max(minHeight, maxHeight);\r\n    return { minWidth, minHeight, maxWidth, maxHeight };\r\n  }\r\n\r\n  /**\r\n   * Test whether a client position lies within an element.\r\n   *\r\n   * @param element - The DOM element of interest.\r\n   *\r\n   * @param clientX - The client X coordinate of interest.\r\n   *\r\n   * @param clientY - The client Y coordinate of interest.\r\n   *\r\n   * @returns Whether the point is within the given element.\r\n   */\r\n  export function hitTest(\r\n    element: Element,\r\n    clientX: number,\r\n    clientY: number\r\n  ): boolean {\r\n    let rect = element.getBoundingClientRect();\r\n    return (\r\n      clientX >= rect.left &&\r\n      clientX < rect.right &&\r\n      clientY >= rect.top &&\r\n      clientY < rect.bottom\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Vertically scroll an element into view if needed.\r\n   *\r\n   * @param area - The scroll area element.\r\n   *\r\n   * @param element - The element of interest.\r\n   *\r\n   * #### Notes\r\n   * This follows the \"nearest\" behavior of the native `scrollIntoView`\r\n   * method, which is not supported by all browsers.\r\n   * https://drafts.csswg.org/cssom-view/#element-scrolling-members\r\n   *\r\n   * If the element fully covers the visible area or is fully contained\r\n   * within the visible area, no scrolling will take place. Otherwise,\r\n   * the nearest edges of the area and element are aligned.\r\n   */\r\n  export function scrollIntoViewIfNeeded(\r\n    area: Element,\r\n    element: Element\r\n  ): void {\r\n    let ar = area.getBoundingClientRect();\r\n    let er = element.getBoundingClientRect();\r\n    if (er.top <= ar.top && er.bottom >= ar.bottom) {\r\n      return;\r\n    }\r\n    if (er.top < ar.top && er.height <= ar.height) {\r\n      area.scrollTop -= ar.top - er.top;\r\n      return;\r\n    }\r\n    if (er.bottom > ar.bottom && er.height >= ar.height) {\r\n      area.scrollTop -= ar.top - er.top;\r\n      return;\r\n    }\r\n    if (er.top < ar.top && er.height > ar.height) {\r\n      area.scrollTop -= ar.bottom - er.bottom;\r\n      return;\r\n    }\r\n    if (er.bottom > ar.bottom && er.height < ar.height) {\r\n      area.scrollTop -= ar.bottom - er.bottom;\r\n      return;\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * The namespace for platform related utilities.\r\n */\r\nexport namespace Platform {\r\n  /**\r\n   * A flag indicating whether the platform is Mac.\r\n   */\r\n  export const IS_MAC = !!navigator.platform.match(/Mac/i);\r\n\r\n  /**\r\n   * A flag indicating whether the platform is Windows.\r\n   */\r\n  export const IS_WIN = !!navigator.platform.match(/Win/i);\r\n\r\n  /**\r\n   * A flag indicating whether the browser is IE.\r\n   */\r\n  export const IS_IE = /Trident/.test(navigator.userAgent);\r\n\r\n  /**\r\n   * A flag indicating whether the browser is Edge.\r\n   */\r\n  export const IS_EDGE = /Edge/.test(navigator.userAgent);\r\n\r\n  /**\r\n   * Test whether the `accel` key is pressed.\r\n   *\r\n   * @param event - The keyboard or mouse event of interest.\r\n   *\r\n   * @returns Whether the `accel` key is pressed.\r\n   *\r\n   * #### Notes\r\n   * On Mac the `accel` key is the command key. On all other\r\n   * platforms the `accel` key is the control key.\r\n   */\r\n  export function accelKey(event: KeyboardEvent | MouseEvent): boolean {\r\n    return IS_MAC ? event.metaKey : event.ctrlKey;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * The namespace for selector related utilities.\r\n */\r\nexport namespace Selector {\r\n  /**\r\n   * Calculate the specificity of a single CSS selector.\r\n   *\r\n   * @param selector - The CSS selector of interest.\r\n   *\r\n   * @returns The specificity of the selector.\r\n   *\r\n   * #### Undefined Behavior\r\n   * The selector is invalid.\r\n   *\r\n   * #### Notes\r\n   * This is based on https://www.w3.org/TR/css3-selectors/#specificity\r\n   *\r\n   * A larger number represents a more specific selector.\r\n   *\r\n   * The smallest possible specificity is `0`.\r\n   *\r\n   * The result is represented as a hex number `0x<aa><bb><cc>` where\r\n   * each component is the count of the respective selector clause.\r\n   *\r\n   * If the selector contains commas, only the first clause is used.\r\n   *\r\n   * The computed result is cached, so subsequent calculations for the\r\n   * same selector are extremely fast.\r\n   */\r\n  export function calculateSpecificity(selector: string): number {\r\n    if (selector in Private.specificityCache) {\r\n      return Private.specificityCache[selector];\r\n    }\r\n    let result = Private.calculateSingle(selector);\r\n    return (Private.specificityCache[selector] = result);\r\n  }\r\n\r\n  /**\r\n   * Test whether a selector is a valid CSS selector.\r\n   *\r\n   * @param selector - The CSS selector of interest.\r\n   *\r\n   * @returns `true` if the selector is valid, `false` otherwise.\r\n   *\r\n   * #### Notes\r\n   * The computed result is cached, so subsequent tests for the same\r\n   * selector are extremely fast.\r\n   */\r\n  export function isValid(selector: string): boolean {\r\n    if (selector in Private.validityCache) {\r\n      return Private.validityCache[selector];\r\n    }\r\n    let result = true;\r\n    try {\r\n      Private.testElem.querySelector(selector);\r\n    } catch (err) {\r\n      result = false;\r\n    }\r\n    return (Private.validityCache[selector] = result);\r\n  }\r\n\r\n  /**\r\n   * Test whether an element matches a CSS selector.\r\n   *\r\n   * @param element - The element of interest.\r\n   *\r\n   * @param selector - The valid CSS selector of interest.\r\n   *\r\n   * @returns `true` if the element is a match, `false` otherwise.\r\n   *\r\n   * #### Notes\r\n   * This function uses the builtin browser capabilities when possible,\r\n   * falling back onto a document query otherwise.\r\n   */\r\n  export function matches(element: Element, selector: string): boolean {\r\n    return Private.protoMatchFunc.call(element, selector);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A type alias for an object hash.\r\n   */\r\n  export type StringMap<T> = { [key: string]: T };\r\n\r\n  /**\r\n   * A cache of computed selector specificity values.\r\n   */\r\n  export const specificityCache: StringMap<number> = Object.create(null);\r\n\r\n  /**\r\n   * A cache of computed selector validity.\r\n   */\r\n  export const validityCache: StringMap<boolean> = Object.create(null);\r\n\r\n  /**\r\n   * An empty element for testing selector validity.\r\n   */\r\n  export const testElem = document.createElement('div');\r\n\r\n  /**\r\n   * A cross-browser CSS selector matching prototype function.\r\n   */\r\n  export const protoMatchFunc: Function = (() => {\r\n    let proto = Element.prototype as any;\r\n    return (\r\n      proto.matches ||\r\n      proto.matchesSelector ||\r\n      proto.mozMatchesSelector ||\r\n      proto.msMatchesSelector ||\r\n      proto.oMatchesSelector ||\r\n      proto.webkitMatchesSelector ||\r\n      function (selector: string) {\r\n        let elem = this as Element;\r\n        let matches = elem.ownerDocument\r\n          ? elem.ownerDocument.querySelectorAll(selector)\r\n          : [];\r\n        return Array.prototype.indexOf.call(matches, elem) !== -1;\r\n      }\r\n    );\r\n  })();\r\n\r\n  /**\r\n   * Calculate the specificity of a single selector.\r\n   *\r\n   * The behavior is undefined if the selector is invalid.\r\n   */\r\n  export function calculateSingle(selector: string): number {\r\n    // Ignore anything after the first comma.\r\n    selector = selector.split(',', 1)[0];\r\n\r\n    // Setup the aggregate counters.\r\n    let a = 0;\r\n    let b = 0;\r\n    let c = 0;\r\n\r\n    // Apply a regex to the front of the selector. If it succeeds, that\r\n    // portion of the selector is removed. Returns a success/fail flag.\r\n    function match(re: RegExp): boolean {\r\n      let match = selector.match(re);\r\n      if (match === null) {\r\n        return false;\r\n      }\r\n      selector = selector.slice(match[0].length);\r\n      return true;\r\n    }\r\n\r\n    // Replace the negation pseudo-class (which is ignored),\r\n    // but keep its inner content (which is not ignored).\r\n    selector = selector.replace(NEGATION_RE, ' $1 ');\r\n\r\n    // Continue matching until the selector is consumed.\r\n    while (selector.length > 0) {\r\n      // Match an ID selector.\r\n      if (match(ID_RE)) {\r\n        a++;\r\n        continue;\r\n      }\r\n\r\n      // Match a class selector.\r\n      if (match(CLASS_RE)) {\r\n        b++;\r\n        continue;\r\n      }\r\n\r\n      // Match an attribute selector.\r\n      if (match(ATTR_RE)) {\r\n        b++;\r\n        continue;\r\n      }\r\n\r\n      // Match a pseudo-element selector. This is done before matching\r\n      // a pseudo-class since this regex overlaps with that regex.\r\n      if (match(PSEUDO_ELEM_RE)) {\r\n        c++;\r\n        continue;\r\n      }\r\n\r\n      // Match a pseudo-class selector.\r\n      if (match(PSEDUO_CLASS_RE)) {\r\n        b++;\r\n        continue;\r\n      }\r\n\r\n      // Match a plain type selector.\r\n      if (match(TYPE_RE)) {\r\n        c++;\r\n        continue;\r\n      }\r\n\r\n      // Finally, match any ignored characters.\r\n      if (match(IGNORE_RE)) {\r\n        continue;\r\n      }\r\n\r\n      // At this point, the selector is assumed to be invalid.\r\n      return 0;\r\n    }\r\n\r\n    // Clamp each component to a reasonable base.\r\n    a = Math.min(a, 0xff);\r\n    b = Math.min(b, 0xff);\r\n    c = Math.min(c, 0xff);\r\n\r\n    // Combine the components into a single result.\r\n    return (a << 16) | (b << 8) | c;\r\n  }\r\n\r\n  /**\r\n   * A regex which matches an ID selector at string start.\r\n   */\r\n  const ID_RE = /^#[^\\s\\+>~#\\.\\[:]+/;\r\n\r\n  /**\r\n   * A regex which matches a class selector at string start.\r\n   */\r\n  const CLASS_RE = /^\\.[^\\s\\+>~#\\.\\[:]+/;\r\n\r\n  /**\r\n   * A regex which matches an attribute selector at string start.\r\n   */\r\n  const ATTR_RE = /^\\[[^\\]]+\\]/;\r\n\r\n  /**\r\n   * A regex which matches a type selector at string start.\r\n   */\r\n  const TYPE_RE = /^[^\\s\\+>~#\\.\\[:]+/;\r\n\r\n  /**\r\n   * A regex which matches a pseudo-element selector at string start.\r\n   */\r\n  const PSEUDO_ELEM_RE = /^(::[^\\s\\+>~#\\.\\[:]+|:first-line|:first-letter|:before|:after)/;\r\n\r\n  /**\r\n   * A regex which matches a pseudo-class selector at string start.\r\n   */\r\n  const PSEDUO_CLASS_RE = /^:[^\\s\\+>~#\\.\\[:]+/;\r\n\r\n  /**\r\n   * A regex which matches ignored characters at string start.\r\n   */\r\n  const IGNORE_RE = /^[\\s\\+>~\\*]+/;\r\n\r\n  /**\r\n   * A regex which matches the negation pseudo-class globally.\r\n   */\r\n  const NEGATION_RE = /:not\\(([^\\)]+)\\)/g;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2018, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  ArrayExt,\r\n  each,\r\n  empty,\r\n  IIterable,\r\n  IIterator,\r\n  IRetroable,\r\n  IterableOrArrayLike\r\n} from '@lumino/algorithm';\r\n\r\n/**\r\n * A generic B+ tree.\r\n *\r\n * #### Notes\r\n * Most operations have `O(log32 n)` or better complexity.\r\n */\r\nexport class BPlusTree<T> implements IIterable<T>, IRetroable<T> {\r\n  /**\r\n   * Construct a new B+ tree.\r\n   *\r\n   * @param cmp - The item comparison function for the tree.\r\n   */\r\n  constructor(cmp: (a: T, b: T) => number) {\r\n    this.cmp = cmp;\r\n  }\r\n\r\n  /**\r\n   * The item comparison function for the tree.\r\n   *\r\n   * #### Complexity\r\n   * `O(1)`\r\n   */\r\n  readonly cmp: (a: T, b: T) => number;\r\n\r\n  /**\r\n   * Whether the tree is empty.\r\n   *\r\n   * #### Complexity\r\n   * `O(1)`\r\n   */\r\n  get isEmpty(): boolean {\r\n    return this._root.size === 0;\r\n  }\r\n\r\n  /**\r\n   * The size of the tree.\r\n   *\r\n   * #### Complexity\r\n   * `O(1)`\r\n   */\r\n  get size(): number {\r\n    return this._root.size;\r\n  }\r\n\r\n  /**\r\n   * The first item in the tree.\r\n   *\r\n   * This is `undefined` if the tree is empty.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  get first(): T | undefined {\r\n    let node = Private.firstLeaf(this._root);\r\n    return node.size > 0 ? node.items[0] : undefined;\r\n  }\r\n\r\n  /**\r\n   * The last item in the tree.\r\n   *\r\n   * This is `undefined` if the tree is empty.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  get last(): T | undefined {\r\n    let node = Private.lastLeaf(this._root);\r\n    return node.size > 0 ? node.items[node.size - 1] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the items in the tree.\r\n   *\r\n   * @returns A new iterator starting with the first item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  iter(): IIterator<T> {\r\n    return Private.iterItems(this._root);\r\n  }\r\n\r\n  /**\r\n   * Create a reverse iterator over the items in the tree.\r\n   *\r\n   * @returns A new iterator starting with the last item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  retro(): IIterator<T> {\r\n    return Private.retroItems(this._root);\r\n  }\r\n\r\n  /**\r\n   * Create an iterator for a slice of items in the tree.\r\n   *\r\n   * @param start - The index of the first item, inclusive. This\r\n   *   should be `< stop`. Negative values are taken as an offset\r\n   *   from the end of the tree. The default is `0`.\r\n   *\r\n   * @param stop - The index of the last item, exclusive. This\r\n   *   should be `> start`. Negative values are taken as an offset\r\n   *   from the end of the tree. The default is `size`.\r\n   *\r\n   * @returns A new iterator starting with the specified item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  slice(start?: number, stop?: number): IIterator<T> {\r\n    return Private.sliceItems(this._root, start, stop);\r\n  }\r\n\r\n  /**\r\n   * Create a reverse iterator for a slice of items in the tree.\r\n   *\r\n   * @param start - The index of the first item, inclusive. This\r\n   *   should be `> stop`. Negative values are taken as an offset\r\n   *   from the end of the tree. The default is `size - 1`.\r\n   *\r\n   * @param stop - The index of the last item, exclusive. This\r\n   *   should be `< start`. Negative values are taken as an offset\r\n   *   from the end of the tree. The default is `-size - 1`.\r\n   *\r\n   * @returns A new reverse iterator starting with the specified item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  retroSlice(start?: number, stop?: number): IIterator<T> {\r\n    return Private.retroSliceItems(this._root, start, stop);\r\n  }\r\n\r\n  /**\r\n   * Get the item at a particular index.\r\n   *\r\n   * @param index - The index of the item of interest. Negative\r\n   *   values are taken as an offset from the end of the tree.\r\n   *\r\n   * @returns The item at the specified index, or `undefined` if\r\n   *   the index is out of range.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  at(index: number): T | undefined {\r\n    return Private.itemAt(this._root, index);\r\n  }\r\n\r\n  /**\r\n   * Test whether the tree has an item which matches a key.\r\n   *\r\n   * @param key - The key of interest.\r\n   *\r\n   * @param cmp - A function which compares an item against the key.\r\n   *\r\n   * @returns `true` if the tree has an item which matches the given\r\n   *   key, `false` otherwise.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  has<U>(key: U, cmp: (item: T, key: U) => number): boolean {\r\n    return Private.hasItem(this._root, key, cmp);\r\n  }\r\n\r\n  /**\r\n   * Get the index of an item which matches a key.\r\n   *\r\n   * @param key - The key of interest.\r\n   *\r\n   * @param cmp - A function which compares an item against the key.\r\n   *\r\n   * @returns The index of the item which matches the given key. A\r\n   *   negative value means that a matching item does not exist in\r\n   *   the tree, but if one did it would reside at `-index - 1`.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  indexOf<U>(key: U, cmp: (item: T, key: U) => number): number {\r\n    return Private.indexOf(this._root, key, cmp);\r\n  }\r\n\r\n  /**\r\n   * Get the item which matches a key.\r\n   *\r\n   * @param item - The key of interest.\r\n   *\r\n   * @param cmp - A function which compares an item against the key.\r\n   *\r\n   * @returns The item which matches the given key, or `undefined` if\r\n   *   the tree does not have a matching item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  get<U>(key: U, cmp: (item: T, key: U) => number): T | undefined {\r\n    return Private.getItem(this._root, key, cmp);\r\n  }\r\n\r\n  /**\r\n   * Assign new items to the tree, replacing all current items.\r\n   *\r\n   * @param items - The items to assign to the tree.\r\n   *\r\n   * #### Complexity\r\n   * `O(n log32 n)`\r\n   */\r\n  assign(items: IterableOrArrayLike<T>): void {\r\n    this.clear();\r\n    this.update(items);\r\n  }\r\n\r\n  /**\r\n   * Insert an item into the tree.\r\n   *\r\n   * @param item - The item of interest.\r\n   *\r\n   * @returns If the given item matches an existing item in the tree,\r\n   *   the given item will replace it, and the existing item will be\r\n   *   returned. Otherwise, this method returns `undefined`.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  insert(item: T): T | undefined {\r\n    let existing = Private.insertItem(this._root, item, this.cmp);\r\n    this._root = Private.maybeSplitRoot(this._root);\r\n    return existing;\r\n  }\r\n\r\n  /**\r\n   * Update the tree with multiple items.\r\n   *\r\n   * @param items - The items to insert into the tree.\r\n   *\r\n   * #### Complexity\r\n   * `O(k log32 n)`\r\n   */\r\n  update(items: IterableOrArrayLike<T>): void {\r\n    each(items, item => {\r\n      this.insert(item);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Delete an item which matches a particular key.\r\n   *\r\n   * @param key - The key of interest.\r\n   *\r\n   * @param cmp - A function which compares an item against the key.\r\n   *\r\n   * @returns The item removed from the tree, or `undefined` if no\r\n   *   item matched the given key.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  delete<U>(key: U, cmp: (item: T, key: U) => number): T | undefined {\r\n    let item = Private.deleteItem(this._root, key, cmp);\r\n    this._root = Private.maybeExtractRoot(this._root);\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * Remove an item at a particular index.\r\n   *\r\n   * @param index - The index of the item to remove. Negative\r\n   *   values are taken as an offset from the end of the tree.\r\n   *\r\n   * @returns The item removed from the tree, or `undefined` if\r\n   *   the given index is out of range.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  remove(index: number): T | undefined {\r\n    let item = Private.removeItem(this._root, index);\r\n    this._root = Private.maybeExtractRoot(this._root);\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * Clear the contents of the tree.\r\n   *\r\n   * #### Complexity\r\n   * `O(n)`\r\n   */\r\n  clear(): void {\r\n    Private.clear(this._root);\r\n    this._root = new Private.LeafNode<T>();\r\n  }\r\n\r\n  private _root: Private.Node<T> = new Private.LeafNode<T>();\r\n}\r\n\r\n/**\r\n * The namespace for the `BPlusTree` class statics.\r\n */\r\nexport namespace BPlusTree {\r\n  /**\r\n   * Create a new B+ tree populated with the given items.\r\n   *\r\n   * @param items - The items to add to the tree.\r\n   *\r\n   * @param cmp - The item comparison function for the tree.\r\n   *\r\n   * @returns A new B+ tree populated with the given items.\r\n   *\r\n   * #### Complexity\r\n   * `O(n log32 n)`\r\n   */\r\n  export function from<T>(\r\n    items: IterableOrArrayLike<T>,\r\n    cmp: (a: T, b: T) => number\r\n  ): BPlusTree<T> {\r\n    let tree = new BPlusTree<T>(cmp);\r\n    tree.assign(items);\r\n    return tree;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A const enum of the B+ tree node types.\r\n   */\r\n  export const enum NodeType {\r\n    Branch,\r\n    Leaf\r\n  }\r\n\r\n  /**\r\n   * A branch node in a B+ tree.\r\n   */\r\n  export class BranchNode<T> {\r\n    /**\r\n     * The left-most item of each child subtree.\r\n     */\r\n    readonly items: T[] = [];\r\n\r\n    /**\r\n     * The cumulative sizes of each child subtree.\r\n     */\r\n    readonly sizes: number[] = [];\r\n\r\n    /**\r\n     * The child nodes of this branch node.\r\n     */\r\n    readonly children: Node<T>[] = [];\r\n\r\n    /**\r\n     * The discriminated type of the node.\r\n     */\r\n    get type(): NodeType.Branch {\r\n      return NodeType.Branch;\r\n    }\r\n\r\n    /**\r\n     * The total number of items in the subtree.\r\n     */\r\n    get size(): number {\r\n      return this.sizes[this.sizes.length - 1];\r\n    }\r\n\r\n    /**\r\n     * The tree width of the node.\r\n     */\r\n    get width(): number {\r\n      return this.children.length;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A leaf node in a B+ tree.\r\n   */\r\n  export class LeafNode<T> {\r\n    /**\r\n     * The next sibling leaf node of this leaf node.\r\n     */\r\n    next: LeafNode<T> | null = null;\r\n\r\n    /**\r\n     * The previous sibling leaf node of this leaf node.\r\n     */\r\n    prev: LeafNode<T> | null = null;\r\n\r\n    /**\r\n     * The items of the leaf.\r\n     */\r\n    readonly items: T[] = [];\r\n\r\n    /**\r\n     * The discriminated type of the node.\r\n     */\r\n    get type(): NodeType.Leaf {\r\n      return NodeType.Leaf;\r\n    }\r\n\r\n    /**\r\n     * The total number of items in the leaf.\r\n     */\r\n    get size(): number {\r\n      return this.items.length;\r\n    }\r\n\r\n    /**\r\n     * The tree width of the node.\r\n     */\r\n    get width(): number {\r\n      return this.items.length;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A type alias for the B+ tree nodes.\r\n   */\r\n  export type Node<T> = BranchNode<T> | LeafNode<T>;\r\n\r\n  /**\r\n   * Get the first leaf node in the tree.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @returns The first leaf node in the tree.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function firstLeaf<T>(node: Node<T>): LeafNode<T> {\r\n    while (node.type === NodeType.Branch) {\r\n      node = node.children[0];\r\n    }\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Get the last leaf node in the tree.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @returns The last leaf node in the tree.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function lastLeaf<T>(node: Node<T>): LeafNode<T> {\r\n    while (node.type === NodeType.Branch) {\r\n      node = node.children[node.children.length - 1];\r\n    }\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Create a forward iterator for the items in the tree.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @returns A new forward iterator starting with the first item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function iterItems<T>(node: Node<T>): IIterator<T> {\r\n    let leaf = firstLeaf(node);\r\n    return new ForwardIterator<T>(leaf, 0, -1);\r\n  }\r\n\r\n  /**\r\n   * Create a reverse iterator for the items in the tree.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @returns A new reverse iterator starting with the last item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function retroItems<T>(node: Node<T>): IIterator<T> {\r\n    let leaf = lastLeaf(node);\r\n    return new RetroIterator<T>(leaf, leaf.size - 1, -1);\r\n  }\r\n\r\n  /**\r\n   * Create an iterator for a slice of items in the tree.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @param start - The index of the first item, inclusive. This\r\n   *   should be `< stop`. Negative values are taken as an offset\r\n   *   from the end of the tree. The default is `0`.\r\n   *\r\n   * @param stop - The index of the last item, exclusive. This\r\n   *   should be `> start`. Negative values are taken as an offset\r\n   *   from the end of the tree. The default is `size`.\r\n   *\r\n   * @returns A new iterator starting with the specified item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function sliceItems<T>(\r\n    node: Node<T>,\r\n    start?: number,\r\n    stop?: number\r\n  ): IIterator<T> {\r\n    // Normalize the start index.\r\n    if (start === undefined) {\r\n      start = 0;\r\n    } else if (start < 0) {\r\n      start = Math.max(0, start + node.size);\r\n    } else {\r\n      start = Math.min(start, node.size);\r\n    }\r\n\r\n    // Normalize the stop index.\r\n    if (stop === undefined) {\r\n      stop = node.size;\r\n    } else if (stop < 0) {\r\n      stop = Math.max(0, stop + node.size);\r\n    } else {\r\n      stop = Math.min(stop, node.size);\r\n    }\r\n\r\n    // Compute effective count.\r\n    let count = Math.max(0, stop - start);\r\n\r\n    // Bail early if there is nothing to iterate.\r\n    if (count === 0) {\r\n      return empty<T>();\r\n    }\r\n\r\n    // Find the starting leaf node and local index.\r\n    while (node.type === NodeType.Branch) {\r\n      let i = findPivotIndexByIndex(node.sizes, start);\r\n      if (i > 0) start -= node.sizes[i - 1];\r\n      node = node.children[i];\r\n    }\r\n\r\n    // Return the forward iterator for the range.\r\n    return new ForwardIterator<T>(node, start, count);\r\n  }\r\n\r\n  /**\r\n   * Create a reverse iterator for a slice of items in the tree.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @param start - The index of the first item, inclusive. This\r\n   *   should be `> stop`. Negative values are taken as an offset\r\n   *   from the end of the tree. The default is `size - 1`.\r\n   *\r\n   * @param stop - The index of the last item, exclusive. This\r\n   *   should be `< start`. Negative values are taken as an offset\r\n   *   from the end of the tree. The default is `-size - 1`.\r\n   *\r\n   * @returns A new reverse iterator starting with the specified item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function retroSliceItems<T>(\r\n    node: Node<T>,\r\n    start?: number,\r\n    stop?: number\r\n  ): IIterator<T> {\r\n    // Normalize the start index.\r\n    if (start === undefined) {\r\n      start = node.size - 1;\r\n    } else if (start < 0) {\r\n      start = Math.max(-1, start + node.size);\r\n    } else {\r\n      start = Math.min(start, node.size - 1);\r\n    }\r\n\r\n    // Normalize the stop index.\r\n    if (stop === undefined) {\r\n      stop = -1;\r\n    } else if (stop < 0) {\r\n      stop = Math.max(-1, stop + node.size);\r\n    } else {\r\n      stop = Math.min(stop, node.size - 1);\r\n    }\r\n\r\n    // Compute the effective count.\r\n    let count = Math.max(0, start - stop);\r\n\r\n    // Bail early if there is nothing to iterate.\r\n    if (count === 0) {\r\n      return empty<T>();\r\n    }\r\n\r\n    // Find the starting leaf node and local index.\r\n    while (node.type === NodeType.Branch) {\r\n      let i = findPivotIndexByIndex(node.sizes, start);\r\n      if (i > 0) start -= node.sizes[i - 1];\r\n      node = node.children[i];\r\n    }\r\n\r\n    // Return the retro iterator for the range.\r\n    return new RetroIterator<T>(node, start, count);\r\n  }\r\n\r\n  /**\r\n   * Get the item at the specified index.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @param index - The index of the item of interest. Negative\r\n   *   values are taken as an offset from the end of the tree.\r\n   *\r\n   * @returns The item at the specified index, or `undefined` if\r\n   *   the index is out of range.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function itemAt<T>(node: Node<T>, index: number): T | undefined {\r\n    // Wrap negative indices.\r\n    if (index < 0) {\r\n      index += node.size;\r\n    }\r\n\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= node.size) {\r\n      return undefined;\r\n    }\r\n\r\n    // Find the containing leaf node and local index.\r\n    while (node.type === NodeType.Branch) {\r\n      let i = findPivotIndexByIndex(node.sizes, index);\r\n      if (i > 0) index -= node.sizes[i - 1];\r\n      node = node.children[i];\r\n    }\r\n\r\n    // Return the item at the specified index.\r\n    return node.items[index];\r\n  }\r\n\r\n  /**\r\n   * Test whether the tree contains an item which matches a key.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @param key - The key of interest.\r\n   *\r\n   * @param cmp - The key comparison function.\r\n   *\r\n   * @returns Whether the tree contains a matching item.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function hasItem<T, U>(\r\n    node: Node<T>,\r\n    key: U,\r\n    cmp: (item: T, key: U) => number\r\n  ): boolean {\r\n    // Find the containing leaf node.\r\n    while (node.type === NodeType.Branch) {\r\n      let i = findPivotIndexByKey(node.items, key, cmp);\r\n      node = node.children[i];\r\n    }\r\n\r\n    // Find the key index.\r\n    let i = findKeyIndex(node.items, key, cmp);\r\n\r\n    // Return whether or not the node contains a matching item.\r\n    return i >= 0;\r\n  }\r\n\r\n  /**\r\n   * Get the index of the item which matches a key.\r\n   *\r\n   * @param node - The node of interest.\r\n   *\r\n   * @param key - The key of interest.\r\n   *\r\n   * @param cmp - The key comparison function.\r\n   *\r\n   * @returns The index of the item which matches the given key. A\r\n   *   negative value means that a matching item does not exist in\r\n   *   the tree, but if one did it would reside at `-index - 1`.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function indexOf<T, U>(\r\n    node: Node<T>,\r\n    key: U,\r\n    cmp: (item: T, key: U) => number\r\n  ): number {\r\n    // Set up the global index.\r\n    let index = 0;\r\n\r\n    // Find the containing leaf node and global index.\r\n    while (node.type === NodeType.Branch) {\r\n      let i = findPivotIndexByKey(node.items, key, cmp);\r\n      if (i > 0) index += node.sizes[i - 1];\r\n      node = node.children[i];\r\n    }\r\n\r\n    // Find the key index.\r\n    let i = findKeyIndex(node.items, key, cmp);\r\n\r\n    // Return the final computed index.\r\n    return i >= 0 ? index + i : -index + i;\r\n  }\r\n\r\n  /**\r\n   * Get the item for a particular key.\r\n   *\r\n   * @param node - The node of interest.\r\n   *\r\n   * @param key - The key of interest.\r\n   *\r\n   * @param cmp - The key comparison function.\r\n   *\r\n   * @returns The item for the specified key, or `undefined` if\r\n   *   the tree does not have a matching item for the key.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   */\r\n  export function getItem<T, U>(\r\n    node: Node<T>,\r\n    key: U,\r\n    cmp: (item: T, key: U) => number\r\n  ): T | undefined {\r\n    // Find the containing leaf node.\r\n    while (node.type === NodeType.Branch) {\r\n      let i = findPivotIndexByKey(node.items, key, cmp);\r\n      node = node.children[i];\r\n    }\r\n\r\n    // Find the key index.\r\n    let i = findKeyIndex(node.items, key, cmp);\r\n\r\n    // Return the item for the given key.\r\n    return i >= 0 ? node.items[i] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Insert an item into the tree.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @param item - The item of interest.\r\n   *\r\n   * @param cmp - The item comparison function.\r\n   *\r\n   * @returns If the given item matches an existing item in the tree,\r\n   *   the given item will replace it, and the existing item will be\r\n   *   returned. Otherwise, this function returns `undefined`.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   *\r\n   * #### Notes\r\n   * The root may be overfull after calling this function.\r\n   */\r\n  export function insertItem<T>(\r\n    node: Node<T>,\r\n    item: T,\r\n    cmp: (a: T, b: T) => number\r\n  ): T | undefined {\r\n    // Handle leaf nodes first.\r\n    if (node.type === NodeType.Leaf) {\r\n      // Find the index for the given item.\r\n      let i = findKeyIndex(node.items, item, cmp);\r\n\r\n      // Fetch the existing item and insert the new item.\r\n      let existing: T | undefined;\r\n      if (i >= 0) {\r\n        existing = node.items[i];\r\n        node.items[i] = item;\r\n      } else {\r\n        existing = undefined;\r\n        ArrayExt.insert(node.items, -i - 1, item);\r\n      }\r\n\r\n      // Return the existing item.\r\n      return existing;\r\n    }\r\n\r\n    // Find the pivot index for the insert.\r\n    let i = findPivotIndexByKey(node.items, item, cmp);\r\n\r\n    // Fetch the pivot child.\r\n    let child = node.children[i];\r\n\r\n    // Fetch the current size of the child.\r\n    let prevSize = child.size;\r\n\r\n    // Recursively insert the item into the child.\r\n    let existing = insertItem(child, item, cmp);\r\n\r\n    // Fetch the updated size of the child.\r\n    let currSize = child.size;\r\n\r\n    // Update the item state of the branch.\r\n    node.items[i] = child.items[0];\r\n\r\n    // Bail early if the child size did not change.\r\n    if (prevSize === currSize) {\r\n      return existing;\r\n    }\r\n\r\n    // Split the child if it's overfull.\r\n    if (child.width > MAX_NODE_WIDTH) {\r\n      let next = splitNode(child);\r\n      ArrayExt.insert(node.children, i + 1, next);\r\n      ArrayExt.insert(node.items, i + 1, next.items[0]);\r\n    }\r\n\r\n    // Update the dirty sizes of the branch.\r\n    updateSizes(node, i);\r\n\r\n    // Return the existing item.\r\n    return existing;\r\n  }\r\n\r\n  /**\r\n   * Delete an item in the tree.\r\n   *\r\n   * @param node - The node of interest.\r\n   *\r\n   * @param key - The key of interest.\r\n   *\r\n   * @param cmp - The key comparison function.\r\n   *\r\n   * @returns The deleted item or `undefined`.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   *\r\n   * #### Notes\r\n   * The root may be underfull after calling this function.\r\n   */\r\n  export function deleteItem<T, U>(\r\n    node: Node<T>,\r\n    key: U,\r\n    cmp: (item: T, key: U) => number\r\n  ): T | undefined {\r\n    // Handle leaf nodes first.\r\n    if (node.type === NodeType.Leaf) {\r\n      // Find the index for the given key.\r\n      let i = findKeyIndex(node.items, key, cmp);\r\n\r\n      // Bail early if the item does not exist.\r\n      if (i < 0) {\r\n        return undefined;\r\n      }\r\n\r\n      // Remove the item at the computed index.\r\n      return ArrayExt.removeAt(node.items, i);\r\n    }\r\n\r\n    // Find the pivot index for the delete.\r\n    let i = findPivotIndexByKey(node.items, key, cmp);\r\n\r\n    // Fetch the pivot child.\r\n    let child = node.children[i];\r\n\r\n    // Fetch the current size of the child.\r\n    let prevSize = child.size;\r\n\r\n    // Recursively remove the item from the child.\r\n    let item = deleteItem(child, key, cmp);\r\n\r\n    // Fetch the updated size of the child.\r\n    let currSize = child.size;\r\n\r\n    // Bail early if the child size did not change.\r\n    if (prevSize === currSize) {\r\n      return item;\r\n    }\r\n\r\n    // Update the item state of the branch.\r\n    node.items[i] = child.items[0];\r\n\r\n    // Join the child if it's underfull.\r\n    if (child.width < MIN_NODE_WIDTH) {\r\n      i = joinChild(node, i);\r\n    }\r\n\r\n    // Update the dirty sizes of the branch.\r\n    updateSizes(node, i);\r\n\r\n    // Return the deleted item.\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * Remove an item from the tree.\r\n   *\r\n   * @param node - The node of interest.\r\n   *\r\n   * @param index - The index of interest.\r\n   *\r\n   * @returns The removed item or `undefined`.\r\n   *\r\n   * #### Complexity\r\n   * `O(log32 n)`\r\n   *\r\n   * #### Notes\r\n   * The root may be underfull after calling this function.\r\n   */\r\n  export function removeItem<T>(node: Node<T>, index: number): T | undefined {\r\n    // Wrap negative indices.\r\n    if (index < 0) {\r\n      index += node.size;\r\n    }\r\n\r\n    // Bail early if the index is out of range.\r\n    if (index < 0 || index >= node.size) {\r\n      return undefined;\r\n    }\r\n\r\n    // Handle leaf nodes first.\r\n    if (node.type === NodeType.Leaf) {\r\n      return ArrayExt.removeAt(node.items, index);\r\n    }\r\n\r\n    // Find the pivot index for the remove.\r\n    let i = findPivotIndexByIndex(node.sizes, index);\r\n    if (i > 0) index -= node.sizes[i];\r\n\r\n    // Fetch the pivot child.\r\n    let child = node.children[i];\r\n\r\n    // Recursively remove the item from the child.\r\n    let item = removeItem(child, index);\r\n\r\n    // Update the item state of the branch.\r\n    node.items[i] = child.items[0];\r\n\r\n    // Join the child if it's underfull.\r\n    if (child.width < MIN_NODE_WIDTH) {\r\n      i = joinChild(node, i);\r\n    }\r\n\r\n    // Update the dirty sizes of the branch.\r\n    updateSizes(node, i);\r\n\r\n    // Return the removed item.\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * Recursively clear the contents of a node.\r\n   *\r\n   * @param node - The node of interest.\r\n   *\r\n   * #### Complexity\r\n   * `O(n)`\r\n   */\r\n  export function clear<T>(node: Node<T>): void {\r\n    if (node.type === NodeType.Branch) {\r\n      each(node.children, clear);\r\n      node.children.length = 0;\r\n      node.sizes.length = 0;\r\n      node.items.length = 0;\r\n    } else {\r\n      node.items.length = 0;\r\n      node.next = null;\r\n      node.prev = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Split a root node and create a new root, if needed.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @returns The new root node.\r\n   */\r\n  export function maybeSplitRoot<T>(node: Node<T>): Node<T> {\r\n    // Bail early if the current root is not overfull.\r\n    if (node.width <= MAX_NODE_WIDTH) {\r\n      return node;\r\n    }\r\n\r\n    // Create a new root branch node.\r\n    let root = new BranchNode<T>();\r\n\r\n    // Split the node to the right and create a new sibling.\r\n    let next = splitNode(node);\r\n\r\n    // Add the sizes to the root.\r\n    root.sizes[0] = node.size;\r\n    root.sizes[1] = node.size + next.size;\r\n\r\n    // Add the children to the root.\r\n    root.children[0] = node;\r\n    root.children[1] = next;\r\n\r\n    // Add the items to the root.\r\n    root.items[0] = node.items[0];\r\n    root.items[1] = next.items[0];\r\n\r\n    // Return the new root node.\r\n    return root;\r\n  }\r\n\r\n  /**\r\n   * Extract a single node child as a new root, if needed.\r\n   *\r\n   * @param node - The root node of interest.\r\n   *\r\n   * @returns The new root node.\r\n   */\r\n  export function maybeExtractRoot<T>(node: Node<T>): Node<T> {\r\n    // Bail early if the node it already a leaf.\r\n    if (node.type === NodeType.Leaf) {\r\n      return node;\r\n    }\r\n\r\n    // Bail early if the branch has more than one child.\r\n    if (node.children.length > 1) {\r\n      return node;\r\n    }\r\n\r\n    // Extract the sole remaining child as the new root.\r\n    let root = node.children.pop()!;\r\n\r\n    // Clear the rest of the node state.\r\n    clear(node);\r\n\r\n    // Return the new root.\r\n    return root;\r\n  }\r\n\r\n  /**\r\n   * The maximum width for a node in the tree.\r\n   */\r\n  const MAX_NODE_WIDTH = 32;\r\n\r\n  /**\r\n   * The minimum width for a node in the tree.\r\n   */\r\n  const MIN_NODE_WIDTH = MAX_NODE_WIDTH >> 1;\r\n\r\n  /**\r\n   * A forward iterator for a B+ tree.\r\n   */\r\n  class ForwardIterator<T> implements IIterator<T> {\r\n    /**\r\n     * Construct a new forward iterator.\r\n     *\r\n     * @param node - The first leaf node in the chain.\r\n     *\r\n     * @param index - The local index of the first item.\r\n     *\r\n     * @param count - The number of items to iterate. A value `< 0`\r\n     *   will iterate all available items.\r\n     */\r\n    constructor(node: LeafNode<T> | null, index: number, count: number) {\r\n      this._node = node;\r\n      this._index = index;\r\n      this._count = count;\r\n    }\r\n\r\n    /**\r\n     * Get an iterator over the object's values.\r\n     *\r\n     * @returns An iterator which yields the object's values.\r\n     */\r\n    iter(): IIterator<T> {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Create an independent clone of the iterator.\r\n     *\r\n     * @returns A new independent clone of the iterator.\r\n     */\r\n    clone(): IIterator<T> {\r\n      return new ForwardIterator<T>(this._node, this._index, this._count);\r\n    }\r\n\r\n    /**\r\n     * Get the next value from the iterator.\r\n     *\r\n     * @returns The next value from the iterator, or `undefined`.\r\n     */\r\n    next(): T | undefined {\r\n      if (this._node === null || this._count === 0) {\r\n        return undefined;\r\n      }\r\n      if (this._index >= this._node.size) {\r\n        this._node = this._node.next;\r\n        this._index = 0;\r\n        return this.next();\r\n      }\r\n      if (this._count > 0) {\r\n        this._count--;\r\n      }\r\n      return this._node.items[this._index++];\r\n    }\r\n\r\n    private _index: number;\r\n    private _count: number;\r\n    private _node: LeafNode<T> | null;\r\n  }\r\n\r\n  /**\r\n   * A reverse iterator for a B+ tree.\r\n   */\r\n  class RetroIterator<T> implements IIterator<T> {\r\n    /**\r\n     * Construct a new retro iterator.\r\n     *\r\n     * @param node - The last leaf node in the chain.\r\n     *\r\n     * @param index - The local index of the last item.\r\n     *\r\n     * @param count - The number of items to iterate. A value `< 0`\r\n     *   will iterate all available items.\r\n     */\r\n    constructor(node: LeafNode<T> | null, index: number, count: number) {\r\n      this._node = node;\r\n      this._index = index;\r\n      this._count = count;\r\n    }\r\n\r\n    /**\r\n     * Get an iterator over the object's values.\r\n     *\r\n     * @returns An iterator which yields the object's values.\r\n     */\r\n    iter(): IIterator<T> {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Create an independent clone of the iterator.\r\n     *\r\n     * @returns A new independent clone of the iterator.\r\n     */\r\n    clone(): IIterator<T> {\r\n      return new RetroIterator<T>(this._node, this._index, this._count);\r\n    }\r\n\r\n    /**\r\n     * Get the next value from the iterator.\r\n     *\r\n     * @returns The next value from the iterator, or `undefined`.\r\n     */\r\n    next(): T | undefined {\r\n      if (this._node === null || this._count === 0) {\r\n        return undefined;\r\n      }\r\n      if (this._index >= this._node.size) {\r\n        this._index = this._node.size - 1;\r\n      }\r\n      if (this._index < 0) {\r\n        this._node = this._node.prev;\r\n        this._index = this._node ? this._node.size - 1 : -1;\r\n        return this.next();\r\n      }\r\n      if (this._count > 0) {\r\n        this._count--;\r\n      }\r\n      return this._node.items[this._index--];\r\n    }\r\n\r\n    private _index: number;\r\n    private _count: number;\r\n    private _node: LeafNode<T> | null;\r\n  }\r\n\r\n  /**\r\n   * Find the pivot index for a particular local index.\r\n   */\r\n  function findPivotIndexByIndex(sizes: number[], index: number): number {\r\n    let n = sizes.length;\r\n    for (let i = 0; i < n; ++i) {\r\n      if (sizes[i] > index) {\r\n        return i;\r\n      }\r\n    }\r\n    return n - 1;\r\n  }\r\n\r\n  /**\r\n   * Find the pivot index for a particular key.\r\n   */\r\n  function findPivotIndexByKey<T, U>(\r\n    items: T[],\r\n    key: U,\r\n    cmp: (item: T, key: U) => number\r\n  ): number {\r\n    let n = items.length;\r\n    for (let i = 1; i < n; ++i) {\r\n      if (cmp(items[i], key) > 0) {\r\n        return i - 1;\r\n      }\r\n    }\r\n    return n - 1;\r\n  }\r\n\r\n  /**\r\n   * Find the key index for a particular key.\r\n   */\r\n  function findKeyIndex<T, U>(\r\n    items: T[],\r\n    key: U,\r\n    cmp: (item: T, key: U) => number\r\n  ): number {\r\n    let n = items.length;\r\n    for (let i = 0; i < n; ++i) {\r\n      let c = cmp(items[i], key);\r\n      if (c === 0) {\r\n        return i;\r\n      }\r\n      if (c > 0) {\r\n        return -i - 1;\r\n      }\r\n    }\r\n    return -n - 1;\r\n  }\r\n\r\n  /**\r\n   * Update the sizes of a branch node starting at the given index.\r\n   */\r\n  function updateSizes<T>(node: BranchNode<T>, i: number): void {\r\n    let { sizes, children } = node;\r\n    let last = i > 0 ? sizes[i - 1] : 0;\r\n    for (let n = children.length; i < n; ++i) {\r\n      last = sizes[i] = last + children[i].size;\r\n    }\r\n    sizes.length = children.length;\r\n  }\r\n\r\n  /**\r\n   * Split a node and return its new next sibling.\r\n   *\r\n   * @param node - The node of interest.\r\n   *\r\n   * @returns The new next sibling node.\r\n   */\r\n  function splitNode<T>(node: Node<T>): Node<T> {\r\n    // Handle leaf nodes first.\r\n    if (node.type === NodeType.Leaf) {\r\n      // Create the new sibling leaf node.\r\n      let next = new LeafNode<T>();\r\n\r\n      // Move the items to the new sibling.\r\n      let v1 = node.items;\r\n      let v2 = next.items;\r\n      for (let i = MIN_NODE_WIDTH, n = v1.length; i < n; ++i) {\r\n        v2.push(v1[i]);\r\n      }\r\n      v1.length = MIN_NODE_WIDTH;\r\n\r\n      // Patch up the sibling links.\r\n      if (node.next) node.next.prev = next;\r\n      next.next = node.next;\r\n      next.prev = node;\r\n      node.next = next;\r\n\r\n      // Return the new next sibling.\r\n      return next;\r\n    }\r\n\r\n    // Create the new sibling branch node.\r\n    let next = new BranchNode<T>();\r\n\r\n    // Move the children to the new sibling.\r\n    let c1 = node.children;\r\n    let c2 = next.children;\r\n    for (let i = MIN_NODE_WIDTH, n = c1.length; i < n; ++i) {\r\n      c2.push(c1[i]);\r\n    }\r\n    c1.length = MIN_NODE_WIDTH;\r\n\r\n    // Move the items to the new sibling.\r\n    let v1 = node.items;\r\n    let v2 = next.items;\r\n    for (let i = MIN_NODE_WIDTH, n = v1.length; i < n; ++i) {\r\n      v2.push(v1[i]);\r\n    }\r\n    v1.length = MIN_NODE_WIDTH;\r\n\r\n    // Update the dirty sizes of the nodes.\r\n    updateSizes(node, MIN_NODE_WIDTH);\r\n    updateSizes(next, 0);\r\n\r\n    // Return the new next sibling.\r\n    return next;\r\n  }\r\n\r\n  /**\r\n   * Join a child node of a branch with one of its siblings.\r\n   *\r\n   * @param node - The branch node of interest.\r\n   *\r\n   * @param i - The index of the child node of interest.\r\n   *\r\n   * @returns The first modified index.\r\n   *\r\n   * #### Notes\r\n   * This may cause the branch to become underfull.\r\n   */\r\n  function joinChild<T>(node: BranchNode<T>, i: number): number {\r\n    // Fetch the child to be joined.\r\n    let child = node.children[i];\r\n\r\n    // Fetch the relevant sibling.\r\n    let sibling = i === 0 ? node.children[i + 1] : node.children[i - 1];\r\n\r\n    // Compute the flags which control the join behavior.\r\n    let hasNext = i === 0;\r\n    let isLeaf = child.type === NodeType.Leaf;\r\n    let hasExtra = sibling.width > MIN_NODE_WIDTH;\r\n\r\n    // Join case #1: steal from next sibling leaf\r\n    if (isLeaf && hasExtra && hasNext) {\r\n      // Cast the children as leaves.\r\n      let c = child as LeafNode<T>;\r\n      let s = sibling as LeafNode<T>;\r\n\r\n      // Steal an item.\r\n      c.items.push(s.items.shift()!);\r\n\r\n      // Update the branch items.\r\n      node.items[i + 1] = s.items[0];\r\n\r\n      // Return the first modified index.\r\n      return i;\r\n    }\r\n\r\n    // Join case #2: steal from previous sibling leaf\r\n    if (isLeaf && hasExtra && !hasNext) {\r\n      // Cast the children as leaves.\r\n      let c = child as LeafNode<T>;\r\n      let s = sibling as LeafNode<T>;\r\n\r\n      // Steal an item.\r\n      c.items.unshift(s.items.pop()!);\r\n\r\n      // Update the branch items.\r\n      node.items[i] = c.items[0];\r\n\r\n      // Return the first modified index.\r\n      return i - 1;\r\n    }\r\n\r\n    // Join case #3: merge with next sibling leaf\r\n    if (isLeaf && !hasExtra && hasNext) {\r\n      // Cast the children as leaves.\r\n      let c = child as LeafNode<T>;\r\n      let s = sibling as LeafNode<T>;\r\n\r\n      // Merge items.\r\n      s.items.unshift(...c.items);\r\n\r\n      // Remove the old branch child.\r\n      ArrayExt.removeAt(node.children, i);\r\n\r\n      // Remove the stale branch item.\r\n      ArrayExt.removeAt(node.items, i + 1);\r\n\r\n      // Patch up the sibling links.\r\n      if (c.prev) c.prev.next = s;\r\n      s.prev = c.prev;\r\n\r\n      // Clear the original child.\r\n      clear(c);\r\n\r\n      // Return the first modified index.\r\n      return i;\r\n    }\r\n\r\n    // Join case #4: merge with previous sibling leaf\r\n    if (isLeaf && !hasExtra && !hasNext) {\r\n      // Cast the children as leaves.\r\n      let c = child as LeafNode<T>;\r\n      let s = sibling as LeafNode<T>;\r\n\r\n      // Merge items.\r\n      s.items.push(...c.items);\r\n\r\n      // Remove the old branch child.\r\n      ArrayExt.removeAt(node.children, i);\r\n\r\n      // Remove the stale branch item.\r\n      ArrayExt.removeAt(node.items, i);\r\n\r\n      // Patch up the sibling links.\r\n      if (c.next) c.next.prev = s;\r\n      s.next = c.next;\r\n\r\n      // Clear the original child.\r\n      clear(c);\r\n\r\n      // Return the first modified index.\r\n      return i - 1;\r\n    }\r\n\r\n    // Join case #5: steal from next sibling branch\r\n    if (!isLeaf && hasExtra && hasNext) {\r\n      // Cast the children to branches.\r\n      let c = child as BranchNode<T>;\r\n      let s = sibling as BranchNode<T>;\r\n\r\n      // Steal a child from the next sibling.\r\n      c.children.push(s.children.shift()!);\r\n\r\n      // Steal an item from the next sibling.\r\n      c.items.push(s.items.shift()!);\r\n\r\n      // Update the branch items.\r\n      node.items[i + 1] = s.items[0];\r\n\r\n      // Update the sibling sizes.\r\n      updateSizes(c, c.width - 1);\r\n      updateSizes(s, 0);\r\n\r\n      // Return the first modified index.\r\n      return i;\r\n    }\r\n\r\n    // Join case #6: steal from previous sibling branch\r\n    if (!isLeaf && hasExtra && !hasNext) {\r\n      // Cast the children to branches.\r\n      let c = child as BranchNode<T>;\r\n      let s = sibling as BranchNode<T>;\r\n\r\n      // Steal a child from the previous sibling.\r\n      c.children.unshift(s.children.pop()!);\r\n\r\n      // Steal an item from the previous sibling.\r\n      c.items.unshift(s.items.pop()!);\r\n\r\n      // Update the branch items.\r\n      node.items[i] = c.items[0];\r\n\r\n      // Update the sibling sizes.\r\n      updateSizes(c, 0);\r\n      updateSizes(s, s.width - 1);\r\n\r\n      // Return the first modified index.\r\n      return i - 1;\r\n    }\r\n\r\n    // Join case #7: merge with next sibling branch\r\n    if (!isLeaf && !hasExtra && hasNext) {\r\n      // Cast the children to branches.\r\n      let c = child as BranchNode<T>;\r\n      let s = sibling as BranchNode<T>;\r\n\r\n      // Merge the children with the next sibling.\r\n      s.children.unshift(...c.children);\r\n\r\n      // Merge the items with the next sibling.\r\n      s.items.unshift(...c.items);\r\n\r\n      // Remove the old branch child.\r\n      ArrayExt.removeAt(node.children, i);\r\n\r\n      // Remove the stale branch item.\r\n      ArrayExt.removeAt(node.items, i + 1);\r\n\r\n      // Update the sibling sizes.\r\n      updateSizes(s, 0);\r\n\r\n      // Clear the original child but, not its children.\r\n      c.children.length = 0;\r\n      clear(c);\r\n\r\n      // Return the first modified index.\r\n      return i;\r\n    }\r\n\r\n    // Join case #8: merge with previous sibling branch\r\n    if (!isLeaf && !hasExtra && !hasNext) {\r\n      // Cast the children to branches.\r\n      let c = child as BranchNode<T>;\r\n      let s = sibling as BranchNode<T>;\r\n\r\n      // Merge the children with the previous sibling.\r\n      s.children.push(...c.children);\r\n\r\n      // Merge the items with the previous sibling.\r\n      s.items.push(...c.items);\r\n\r\n      // Remove the old branch child.\r\n      ArrayExt.removeAt(node.children, i);\r\n\r\n      // Remove the stale branch item.\r\n      ArrayExt.removeAt(node.items, i);\r\n\r\n      // Update the sibling sizes.\r\n      updateSizes(s, 0);\r\n\r\n      // Clear the original child, but not its children.\r\n      c.children.length = 0;\r\n      clear(c);\r\n\r\n      // Return the first modified index.\r\n      return i - 1;\r\n    }\r\n\r\n    // One of the above cases must match.\r\n    throw 'unreachable';\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  each,\r\n  IIterable,\r\n  IIterator,\r\n  IRetroable,\r\n  IterableOrArrayLike\r\n} from '@lumino/algorithm';\r\n\r\n/**\r\n * A generic doubly-linked list.\r\n */\r\nexport class LinkedList<T> implements IIterable<T>, IRetroable<T> {\r\n  /**\r\n   * Whether the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get isEmpty(): boolean {\r\n    return this._size === 0;\r\n  }\r\n\r\n  /**\r\n   * The size of the list.\r\n   *\r\n   * #### Complexity\r\n   * `O(1)`\r\n   *\r\n   * #### Notes\r\n   * This is equivalent to `length`.\r\n   */\r\n  get size(): number {\r\n    return this._size;\r\n  }\r\n\r\n  /**\r\n   * The length of the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   *\r\n   * #### Notes\r\n   * This is equivalent to `size`.\r\n   *\r\n   * This property is deprecated.\r\n   */\r\n  get length(): number {\r\n    return this._size;\r\n  }\r\n\r\n  /**\r\n   * The first value in the list.\r\n   *\r\n   * This is `undefined` if the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get first(): T | undefined {\r\n    return this._first ? this._first.value : undefined;\r\n  }\r\n\r\n  /**\r\n   * The last value in the list.\r\n   *\r\n   * This is `undefined` if the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get last(): T | undefined {\r\n    return this._last ? this._last.value : undefined;\r\n  }\r\n\r\n  /**\r\n   * The first node in the list.\r\n   *\r\n   * This is `null` if the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get firstNode(): LinkedList.INode<T> | null {\r\n    return this._first;\r\n  }\r\n\r\n  /**\r\n   * The last node in the list.\r\n   *\r\n   * This is `null` if the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  get lastNode(): LinkedList.INode<T> | null {\r\n    return this._last;\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the values in the list.\r\n   *\r\n   * @returns A new iterator starting with the first value.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  iter(): IIterator<T> {\r\n    return new LinkedList.ForwardValueIterator<T>(this._first);\r\n  }\r\n\r\n  /**\r\n   * Create a reverse iterator over the values in the list.\r\n   *\r\n   * @returns A new iterator starting with the last value.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  retro(): IIterator<T> {\r\n    return new LinkedList.RetroValueIterator<T>(this._last);\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the nodes in the list.\r\n   *\r\n   * @returns A new iterator starting with the first node.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  nodes(): IIterator<LinkedList.INode<T>> {\r\n    return new LinkedList.ForwardNodeIterator<T>(this._first);\r\n  }\r\n\r\n  /**\r\n   * Create a reverse iterator over the nodes in the list.\r\n   *\r\n   * @returns A new iterator starting with the last node.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  retroNodes(): IIterator<LinkedList.INode<T>> {\r\n    return new LinkedList.RetroNodeIterator<T>(this._last);\r\n  }\r\n\r\n  /**\r\n   * Assign new values to the list, replacing all current values.\r\n   *\r\n   * @param values - The values to assign to the list.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   */\r\n  assign(values: IterableOrArrayLike<T>): void {\r\n    this.clear();\r\n    each(values, value => {\r\n      this.addLast(value);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Add a value to the end of the list.\r\n   *\r\n   * @param value - The value to add to the end of the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   *\r\n   * #### Notes\r\n   * This is equivalent to `addLast`.\r\n   */\r\n  push(value: T): void {\r\n    this.addLast(value);\r\n  }\r\n\r\n  /**\r\n   * Remove and return the value at the end of the list.\r\n   *\r\n   * @returns The removed value, or `undefined` if the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   *\r\n   * #### Notes\r\n   * This is equivalent to `removeLast`.\r\n   */\r\n  pop(): T | undefined {\r\n    return this.removeLast();\r\n  }\r\n\r\n  /**\r\n   * Add a value to the beginning of the list.\r\n   *\r\n   * @param value - The value to add to the beginning of the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   *\r\n   * #### Notes\r\n   * This is equivalent to `addFirst`.\r\n   */\r\n  shift(value: T): void {\r\n    this.addFirst(value);\r\n  }\r\n\r\n  /**\r\n   * Remove and return the value at the beginning of the list.\r\n   *\r\n   * @returns The removed value, or `undefined` if the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   *\r\n   * #### Notes\r\n   * This is equivalent to `removeFirst`.\r\n   */\r\n  unshift(): T | undefined {\r\n    return this.removeFirst();\r\n  }\r\n\r\n  /**\r\n   * Add a value to the beginning of the list.\r\n   *\r\n   * @param value - The value to add to the beginning of the list.\r\n   *\r\n   * @returns The list node which holds the value.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  addFirst(value: T): LinkedList.INode<T> {\r\n    let node = new Private.LinkedListNode<T>(this, value);\r\n    if (!this._first) {\r\n      this._first = node;\r\n      this._last = node;\r\n    } else {\r\n      node.next = this._first;\r\n      this._first.prev = node;\r\n      this._first = node;\r\n    }\r\n    this._size++;\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Add a value to the end of the list.\r\n   *\r\n   * @param value - The value to add to the end of the list.\r\n   *\r\n   * @returns The list node which holds the value.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  addLast(value: T): LinkedList.INode<T> {\r\n    let node = new Private.LinkedListNode<T>(this, value);\r\n    if (!this._last) {\r\n      this._first = node;\r\n      this._last = node;\r\n    } else {\r\n      node.prev = this._last;\r\n      this._last.next = node;\r\n      this._last = node;\r\n    }\r\n    this._size++;\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Insert a value before a specific node in the list.\r\n   *\r\n   * @param value - The value to insert before the reference node.\r\n   *\r\n   * @param ref - The reference node of interest. If this is `null`,\r\n   *   the value will be added to the beginning of the list.\r\n   *\r\n   * @returns The list node which holds the value.\r\n   *\r\n   * #### Notes\r\n   * The reference node must be owned by the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  insertBefore(value: T, ref: LinkedList.INode<T> | null): LinkedList.INode<T> {\r\n    if (!ref || ref === this._first) {\r\n      return this.addFirst(value);\r\n    }\r\n    if (!(ref instanceof Private.LinkedListNode) || ref.list !== this) {\r\n      throw new Error('Reference node is not owned by the list.');\r\n    }\r\n    let node = new Private.LinkedListNode<T>(this, value);\r\n    let _ref = ref as Private.LinkedListNode<T>;\r\n    let prev = _ref.prev!;\r\n    node.next = _ref;\r\n    node.prev = prev;\r\n    _ref.prev = node;\r\n    prev.next = node;\r\n    this._size++;\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Insert a value after a specific node in the list.\r\n   *\r\n   * @param value - The value to insert after the reference node.\r\n   *\r\n   * @param ref - The reference node of interest. If this is `null`,\r\n   *   the value will be added to the end of the list.\r\n   *\r\n   * @returns The list node which holds the value.\r\n   *\r\n   * #### Notes\r\n   * The reference node must be owned by the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  insertAfter(value: T, ref: LinkedList.INode<T> | null): LinkedList.INode<T> {\r\n    if (!ref || ref === this._last) {\r\n      return this.addLast(value);\r\n    }\r\n    if (!(ref instanceof Private.LinkedListNode) || ref.list !== this) {\r\n      throw new Error('Reference node is not owned by the list.');\r\n    }\r\n    let node = new Private.LinkedListNode<T>(this, value);\r\n    let _ref = ref as Private.LinkedListNode<T>;\r\n    let next = _ref.next!;\r\n    node.next = next;\r\n    node.prev = _ref;\r\n    _ref.next = node;\r\n    next.prev = node;\r\n    this._size++;\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Remove and return the value at the beginning of the list.\r\n   *\r\n   * @returns The removed value, or `undefined` if the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  removeFirst(): T | undefined {\r\n    let node = this._first;\r\n    if (!node) {\r\n      return undefined;\r\n    }\r\n    if (node === this._last) {\r\n      this._first = null;\r\n      this._last = null;\r\n    } else {\r\n      this._first = node.next;\r\n      this._first!.prev = null;\r\n    }\r\n    node.list = null;\r\n    node.next = null;\r\n    node.prev = null;\r\n    this._size--;\r\n    return node.value;\r\n  }\r\n\r\n  /**\r\n   * Remove and return the value at the end of the list.\r\n   *\r\n   * @returns The removed value, or `undefined` if the list is empty.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   */\r\n  removeLast(): T | undefined {\r\n    let node = this._last;\r\n    if (!node) {\r\n      return undefined;\r\n    }\r\n    if (node === this._first) {\r\n      this._first = null;\r\n      this._last = null;\r\n    } else {\r\n      this._last = node.prev;\r\n      this._last!.next = null;\r\n    }\r\n    node.list = null;\r\n    node.next = null;\r\n    node.prev = null;\r\n    this._size--;\r\n    return node.value;\r\n  }\r\n\r\n  /**\r\n   * Remove a specific node from the list.\r\n   *\r\n   * @param node - The node to remove from the list.\r\n   *\r\n   * #### Complexity\r\n   * Constant.\r\n   *\r\n   * #### Notes\r\n   * The node must be owned by the list.\r\n   */\r\n  removeNode(node: LinkedList.INode<T>): void {\r\n    if (!(node instanceof Private.LinkedListNode) || node.list !== this) {\r\n      throw new Error('Node is not owned by the list.');\r\n    }\r\n    let _node = node as Private.LinkedListNode<T>;\r\n    if (_node === this._first && _node === this._last) {\r\n      this._first = null;\r\n      this._last = null;\r\n    } else if (_node === this._first) {\r\n      this._first = _node.next;\r\n      this._first!.prev = null;\r\n    } else if (_node === this._last) {\r\n      this._last = _node.prev;\r\n      this._last!.next = null;\r\n    } else {\r\n      _node.next!.prev = _node.prev;\r\n      _node.prev!.next = _node.next;\r\n    }\r\n    _node.list = null;\r\n    _node.next = null;\r\n    _node.prev = null;\r\n    this._size--;\r\n  }\r\n\r\n  /**\r\n   * Remove all values from the list.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   */\r\n  clear(): void {\r\n    let node = this._first;\r\n    while (node) {\r\n      let next = node.next;\r\n      node.list = null;\r\n      node.prev = null;\r\n      node.next = null;\r\n      node = next;\r\n    }\r\n    this._first = null;\r\n    this._last = null;\r\n    this._size = 0;\r\n  }\r\n\r\n  private _first: Private.LinkedListNode<T> | null = null;\r\n  private _last: Private.LinkedListNode<T> | null = null;\r\n  private _size = 0;\r\n}\r\n\r\n/**\r\n * The namespace for the `LinkedList` class statics.\r\n */\r\nexport namespace LinkedList {\r\n  /**\r\n   * An object which represents a node in a linked list.\r\n   *\r\n   * #### Notes\r\n   * User code will not create linked list nodes directly. Nodes\r\n   * are created automatically when values are added to a list.\r\n   */\r\n  export interface INode<T> {\r\n    /**\r\n     * The linked list which created and owns the node.\r\n     *\r\n     * This will be `null` when the node is removed from the list.\r\n     */\r\n    readonly list: LinkedList<T> | null;\r\n\r\n    /**\r\n     * The next node in the list.\r\n     *\r\n     * This will be `null` when the node is the last node in the list\r\n     * or when the node is removed from the list.\r\n     */\r\n    readonly next: INode<T> | null;\r\n\r\n    /**\r\n     * The previous node in the list.\r\n     *\r\n     * This will be `null` when the node is the first node in the list\r\n     * or when the node is removed from the list.\r\n     */\r\n    readonly prev: INode<T> | null;\r\n\r\n    /**\r\n     * The user value stored in the node.\r\n     */\r\n    readonly value: T;\r\n  }\r\n\r\n  /**\r\n   * Create a linked list from an iterable of values.\r\n   *\r\n   * @param values - The iterable or array-like object of interest.\r\n   *\r\n   * @returns A new linked list initialized with the given values.\r\n   *\r\n   * #### Complexity\r\n   * Linear.\r\n   */\r\n  export function from<T>(values: IterableOrArrayLike<T>): LinkedList<T> {\r\n    let list = new LinkedList<T>();\r\n    list.assign(values);\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * A forward iterator for values in a linked list.\r\n   */\r\n  export class ForwardValueIterator<T> implements IIterator<T> {\r\n    /**\r\n     * Construct a forward value iterator.\r\n     *\r\n     * @param node - The first node in the list.\r\n     */\r\n    constructor(node: INode<T> | null) {\r\n      this._node = node;\r\n    }\r\n\r\n    /**\r\n     * Get an iterator over the object's values.\r\n     *\r\n     * @returns An iterator which yields the object's values.\r\n     */\r\n    iter(): IIterator<T> {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Create an independent clone of the iterator.\r\n     *\r\n     * @returns A new independent clone of the iterator.\r\n     */\r\n    clone(): IIterator<T> {\r\n      return new ForwardValueIterator<T>(this._node);\r\n    }\r\n\r\n    /**\r\n     * Get the next value from the iterator.\r\n     *\r\n     * @returns The next value from the iterator, or `undefined`.\r\n     */\r\n    next(): T | undefined {\r\n      if (!this._node) {\r\n        return undefined;\r\n      }\r\n      let node = this._node;\r\n      this._node = node.next;\r\n      return node.value;\r\n    }\r\n\r\n    private _node: INode<T> | null;\r\n  }\r\n\r\n  /**\r\n   * A reverse iterator for values in a linked list.\r\n   */\r\n  export class RetroValueIterator<T> implements IIterator<T> {\r\n    /**\r\n     * Construct a retro value iterator.\r\n     *\r\n     * @param node - The last node in the list.\r\n     */\r\n    constructor(node: INode<T> | null) {\r\n      this._node = node;\r\n    }\r\n\r\n    /**\r\n     * Get an iterator over the object's values.\r\n     *\r\n     * @returns An iterator which yields the object's values.\r\n     */\r\n    iter(): IIterator<T> {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Create an independent clone of the iterator.\r\n     *\r\n     * @returns A new independent clone of the iterator.\r\n     */\r\n    clone(): IIterator<T> {\r\n      return new RetroValueIterator<T>(this._node);\r\n    }\r\n\r\n    /**\r\n     * Get the next value from the iterator.\r\n     *\r\n     * @returns The next value from the iterator, or `undefined`.\r\n     */\r\n    next(): T | undefined {\r\n      if (!this._node) {\r\n        return undefined;\r\n      }\r\n      let node = this._node;\r\n      this._node = node.prev;\r\n      return node.value;\r\n    }\r\n\r\n    private _node: INode<T> | null;\r\n  }\r\n\r\n  /**\r\n   * A forward iterator for nodes in a linked list.\r\n   */\r\n  export class ForwardNodeIterator<T> implements IIterator<INode<T>> {\r\n    /**\r\n     * Construct a forward node iterator.\r\n     *\r\n     * @param node - The first node in the list.\r\n     */\r\n    constructor(node: INode<T> | null) {\r\n      this._node = node;\r\n    }\r\n\r\n    /**\r\n     * Get an iterator over the object's values.\r\n     *\r\n     * @returns An iterator which yields the object's values.\r\n     */\r\n    iter(): IIterator<INode<T>> {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Create an independent clone of the iterator.\r\n     *\r\n     * @returns A new independent clone of the iterator.\r\n     */\r\n    clone(): IIterator<INode<T>> {\r\n      return new ForwardNodeIterator<T>(this._node);\r\n    }\r\n\r\n    /**\r\n     * Get the next value from the iterator.\r\n     *\r\n     * @returns The next value from the iterator, or `undefined`.\r\n     */\r\n    next(): INode<T> | undefined {\r\n      if (!this._node) {\r\n        return undefined;\r\n      }\r\n      let node = this._node;\r\n      this._node = node.next;\r\n      return node;\r\n    }\r\n\r\n    private _node: INode<T> | null;\r\n  }\r\n\r\n  /**\r\n   * A reverse iterator for nodes in a linked list.\r\n   */\r\n  export class RetroNodeIterator<T> implements IIterator<INode<T>> {\r\n    /**\r\n     * Construct a retro node iterator.\r\n     *\r\n     * @param node - The last node in the list.\r\n     */\r\n    constructor(node: INode<T> | null) {\r\n      this._node = node;\r\n    }\r\n\r\n    /**\r\n     * Get an iterator over the object's values.\r\n     *\r\n     * @returns An iterator which yields the object's values.\r\n     */\r\n    iter(): IIterator<INode<T>> {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Create an independent clone of the iterator.\r\n     *\r\n     * @returns A new independent clone of the iterator.\r\n     */\r\n    clone(): IIterator<INode<T>> {\r\n      return new RetroNodeIterator<T>(this._node);\r\n    }\r\n\r\n    /**\r\n     * Get the next value from the iterator.\r\n     *\r\n     * @returns The next value from the iterator, or `undefined`.\r\n     */\r\n    next(): INode<T> | undefined {\r\n      if (!this._node) {\r\n        return undefined;\r\n      }\r\n      let node = this._node;\r\n      this._node = node.prev;\r\n      return node;\r\n    }\r\n\r\n    private _node: INode<T> | null;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The internal linked list node implementation.\r\n   */\r\n  export class LinkedListNode<T> {\r\n    /**\r\n     * The linked list which created and owns the node.\r\n     */\r\n    list: LinkedList<T> | null = null;\r\n\r\n    /**\r\n     * The next node in the list.\r\n     */\r\n    next: LinkedListNode<T> | null = null;\r\n\r\n    /**\r\n     * The previous node in the list.\r\n     */\r\n    prev: LinkedListNode<T> | null = null;\r\n\r\n    /**\r\n     * The user value stored in the node.\r\n     */\r\n    readonly value: T;\r\n\r\n    /**\r\n     * Construct a new linked list node.\r\n     *\r\n     * @param list - The list which owns the node.\r\n     *\r\n     * @param value - The value for the link.\r\n     */\r\n    constructor(list: LinkedList<T>, value: T) {\r\n      this.list = list;\r\n      this.value = value;\r\n    }\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each, every, retro, some } from '@lumino/algorithm';\r\n\r\nimport { LinkedList } from '@lumino/collections';\r\n\r\n/**\r\n * A message which can be delivered to a message handler.\r\n *\r\n * #### Notes\r\n * This class may be subclassed to create complex message types.\r\n */\r\nexport class Message {\r\n  /**\r\n   * Construct a new message.\r\n   *\r\n   * @param type - The type of the message.\r\n   */\r\n  constructor(type: string) {\r\n    this.type = type;\r\n  }\r\n\r\n  /**\r\n   * The type of the message.\r\n   *\r\n   * #### Notes\r\n   * The `type` of a message should be related directly to its actual\r\n   * runtime type. This means that `type` can and will be used to cast\r\n   * the message to the relevant derived `Message` subtype.\r\n   */\r\n  readonly type: string;\r\n\r\n  /**\r\n   * Test whether the message is conflatable.\r\n   *\r\n   * #### Notes\r\n   * Message conflation is an advanced topic. Most message types will\r\n   * not make use of this feature.\r\n   *\r\n   * If a conflatable message is posted to a handler while another\r\n   * conflatable message of the same `type` has already been posted\r\n   * to the handler, the `conflate()` method of the existing message\r\n   * will be invoked. If that method returns `true`, the new message\r\n   * will not be enqueued. This allows messages to be compressed, so\r\n   * that only a single instance of the message type is processed per\r\n   * cycle, no matter how many times messages of that type are posted.\r\n   *\r\n   * Custom message types may reimplement this property.\r\n   *\r\n   * The default implementation is always `false`.\r\n   */\r\n  get isConflatable(): boolean {\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Conflate this message with another message of the same `type`.\r\n   *\r\n   * @param other - A conflatable message of the same `type`.\r\n   *\r\n   * @returns `true` if the message was successfully conflated, or\r\n   *   `false` otherwise.\r\n   *\r\n   * #### Notes\r\n   * Message conflation is an advanced topic. Most message types will\r\n   * not make use of this feature.\r\n   *\r\n   * This method is called automatically by the message loop when the\r\n   * given message is posted to the handler paired with this message.\r\n   * This message will already be enqueued and conflatable, and the\r\n   * given message will have the same `type` and also be conflatable.\r\n   *\r\n   * This method should merge the state of the other message into this\r\n   * message as needed so that when this message is finally delivered\r\n   * to the handler, it receives the most up-to-date information.\r\n   *\r\n   * If this method returns `true`, it signals that the other message\r\n   * was successfully conflated and that message will not be enqueued.\r\n   *\r\n   * If this method returns `false`, the other message will be enqueued\r\n   * for normal delivery.\r\n   *\r\n   * Custom message types may reimplement this method.\r\n   *\r\n   * The default implementation always returns `false`.\r\n   */\r\n  conflate(other: Message): boolean {\r\n    return false;\r\n  }\r\n}\r\n\r\n/**\r\n * A convenience message class which conflates automatically.\r\n *\r\n * #### Notes\r\n * Message conflation is an advanced topic. Most user code will not\r\n * make use of this class.\r\n *\r\n * This message class is useful for creating message instances which\r\n * should be conflated, but which have no state other than `type`.\r\n *\r\n * If conflation of stateful messages is required, a custom `Message`\r\n * subclass should be created.\r\n */\r\nexport class ConflatableMessage extends Message {\r\n  /**\r\n   * Test whether the message is conflatable.\r\n   *\r\n   * #### Notes\r\n   * This property is always `true`.\r\n   */\r\n  get isConflatable(): boolean {\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Conflate this message with another message of the same `type`.\r\n   *\r\n   * #### Notes\r\n   * This method always returns `true`.\r\n   */\r\n  conflate(other: ConflatableMessage): boolean {\r\n    return true;\r\n  }\r\n}\r\n\r\n/**\r\n * An object which handles messages.\r\n *\r\n * #### Notes\r\n * A message handler is a simple way of defining a type which can act\r\n * upon on a large variety of external input without requiring a large\r\n * abstract API surface. This is particularly useful in the context of\r\n * widget frameworks where the number of distinct message types can be\r\n * unbounded.\r\n */\r\nexport interface IMessageHandler {\r\n  /**\r\n   * Process a message sent to the handler.\r\n   *\r\n   * @param msg - The message to be processed.\r\n   */\r\n  processMessage(msg: Message): void;\r\n}\r\n\r\n/**\r\n * An object which intercepts messages sent to a message handler.\r\n *\r\n * #### Notes\r\n * A message hook is useful for intercepting or spying on messages\r\n * sent to message handlers which were either not created by the\r\n * consumer, or when subclassing the handler is not feasible.\r\n *\r\n * If `messageHook` returns `false`, no other message hooks will be\r\n * invoked and the message will not be delivered to the handler.\r\n *\r\n * If all installed message hooks return `true`, the message will\r\n * be delivered to the handler for processing.\r\n *\r\n * **See also:** [[installMessageHook]] and [[removeMessageHook]]\r\n */\r\nexport interface IMessageHook {\r\n  /**\r\n   * Intercept a message sent to a message handler.\r\n   *\r\n   * @param handler - The target handler of the message.\r\n   *\r\n   * @param msg - The message to be sent to the handler.\r\n   *\r\n   * @returns `true` if the message should continue to be processed\r\n   *   as normal, or `false` if processing should cease immediately.\r\n   */\r\n  messageHook(handler: IMessageHandler, msg: Message): boolean;\r\n}\r\n\r\n/**\r\n * A type alias for message hook object or function.\r\n *\r\n * #### Notes\r\n * The signature and semantics of a message hook function are the same\r\n * as the `messageHook` method of [[IMessageHook]].\r\n */\r\nexport type MessageHook =\r\n  | IMessageHook\r\n  | ((handler: IMessageHandler, msg: Message) => boolean);\r\n\r\n/**\r\n * The namespace for the global singleton message loop.\r\n */\r\nexport namespace MessageLoop {\r\n  /**\r\n   * Send a message to a message handler to process immediately.\r\n   *\r\n   * @param handler - The handler which should process the message.\r\n   *\r\n   * @param msg - The message to deliver to the handler.\r\n   *\r\n   * #### Notes\r\n   * The message will first be sent through any installed message hooks\r\n   * for the handler. If the message passes all hooks, it will then be\r\n   * delivered to the `processMessage` method of the handler.\r\n   *\r\n   * The message will not be conflated with pending posted messages.\r\n   *\r\n   * Exceptions in hooks and handlers will be caught and logged.\r\n   */\r\n  export function sendMessage(handler: IMessageHandler, msg: Message): void {\r\n    // Lookup the message hooks for the handler.\r\n    let hooks = messageHooks.get(handler);\r\n\r\n    // Handle the common case of no installed hooks.\r\n    if (!hooks || hooks.length === 0) {\r\n      invokeHandler(handler, msg);\r\n      return;\r\n    }\r\n\r\n    // Invoke the message hooks starting with the newest first.\r\n    let passed = every(retro(hooks), hook => {\r\n      return hook ? invokeHook(hook, handler, msg) : true;\r\n    });\r\n\r\n    // Invoke the handler if the message passes all hooks.\r\n    if (passed) {\r\n      invokeHandler(handler, msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Post a message to a message handler to process in the future.\r\n   *\r\n   * @param handler - The handler which should process the message.\r\n   *\r\n   * @param msg - The message to post to the handler.\r\n   *\r\n   * #### Notes\r\n   * The message will be conflated with the pending posted messages for\r\n   * the handler, if possible. If the message is not conflated, it will\r\n   * be queued for normal delivery on the next cycle of the event loop.\r\n   *\r\n   * Exceptions in hooks and handlers will be caught and logged.\r\n   */\r\n  export function postMessage(handler: IMessageHandler, msg: Message): void {\r\n    // Handle the common case of a non-conflatable message.\r\n    if (!msg.isConflatable) {\r\n      enqueueMessage(handler, msg);\r\n      return;\r\n    }\r\n\r\n    // Conflate the message with an existing message if possible.\r\n    let conflated = some(messageQueue, posted => {\r\n      if (posted.handler !== handler) {\r\n        return false;\r\n      }\r\n      if (!posted.msg) {\r\n        return false;\r\n      }\r\n      if (posted.msg.type !== msg.type) {\r\n        return false;\r\n      }\r\n      if (!posted.msg.isConflatable) {\r\n        return false;\r\n      }\r\n      return posted.msg.conflate(msg);\r\n    });\r\n\r\n    // Enqueue the message if it was not conflated.\r\n    if (!conflated) {\r\n      enqueueMessage(handler, msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Install a message hook for a message handler.\r\n   *\r\n   * @param handler - The message handler of interest.\r\n   *\r\n   * @param hook - The message hook to install.\r\n   *\r\n   * #### Notes\r\n   * A message hook is invoked before a message is delivered to the\r\n   * handler. If the hook returns `false`, no other hooks will be\r\n   * invoked and the message will not be delivered to the handler.\r\n   *\r\n   * The most recently installed message hook is executed first.\r\n   *\r\n   * If the hook is already installed, this is a no-op.\r\n   */\r\n  export function installMessageHook(\r\n    handler: IMessageHandler,\r\n    hook: MessageHook\r\n  ): void {\r\n    // Lookup the hooks for the handler.\r\n    let hooks = messageHooks.get(handler);\r\n\r\n    // Bail early if the hook is already installed.\r\n    if (hooks && hooks.indexOf(hook) !== -1) {\r\n      return;\r\n    }\r\n\r\n    // Add the hook to the end, so it will be the first to execute.\r\n    if (!hooks) {\r\n      messageHooks.set(handler, [hook]);\r\n    } else {\r\n      hooks.push(hook);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove an installed message hook for a message handler.\r\n   *\r\n   * @param handler - The message handler of interest.\r\n   *\r\n   * @param hook - The message hook to remove.\r\n   *\r\n   * #### Notes\r\n   * It is safe to call this function while the hook is executing.\r\n   *\r\n   * If the hook is not installed, this is a no-op.\r\n   */\r\n  export function removeMessageHook(\r\n    handler: IMessageHandler,\r\n    hook: MessageHook\r\n  ): void {\r\n    // Lookup the hooks for the handler.\r\n    let hooks = messageHooks.get(handler);\r\n\r\n    // Bail early if the hooks do not exist.\r\n    if (!hooks) {\r\n      return;\r\n    }\r\n\r\n    // Lookup the index of the hook and bail if not found.\r\n    let i = hooks.indexOf(hook);\r\n    if (i === -1) {\r\n      return;\r\n    }\r\n\r\n    // Clear the hook and schedule a cleanup of the array.\r\n    hooks[i] = null;\r\n    scheduleCleanup(hooks);\r\n  }\r\n\r\n  /**\r\n   * Clear all message data associated with a message handler.\r\n   *\r\n   * @param handler - The message handler of interest.\r\n   *\r\n   * #### Notes\r\n   * This will clear all posted messages and hooks for the handler.\r\n   */\r\n  export function clearData(handler: IMessageHandler): void {\r\n    // Lookup the hooks for the handler.\r\n    let hooks = messageHooks.get(handler);\r\n\r\n    // Clear all messsage hooks for the handler.\r\n    if (hooks && hooks.length > 0) {\r\n      ArrayExt.fill(hooks, null);\r\n      scheduleCleanup(hooks);\r\n    }\r\n\r\n    // Clear all posted messages for the handler.\r\n    each(messageQueue, posted => {\r\n      if (posted.handler === handler) {\r\n        posted.handler = null;\r\n        posted.msg = null;\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Process the pending posted messages in the queue immediately.\r\n   *\r\n   * #### Notes\r\n   * This function is useful when posted messages must be processed\r\n   * immediately, instead of on the next animation frame.\r\n   *\r\n   * This function should normally not be needed, but it may be\r\n   * required to work around certain browser idiosyncrasies.\r\n   *\r\n   * Recursing into this function is a no-op.\r\n   */\r\n  export function flush(): void {\r\n    // Bail if recursion is detected or if there is no pending task.\r\n    if (flushGuard || loopTaskID === 0) {\r\n      return;\r\n    }\r\n\r\n    // Unschedule the pending loop task.\r\n    unschedule(loopTaskID);\r\n\r\n    // Run the message loop within the recursion guard.\r\n    flushGuard = true;\r\n    runMessageLoop();\r\n    flushGuard = false;\r\n  }\r\n\r\n  /**\r\n   * A type alias for the exception handler function.\r\n   */\r\n  export type ExceptionHandler = (err: Error) => void;\r\n\r\n  /**\r\n   * Get the message loop exception handler.\r\n   *\r\n   * @returns The current exception handler.\r\n   *\r\n   * #### Notes\r\n   * The default exception handler is `console.error`.\r\n   */\r\n  export function getExceptionHandler(): ExceptionHandler {\r\n    return exceptionHandler;\r\n  }\r\n\r\n  /**\r\n   * Set the message loop exception handler.\r\n   *\r\n   * @param handler - The function to use as the exception handler.\r\n   *\r\n   * @returns The old exception handler.\r\n   *\r\n   * #### Notes\r\n   * The exception handler is invoked when a message handler or a\r\n   * message hook throws an exception.\r\n   */\r\n  export function setExceptionHandler(\r\n    handler: ExceptionHandler\r\n  ): ExceptionHandler {\r\n    let old = exceptionHandler;\r\n    exceptionHandler = handler;\r\n    return old;\r\n  }\r\n\r\n  /**\r\n   * A type alias for a posted message pair.\r\n   */\r\n  type PostedMessage = { handler: IMessageHandler | null; msg: Message | null };\r\n\r\n  /**\r\n   * The queue of posted message pairs.\r\n   */\r\n  const messageQueue = new LinkedList<PostedMessage>();\r\n\r\n  /**\r\n   * A mapping of handler to array of installed message hooks.\r\n   */\r\n  const messageHooks = new WeakMap<\r\n    IMessageHandler,\r\n    Array<MessageHook | null>\r\n  >();\r\n\r\n  /**\r\n   * A set of message hook arrays which are pending cleanup.\r\n   */\r\n  const dirtySet = new Set<Array<MessageHook | null>>();\r\n\r\n  /**\r\n   * The message loop exception handler.\r\n   */\r\n  let exceptionHandler: ExceptionHandler = (err: Error) => {\r\n    console.error(err);\r\n  };\r\n\r\n  type ScheduleHandle = number | any; //  requestAnimationFrame (number) and setImmediate (any)\r\n\r\n  /**\r\n   * The id of the pending loop task animation frame.\r\n   */\r\n  let loopTaskID: ScheduleHandle = 0;\r\n\r\n  /**\r\n   * A guard flag to prevent flush recursion.\r\n   */\r\n  let flushGuard = false;\r\n\r\n  /**\r\n   * A function to schedule an event loop callback.\r\n   */\r\n  const schedule = ((): ScheduleHandle => {\r\n    let ok = typeof requestAnimationFrame === 'function';\r\n    return ok ? requestAnimationFrame : setImmediate;\r\n  })();\r\n\r\n  /**\r\n   * A function to unschedule an event loop callback.\r\n   */\r\n  const unschedule = (() => {\r\n    let ok = typeof cancelAnimationFrame === 'function';\r\n    return ok ? cancelAnimationFrame : clearImmediate;\r\n  })();\r\n\r\n  /**\r\n   * Invoke a message hook with the specified handler and message.\r\n   *\r\n   * Returns the result of the hook, or `true` if the hook throws.\r\n   *\r\n   * Exceptions in the hook will be caught and logged.\r\n   */\r\n  function invokeHook(\r\n    hook: MessageHook,\r\n    handler: IMessageHandler,\r\n    msg: Message\r\n  ): boolean {\r\n    let result = true;\r\n    try {\r\n      if (typeof hook === 'function') {\r\n        result = hook(handler, msg);\r\n      } else {\r\n        result = hook.messageHook(handler, msg);\r\n      }\r\n    } catch (err) {\r\n      exceptionHandler(err);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Invoke a message handler with the specified message.\r\n   *\r\n   * Exceptions in the handler will be caught and logged.\r\n   */\r\n  function invokeHandler(handler: IMessageHandler, msg: Message): void {\r\n    try {\r\n      handler.processMessage(msg);\r\n    } catch (err) {\r\n      exceptionHandler(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a message to the end of the message queue.\r\n   *\r\n   * This will automatically schedule a run of the message loop.\r\n   */\r\n  function enqueueMessage(handler: IMessageHandler, msg: Message): void {\r\n    // Add the posted message to the queue.\r\n    messageQueue.addLast({ handler, msg });\r\n\r\n    // Bail if a loop task is already pending.\r\n    if (loopTaskID !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Schedule a run of the message loop.\r\n    loopTaskID = schedule(runMessageLoop);\r\n  }\r\n\r\n  /**\r\n   * Run an iteration of the message loop.\r\n   *\r\n   * This will process all pending messages in the queue. If a message\r\n   * is added to the queue while the message loop is running, it will\r\n   * be processed on the next cycle of the loop.\r\n   */\r\n  function runMessageLoop(): void {\r\n    // Clear the task ID so the next loop can be scheduled.\r\n    loopTaskID = 0;\r\n\r\n    // If the message queue is empty, there is nothing else to do.\r\n    if (messageQueue.isEmpty) {\r\n      return;\r\n    }\r\n\r\n    // Add a sentinel value to the end of the queue. The queue will\r\n    // only be processed up to the sentinel. Messages posted during\r\n    // this cycle will execute on the next cycle.\r\n    let sentinel: PostedMessage = { handler: null, msg: null };\r\n    messageQueue.addLast(sentinel);\r\n\r\n    // Enter the message loop.\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n      // Remove the first posted message in the queue.\r\n      let posted = messageQueue.removeFirst()!;\r\n\r\n      // If the value is the sentinel, exit the loop.\r\n      if (posted === sentinel) {\r\n        return;\r\n      }\r\n\r\n      // Dispatch the message if it has not been cleared.\r\n      if (posted.handler && posted.msg) {\r\n        sendMessage(posted.handler, posted.msg);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Schedule a cleanup of a message hooks array.\r\n   *\r\n   * This will add the array to the dirty set and schedule a deferred\r\n   * cleanup of the array contents. On cleanup, any `null` hook will\r\n   * be removed from the array.\r\n   */\r\n  function scheduleCleanup(hooks: Array<MessageHook | null>): void {\r\n    if (dirtySet.size === 0) {\r\n      schedule(cleanupDirtySet);\r\n    }\r\n    dirtySet.add(hooks);\r\n  }\r\n\r\n  /**\r\n   * Cleanup the message hook arrays in the dirty set.\r\n   *\r\n   * This function should only be invoked asynchronously, when the\r\n   * stack frame is guaranteed to not be on the path of user code.\r\n   */\r\n  function cleanupDirtySet(): void {\r\n    dirtySet.forEach(cleanupHooks);\r\n    dirtySet.clear();\r\n  }\r\n\r\n  /**\r\n   * Cleanup the dirty hooks in a message hooks array.\r\n   *\r\n   * This will remove any `null` hook from the array.\r\n   *\r\n   * This function should only be invoked asynchronously, when the\r\n   * stack frame is guaranteed to not be on the path of user code.\r\n   */\r\n  function cleanupHooks(hooks: Array<MessageHook | null>): void {\r\n    ArrayExt.removeAllWhere(hooks, isNull);\r\n  }\r\n\r\n  /**\r\n   * Test whether a value is `null`.\r\n   */\r\n  function isNull<T>(value: T | null): boolean {\r\n    return value === null;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * A class which attaches a value to an external object.\r\n *\r\n * #### Notes\r\n * Attached properties are used to extend the state of an object with\r\n * semantic data from an unrelated class. They also encapsulate value\r\n * creation, coercion, and notification.\r\n *\r\n * Because attached property values are stored in a hash table, which\r\n * in turn is stored in a WeakMap keyed on the owner object, there is\r\n * non-trivial storage overhead involved in their use. The pattern is\r\n * therefore best used for the storage of rare data.\r\n */\r\nexport class AttachedProperty<T, U> {\r\n  /**\r\n   * Construct a new attached property.\r\n   *\r\n   * @param options - The options for initializing the property.\r\n   */\r\n  constructor(options: AttachedProperty.IOptions<T, U>) {\r\n    this.name = options.name;\r\n    this._create = options.create;\r\n    this._coerce = options.coerce || null;\r\n    this._compare = options.compare || null;\r\n    this._changed = options.changed || null;\r\n  }\r\n\r\n  /**\r\n   * The human readable name for the property.\r\n   */\r\n  readonly name: string;\r\n\r\n  /**\r\n   * Get the current value of the property for a given owner.\r\n   *\r\n   * @param owner - The property owner of interest.\r\n   *\r\n   * @returns The current value of the property.\r\n   *\r\n   * #### Notes\r\n   * If the value has not yet been set, the default value will be\r\n   * computed and assigned as the current value of the property.\r\n   */\r\n  get(owner: T): U {\r\n    let value: U;\r\n    let map = Private.ensureMap(owner);\r\n    if (this._pid in map) {\r\n      value = map[this._pid];\r\n    } else {\r\n      value = map[this._pid] = this._createValue(owner);\r\n    }\r\n    return value;\r\n  }\r\n\r\n  /**\r\n   * Set the current value of the property for a given owner.\r\n   *\r\n   * @param owner - The property owner of interest.\r\n   *\r\n   * @param value - The value for the property.\r\n   *\r\n   * #### Notes\r\n   * If the value has not yet been set, the default value will be\r\n   * computed and used as the previous value for the comparison.\r\n   */\r\n  set(owner: T, value: U): void {\r\n    let oldValue: U;\r\n    let map = Private.ensureMap(owner);\r\n    if (this._pid in map) {\r\n      oldValue = map[this._pid];\r\n    } else {\r\n      oldValue = map[this._pid] = this._createValue(owner);\r\n    }\r\n    let newValue = this._coerceValue(owner, value);\r\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\r\n  }\r\n\r\n  /**\r\n   * Explicitly coerce the current property value for a given owner.\r\n   *\r\n   * @param owner - The property owner of interest.\r\n   *\r\n   * #### Notes\r\n   * If the value has not yet been set, the default value will be\r\n   * computed and used as the previous value for the comparison.\r\n   */\r\n  coerce(owner: T): void {\r\n    let oldValue: U;\r\n    let map = Private.ensureMap(owner);\r\n    if (this._pid in map) {\r\n      oldValue = map[this._pid];\r\n    } else {\r\n      oldValue = map[this._pid] = this._createValue(owner);\r\n    }\r\n    let newValue = this._coerceValue(owner, oldValue);\r\n    this._maybeNotify(owner, oldValue, (map[this._pid] = newValue));\r\n  }\r\n\r\n  /**\r\n   * Get or create the default value for the given owner.\r\n   */\r\n  private _createValue(owner: T): U {\r\n    let create = this._create;\r\n    return create(owner);\r\n  }\r\n\r\n  /**\r\n   * Coerce the value for the given owner.\r\n   */\r\n  private _coerceValue(owner: T, value: U): U {\r\n    let coerce = this._coerce;\r\n    return coerce ? coerce(owner, value) : value;\r\n  }\r\n\r\n  /**\r\n   * Compare the old value and new value for equality.\r\n   */\r\n  private _compareValue(oldValue: U, newValue: U): boolean {\r\n    let compare = this._compare;\r\n    return compare ? compare(oldValue, newValue) : oldValue === newValue;\r\n  }\r\n\r\n  /**\r\n   * Run the change notification if the given values are different.\r\n   */\r\n  private _maybeNotify(owner: T, oldValue: U, newValue: U): void {\r\n    let changed = this._changed;\r\n    if (changed && !this._compareValue(oldValue, newValue)) {\r\n      changed(owner, oldValue, newValue);\r\n    }\r\n  }\r\n\r\n  private _pid = Private.nextPID();\r\n  private _create: (owner: T) => U;\r\n  private _coerce: ((owner: T, value: U) => U) | null;\r\n  private _compare: ((oldValue: U, newValue: U) => boolean) | null;\r\n  private _changed: ((owner: T, oldValue: U, newValue: U) => void) | null;\r\n}\r\n\r\n/**\r\n * The namespace for the `AttachedProperty` class statics.\r\n */\r\nexport namespace AttachedProperty {\r\n  /**\r\n   * The options object used to initialize an attached property.\r\n   */\r\n  export interface IOptions<T, U> {\r\n    /**\r\n     * The human readable name for the property.\r\n     *\r\n     * #### Notes\r\n     * By convention, this should be the same as the name used to define\r\n     * the public accessor for the property value.\r\n     *\r\n     * This **does not** have an effect on the property lookup behavior.\r\n     * Multiple properties may share the same name without conflict.\r\n     */\r\n    name: string;\r\n\r\n    /**\r\n     * A factory function used to create the default property value.\r\n     *\r\n     * #### Notes\r\n     * This will be called whenever the property value is required,\r\n     * but has not yet been set for a given owner.\r\n     */\r\n    create: (owner: T) => U;\r\n\r\n    /**\r\n     * A function used to coerce a supplied value into the final value.\r\n     *\r\n     * #### Notes\r\n     * This will be called whenever the property value is changed, or\r\n     * when the property is explicitly coerced. The return value will\r\n     * be used as the final value of the property.\r\n     *\r\n     * This will **not** be called for the initial default value.\r\n     */\r\n    coerce?: (owner: T, value: U) => U;\r\n\r\n    /**\r\n     * A function used to compare two values for equality.\r\n     *\r\n     * #### Notes\r\n     * This is called to determine if the property value has changed.\r\n     * It should return `true` if the given values are equivalent, or\r\n     * `false` if they are different.\r\n     *\r\n     * If this is not provided, it defaults to the `===` operator.\r\n     */\r\n    compare?: (oldValue: U, newValue: U) => boolean;\r\n\r\n    /**\r\n     * A function called when the property value has changed.\r\n     *\r\n     * #### Notes\r\n     * This will be invoked when the property value is changed and the\r\n     * comparator indicates that the old value is not equal to the new\r\n     * value.\r\n     *\r\n     * This will **not** be called for the initial default value.\r\n     */\r\n    changed?: (owner: T, oldValue: U, newValue: U) => void;\r\n  }\r\n\r\n  /**\r\n   * Clear the stored property data for the given owner.\r\n   *\r\n   * @param owner - The property owner of interest.\r\n   *\r\n   * #### Notes\r\n   * This will clear all property values for the owner, but it will\r\n   * **not** run the change notification for any of the properties.\r\n   */\r\n  export function clearData(owner: any): void {\r\n    Private.ownerData.delete(owner);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A typedef for a mapping of property id to property value.\r\n   */\r\n  export type PropertyMap = { [key: string]: any };\r\n\r\n  /**\r\n   * A weak mapping of property owner to property map.\r\n   */\r\n  export const ownerData = new WeakMap<any, PropertyMap>();\r\n\r\n  /**\r\n   * A function which computes successive unique property ids.\r\n   */\r\n  export const nextPID = (() => {\r\n    let id = 0;\r\n    return () => {\r\n      let rand = Math.random();\r\n      let stem = `${rand}`.slice(2);\r\n      return `pid-${stem}-${id++}`;\r\n    };\r\n  })();\r\n\r\n  /**\r\n   * Lookup the data map for the property owner.\r\n   *\r\n   * This will create the map if one does not already exist.\r\n   */\r\n  export function ensureMap(owner: any): PropertyMap {\r\n    let map = ownerData.get(owner);\r\n    if (map) {\r\n      return map;\r\n    }\r\n    map = Object.create(null) as PropertyMap;\r\n    ownerData.set(owner, map);\r\n    return map;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each, find } from '@lumino/algorithm';\r\n\r\n/**\r\n * A type alias for a slot function.\r\n *\r\n * @param sender - The object emitting the signal.\r\n *\r\n * @param args - The args object emitted with the signal.\r\n *\r\n * #### Notes\r\n * A slot is invoked when a signal to which it is connected is emitted.\r\n */\r\nexport type Slot<T, U> = (sender: T, args: U) => void;\r\n\r\n/**\r\n * An object used for type-safe inter-object communication.\r\n *\r\n * #### Notes\r\n * Signals provide a type-safe implementation of the publish-subscribe\r\n * pattern. An object (publisher) declares which signals it will emit,\r\n * and consumers connect callbacks (subscribers) to those signals. The\r\n * subscribers are invoked whenever the publisher emits the signal.\r\n */\r\nexport interface ISignal<T, U> {\r\n  /**\r\n   * Connect a slot to the signal.\r\n   *\r\n   * @param slot - The slot to invoke when the signal is emitted.\r\n   *\r\n   * @param thisArg - The `this` context for the slot. If provided,\r\n   *   this must be a non-primitive object.\r\n   *\r\n   * @returns `true` if the connection succeeds, `false` otherwise.\r\n   *\r\n   * #### Notes\r\n   * Slots are invoked in the order in which they are connected.\r\n   *\r\n   * Signal connections are unique. If a connection already exists for\r\n   * the given `slot` and `thisArg`, this method returns `false`.\r\n   *\r\n   * A newly connected slot will not be invoked until the next time the\r\n   * signal is emitted, even if the slot is connected while the signal\r\n   * is dispatching.\r\n   */\r\n  connect(slot: Slot<T, U>, thisArg?: any): boolean;\r\n\r\n  /**\r\n   * Disconnect a slot from the signal.\r\n   *\r\n   * @param slot - The slot to disconnect from the signal.\r\n   *\r\n   * @param thisArg - The `this` context for the slot. If provided,\r\n   *   this must be a non-primitive object.\r\n   *\r\n   * @returns `true` if the connection is removed, `false` otherwise.\r\n   *\r\n   * #### Notes\r\n   * If no connection exists for the given `slot` and `thisArg`, this\r\n   * method returns `false`.\r\n   *\r\n   * A disconnected slot will no longer be invoked, even if the slot\r\n   * is disconnected while the signal is dispatching.\r\n   */\r\n  disconnect(slot: Slot<T, U>, thisArg?: any): boolean;\r\n}\r\n\r\n/**\r\n * A concrete implementation of `ISignal`.\r\n *\r\n * #### Example\r\n * ```typescript\r\n * import { ISignal, Signal } from '@lumino/signaling';\r\n *\r\n * class SomeClass {\r\n *\r\n *   constructor(name: string) {\r\n *     this.name = name;\r\n *   }\r\n *\r\n *   readonly name: string;\r\n *\r\n *   get valueChanged: ISignal<this, number> {\r\n *     return this._valueChanged;\r\n *   }\r\n *\r\n *   get value(): number {\r\n *     return this._value;\r\n *   }\r\n *\r\n *   set value(value: number) {\r\n *     if (value === this._value) {\r\n *       return;\r\n *     }\r\n *     this._value = value;\r\n *     this._valueChanged.emit(value);\r\n *   }\r\n *\r\n *   private _value = 0;\r\n *   private _valueChanged = new Signal<this, number>(this);\r\n * }\r\n *\r\n * function logger(sender: SomeClass, value: number): void {\r\n *   console.log(sender.name, value);\r\n * }\r\n *\r\n * let m1 = new SomeClass('foo');\r\n * let m2 = new SomeClass('bar');\r\n *\r\n * m1.valueChanged.connect(logger);\r\n * m2.valueChanged.connect(logger);\r\n *\r\n * m1.value = 42;  // logs: foo 42\r\n * m2.value = 17;  // logs: bar 17\r\n * ```\r\n */\r\nexport class Signal<T, U> implements ISignal<T, U> {\r\n  /**\r\n   * Construct a new signal.\r\n   *\r\n   * @param sender - The sender which owns the signal.\r\n   */\r\n  constructor(sender: T) {\r\n    this.sender = sender;\r\n  }\r\n\r\n  /**\r\n   * The sender which owns the signal.\r\n   */\r\n  readonly sender: T;\r\n\r\n  /**\r\n   * Connect a slot to the signal.\r\n   *\r\n   * @param slot - The slot to invoke when the signal is emitted.\r\n   *\r\n   * @param thisArg - The `this` context for the slot. If provided,\r\n   *   this must be a non-primitive object.\r\n   *\r\n   * @returns `true` if the connection succeeds, `false` otherwise.\r\n   */\r\n  connect(slot: Slot<T, U>, thisArg?: any): boolean {\r\n    return Private.connect(this, slot, thisArg);\r\n  }\r\n\r\n  /**\r\n   * Disconnect a slot from the signal.\r\n   *\r\n   * @param slot - The slot to disconnect from the signal.\r\n   *\r\n   * @param thisArg - The `this` context for the slot. If provided,\r\n   *   this must be a non-primitive object.\r\n   *\r\n   * @returns `true` if the connection is removed, `false` otherwise.\r\n   */\r\n  disconnect(slot: Slot<T, U>, thisArg?: any): boolean {\r\n    return Private.disconnect(this, slot, thisArg);\r\n  }\r\n\r\n  /**\r\n   * Emit the signal and invoke the connected slots.\r\n   *\r\n   * @param args - The args to pass to the connected slots.\r\n   *\r\n   * #### Notes\r\n   * Slots are invoked synchronously in connection order.\r\n   *\r\n   * Exceptions thrown by connected slots will be caught and logged.\r\n   */\r\n  emit(args: U): void {\r\n    Private.emit(this, args);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the `Signal` class statics.\r\n */\r\nexport namespace Signal {\r\n  /**\r\n   * Remove all connections between a sender and receiver.\r\n   *\r\n   * @param sender - The sender object of interest.\r\n   *\r\n   * @param receiver - The receiver object of interest.\r\n   *\r\n   * #### Notes\r\n   * If a `thisArg` is provided when connecting a signal, that object\r\n   * is considered the receiver. Otherwise, the `slot` is considered\r\n   * the receiver.\r\n   */\r\n  export function disconnectBetween(sender: any, receiver: any): void {\r\n    Private.disconnectBetween(sender, receiver);\r\n  }\r\n\r\n  /**\r\n   * Remove all connections where the given object is the sender.\r\n   *\r\n   * @param sender - The sender object of interest.\r\n   */\r\n  export function disconnectSender(sender: any): void {\r\n    Private.disconnectSender(sender);\r\n  }\r\n\r\n  /**\r\n   * Remove all connections where the given object is the receiver.\r\n   *\r\n   * @param receiver - The receiver object of interest.\r\n   *\r\n   * #### Notes\r\n   * If a `thisArg` is provided when connecting a signal, that object\r\n   * is considered the receiver. Otherwise, the `slot` is considered\r\n   * the receiver.\r\n   */\r\n  export function disconnectReceiver(receiver: any): void {\r\n    Private.disconnectReceiver(receiver);\r\n  }\r\n\r\n  /**\r\n   * Remove all connections where an object is the sender or receiver.\r\n   *\r\n   * @param object - The object of interest.\r\n   *\r\n   * #### Notes\r\n   * If a `thisArg` is provided when connecting a signal, that object\r\n   * is considered the receiver. Otherwise, the `slot` is considered\r\n   * the receiver.\r\n   */\r\n  export function disconnectAll(object: any): void {\r\n    Private.disconnectAll(object);\r\n  }\r\n\r\n  /**\r\n   * Clear all signal data associated with the given object.\r\n   *\r\n   * @param object - The object for which the data should be cleared.\r\n   *\r\n   * #### Notes\r\n   * This removes all signal connections and any other signal data\r\n   * associated with the object.\r\n   */\r\n  export function clearData(object: any): void {\r\n    Private.disconnectAll(object);\r\n  }\r\n\r\n  /**\r\n   * A type alias for the exception handler function.\r\n   */\r\n  export type ExceptionHandler = (err: Error) => void;\r\n\r\n  /**\r\n   * Get the signal exception handler.\r\n   *\r\n   * @returns The current exception handler.\r\n   *\r\n   * #### Notes\r\n   * The default exception handler is `console.error`.\r\n   */\r\n  export function getExceptionHandler(): ExceptionHandler {\r\n    return Private.exceptionHandler;\r\n  }\r\n\r\n  /**\r\n   * Set the signal exception handler.\r\n   *\r\n   * @param handler - The function to use as the exception handler.\r\n   *\r\n   * @returns The old exception handler.\r\n   *\r\n   * #### Notes\r\n   * The exception handler is invoked when a slot throws an exception.\r\n   */\r\n  export function setExceptionHandler(\r\n    handler: ExceptionHandler\r\n  ): ExceptionHandler {\r\n    let old = Private.exceptionHandler;\r\n    Private.exceptionHandler = handler;\r\n    return old;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The signal exception handler function.\r\n   */\r\n  export let exceptionHandler: Signal.ExceptionHandler = (err: Error) => {\r\n    console.error(err);\r\n  };\r\n\r\n  /**\r\n   * Connect a slot to a signal.\r\n   *\r\n   * @param signal - The signal of interest.\r\n   *\r\n   * @param slot - The slot to invoke when the signal is emitted.\r\n   *\r\n   * @param thisArg - The `this` context for the slot. If provided,\r\n   *   this must be a non-primitive object.\r\n   *\r\n   * @returns `true` if the connection succeeds, `false` otherwise.\r\n   */\r\n  export function connect<T, U>(\r\n    signal: Signal<T, U>,\r\n    slot: Slot<T, U>,\r\n    thisArg?: any\r\n  ): boolean {\r\n    // Coerce a `null` `thisArg` to `undefined`.\r\n    thisArg = thisArg || undefined;\r\n\r\n    // Ensure the sender's array of receivers is created.\r\n    let receivers = receiversForSender.get(signal.sender);\r\n    if (!receivers) {\r\n      receivers = [];\r\n      receiversForSender.set(signal.sender, receivers);\r\n    }\r\n\r\n    // Bail if a matching connection already exists.\r\n    if (findConnection(receivers, signal, slot, thisArg)) {\r\n      return false;\r\n    }\r\n\r\n    // Choose the best object for the receiver.\r\n    let receiver = thisArg || slot;\r\n\r\n    // Ensure the receiver's array of senders is created.\r\n    let senders = sendersForReceiver.get(receiver);\r\n    if (!senders) {\r\n      senders = [];\r\n      sendersForReceiver.set(receiver, senders);\r\n    }\r\n\r\n    // Create a new connection and add it to the end of each array.\r\n    let connection = { signal, slot, thisArg };\r\n    receivers.push(connection);\r\n    senders.push(connection);\r\n\r\n    // Indicate a successful connection.\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Disconnect a slot from a signal.\r\n   *\r\n   * @param signal - The signal of interest.\r\n   *\r\n   * @param slot - The slot to disconnect from the signal.\r\n   *\r\n   * @param thisArg - The `this` context for the slot. If provided,\r\n   *   this must be a non-primitive object.\r\n   *\r\n   * @returns `true` if the connection is removed, `false` otherwise.\r\n   */\r\n  export function disconnect<T, U>(\r\n    signal: Signal<T, U>,\r\n    slot: Slot<T, U>,\r\n    thisArg?: any\r\n  ): boolean {\r\n    // Coerce a `null` `thisArg` to `undefined`.\r\n    thisArg = thisArg || undefined;\r\n\r\n    // Lookup the list of receivers, and bail if none exist.\r\n    let receivers = receiversForSender.get(signal.sender);\r\n    if (!receivers || receivers.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    // Bail if no matching connection exits.\r\n    let connection = findConnection(receivers, signal, slot, thisArg);\r\n    if (!connection) {\r\n      return false;\r\n    }\r\n\r\n    // Choose the best object for the receiver.\r\n    let receiver = thisArg || slot;\r\n\r\n    // Lookup the array of senders, which is now known to exist.\r\n    let senders = sendersForReceiver.get(receiver)!;\r\n\r\n    // Clear the connection and schedule cleanup of the arrays.\r\n    connection.signal = null;\r\n    scheduleCleanup(receivers);\r\n    scheduleCleanup(senders);\r\n\r\n    // Indicate a successful disconnection.\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Remove all connections between a sender and receiver.\r\n   *\r\n   * @param sender - The sender object of interest.\r\n   *\r\n   * @param receiver - The receiver object of interest.\r\n   */\r\n  export function disconnectBetween(sender: any, receiver: any): void {\r\n    // If there are no receivers, there is nothing to do.\r\n    let receivers = receiversForSender.get(sender);\r\n    if (!receivers || receivers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // If there are no senders, there is nothing to do.\r\n    let senders = sendersForReceiver.get(receiver);\r\n    if (!senders || senders.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Clear each connection between the sender and receiver.\r\n    each(senders, connection => {\r\n      // Skip connections which have already been cleared.\r\n      if (!connection.signal) {\r\n        return;\r\n      }\r\n\r\n      // Clear the connection if it matches the sender.\r\n      if (connection.signal.sender === sender) {\r\n        connection.signal = null;\r\n      }\r\n    });\r\n\r\n    // Schedule a cleanup of the senders and receivers.\r\n    scheduleCleanup(receivers);\r\n    scheduleCleanup(senders);\r\n  }\r\n\r\n  /**\r\n   * Remove all connections where the given object is the sender.\r\n   *\r\n   * @param sender - The sender object of interest.\r\n   */\r\n  export function disconnectSender(sender: any): void {\r\n    // If there are no receivers, there is nothing to do.\r\n    let receivers = receiversForSender.get(sender);\r\n    if (!receivers || receivers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Clear each receiver connection.\r\n    each(receivers, connection => {\r\n      // Skip connections which have already been cleared.\r\n      if (!connection.signal) {\r\n        return;\r\n      }\r\n\r\n      // Choose the best object for the receiver.\r\n      let receiver = connection.thisArg || connection.slot;\r\n\r\n      // Clear the connection.\r\n      connection.signal = null;\r\n\r\n      // Cleanup the array of senders, which is now known to exist.\r\n      scheduleCleanup(sendersForReceiver.get(receiver)!);\r\n    });\r\n\r\n    // Schedule a cleanup of the receivers.\r\n    scheduleCleanup(receivers);\r\n  }\r\n\r\n  /**\r\n   * Remove all connections where the given object is the receiver.\r\n   *\r\n   * @param receiver - The receiver object of interest.\r\n   */\r\n  export function disconnectReceiver(receiver: any): void {\r\n    // If there are no senders, there is nothing to do.\r\n    let senders = sendersForReceiver.get(receiver);\r\n    if (!senders || senders.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Clear each sender connection.\r\n    each(senders, connection => {\r\n      // Skip connections which have already been cleared.\r\n      if (!connection.signal) {\r\n        return;\r\n      }\r\n\r\n      // Lookup the sender for the connection.\r\n      let sender = connection.signal.sender;\r\n\r\n      // Clear the connection.\r\n      connection.signal = null;\r\n\r\n      // Cleanup the array of receivers, which is now known to exist.\r\n      scheduleCleanup(receiversForSender.get(sender)!);\r\n    });\r\n\r\n    // Schedule a cleanup of the list of senders.\r\n    scheduleCleanup(senders);\r\n  }\r\n\r\n  /**\r\n   * Remove all connections where an object is the sender or receiver.\r\n   *\r\n   * @param object - The object of interest.\r\n   */\r\n  export function disconnectAll(object: any): void {\r\n    // Remove all connections where the given object is the sender.\r\n    disconnectSender(object);\r\n    // Remove all connections where the given object is the receiver.\r\n    disconnectReceiver(object);\r\n  }\r\n\r\n  /**\r\n   * Emit a signal and invoke its connected slots.\r\n   *\r\n   * @param signal - The signal of interest.\r\n   *\r\n   * @param args - The args to pass to the connected slots.\r\n   *\r\n   * #### Notes\r\n   * Slots are invoked synchronously in connection order.\r\n   *\r\n   * Exceptions thrown by connected slots will be caught and logged.\r\n   */\r\n  export function emit<T, U>(signal: Signal<T, U>, args: U): void {\r\n    // If there are no receivers, there is nothing to do.\r\n    let receivers = receiversForSender.get(signal.sender);\r\n    if (!receivers || receivers.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Invoke the slots for connections with a matching signal.\r\n    // Any connections added during emission are not invoked.\r\n    for (let i = 0, n = receivers.length; i < n; ++i) {\r\n      let connection = receivers[i];\r\n      if (connection.signal === signal) {\r\n        invokeSlot(connection, args);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * An object which holds connection data.\r\n   */\r\n  interface IConnection {\r\n    /**\r\n     * The signal for the connection.\r\n     *\r\n     * A `null` signal indicates a cleared connection.\r\n     */\r\n    signal: Signal<any, any> | null;\r\n\r\n    /**\r\n     * The slot connected to the signal.\r\n     */\r\n    readonly slot: Slot<any, any>;\r\n\r\n    /**\r\n     * The `this` context for the slot.\r\n     */\r\n    readonly thisArg: any;\r\n  }\r\n\r\n  /**\r\n   * A weak mapping of sender to array of receiver connections.\r\n   */\r\n  const receiversForSender = new WeakMap<any, IConnection[]>();\r\n\r\n  /**\r\n   * A weak mapping of receiver to array of sender connections.\r\n   */\r\n  const sendersForReceiver = new WeakMap<any, IConnection[]>();\r\n\r\n  /**\r\n   * A set of connection arrays which are pending cleanup.\r\n   */\r\n  const dirtySet = new Set<IConnection[]>();\r\n\r\n  /**\r\n   * A function to schedule an event loop callback.\r\n   */\r\n  const schedule = (() => {\r\n    let ok = typeof requestAnimationFrame === 'function';\r\n    // @ts-ignore\r\n    return ok ? requestAnimationFrame : setImmediate;\r\n  })();\r\n\r\n  /**\r\n   * Find a connection which matches the given parameters.\r\n   */\r\n  function findConnection(\r\n    connections: IConnection[],\r\n    signal: Signal<any, any>,\r\n    slot: Slot<any, any>,\r\n    thisArg: any\r\n  ): IConnection | undefined {\r\n    return find(\r\n      connections,\r\n      connection =>\r\n        connection.signal === signal &&\r\n        connection.slot === slot &&\r\n        connection.thisArg === thisArg\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Invoke a slot with the given parameters.\r\n   *\r\n   * The connection is assumed to be valid.\r\n   *\r\n   * Exceptions in the slot will be caught and logged.\r\n   */\r\n  function invokeSlot(connection: IConnection, args: any): void {\r\n    let { signal, slot, thisArg } = connection;\r\n    try {\r\n      slot.call(thisArg, signal!.sender, args);\r\n    } catch (err) {\r\n      exceptionHandler(err);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Schedule a cleanup of a connection array.\r\n   *\r\n   * This will add the array to the dirty set and schedule a deferred\r\n   * cleanup of the array contents. On cleanup, any connection with a\r\n   * `null` signal will be removed from the array.\r\n   */\r\n  function scheduleCleanup(array: IConnection[]): void {\r\n    if (dirtySet.size === 0) {\r\n      schedule(cleanupDirtySet);\r\n    }\r\n    dirtySet.add(array);\r\n  }\r\n\r\n  /**\r\n   * Cleanup the connection lists in the dirty set.\r\n   *\r\n   * This function should only be invoked asynchronously, when the\r\n   * stack frame is guaranteed to not be on the path of user code.\r\n   */\r\n  function cleanupDirtySet(): void {\r\n    dirtySet.forEach(cleanupConnections);\r\n    dirtySet.clear();\r\n  }\r\n\r\n  /**\r\n   * Cleanup the dirty connections in a connections array.\r\n   *\r\n   * This will remove any connection with a `null` signal.\r\n   *\r\n   * This function should only be invoked asynchronously, when the\r\n   * stack frame is guaranteed to not be on the path of user code.\r\n   */\r\n  function cleanupConnections(connections: IConnection[]): void {\r\n    ArrayExt.removeAllWhere(connections, isDeadConnection);\r\n  }\r\n\r\n  /**\r\n   * Test whether a connection is dead.\r\n   *\r\n   * A dead connection has a `null` signal.\r\n   */\r\n  function isDeadConnection(connection: IConnection): boolean {\r\n    return connection.signal === null;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { each, IterableOrArrayLike } from '@lumino/algorithm';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\n/**\r\n * An object which implements the disposable pattern.\r\n */\r\nexport interface IDisposable {\r\n  /**\r\n   * Test whether the object has been disposed.\r\n   *\r\n   * #### Notes\r\n   * This property is always safe to access.\r\n   */\r\n  readonly isDisposed: boolean;\r\n\r\n  /**\r\n   * Dispose of the resources held by the object.\r\n   *\r\n   * #### Notes\r\n   * If the object's `dispose` method is called more than once, all\r\n   * calls made after the first will be a no-op.\r\n   *\r\n   * #### Undefined Behavior\r\n   * It is undefined behavior to use any functionality of the object\r\n   * after it has been disposed unless otherwise explicitly noted.\r\n   */\r\n  dispose(): void;\r\n}\r\n\r\n/**\r\n * A disposable object with an observable `disposed` signal.\r\n */\r\nexport interface IObservableDisposable extends IDisposable {\r\n  /**\r\n   * A signal emitted when the object is disposed.\r\n   */\r\n  readonly disposed: ISignal<this, void>;\r\n}\r\n\r\n/**\r\n * A disposable object which delegates to a callback function.\r\n */\r\nexport class DisposableDelegate implements IDisposable {\r\n  /**\r\n   * Construct a new disposable delegate.\r\n   *\r\n   * @param fn - The callback function to invoke on dispose.\r\n   */\r\n  constructor(fn: () => void) {\r\n    this._fn = fn;\r\n  }\r\n\r\n  /**\r\n   * Test whether the delegate has been disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return !this._fn;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the delegate and invoke the callback function.\r\n   */\r\n  dispose(): void {\r\n    if (!this._fn) {\r\n      return;\r\n    }\r\n    let fn = this._fn;\r\n    this._fn = null;\r\n    fn();\r\n  }\r\n\r\n  private _fn: (() => void) | null;\r\n}\r\n\r\n/**\r\n * An observable disposable object which delegates to a callback function.\r\n */\r\nexport class ObservableDisposableDelegate\r\n  extends DisposableDelegate\r\n  implements IObservableDisposable {\r\n  /**\r\n   * A signal emitted when the delegate is disposed.\r\n   */\r\n  get disposed(): ISignal<this, void> {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the delegate and invoke the callback function.\r\n   */\r\n  dispose(): void {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n    super.dispose();\r\n    this._disposed.emit(undefined);\r\n    Signal.clearData(this);\r\n  }\r\n\r\n  private _disposed = new Signal<this, void>(this);\r\n}\r\n\r\n/**\r\n * An object which manages a collection of disposable items.\r\n */\r\nexport class DisposableSet implements IDisposable {\r\n  /**\r\n   * Test whether the set has been disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this._isDisposed;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the set and the items it contains.\r\n   *\r\n   * #### Notes\r\n   * Items are disposed in the order they are added to the set.\r\n   */\r\n  dispose(): void {\r\n    if (this._isDisposed) {\r\n      return;\r\n    }\r\n    this._isDisposed = true;\r\n    this._items.forEach(item => {\r\n      item.dispose();\r\n    });\r\n    this._items.clear();\r\n  }\r\n\r\n  /**\r\n   * Test whether the set contains a specific item.\r\n   *\r\n   * @param item - The item of interest.\r\n   *\r\n   * @returns `true` if the set contains the item, `false` otherwise.\r\n   */\r\n  contains(item: IDisposable): boolean {\r\n    return this._items.has(item);\r\n  }\r\n\r\n  /**\r\n   * Add a disposable item to the set.\r\n   *\r\n   * @param item - The item to add to the set.\r\n   *\r\n   * #### Notes\r\n   * If the item is already contained in the set, this is a no-op.\r\n   */\r\n  add(item: IDisposable): void {\r\n    this._items.add(item);\r\n  }\r\n\r\n  /**\r\n   * Remove a disposable item from the set.\r\n   *\r\n   * @param item - The item to remove from the set.\r\n   *\r\n   * #### Notes\r\n   * If the item is not contained in the set, this is a no-op.\r\n   */\r\n  remove(item: IDisposable): void {\r\n    this._items.delete(item);\r\n  }\r\n\r\n  /**\r\n   * Remove all items from the set.\r\n   */\r\n  clear(): void {\r\n    this._items.clear();\r\n  }\r\n\r\n  private _isDisposed = false;\r\n  private _items = new Set<IDisposable>();\r\n}\r\n\r\n/**\r\n * The namespace for the `DisposableSet` class statics.\r\n */\r\nexport namespace DisposableSet {\r\n  /**\r\n   * Create a disposable set from an iterable of items.\r\n   *\r\n   * @param items - The iterable or array-like object of interest.\r\n   *\r\n   * @returns A new disposable initialized with the given items.\r\n   */\r\n  export function from(items: IterableOrArrayLike<IDisposable>): DisposableSet {\r\n    let set = new DisposableSet();\r\n    each(items, item => {\r\n      set.add(item);\r\n    });\r\n    return set;\r\n  }\r\n}\r\n\r\n/**\r\n * An observable object which manages a collection of disposable items.\r\n */\r\nexport class ObservableDisposableSet\r\n  extends DisposableSet\r\n  implements IObservableDisposable {\r\n  /**\r\n   * A signal emitted when the set is disposed.\r\n   */\r\n  get disposed(): ISignal<this, void> {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the set and the items it contains.\r\n   *\r\n   * #### Notes\r\n   * Items are disposed in the order they are added to the set.\r\n   */\r\n  dispose(): void {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n    super.dispose();\r\n    this._disposed.emit(undefined);\r\n    Signal.clearData(this);\r\n  }\r\n\r\n  private _disposed = new Signal<this, void>(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `ObservableDisposableSet` class statics.\r\n */\r\nexport namespace ObservableDisposableSet {\r\n  /**\r\n   * Create an observable disposable set from an iterable of items.\r\n   *\r\n   * @param items - The iterable or array-like object of interest.\r\n   *\r\n   * @returns A new disposable initialized with the given items.\r\n   */\r\n  export function from(\r\n    items: IterableOrArrayLike<IDisposable>\r\n  ): ObservableDisposableSet {\r\n    let set = new ObservableDisposableSet();\r\n    each(items, item => {\r\n      set.add(item);\r\n    });\r\n    return set;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { MimeData } from '@lumino/coreutils';\r\n\r\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\r\n\r\n/**\r\n * A type alias which defines the possible independent drop actions.\r\n */\r\nexport type DropAction = 'none' | 'copy' | 'link' | 'move';\r\n\r\n/**\r\n * A type alias which defines the possible supported drop actions.\r\n */\r\nexport type SupportedActions =\r\n  | DropAction\r\n  | 'copy-link'\r\n  | 'copy-move'\r\n  | 'link-move'\r\n  | 'all';\r\n\r\n/**\r\n * A custom event type used for drag-drop operations.\r\n *\r\n * #### Notes\r\n * In order to receive `'lm-dragover'`, `'lm-dragleave'`, or `'lm-drop'`\r\n * events, a drop target must cancel the `'lm-dragenter'` event by\r\n * calling the event's `preventDefault()` method.\r\n */\r\nexport interface IDragEvent extends MouseEvent {\r\n  /**\r\n   * The drop action supported or taken by the drop target.\r\n   *\r\n   * #### Notes\r\n   * At the start of each event, this value will be `'none'`. During a\r\n   * `'lm-dragover'` event, the drop target must set this value to one\r\n   * of the supported actions, or the drop event will not occur.\r\n   *\r\n   * When handling the drop event, the drop target should set this\r\n   * to the action which was *actually* taken. This value will be\r\n   * reported back to the drag initiator.\r\n   */\r\n  dropAction: DropAction;\r\n\r\n  /**\r\n   * The drop action proposed by the drag initiator.\r\n   *\r\n   * #### Notes\r\n   * This is the action which is *preferred* by the drag initiator. The\r\n   * drop target is not required to perform this action, but should if\r\n   * it all possible.\r\n   */\r\n  readonly proposedAction: DropAction;\r\n\r\n  /**\r\n   * The drop actions supported by the drag initiator.\r\n   *\r\n   * #### Notes\r\n   * If the `dropAction` is not set to one of the supported actions\r\n   * during the `'lm-dragover'` event, the drop event will not occur.\r\n   */\r\n  readonly supportedActions: SupportedActions;\r\n\r\n  /**\r\n   * The mime data associated with the event.\r\n   *\r\n   * #### Notes\r\n   * This is mime data provided by the drag initiator. Drop targets\r\n   * should use this data to determine if they can handle the drop.\r\n   */\r\n  readonly mimeData: MimeData;\r\n\r\n  /**\r\n   * The source object of the drag, as provided by the drag initiator.\r\n   *\r\n   * #### Notes\r\n   * For advanced applications, the drag initiator may wish to expose\r\n   * a source object to the drop targets. That will be provided here\r\n   * if given by the drag initiator, otherwise it will be `null`.\r\n   */\r\n  readonly source: any;\r\n}\r\n\r\n/**\r\n * An object which manages a drag-drop operation.\r\n *\r\n * A drag object dispatches four different events to drop targets:\r\n *\r\n * - `'lm-dragenter'` - Dispatched when the mouse enters the target\r\n *   element. This event must be canceled in order to receive any\r\n *   of the other events.\r\n *\r\n * - `'lm-dragover'` - Dispatched when the mouse moves over the drop\r\n *   target. It must cancel the event and set the `dropAction` to one\r\n *   of the supported actions in order to receive drop events.\r\n *\r\n * - `'lm-dragleave'` - Dispatched when the mouse leaves the target\r\n *   element. This includes moving the mouse into child elements.\r\n *\r\n * - `'lm-drop'`- Dispatched when the mouse is released over the target\r\n *   element when the target indicates an appropriate drop action. If\r\n *   the event is canceled, the indicated drop action is returned to\r\n *   the initiator through the resolved promise.\r\n *\r\n * A drag operation can be terminated at any time by pressing `Escape`\r\n * or by disposing the drag object.\r\n *\r\n * A drag object has the ability to automatically scroll a scrollable\r\n * element when the mouse is hovered near one of its edges. To enable\r\n * this, add the `data-lm-dragscroll` attribute to any element which\r\n * the drag object should consider for scrolling.\r\n *\r\n * #### Notes\r\n * This class is designed to be used when dragging and dropping custom\r\n * data *within* a single application. It is *not* a replacement for\r\n * the native drag-drop API. Instead, it provides an API which allows\r\n * drag operations to be initiated programmatically and enables the\r\n * transfer of arbitrary non-string objects; features which are not\r\n * possible with the native drag-drop API.\r\n */\r\nexport class Drag implements IDisposable {\r\n  /**\r\n   * Construct a new drag object.\r\n   *\r\n   * @param options - The options for initializing the drag.\r\n   */\r\n  constructor(options: Drag.IOptions) {\r\n    this.document = options.document || document;\r\n    this.mimeData = options.mimeData;\r\n    this.dragImage = options.dragImage || null;\r\n    this.proposedAction = options.proposedAction || 'copy';\r\n    this.supportedActions = options.supportedActions || 'all';\r\n    this.source = options.source || null;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the drag object.\r\n   *\r\n   * #### Notes\r\n   * This will cancel the drag operation if it is active.\r\n   */\r\n  dispose(): void {\r\n    // Do nothing if the drag object is already disposed.\r\n    if (this._disposed) {\r\n      return;\r\n    }\r\n    this._disposed = true;\r\n\r\n    // If there is a current target, dispatch a drag leave event.\r\n    if (this._currentTarget) {\r\n      let event = Private.createMouseEvent('pointerup', -1, -1);\r\n      Private.dispatchDragLeave(this, this._currentTarget, null, event);\r\n    }\r\n\r\n    // Finalize the drag object with `'none'`.\r\n    this._finalize('none');\r\n  }\r\n\r\n  /**\r\n   * The mime data for the drag object.\r\n   */\r\n  readonly mimeData: MimeData;\r\n\r\n  /**\r\n   * The target document for dragging events.\r\n   */\r\n  readonly document: Document | ShadowRoot;\r\n\r\n  /**\r\n   * The drag image element for the drag object.\r\n   */\r\n  readonly dragImage: HTMLElement | null;\r\n\r\n  /**\r\n   * The proposed drop action for the drag object.\r\n   */\r\n  readonly proposedAction: DropAction;\r\n\r\n  /**\r\n   * The supported drop actions for the drag object.\r\n   */\r\n  readonly supportedActions: SupportedActions;\r\n\r\n  /**\r\n   * Get the drag source for the drag object.\r\n   */\r\n  readonly source: any;\r\n\r\n  /**\r\n   * Test whether the drag object is disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Start the drag operation at the specified client position.\r\n   *\r\n   * @param clientX - The client X position for the drag start.\r\n   *\r\n   * @param clientY - The client Y position for the drag start.\r\n   *\r\n   * @returns A promise which resolves to the result of the drag.\r\n   *\r\n   * #### Notes\r\n   * If the drag has already been started, the promise created by the\r\n   * first call to `start` is returned.\r\n   *\r\n   * If the drag operation has ended, or if the drag object has been\r\n   * disposed, the returned promise will resolve to `'none'`.\r\n   *\r\n   * The drag object will be automatically disposed when drag operation\r\n   * completes. This means `Drag` objects are for single-use only.\r\n   *\r\n   * This method assumes the left mouse button is already held down.\r\n   */\r\n  start(clientX: number, clientY: number): Promise<DropAction> {\r\n    // If the drag object is already disposed, resolve to `None`.\r\n    if (this._disposed) {\r\n      return Promise.resolve('none' as DropAction);\r\n    }\r\n\r\n    // If the drag has already been started, return the promise.\r\n    if (this._promise) {\r\n      return this._promise;\r\n    }\r\n\r\n    // Install the document listeners for the drag object.\r\n    this._addListeners();\r\n\r\n    // Attach the drag image at the specified client position.\r\n    this._attachDragImage(clientX, clientY);\r\n\r\n    // Create the promise which will be resolved on completion.\r\n    this._promise = new Promise<DropAction>((resolve, reject) => {\r\n      this._resolve = resolve;\r\n    });\r\n\r\n    // Trigger a fake move event to kick off the drag operation.\r\n    let event = Private.createMouseEvent('pointermove', clientX, clientY);\r\n    document.dispatchEvent(event);\r\n\r\n    // Return the pending promise for the drag operation.\r\n    return this._promise;\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the drag operation.\r\n   *\r\n   * @param event - The DOM event sent to the drag object.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the document. It should not be\r\n   * called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'mousemove': // <DEPRECATED>\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'mouseup': // <DEPRECATED>\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'pointermove':\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'pointerup':\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'keydown':\r\n        this._evtKeyDown(event as KeyboardEvent);\r\n        break;\r\n      default:\r\n        // Stop all other events during drag-drop.\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move the drag image element to the specified location.\r\n   *\r\n   * This is a no-op if there is no drag image element.\r\n   */\r\n  protected moveDragImage(clientX: number, clientY: number): void {\r\n    if (!this.dragImage) {\r\n      return;\r\n    }\r\n    let style = this.dragImage.style;\r\n    style.top = `${clientY}px`;\r\n    style.left = `${clientX}px`;\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousemove'` event for the drag object.\r\n   */\r\n  private _evtMouseMove(event: MouseEvent): void {\r\n    // Stop all input events during drag-drop.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Update the current target node and dispatch enter/leave events.\r\n    this._updateCurrentTarget(event);\r\n\r\n    // Update the drag scroll element.\r\n    this._updateDragScroll(event);\r\n\r\n    // Move the drag image to the specified client position. This is\r\n    // performed *after* dispatching to prevent unnecessary reflows.\r\n    this.moveDragImage(event.clientX, event.clientY);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseup'` event for the drag object.\r\n   */\r\n  private _evtMouseUp(event: MouseEvent): void {\r\n    // Stop all input events during drag-drop.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Do nothing if the left button is not released.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Update the current target node and dispatch enter/leave events.\r\n    // This prevents a subtle issue where the DOM mutates under the\r\n    // cursor after the last move event but before the drop event.\r\n    this._updateCurrentTarget(event);\r\n\r\n    // If there is no current target, finalize with `'none'`.\r\n    if (!this._currentTarget) {\r\n      this._finalize('none');\r\n      return;\r\n    }\r\n\r\n    // If the last drop action was `'none'`, dispatch a leave event\r\n    // to the current target and finalize the drag with `'none'`.\r\n    if (this._dropAction === 'none') {\r\n      Private.dispatchDragLeave(this, this._currentTarget, null, event);\r\n      this._finalize('none');\r\n      return;\r\n    }\r\n\r\n    // Dispatch the drop event at the current target and finalize\r\n    // with the resulting drop action.\r\n    let action = Private.dispatchDrop(this, this._currentTarget, event);\r\n    this._finalize(action);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the drag object.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    // Stop all input events during drag-drop.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Cancel the drag if `Escape` is pressed.\r\n    if (event.keyCode === 27) {\r\n      this.dispose();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add the document event listeners for the drag object.\r\n   */\r\n  private _addListeners(): void {\r\n    document.addEventListener('mousedown', this, true); // <DEPRECATED>\r\n    document.addEventListener('mousemove', this, true); // <DEPRECATED>\r\n    document.addEventListener('mouseup', this, true); // <DEPRECATED>\r\n    document.addEventListener('mouseenter', this, true); // <DEPRECATED>\r\n    document.addEventListener('mouseleave', this, true); // <DEPRECATED>\r\n    document.addEventListener('mouseover', this, true); // <DEPRECATED>\r\n    document.addEventListener('mouseout', this, true); // <DEPRECATED>\r\n    document.addEventListener('pointerdown', this, true);\r\n    document.addEventListener('pointermove', this, true);\r\n    document.addEventListener('pointerup', this, true);\r\n    document.addEventListener('pointerenter', this, true);\r\n    document.addEventListener('pointerleave', this, true);\r\n    document.addEventListener('pointerover', this, true);\r\n    document.addEventListener('pointerout', this, true);\r\n    document.addEventListener('keydown', this, true);\r\n    document.addEventListener('keyup', this, true);\r\n    document.addEventListener('keypress', this, true);\r\n    document.addEventListener('contextmenu', this, true);\r\n  }\r\n\r\n  /**\r\n   * Remove the document event listeners for the drag object.\r\n   */\r\n  private _removeListeners(): void {\r\n    document.removeEventListener('mousedown', this, true); // <DEPRECATED>\r\n    document.removeEventListener('mousemove', this, true); // <DEPRECATED>\r\n    document.removeEventListener('mouseup', this, true); // <DEPRECATED>\r\n    document.removeEventListener('mouseenter', this, true); // <DEPRECATED>\r\n    document.removeEventListener('mouseleave', this, true); // <DEPRECATED>\r\n    document.removeEventListener('mouseover', this, true); // <DEPRECATED>\r\n    document.removeEventListener('mouseout', this, true); // <DEPRECATED>\r\n    document.removeEventListener('pointerdown', this, true);\r\n    document.removeEventListener('pointermove', this, true);\r\n    document.removeEventListener('pointerup', this, true);\r\n    document.removeEventListener('pointerenter', this, true);\r\n    document.removeEventListener('pointerleave', this, true);\r\n    document.removeEventListener('pointerover', this, true);\r\n    document.removeEventListener('pointerout', this, true);\r\n    document.removeEventListener('keydown', this, true);\r\n    document.removeEventListener('keyup', this, true);\r\n    document.removeEventListener('keypress', this, true);\r\n    document.removeEventListener('contextmenu', this, true);\r\n  }\r\n\r\n  /**\r\n   * Update the drag scroll element under the mouse.\r\n   */\r\n  private _updateDragScroll(event: MouseEvent): void {\r\n    // Find the scroll target under the mouse.\r\n    let target = Private.findScrollTarget(event);\r\n\r\n    // Bail if there is nothing to scroll.\r\n    if (!this._scrollTarget && !target) {\r\n      return;\r\n    }\r\n\r\n    // Start the scroll loop if needed.\r\n    if (!this._scrollTarget) {\r\n      setTimeout(this._onScrollFrame, 500);\r\n    }\r\n\r\n    // Update the scroll target.\r\n    this._scrollTarget = target;\r\n  }\r\n\r\n  /**\r\n   * Update the current target node using the given mouse event.\r\n   */\r\n  private _updateCurrentTarget(event: MouseEvent): void {\r\n    // Fetch common local state.\r\n    let prevTarget = this._currentTarget;\r\n    let currTarget = this._currentTarget;\r\n    let prevElem = this._currentElement;\r\n\r\n    // Find the current indicated element at the given position.\r\n    let currElem = this.document.elementFromPoint(event.clientX, event.clientY);\r\n\r\n    // Update the current element reference.\r\n    this._currentElement = currElem;\r\n\r\n    // If the indicated element changes from the previous iteration,\r\n    // and is different from the current target, dispatch the exit\r\n    // event to the target.\r\n    if (currElem !== prevElem && currElem !== currTarget) {\r\n      Private.dispatchDragExit(this, currTarget, currElem, event);\r\n    }\r\n\r\n    // If the indicated element changes from the previous iteration,\r\n    // and is different from the current target, dispatch the enter\r\n    // event and compute the new target element.\r\n    if (currElem !== prevElem && currElem !== currTarget) {\r\n      currTarget = Private.dispatchDragEnter(this, currElem, currTarget, event);\r\n    }\r\n\r\n    // If the current target element has changed, update the current\r\n    // target reference and dispatch the leave event to the old target.\r\n    if (currTarget !== prevTarget) {\r\n      this._currentTarget = currTarget;\r\n      Private.dispatchDragLeave(this, prevTarget, currTarget, event);\r\n    }\r\n\r\n    // Dispatch the drag over event and update the drop action.\r\n    let action = Private.dispatchDragOver(this, currTarget, event);\r\n    this._setDropAction(action);\r\n  }\r\n\r\n  /**\r\n   * Attach the drag image element at the specified location.\r\n   *\r\n   * This is a no-op if there is no drag image element.\r\n   */\r\n  private _attachDragImage(clientX: number, clientY: number): void {\r\n    if (!this.dragImage) {\r\n      return;\r\n    }\r\n    this.dragImage.classList.add('lm-mod-drag-image');\r\n    /* <DEPRECATED> */\r\n    this.dragImage.classList.add('p-mod-drag-image');\r\n    /* </DEPRECATED> */\r\n    let style = this.dragImage.style;\r\n    style.pointerEvents = 'none';\r\n    style.position = 'fixed';\r\n    style.top = `${clientY}px`;\r\n    style.left = `${clientX}px`;\r\n    const body =\r\n      this.document instanceof Document\r\n        ? this.document.body\r\n        : (this.document.firstElementChild as HTMLElement);\r\n    body.appendChild(this.dragImage);\r\n  }\r\n\r\n  /**\r\n   * Detach the drag image element from the DOM.\r\n   *\r\n   * This is a no-op if there is no drag image element.\r\n   */\r\n  private _detachDragImage(): void {\r\n    if (!this.dragImage) {\r\n      return;\r\n    }\r\n    let parent = this.dragImage.parentNode;\r\n    if (!parent) {\r\n      return;\r\n    }\r\n    parent.removeChild(this.dragImage);\r\n  }\r\n\r\n  /**\r\n   * Set the internal drop action state and update the drag cursor.\r\n   */\r\n  private _setDropAction(action: DropAction): void {\r\n    action = Private.validateAction(action, this.supportedActions);\r\n    if (this._override && this._dropAction === action) {\r\n      return;\r\n    }\r\n    switch (action) {\r\n      case 'none':\r\n        this._dropAction = action;\r\n        this._override = Drag.overrideCursor('no-drop', this.document);\r\n        break;\r\n      case 'copy':\r\n        this._dropAction = action;\r\n        this._override = Drag.overrideCursor('copy', this.document);\r\n        break;\r\n      case 'link':\r\n        this._dropAction = action;\r\n        this._override = Drag.overrideCursor('alias', this.document);\r\n        break;\r\n      case 'move':\r\n        this._dropAction = action;\r\n        this._override = Drag.overrideCursor('move', this.document);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Finalize the drag operation and resolve the drag promise.\r\n   */\r\n  private _finalize(action: DropAction): void {\r\n    // Store the resolve function as a temp variable.\r\n    let resolve = this._resolve;\r\n\r\n    // Remove the document event listeners.\r\n    this._removeListeners();\r\n\r\n    // Detach the drag image.\r\n    this._detachDragImage();\r\n\r\n    // Dispose of the cursor override.\r\n    if (this._override) {\r\n      this._override.dispose();\r\n      this._override = null;\r\n    }\r\n\r\n    // Clear the mime data.\r\n    this.mimeData.clear();\r\n\r\n    // Clear the rest of the internal drag state.\r\n    this._disposed = true;\r\n    this._dropAction = 'none';\r\n    this._currentTarget = null;\r\n    this._currentElement = null;\r\n    this._scrollTarget = null;\r\n    this._promise = null;\r\n    this._resolve = null;\r\n\r\n    // Finally, resolve the promise to the given drop action.\r\n    if (resolve) {\r\n      resolve(action);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The scroll loop handler function.\r\n   */\r\n  private _onScrollFrame = () => {\r\n    // Bail early if there is no scroll target.\r\n    if (!this._scrollTarget) {\r\n      return;\r\n    }\r\n\r\n    // Unpack the scroll target.\r\n    let { element, edge, distance } = this._scrollTarget;\r\n\r\n    // Calculate the scroll delta using nonlinear acceleration.\r\n    let d = Private.SCROLL_EDGE_SIZE - distance;\r\n    let f = Math.pow(d / Private.SCROLL_EDGE_SIZE, 2);\r\n    let s = Math.max(1, Math.round(f * Private.SCROLL_EDGE_SIZE));\r\n\r\n    // Scroll the element in the specified direction.\r\n    switch (edge) {\r\n      case 'top':\r\n        element.scrollTop -= s;\r\n        break;\r\n      case 'left':\r\n        element.scrollLeft -= s;\r\n        break;\r\n      case 'right':\r\n        element.scrollLeft += s;\r\n        break;\r\n      case 'bottom':\r\n        element.scrollTop += s;\r\n        break;\r\n    }\r\n\r\n    // Request the next cycle of the scroll loop.\r\n    requestAnimationFrame(this._onScrollFrame);\r\n  };\r\n\r\n  private _disposed = false;\r\n  private _dropAction: DropAction = 'none';\r\n  private _override: IDisposable | null = null;\r\n  private _currentTarget: Element | null = null;\r\n  private _currentElement: Element | null = null;\r\n  private _promise: Promise<DropAction> | null = null;\r\n  private _scrollTarget: Private.IScrollTarget | null = null;\r\n  private _resolve: ((value: DropAction) => void) | null = null;\r\n}\r\n\r\n/**\r\n * The namespace for the `Drag` class statics.\r\n */\r\nexport namespace Drag {\r\n  /**\r\n   * An options object for initializing a `Drag` object.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The root element for dragging DOM artifacts (defaults to document).\r\n     */\r\n    document?: Document | ShadowRoot;\r\n\r\n    /**\r\n     * The populated mime data for the drag operation.\r\n     */\r\n    mimeData: MimeData;\r\n\r\n    /**\r\n     * An optional drag image which follows the mouse cursor.\r\n     *\r\n     * #### Notes\r\n     * The drag image can be any DOM element. It is not limited to\r\n     * image or canvas elements as with the native drag-drop APIs.\r\n     *\r\n     * If provided, this will be positioned at the mouse cursor on each\r\n     * mouse move event. A CSS transform can be used to offset the node\r\n     * from its specified position.\r\n     *\r\n     * The drag image will automatically have the `lm-mod-drag-image`\r\n     * class name added.\r\n     *\r\n     * The default value is `null`.\r\n     */\r\n    dragImage?: HTMLElement;\r\n\r\n    /**\r\n     * The optional proposed drop action for the drag operation.\r\n     *\r\n     * #### Notes\r\n     * This can be provided as a hint to the drop targets as to which\r\n     * drop action is preferred.\r\n     *\r\n     * The default value is `'copy'`.\r\n     */\r\n    proposedAction?: DropAction;\r\n\r\n    /**\r\n     * The drop actions supported by the drag initiator.\r\n     *\r\n     * #### Notes\r\n     * A drop target must indicate that it intends to perform one of the\r\n     * supported actions in order to receive a drop event. However, it is\r\n     * not required to *actually* perform that action when handling the\r\n     * drop event. Therefore, the initiator must be prepared to handle\r\n     * any drop action performed by a drop target.\r\n     *\r\n     * The default value is `'all'`.\r\n     */\r\n    supportedActions?: SupportedActions;\r\n\r\n    /**\r\n     * An optional object which indicates the source of the drag.\r\n     *\r\n     * #### Notes\r\n     * For advanced applications, the drag initiator may wish to expose\r\n     * a source object to the drop targets. That object can be specified\r\n     * here and will be carried along with the drag events.\r\n     *\r\n     * The default value is `null`.\r\n     */\r\n    source?: any;\r\n  }\r\n\r\n  /**\r\n   * Override the cursor icon for the entire document.\r\n   *\r\n   * @param cursor - The string representing the cursor style.\r\n   *\r\n   * @returns A disposable which will clear the override when disposed.\r\n   *\r\n   * #### Notes\r\n   * The most recent call to `overrideCursor` takes precedence.\r\n   * Disposing an old override has no effect on the current override.\r\n   *\r\n   * This utility function is used by the `Drag` class to override the\r\n   * mouse cursor during a drag-drop operation, but it can also be used\r\n   * by other classes to fix the cursor icon during normal mouse drags.\r\n   *\r\n   * #### Example\r\n   * ```typescript\r\n   * import { Drag } from '@lumino/dragdrop';\r\n   *\r\n   * // Force the cursor to be 'wait' for the entire document.\r\n   * let override = Drag.overrideCursor('wait');\r\n   *\r\n   * // Clear the override by disposing the return value.\r\n   * override.dispose();\r\n   * ```\r\n   */\r\n  export function overrideCursor(\r\n    cursor: string,\r\n    doc: Document | ShadowRoot = document\r\n  ): IDisposable {\r\n    let id = ++overrideCursorID;\r\n    const body =\r\n      doc instanceof Document\r\n        ? doc.body\r\n        : (doc.firstElementChild as HTMLElement);\r\n    body.style.cursor = cursor;\r\n    body.classList.add('lm-mod-override-cursor');\r\n    /* <DEPRECATED> */\r\n    body.classList.add('p-mod-override-cursor');\r\n    /* </DEPRECATED> */\r\n    return new DisposableDelegate(() => {\r\n      if (id === overrideCursorID) {\r\n        body.style.cursor = '';\r\n        body.classList.remove('lm-mod-override-cursor');\r\n        /* <DEPRECATED> */\r\n        body.classList.remove('p-mod-override-cursor');\r\n        /* </DEPRECATED> */\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The internal id for the active cursor override.\r\n   */\r\n  let overrideCursorID = 0;\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The size of a drag scroll edge, in pixels.\r\n   */\r\n  export const SCROLL_EDGE_SIZE = 20;\r\n\r\n  /**\r\n   * Validate the given action is one of the supported actions.\r\n   *\r\n   * Returns the given action or `'none'` if the action is unsupported.\r\n   */\r\n  export function validateAction(\r\n    action: DropAction,\r\n    supported: SupportedActions\r\n  ): DropAction {\r\n    return actionTable[action] & supportedTable[supported] ? action : 'none';\r\n  }\r\n\r\n  /**\r\n   * Create a left mouse event at the given position.\r\n   *\r\n   * @param type - The event type for the mouse event.\r\n   *\r\n   * @param clientX - The client X position.\r\n   *\r\n   * @param clientY - The client Y position.\r\n   *\r\n   * @returns A newly created and initialized mouse event.\r\n   */\r\n  export function createMouseEvent(\r\n    type: string,\r\n    clientX: number,\r\n    clientY: number\r\n  ): MouseEvent {\r\n    let event = document.createEvent('MouseEvent');\r\n    event.initMouseEvent(\r\n      type,\r\n      true,\r\n      true,\r\n      window,\r\n      0,\r\n      0,\r\n      0,\r\n      clientX,\r\n      clientY,\r\n      false,\r\n      false,\r\n      false,\r\n      false,\r\n      0,\r\n      null\r\n    );\r\n    return event;\r\n  }\r\n\r\n  /**\r\n   * An object which holds the scroll target data.\r\n   */\r\n  export interface IScrollTarget {\r\n    /**\r\n     * The element to be scrolled.\r\n     */\r\n    element: Element;\r\n\r\n    /**\r\n     * The scroll edge underneath the mouse.\r\n     */\r\n    edge: 'top' | 'left' | 'right' | 'bottom';\r\n\r\n    /**\r\n     * The distance from the mouse to the scroll edge.\r\n     */\r\n    distance: number;\r\n  }\r\n\r\n  /**\r\n   * Find the drag scroll target under the mouse, if any.\r\n   */\r\n  export function findScrollTarget(event: MouseEvent): IScrollTarget | null {\r\n    // Look up the client mouse position.\r\n    let x = event.clientX;\r\n    let y = event.clientY;\r\n\r\n    // Get the element under the mouse.\r\n    let element: Element | null = document.elementFromPoint(x, y);\r\n\r\n    // Search for a scrollable target based on the mouse position.\r\n    // The null assert in third clause of for-loop is required due to:\r\n    // https://github.com/Microsoft/TypeScript/issues/14143\r\n    for (; element; element = element!.parentElement) {\r\n      // Ignore elements which are not marked as scrollable.\r\n      let scrollable = element.hasAttribute('data-lm-dragscroll');\r\n      /* <DEPRECATED> */\r\n      scrollable = scrollable || element.hasAttribute('data-p-dragscroll');\r\n      /* </DEPRECATED> */\r\n      if (!scrollable) {\r\n        continue;\r\n      }\r\n\r\n      // Set up the coordinate offsets for the element.\r\n      let offsetX = 0;\r\n      let offsetY = 0;\r\n      if (element === document.body) {\r\n        offsetX = window.pageXOffset;\r\n        offsetY = window.pageYOffset;\r\n      }\r\n\r\n      // Get the element bounds in viewport coordinates.\r\n      let r = element.getBoundingClientRect();\r\n      let top = r.top + offsetY;\r\n      let left = r.left + offsetX;\r\n      let right = left + r.width;\r\n      let bottom = top + r.height;\r\n\r\n      // Skip the element if it's not under the mouse.\r\n      if (x < left || x >= right || y < top || y >= bottom) {\r\n        continue;\r\n      }\r\n\r\n      // Compute the distance to each edge.\r\n      let dl = x - left + 1;\r\n      let dt = y - top + 1;\r\n      let dr = right - x;\r\n      let db = bottom - y;\r\n\r\n      // Find the smallest of the edge distances.\r\n      let distance = Math.min(dl, dt, dr, db);\r\n\r\n      // Skip the element if the mouse is not within a scroll edge.\r\n      if (distance > SCROLL_EDGE_SIZE) {\r\n        continue;\r\n      }\r\n\r\n      // Set up the edge result variable.\r\n      let edge: 'top' | 'left' | 'right' | 'bottom';\r\n\r\n      // Find the edge for the computed distance.\r\n      switch (distance) {\r\n        case db:\r\n          edge = 'bottom';\r\n          break;\r\n        case dt:\r\n          edge = 'top';\r\n          break;\r\n        case dr:\r\n          edge = 'right';\r\n          break;\r\n        case dl:\r\n          edge = 'left';\r\n          break;\r\n        default:\r\n          throw 'unreachable';\r\n      }\r\n\r\n      // Compute how much the element can scroll in width and height.\r\n      let dsw = element.scrollWidth - element.clientWidth;\r\n      let dsh = element.scrollHeight - element.clientHeight;\r\n\r\n      // Determine if the element should be scrolled for the edge.\r\n      let shouldScroll: boolean;\r\n      switch (edge) {\r\n        case 'top':\r\n          shouldScroll = dsh > 0 && element.scrollTop > 0;\r\n          break;\r\n        case 'left':\r\n          shouldScroll = dsw > 0 && element.scrollLeft > 0;\r\n          break;\r\n        case 'right':\r\n          shouldScroll = dsw > 0 && element.scrollLeft < dsw;\r\n          break;\r\n        case 'bottom':\r\n          shouldScroll = dsh > 0 && element.scrollTop < dsh;\r\n          break;\r\n        default:\r\n          throw 'unreachable';\r\n      }\r\n\r\n      // Skip the element if it should not be scrolled.\r\n      if (!shouldScroll) {\r\n        continue;\r\n      }\r\n\r\n      // Return the drag scroll target.\r\n      return { element, edge, distance };\r\n    }\r\n\r\n    // No drag scroll target was found.\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Dispatch a drag enter event to the indicated element.\r\n   *\r\n   * @param drag - The drag object associated with the action.\r\n   *\r\n   * @param currElem - The currently indicated element, or `null`. This\r\n   *   is the \"immediate user selection\" from the whatwg spec.\r\n   *\r\n   * @param currTarget - The current drag target element, or `null`. This\r\n   *   is the \"current target element\" from the whatwg spec.\r\n   *\r\n   * @param event - The mouse event related to the action.\r\n   *\r\n   * @returns The element to use as the current drag target. This is the\r\n   *   \"current target element\" from the whatwg spec, and may be `null`.\r\n   *\r\n   * #### Notes\r\n   * This largely implements the drag enter portion of the whatwg spec:\r\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\r\n   */\r\n  export function dispatchDragEnter(\r\n    drag: Drag,\r\n    currElem: Element | null,\r\n    currTarget: Element | null,\r\n    event: MouseEvent\r\n  ): Element | null {\r\n    // If the current element is null, return null as the new target.\r\n    if (!currElem) {\r\n      return null;\r\n    }\r\n\r\n    // Dispatch a drag enter event to the current element.\r\n    let dragEvent = createDragEvent('lm-dragenter', drag, event, currTarget);\r\n    let canceled = !currElem.dispatchEvent(dragEvent);\r\n\r\n    // If the event was canceled, use the current element as the new target.\r\n    if (canceled) {\r\n      return currElem;\r\n    }\r\n\r\n    /* <DEPRECATED> */\r\n    dragEvent = createDragEvent('p-dragenter', drag, event, currTarget);\r\n    canceled = !currElem.dispatchEvent(dragEvent);\r\n    if (canceled) {\r\n      return currElem;\r\n    }\r\n    /* </DEPRECATED> */\r\n\r\n    // If the current element is the document body, keep the original target.\r\n    const body =\r\n      drag.document instanceof Document\r\n        ? drag.document.body\r\n        : (drag.document.firstElementChild as HTMLElement);\r\n\r\n    if (currElem === body) {\r\n      return currTarget;\r\n    }\r\n\r\n    // Dispatch a drag enter event on the document body.\r\n    dragEvent = createDragEvent('lm-dragenter', drag, event, currTarget);\r\n    body.dispatchEvent(dragEvent);\r\n\r\n    /* <DEPRECATED> */\r\n    dragEvent = createDragEvent('p-dragenter', drag, event, currTarget);\r\n    body.dispatchEvent(dragEvent);\r\n    /* </DEPRECATED> */\r\n\r\n    // Ignore the event cancellation, and use the body as the new target.\r\n    return body;\r\n  }\r\n\r\n  /**\r\n   * Dispatch a drag exit event to the indicated element.\r\n   *\r\n   * @param drag - The drag object associated with the action.\r\n   *\r\n   * @param prevTarget - The previous target element, or `null`. This\r\n   *   is the previous \"current target element\" from the whatwg spec.\r\n   *\r\n   * @param currTarget - The current drag target element, or `null`. This\r\n   *   is the \"current target element\" from the whatwg spec.\r\n   *\r\n   * @param event - The mouse event related to the action.\r\n   *\r\n   * #### Notes\r\n   * This largely implements the drag exit portion of the whatwg spec:\r\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\r\n   */\r\n  export function dispatchDragExit(\r\n    drag: Drag,\r\n    prevTarget: Element | null,\r\n    currTarget: Element | null,\r\n    event: MouseEvent\r\n  ): void {\r\n    // If the previous target is null, do nothing.\r\n    if (!prevTarget) {\r\n      return;\r\n    }\r\n\r\n    // Dispatch the drag exit event to the previous target.\r\n    let dragEvent = createDragEvent('lm-dragexit', drag, event, currTarget);\r\n    prevTarget.dispatchEvent(dragEvent);\r\n\r\n    /* <DEPRECATED> */\r\n    dragEvent = createDragEvent('p-dragexit', drag, event, currTarget);\r\n    prevTarget.dispatchEvent(dragEvent);\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * Dispatch a drag leave event to the indicated element.\r\n   *\r\n   * @param drag - The drag object associated with the action.\r\n   *\r\n   * @param prevTarget - The previous target element, or `null`. This\r\n   *   is the previous \"current target element\" from the whatwg spec.\r\n   *\r\n   * @param currTarget - The current drag target element, or `null`. This\r\n   *   is the \"current target element\" from the whatwg spec.\r\n   *\r\n   * @param event - The mouse event related to the action.\r\n   *\r\n   * #### Notes\r\n   * This largely implements the drag leave portion of the whatwg spec:\r\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\r\n   */\r\n  export function dispatchDragLeave(\r\n    drag: Drag,\r\n    prevTarget: Element | null,\r\n    currTarget: Element | null,\r\n    event: MouseEvent\r\n  ): void {\r\n    // If the previous target is null, do nothing.\r\n    if (!prevTarget) {\r\n      return;\r\n    }\r\n\r\n    // Dispatch the drag leave event to the previous target.\r\n    let dragEvent = createDragEvent('lm-dragleave', drag, event, currTarget);\r\n    prevTarget.dispatchEvent(dragEvent);\r\n\r\n    /* <DEPRECATED> */\r\n    dragEvent = createDragEvent('p-dragleave', drag, event, currTarget);\r\n    prevTarget.dispatchEvent(dragEvent);\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * Dispatch a drag over event to the indicated element.\r\n   *\r\n   * @param drag - The drag object associated with the action.\r\n   *\r\n   * @param currTarget - The current drag target element, or `null`. This\r\n   *   is the \"current target element\" from the whatwg spec.\r\n   *\r\n   * @param event - The mouse event related to the action.\r\n   *\r\n   * @returns The `DropAction` result of the drag over event.\r\n   *\r\n   * #### Notes\r\n   * This largely implements the drag over portion of the whatwg spec:\r\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\r\n   */\r\n  export function dispatchDragOver(\r\n    drag: Drag,\r\n    currTarget: Element | null,\r\n    event: MouseEvent\r\n  ): DropAction {\r\n    // If there is no current target, the drop action is none.\r\n    if (!currTarget) {\r\n      return 'none';\r\n    }\r\n\r\n    // Dispatch the drag over event to the current target.\r\n    let dragEvent = createDragEvent('lm-dragover', drag, event, null);\r\n    let canceled = !currTarget.dispatchEvent(dragEvent);\r\n\r\n    // If the event was canceled, return the drop action result.\r\n    if (canceled) {\r\n      return dragEvent.dropAction;\r\n    }\r\n\r\n    /* <DEPRECATED> */\r\n    dragEvent = createDragEvent('p-dragover', drag, event, null);\r\n    canceled = !currTarget.dispatchEvent(dragEvent);\r\n    if (canceled) {\r\n      return dragEvent.dropAction;\r\n    }\r\n    /* </DEPRECATED> */\r\n\r\n    // Otherwise, the effective drop action is none.\r\n    return 'none';\r\n  }\r\n\r\n  /**\r\n   * Dispatch a drop event to the indicated element.\r\n   *\r\n   * @param drag - The drag object associated with the action.\r\n   *\r\n   * @param currTarget - The current drag target element, or `null`. This\r\n   *   is the \"current target element\" from the whatwg spec.\r\n   *\r\n   * @param event - The mouse event related to the action.\r\n   *\r\n   * @returns The `DropAction` result of the drop event.\r\n   *\r\n   * #### Notes\r\n   * This largely implements the drag over portion of the whatwg spec:\r\n   * https://html.spec.whatwg.org/multipage/interaction.html#drag-and-drop-processing-model\r\n   */\r\n  export function dispatchDrop(\r\n    drag: Drag,\r\n    currTarget: Element | null,\r\n    event: MouseEvent\r\n  ): DropAction {\r\n    // If there is no current target, the drop action is none.\r\n    if (!currTarget) {\r\n      return 'none';\r\n    }\r\n\r\n    // Dispatch the drop event to the current target.\r\n    let dragEvent = createDragEvent('lm-drop', drag, event, null);\r\n    let canceled = !currTarget.dispatchEvent(dragEvent);\r\n\r\n    // If the event was canceled, return the drop action result.\r\n    if (canceled) {\r\n      return dragEvent.dropAction;\r\n    }\r\n\r\n    /* <DEPRECATED> */\r\n    dragEvent = createDragEvent('p-drop', drag, event, null);\r\n    canceled = !currTarget.dispatchEvent(dragEvent);\r\n    if (canceled) {\r\n      return dragEvent.dropAction;\r\n    }\r\n    /* </DEPRECATED> */\r\n\r\n    // Otherwise, the effective drop action is none.\r\n    return 'none';\r\n  }\r\n\r\n  /**\r\n   * A lookup table from drop action to bit value.\r\n   */\r\n  const actionTable: { [key: string]: number } = {\r\n    none: 0x0,\r\n    copy: 0x1,\r\n    link: 0x2,\r\n    move: 0x4\r\n  };\r\n\r\n  /**\r\n   * A lookup table from supported action to drop action bit mask.\r\n   */\r\n  const supportedTable: { [key: string]: number } = {\r\n    none: actionTable['none'],\r\n    copy: actionTable['copy'],\r\n    link: actionTable['link'],\r\n    move: actionTable['move'],\r\n    'copy-link': actionTable['copy'] | actionTable['link'],\r\n    'copy-move': actionTable['copy'] | actionTable['move'],\r\n    'link-move': actionTable['link'] | actionTable['move'],\r\n    all: actionTable['copy'] | actionTable['link'] | actionTable['move']\r\n  };\r\n\r\n  /**\r\n   * Create a new initialized `IDragEvent` from the given data.\r\n   *\r\n   * @param type - The event type for the drag event.\r\n   *\r\n   * @param drag - The drag object to use for seeding the drag data.\r\n   *\r\n   * @param event - The mouse event to use for seeding the mouse data.\r\n   *\r\n   * @param related - The related target for the event, or `null`.\r\n   *\r\n   * @returns A new object which implements `IDragEvent`.\r\n   */\r\n  function createDragEvent(\r\n    type: string,\r\n    drag: Drag,\r\n    event: MouseEvent,\r\n    related: Element | null\r\n  ): IDragEvent {\r\n    // Create a new mouse event to use as the drag event. Currently,\r\n    // JS engines do now allow user-defined Event subclasses.\r\n    let dragEvent = document.createEvent('MouseEvent');\r\n\r\n    // Initialize the mouse event data.\r\n    dragEvent.initMouseEvent(\r\n      type,\r\n      true,\r\n      true,\r\n      window,\r\n      0,\r\n      event.screenX,\r\n      event.screenY,\r\n      event.clientX,\r\n      event.clientY,\r\n      event.ctrlKey,\r\n      event.altKey,\r\n      event.shiftKey,\r\n      event.metaKey,\r\n      event.button,\r\n      related\r\n    );\r\n\r\n    // Forcefully add the custom drag event properties.\r\n    (dragEvent as any).dropAction = 'none';\r\n    (dragEvent as any).mimeData = drag.mimeData;\r\n    (dragEvent as any).proposedAction = drag.proposedAction;\r\n    (dragEvent as any).supportedActions = drag.supportedActions;\r\n    (dragEvent as any).source = drag.source;\r\n\r\n    // Return the fully initialized drag event.\r\n    return dragEvent as IDragEvent;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * A type alias for a JSON primitive.\r\n */\r\nexport type JSONPrimitive = boolean | number | string | null;\r\n\r\n/**\r\n * A type alias for a JSON value.\r\n */\r\nexport type JSONValue = JSONPrimitive | JSONObject | JSONArray;\r\n\r\n/**\r\n * A type definition for a JSON object.\r\n */\r\nexport interface JSONObject {\r\n  [key: string]: JSONValue;\r\n}\r\n\r\n/**\r\n * A type definition for a JSON array.\r\n */\r\nexport interface JSONArray extends Array<JSONValue> {}\r\n\r\n/**\r\n * A type definition for a readonly JSON object.\r\n */\r\nexport interface ReadonlyJSONObject {\r\n  readonly [key: string]: ReadonlyJSONValue;\r\n}\r\n\r\n/**\r\n * A type definition for a readonly JSON array.\r\n */\r\nexport interface ReadonlyJSONArray extends ReadonlyArray<ReadonlyJSONValue> {}\r\n\r\n/**\r\n * A type alias for a readonly JSON value.\r\n */\r\nexport type ReadonlyJSONValue =\r\n  | JSONPrimitive\r\n  | ReadonlyJSONObject\r\n  | ReadonlyJSONArray;\r\n\r\n/**\r\n * A type alias for a partial JSON value.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport type PartialJSONValue =\r\n  | JSONPrimitive\r\n  | PartialJSONObject\r\n  | PartialJSONArray;\r\n\r\n/**\r\n * A type definition for a partial JSON object.\r\n *\r\n * Note: Partial here means that the JSON object attributes can be `undefined`.\r\n */\r\nexport interface PartialJSONObject {\r\n  [key: string]: PartialJSONValue | undefined;\r\n}\r\n\r\n/**\r\n * A type definition for a partial JSON array.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport interface PartialJSONArray extends Array<PartialJSONValue> {}\r\n\r\n/**\r\n * A type definition for a readonly partial JSON object.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport interface ReadonlyPartialJSONObject {\r\n  readonly [key: string]: ReadonlyPartialJSONValue | undefined;\r\n}\r\n\r\n/**\r\n * A type definition for a readonly partial JSON array.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport interface ReadonlyPartialJSONArray\r\n  extends ReadonlyArray<ReadonlyPartialJSONValue> {}\r\n\r\n/**\r\n * A type alias for a readonly partial JSON value.\r\n *\r\n * Note: Partial here means that JSON object attributes can be `undefined`.\r\n */\r\nexport type ReadonlyPartialJSONValue =\r\n  | JSONPrimitive\r\n  | ReadonlyPartialJSONObject\r\n  | ReadonlyPartialJSONArray;\r\n\r\n/**\r\n * The namespace for JSON-specific functions.\r\n */\r\nexport namespace JSONExt {\r\n  /**\r\n   * A shared frozen empty JSONObject\r\n   */\r\n  export const emptyObject = Object.freeze({}) as ReadonlyJSONObject;\r\n\r\n  /**\r\n   * A shared frozen empty JSONArray\r\n   */\r\n  export const emptyArray = Object.freeze([]) as ReadonlyJSONArray;\r\n\r\n  /**\r\n   * Test whether a JSON value is a primitive.\r\n   *\r\n   * @param value - The JSON value of interest.\r\n   *\r\n   * @returns `true` if the value is a primitive,`false` otherwise.\r\n   */\r\n  export function isPrimitive(\r\n    value: ReadonlyPartialJSONValue\r\n  ): value is JSONPrimitive {\r\n    return (\r\n      value === null ||\r\n      typeof value === 'boolean' ||\r\n      typeof value === 'number' ||\r\n      typeof value === 'string'\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Test whether a JSON value is an array.\r\n   *\r\n   * @param value - The JSON value of interest.\r\n   *\r\n   * @returns `true` if the value is a an array, `false` otherwise.\r\n   */\r\n  export function isArray(value: JSONValue): value is JSONArray;\r\n  export function isArray(value: ReadonlyJSONValue): value is ReadonlyJSONArray;\r\n  export function isArray(value: PartialJSONValue): value is PartialJSONArray;\r\n  export function isArray(\r\n    value: ReadonlyPartialJSONValue\r\n  ): value is ReadonlyPartialJSONArray;\r\n  export function isArray(value: ReadonlyPartialJSONValue): boolean {\r\n    return Array.isArray(value);\r\n  }\r\n\r\n  /**\r\n   * Test whether a JSON value is an object.\r\n   *\r\n   * @param value - The JSON value of interest.\r\n   *\r\n   * @returns `true` if the value is a an object, `false` otherwise.\r\n   */\r\n  export function isObject(value: JSONValue): value is JSONObject;\r\n  export function isObject(\r\n    value: ReadonlyJSONValue\r\n  ): value is ReadonlyJSONObject;\r\n  export function isObject(value: PartialJSONValue): value is PartialJSONObject;\r\n  export function isObject(\r\n    value: ReadonlyPartialJSONValue\r\n  ): value is ReadonlyPartialJSONObject;\r\n  export function isObject(value: ReadonlyPartialJSONValue): boolean {\r\n    return !isPrimitive(value) && !isArray(value);\r\n  }\r\n\r\n  /**\r\n   * Compare two JSON values for deep equality.\r\n   *\r\n   * @param first - The first JSON value of interest.\r\n   *\r\n   * @param second - The second JSON value of interest.\r\n   *\r\n   * @returns `true` if the values are equivalent, `false` otherwise.\r\n   */\r\n  export function deepEqual(\r\n    first: ReadonlyPartialJSONValue,\r\n    second: ReadonlyPartialJSONValue\r\n  ): boolean {\r\n    // Check referential and primitive equality first.\r\n    if (first === second) {\r\n      return true;\r\n    }\r\n\r\n    // If one is a primitive, the `===` check ruled out the other.\r\n    if (isPrimitive(first) || isPrimitive(second)) {\r\n      return false;\r\n    }\r\n\r\n    // Test whether they are arrays.\r\n    let a1 = isArray(first);\r\n    let a2 = isArray(second);\r\n\r\n    // Bail if the types are different.\r\n    if (a1 !== a2) {\r\n      return false;\r\n    }\r\n\r\n    // If they are both arrays, compare them.\r\n    if (a1 && a2) {\r\n      return deepArrayEqual(\r\n        first as ReadonlyPartialJSONArray,\r\n        second as ReadonlyPartialJSONArray\r\n      );\r\n    }\r\n\r\n    // At this point, they must both be objects.\r\n    return deepObjectEqual(\r\n      first as ReadonlyPartialJSONObject,\r\n      second as ReadonlyPartialJSONObject\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Create a deep copy of a JSON value.\r\n   *\r\n   * @param value - The JSON value to copy.\r\n   *\r\n   * @returns A deep copy of the given JSON value.\r\n   */\r\n  export function deepCopy<T extends ReadonlyPartialJSONValue>(value: T): T {\r\n    // Do nothing for primitive values.\r\n    if (isPrimitive(value)) {\r\n      return value;\r\n    }\r\n\r\n    // Deep copy an array.\r\n    if (isArray(value)) {\r\n      return deepArrayCopy(value);\r\n    }\r\n\r\n    // Deep copy an object.\r\n    return deepObjectCopy(value);\r\n  }\r\n\r\n  /**\r\n   * Compare two JSON arrays for deep equality.\r\n   */\r\n  function deepArrayEqual(\r\n    first: ReadonlyPartialJSONArray,\r\n    second: ReadonlyPartialJSONArray\r\n  ): boolean {\r\n    // Check referential equality first.\r\n    if (first === second) {\r\n      return true;\r\n    }\r\n\r\n    // Test the arrays for equal length.\r\n    if (first.length !== second.length) {\r\n      return false;\r\n    }\r\n\r\n    // Compare the values for equality.\r\n    for (let i = 0, n = first.length; i < n; ++i) {\r\n      if (!deepEqual(first[i], second[i])) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // At this point, the arrays are equal.\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Compare two JSON objects for deep equality.\r\n   */\r\n  function deepObjectEqual(\r\n    first: ReadonlyPartialJSONObject,\r\n    second: ReadonlyPartialJSONObject\r\n  ): boolean {\r\n    // Check referential equality first.\r\n    if (first === second) {\r\n      return true;\r\n    }\r\n\r\n    // Check for the first object's keys in the second object.\r\n    for (let key in first) {\r\n      if (first[key] !== undefined && !(key in second)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Check for the second object's keys in the first object.\r\n    for (let key in second) {\r\n      if (second[key] !== undefined && !(key in first)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // Compare the values for equality.\r\n    for (let key in first) {\r\n      // Get the values.\r\n      let firstValue = first[key];\r\n      let secondValue = second[key];\r\n\r\n      // If both are undefined, ignore the key.\r\n      if (firstValue === undefined && secondValue === undefined) {\r\n        continue;\r\n      }\r\n\r\n      // If only one value is undefined, the objects are not equal.\r\n      if (firstValue === undefined || secondValue === undefined) {\r\n        return false;\r\n      }\r\n\r\n      // Compare the values.\r\n      if (!deepEqual(firstValue, secondValue)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    // At this point, the objects are equal.\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Create a deep copy of a JSON array.\r\n   */\r\n  function deepArrayCopy(value: any): any {\r\n    let result = new Array<any>(value.length);\r\n    for (let i = 0, n = value.length; i < n; ++i) {\r\n      result[i] = deepCopy(value[i]);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Create a deep copy of a JSON object.\r\n   */\r\n  function deepObjectCopy(value: any): any {\r\n    let result: any = {};\r\n    for (let key in value) {\r\n      // Ignore undefined values.\r\n      let subvalue = value[key];\r\n      if (subvalue === undefined) {\r\n        continue;\r\n      }\r\n      result[key] = deepCopy(subvalue);\r\n    }\r\n    return result;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * An object which stores MIME data for general application use.\r\n *\r\n * #### Notes\r\n * This class does not attempt to enforce \"correctness\" of MIME types\r\n * and their associated data. Since this class is designed to transfer\r\n * arbitrary data and objects within the same application, it assumes\r\n * that the user provides correct and accurate data.\r\n */\r\nexport class MimeData {\r\n  /**\r\n   * Get an array of the MIME types contained within the dataset.\r\n   *\r\n   * @returns A new array of the MIME types, in order of insertion.\r\n   */\r\n  types(): string[] {\r\n    return this._types.slice();\r\n  }\r\n\r\n  /**\r\n   * Test whether the dataset has an entry for the given type.\r\n   *\r\n   * @param mime - The MIME type of interest.\r\n   *\r\n   * @returns `true` if the dataset contains a value for the given\r\n   *   MIME type, `false` otherwise.\r\n   */\r\n  hasData(mime: string): boolean {\r\n    return this._types.indexOf(mime) !== -1;\r\n  }\r\n\r\n  /**\r\n   * Get the data value for the given MIME type.\r\n   *\r\n   * @param mime - The MIME type of interest.\r\n   *\r\n   * @returns The value for the given MIME type, or `undefined` if\r\n   *   the dataset does not contain a value for the type.\r\n   */\r\n  getData(mime: string): any | undefined {\r\n    let i = this._types.indexOf(mime);\r\n    return i !== -1 ? this._values[i] : undefined;\r\n  }\r\n\r\n  /**\r\n   * Set the data value for the given MIME type.\r\n   *\r\n   * @param mime - The MIME type of interest.\r\n   *\r\n   * @param data - The data value for the given MIME type.\r\n   *\r\n   * #### Notes\r\n   * This will overwrite any previous entry for the MIME type.\r\n   */\r\n  setData(mime: string, data: any): void {\r\n    this.clearData(mime);\r\n    this._types.push(mime);\r\n    this._values.push(data);\r\n  }\r\n\r\n  /**\r\n   * Remove the data entry for the given MIME type.\r\n   *\r\n   * @param mime - The MIME type of interest.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if there is no entry for the given MIME type.\r\n   */\r\n  clearData(mime: string): void {\r\n    let i = this._types.indexOf(mime);\r\n    if (i !== -1) {\r\n      this._types.splice(i, 1);\r\n      this._values.splice(i, 1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove all data entries from the dataset.\r\n   */\r\n  clear(): void {\r\n    this._types.length = 0;\r\n    this._values.length = 0;\r\n  }\r\n\r\n  private _types: string[] = [];\r\n  private _values: any[] = [];\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * A class which wraps a promise into a delegate object.\r\n *\r\n * #### Notes\r\n * This class is useful when the logic to resolve or reject a promise\r\n * cannot be defined at the point where the promise is created.\r\n */\r\nexport class PromiseDelegate<T> {\r\n  /**\r\n   * Construct a new promise delegate.\r\n   */\r\n  constructor() {\r\n    this.promise = new Promise<T>((resolve, reject) => {\r\n      this._resolve = resolve;\r\n      this._reject = reject;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * The promise wrapped by the delegate.\r\n   */\r\n  readonly promise: Promise<T>;\r\n\r\n  /**\r\n   * Resolve the wrapped promise with the given value.\r\n   *\r\n   * @param value - The value to use for resolving the promise.\r\n   */\r\n  resolve(value: T | PromiseLike<T>): void {\r\n    let resolve = this._resolve;\r\n    resolve(value);\r\n  }\r\n\r\n  /**\r\n   * Reject the wrapped promise with the given value.\r\n   *\r\n   * @reason - The reason for rejecting the promise.\r\n   */\r\n  reject(reason: any): void {\r\n    let reject = this._reject;\r\n    reject(reason);\r\n  }\r\n\r\n  private _resolve: (value: T | PromiseLike<T>) => void;\r\n  private _reject: (reason: any) => void;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n/**\r\n * A function which creates a function that generates UUID v4 identifiers.\r\n *\r\n * @returns A new function that creates a UUID v4 string.\r\n *\r\n * #### Notes\r\n * This implementation complies with RFC 4122.\r\n *\r\n * This uses `Random.getRandomValues()` for random bytes, which in\r\n * turn will use the underlying `crypto` module of the platform if\r\n * it is available. The fallback for randomness is `Math.random`.\r\n */\r\nexport function uuid4Factory(\r\n  getRandomValues: (bytes: Uint8Array) => void\r\n): () => string {\r\n  // Create a 16 byte array to hold the random values.\r\n  const bytes = new Uint8Array(16);\r\n\r\n  // Create a look up table from bytes to hex strings.\r\n  const lut = new Array<string>(256);\r\n\r\n  // Pad the single character hex digits with a leading zero.\r\n  for (let i = 0; i < 16; ++i) {\r\n    lut[i] = '0' + i.toString(16);\r\n  }\r\n\r\n  // Populate the rest of the hex digits.\r\n  for (let i = 16; i < 256; ++i) {\r\n    lut[i] = i.toString(16);\r\n  }\r\n\r\n  // Return a function which generates the UUID.\r\n  return function uuid4(): string {\r\n    // Get a new batch of random values.\r\n    getRandomValues(bytes);\r\n\r\n    // Set the UUID version number to 4.\r\n    bytes[6] = 0x40 | (bytes[6] & 0x0f);\r\n\r\n    // Set the clock sequence bit to the RFC spec.\r\n    bytes[8] = 0x80 | (bytes[8] & 0x3f);\r\n\r\n    // Assemble the UUID string.\r\n    return (\r\n      lut[bytes[0]] +\r\n      lut[bytes[1]] +\r\n      lut[bytes[2]] +\r\n      lut[bytes[3]] +\r\n      '-' +\r\n      lut[bytes[4]] +\r\n      lut[bytes[5]] +\r\n      '-' +\r\n      lut[bytes[6]] +\r\n      lut[bytes[7]] +\r\n      '-' +\r\n      lut[bytes[8]] +\r\n      lut[bytes[9]] +\r\n      '-' +\r\n      lut[bytes[10]] +\r\n      lut[bytes[11]] +\r\n      lut[bytes[12]] +\r\n      lut[bytes[13]] +\r\n      lut[bytes[14]] +\r\n      lut[bytes[15]]\r\n    );\r\n  };\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * An object which represents an abstract keyboard layout.\r\n */\r\nexport interface IKeyboardLayout {\r\n  /**\r\n   * The human readable name of the layout.\r\n   *\r\n   * This value is used primarily for display and debugging purposes.\r\n   */\r\n  readonly name: string;\r\n\r\n  /**\r\n   * Get an array of all key values supported by the layout.\r\n   *\r\n   * @returns A new array of the supported key values.\r\n   *\r\n   * #### Notes\r\n   * This can be useful for authoring tools and debugging, when it's\r\n   * necessary to know which keys are available for shortcut use.\r\n   */\r\n  keys(): string[];\r\n\r\n  /**\r\n   * Test whether the given key is a valid value for the layout.\r\n   *\r\n   * @param key - The user provided key to test for validity.\r\n   *\r\n   * @returns `true` if the key is valid, `false` otherwise.\r\n   */\r\n  isValidKey(key: string): boolean;\r\n\r\n  /**\r\n   * Test whether the given key is a modifier key.\r\n   *\r\n   * @param key - The user provided key.\r\n   *\r\n   * @returns `true` if the key is a modifier key, `false` otherwise.\r\n   *\r\n   * #### Notes\r\n   * This is necessary so that we don't process modifier keys pressed\r\n   * in the middle of the key sequence.\r\n   * E.g. \"Shift C Ctrl P\" is actually 4 keydown events:\r\n   *   \"Shift\", \"Shift P\", \"Ctrl\", \"Ctrl P\",\r\n   * and events for \"Shift\" and \"Ctrl\" should be ignored.\r\n   */\r\n  isModifierKey(key: string): boolean;\r\n\r\n  /**\r\n   * Get the key for a `'keydown'` event.\r\n   *\r\n   * @param event - The event object for a `'keydown'` event.\r\n   *\r\n   * @returns The associated key value, or an empty string if the event\r\n   *   does not represent a valid primary key.\r\n   */\r\n  keyForKeydownEvent(event: KeyboardEvent): string;\r\n}\r\n\r\n/**\r\n * Get the global application keyboard layout instance.\r\n *\r\n * @returns The keyboard layout for use by the application.\r\n *\r\n * #### Notes\r\n * The default keyboard layout is US-English.\r\n */\r\nexport function getKeyboardLayout(): IKeyboardLayout {\r\n  return Private.keyboardLayout;\r\n}\r\n\r\n/**\r\n * Set the global application keyboard layout instance.\r\n *\r\n * @param - The keyboard layout for use by the application.\r\n *\r\n * #### Notes\r\n * The keyboard layout should typically be set on application startup\r\n * to a layout which is appropriate for the user's system.\r\n */\r\nexport function setKeyboardLayout(layout: IKeyboardLayout): void {\r\n  Private.keyboardLayout = layout;\r\n}\r\n\r\n/**\r\n * A concrete implementation of [[IKeyboardLayout]] based on keycodes.\r\n *\r\n * The `keyCode` property of a `'keydown'` event is a browser and OS\r\n * specific representation of the physical key (not character) which\r\n * was pressed on a keyboard. While not the most convenient API, it\r\n * is currently the only one which works reliably on all browsers.\r\n *\r\n * This class accepts a user-defined mapping of keycode to key, which\r\n * allows for reliable shortcuts tailored to the user's system.\r\n */\r\nexport class KeycodeLayout implements IKeyboardLayout {\r\n  /**\r\n   * Construct a new keycode layout.\r\n   *\r\n   * @param name - The human readable name for the layout.\r\n   *\r\n   * @param codes - A mapping of keycode to key value.\r\n   *\r\n   * @param modifierKeys - Array of modifier key names\r\n   */\r\n  constructor(\r\n    name: string,\r\n    codes: KeycodeLayout.CodeMap,\r\n    modifierKeys: string[] = []\r\n  ) {\r\n    this.name = name;\r\n    this._codes = codes;\r\n    this._keys = KeycodeLayout.extractKeys(codes);\r\n    this._modifierKeys = KeycodeLayout.convertToKeySet(modifierKeys);\r\n  }\r\n\r\n  /**\r\n   * The human readable name of the layout.\r\n   */\r\n  readonly name: string;\r\n\r\n  /**\r\n   * Get an array of the key values supported by the layout.\r\n   *\r\n   * @returns A new array of the supported key values.\r\n   */\r\n  keys(): string[] {\r\n    return Object.keys(this._keys);\r\n  }\r\n\r\n  /**\r\n   * Test whether the given key is a valid value for the layout.\r\n   *\r\n   * @param key - The user provided key to test for validity.\r\n   *\r\n   * @returns `true` if the key is valid, `false` otherwise.\r\n   */\r\n  isValidKey(key: string): boolean {\r\n    return key in this._keys;\r\n  }\r\n\r\n  /**\r\n   * Test whether the given key is a modifier key.\r\n   *\r\n   * @param key - The user provided key.\r\n   *\r\n   * @returns `true` if the key is a modifier key, `false` otherwise.\r\n   */\r\n  isModifierKey(key: string): boolean {\r\n    return key in this._modifierKeys;\r\n  }\r\n\r\n  /**\r\n   * Get the key for a `'keydown'` event.\r\n   *\r\n   * @param event - The event object for a `'keydown'` event.\r\n   *\r\n   * @returns The associated key value, or an empty string if\r\n   *   the event does not represent a valid primary key.\r\n   */\r\n  keyForKeydownEvent(event: KeyboardEvent): string {\r\n    return this._codes[event.keyCode] || '';\r\n  }\r\n\r\n  private _keys: KeycodeLayout.KeySet;\r\n  private _codes: KeycodeLayout.CodeMap;\r\n  private _modifierKeys: KeycodeLayout.KeySet;\r\n}\r\n\r\n/**\r\n * The namespace for the `KeycodeLayout` class statics.\r\n */\r\nexport namespace KeycodeLayout {\r\n  /**\r\n   * A type alias for a keycode map.\r\n   */\r\n  export type CodeMap = { readonly [code: number]: string };\r\n\r\n  /**\r\n   * A type alias for a key set.\r\n   */\r\n  export type KeySet = { readonly [key: string]: boolean };\r\n\r\n  /**\r\n   * Extract the set of keys from a code map.\r\n   *\r\n   * @param code - The code map of interest.\r\n   *\r\n   * @returns A set of the keys in the code map.\r\n   */\r\n  export function extractKeys(codes: CodeMap): KeySet {\r\n    let keys: any = Object.create(null);\r\n    for (let c in codes) {\r\n      keys[codes[c]] = true;\r\n    }\r\n    return keys as KeySet;\r\n  }\r\n\r\n  /**\r\n   * Convert array of keys to a key set.\r\n   *\r\n   * @param keys - The array that needs to be converted\r\n   *\r\n   * @returns A set of the keys in the array.\r\n   */\r\n  export function convertToKeySet(keys: string[]): KeySet {\r\n    let keySet = Object(null);\r\n    for (let i = 0, n = keys.length; i < n; ++i) {\r\n      keySet[keys[i]] = true;\r\n    }\r\n    return keySet;\r\n  }\r\n}\r\n\r\n/**\r\n * A keycode-based keyboard layout for US English keyboards.\r\n *\r\n * This layout is valid for the following OS/Browser combinations.\r\n *\r\n * - Windows\r\n *   - Chrome\r\n *   - Firefox\r\n *   - IE\r\n *\r\n * - OSX\r\n *   - Chrome\r\n *   - Firefox\r\n *   - Safari\r\n *\r\n * - Linux\r\n *   - Chrome\r\n *   - Firefox\r\n *\r\n * Other combinations may also work, but are untested.\r\n */\r\nexport const EN_US: IKeyboardLayout = new KeycodeLayout(\r\n  'en-us',\r\n  {\r\n    8: 'Backspace',\r\n    9: 'Tab',\r\n    13: 'Enter',\r\n    16: 'Shift',\r\n    17: 'Ctrl',\r\n    18: 'Alt',\r\n    19: 'Pause',\r\n    27: 'Escape',\r\n    32: 'Space',\r\n    33: 'PageUp',\r\n    34: 'PageDown',\r\n    35: 'End',\r\n    36: 'Home',\r\n    37: 'ArrowLeft',\r\n    38: 'ArrowUp',\r\n    39: 'ArrowRight',\r\n    40: 'ArrowDown',\r\n    45: 'Insert',\r\n    46: 'Delete',\r\n    48: '0',\r\n    49: '1',\r\n    50: '2',\r\n    51: '3',\r\n    52: '4',\r\n    53: '5',\r\n    54: '6',\r\n    55: '7',\r\n    56: '8',\r\n    57: '9',\r\n    59: ';', // firefox\r\n    61: '=', // firefox\r\n    65: 'A',\r\n    66: 'B',\r\n    67: 'C',\r\n    68: 'D',\r\n    69: 'E',\r\n    70: 'F',\r\n    71: 'G',\r\n    72: 'H',\r\n    73: 'I',\r\n    74: 'J',\r\n    75: 'K',\r\n    76: 'L',\r\n    77: 'M',\r\n    78: 'N',\r\n    79: 'O',\r\n    80: 'P',\r\n    81: 'Q',\r\n    82: 'R',\r\n    83: 'S',\r\n    84: 'T',\r\n    85: 'U',\r\n    86: 'V',\r\n    87: 'W',\r\n    88: 'X',\r\n    89: 'Y',\r\n    90: 'Z',\r\n    91: 'Meta', // non-firefox\r\n    93: 'ContextMenu',\r\n    96: '0', // numpad\r\n    97: '1', // numpad\r\n    98: '2', // numpad\r\n    99: '3', // numpad\r\n    100: '4', // numpad\r\n    101: '5', // numpad\r\n    102: '6', // numpad\r\n    103: '7', // numpad\r\n    104: '8', // numpad\r\n    105: '9', // numpad\r\n    106: '*', // numpad\r\n    107: '+', // numpad\r\n    109: '-', // numpad\r\n    110: '.', // numpad\r\n    111: '/', // numpad\r\n    112: 'F1',\r\n    113: 'F2',\r\n    114: 'F3',\r\n    115: 'F4',\r\n    116: 'F5',\r\n    117: 'F6',\r\n    118: 'F7',\r\n    119: 'F8',\r\n    120: 'F9',\r\n    121: 'F10',\r\n    122: 'F11',\r\n    123: 'F12',\r\n    173: '-', // firefox\r\n    186: ';', // non-firefox\r\n    187: '=', // non-firefox\r\n    188: ',',\r\n    189: '-', // non-firefox\r\n    190: '.',\r\n    191: '/',\r\n    192: '`',\r\n    219: '[',\r\n    220: '\\\\',\r\n    221: ']',\r\n    222: \"'\",\r\n    224: 'Meta' // firefox\r\n  },\r\n  ['Shift', 'Ctrl', 'Alt', 'Meta'] // modifier keys\r\n);\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The global keyboard layout instance.\r\n   */\r\n  export let keyboardLayout = EN_US;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt } from '@lumino/algorithm';\r\n\r\nimport {\r\n  JSONExt,\r\n  ReadonlyJSONObject,\r\n  ReadonlyPartialJSONObject\r\n} from '@lumino/coreutils';\r\n\r\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\r\n\r\nimport { Platform, Selector } from '@lumino/domutils';\r\n\r\nimport { getKeyboardLayout } from '@lumino/keyboard';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport { VirtualElement } from '@lumino/virtualdom';\r\n\r\n/**\r\n * An object which manages a collection of commands.\r\n *\r\n * #### Notes\r\n * A command registry can be used to populate a variety of action-based\r\n * widgets, such as command palettes, menus, and toolbars.\r\n */\r\nexport class CommandRegistry {\r\n  /**\r\n   * A signal emitted when a command has changed.\r\n   *\r\n   * #### Notes\r\n   * This signal is useful for visual representations of commands which\r\n   * need to refresh when the state of a relevant command has changed.\r\n   */\r\n  get commandChanged(): ISignal<this, CommandRegistry.ICommandChangedArgs> {\r\n    return this._commandChanged;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when a command has executed.\r\n   *\r\n   * #### Notes\r\n   * Care should be taken when consuming this signal. The command system is used\r\n   * by many components for many user actions. Handlers registered with this\r\n   * signal must return quickly to ensure the overall application remains responsive.\r\n   */\r\n  get commandExecuted(): ISignal<this, CommandRegistry.ICommandExecutedArgs> {\r\n    return this._commandExecuted;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when a key binding is changed.\r\n   */\r\n  get keyBindingChanged(): ISignal<\r\n    this,\r\n    CommandRegistry.IKeyBindingChangedArgs\r\n  > {\r\n    return this._keyBindingChanged;\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the key bindings in the registry.\r\n   */\r\n  get keyBindings(): ReadonlyArray<CommandRegistry.IKeyBinding> {\r\n    return this._keyBindings;\r\n  }\r\n\r\n  /**\r\n   * List the ids of the registered commands.\r\n   *\r\n   * @returns A new array of the registered command ids.\r\n   */\r\n  listCommands(): string[] {\r\n    return Object.keys(this._commands);\r\n  }\r\n\r\n  /**\r\n   * Test whether a specific command is registered.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @returns `true` if the command is registered, `false` otherwise.\r\n   */\r\n  hasCommand(id: string): boolean {\r\n    return id in this._commands;\r\n  }\r\n\r\n  /**\r\n   * Add a command to the registry.\r\n   *\r\n   * @param id - The unique id of the command.\r\n   *\r\n   * @param options - The options for the command.\r\n   *\r\n   * @returns A disposable which will remove the command.\r\n   *\r\n   * @throws An error if the given `id` is already registered.\r\n   */\r\n  addCommand(\r\n    id: string,\r\n    options: CommandRegistry.ICommandOptions\r\n  ): IDisposable {\r\n    // Throw an error if the id is already registered.\r\n    if (id in this._commands) {\r\n      throw new Error(`Command '${id}' already registered.`);\r\n    }\r\n\r\n    // Add the command to the registry.\r\n    this._commands[id] = Private.createCommand(options);\r\n\r\n    // Emit the `commandChanged` signal.\r\n    this._commandChanged.emit({ id, type: 'added' });\r\n\r\n    // Return a disposable which will remove the command.\r\n    return new DisposableDelegate(() => {\r\n      // Remove the command from the registry.\r\n      delete this._commands[id];\r\n\r\n      // Emit the `commandChanged` signal.\r\n      this._commandChanged.emit({ id, type: 'removed' });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Notify listeners that the state of a command has changed.\r\n   *\r\n   * @param id - The id of the command which has changed. If more than\r\n   *   one command has changed, this argument should be omitted.\r\n   *\r\n   * @throws An error if the given `id` is not registered.\r\n   *\r\n   * #### Notes\r\n   * This method should be called by the command author whenever the\r\n   * application state changes such that the results of the command\r\n   * metadata functions may have changed.\r\n   *\r\n   * This will cause the `commandChanged` signal to be emitted.\r\n   */\r\n  notifyCommandChanged(id?: string): void {\r\n    if (id !== undefined && !(id in this._commands)) {\r\n      throw new Error(`Command '${id}' is not registered.`);\r\n    }\r\n    this._commandChanged.emit({ id, type: id ? 'changed' : 'many-changed' });\r\n  }\r\n\r\n  /**\r\n   * Get the display label for a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The display label for the command, or an empty string\r\n   *   if the command is not registered.\r\n   */\r\n  label(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): string {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.label.call(undefined, args) : '';\r\n  }\r\n\r\n  /**\r\n   * Get the mnemonic index for a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The mnemonic index for the command, or `-1` if the\r\n   *   command is not registered.\r\n   */\r\n  mnemonic(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): number {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.mnemonic.call(undefined, args) : -1;\r\n  }\r\n\r\n  /**\r\n   * Get the icon renderer for a specific command.\r\n   *\r\n   * DEPRECATED: if set to a string value, the .icon field will\r\n   * function as an alias for the .iconClass field, for backwards\r\n   * compatibility. In the future when this is removed, the default\r\n   * return type will become undefined.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The icon renderer for the command, or\r\n   *   an empty string if the command is not registered.\r\n   */\r\n  icon(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ):\r\n    | VirtualElement.IRenderer\r\n    | undefined\r\n    /* <DEPRECATED> */\r\n    | string /* </DEPRECATED> */ {\r\n    let cmd = this._commands[id];\r\n    return cmd\r\n      ? cmd.icon.call(undefined, args)\r\n      : /* <DEPRECATED> */ '' /* </DEPRECATED> */ /* <FUTURE> undefined </FUTURE> */;\r\n  }\r\n\r\n  /**\r\n   * Get the icon class for a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The icon class for the command, or an empty string if\r\n   *   the command is not registered.\r\n   */\r\n  iconClass(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): string {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.iconClass.call(undefined, args) : '';\r\n  }\r\n\r\n  /**\r\n   * Get the icon label for a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The icon label for the command, or an empty string if\r\n   *   the command is not registered.\r\n   */\r\n  iconLabel(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): string {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.iconLabel.call(undefined, args) : '';\r\n  }\r\n\r\n  /**\r\n   * Get the short form caption for a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The caption for the command, or an empty string if the\r\n   *   command is not registered.\r\n   */\r\n  caption(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): string {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.caption.call(undefined, args) : '';\r\n  }\r\n\r\n  /**\r\n   * Get the usage help text for a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The usage text for the command, or an empty string if\r\n   *   the command is not registered.\r\n   */\r\n  usage(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): string {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.usage.call(undefined, args) : '';\r\n  }\r\n\r\n  /**\r\n   * Get the extra class name for a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The class name for the command, or an empty string if\r\n   *   the command is not registered.\r\n   */\r\n  className(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): string {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.className.call(undefined, args) : '';\r\n  }\r\n\r\n  /**\r\n   * Get the dataset for a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns The dataset for the command, or an empty dataset if\r\n   *   the command is not registered.\r\n   */\r\n  dataset(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): CommandRegistry.Dataset {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.dataset.call(undefined, args) : {};\r\n  }\r\n\r\n  /**\r\n   * Test whether a specific command is enabled.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns A boolean indicating whether the command is enabled,\r\n   *   or `false` if the command is not registered.\r\n   */\r\n  isEnabled(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): boolean {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.isEnabled.call(undefined, args) : false;\r\n  }\r\n\r\n  /**\r\n   * Test whether a specific command is toggled.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns A boolean indicating whether the command is toggled,\r\n   *   or `false` if the command is not registered.\r\n   */\r\n  isToggled(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): boolean {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.isToggled.call(undefined, args) : false;\r\n  }\r\n\r\n  /**\r\n   * Test whether a specific command is toggleable.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns A boolean indicating whether the command is toggleable,\r\n   *   or `false` if the command is not registered.\r\n   */\r\n  isToggleable(\r\n    id: string,\r\n    args: ReadonlyJSONObject = JSONExt.emptyObject\r\n  ): boolean {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.isToggleable : false;\r\n  }\r\n\r\n  /**\r\n   * Test whether a specific command is visible.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns A boolean indicating whether the command is visible,\r\n   *   or `false` if the command is not registered.\r\n   */\r\n  isVisible(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): boolean {\r\n    let cmd = this._commands[id];\r\n    return cmd ? cmd.isVisible.call(undefined, args) : false;\r\n  }\r\n\r\n  /**\r\n   * Execute a specific command.\r\n   *\r\n   * @param id - The id of the command of interest.\r\n   *\r\n   * @param args - The arguments for the command.\r\n   *\r\n   * @returns A promise which resolves with the result of the command.\r\n   *\r\n   * #### Notes\r\n   * The promise will reject if the command throws an exception,\r\n   * or if the command is not registered.\r\n   */\r\n  execute(\r\n    id: string,\r\n    args: ReadonlyPartialJSONObject = JSONExt.emptyObject\r\n  ): Promise<any> {\r\n    // Reject if the command is not registered.\r\n    let cmd = this._commands[id];\r\n    if (!cmd) {\r\n      return Promise.reject(new Error(`Command '${id}' not registered.`));\r\n    }\r\n\r\n    // Execute the command and reject if an exception is thrown.\r\n    let value: any;\r\n    try {\r\n      value = cmd.execute.call(undefined, args);\r\n    } catch (err) {\r\n      value = Promise.reject(err);\r\n    }\r\n\r\n    // Create the return promise which resolves the result.\r\n    let result = Promise.resolve(value);\r\n\r\n    // Emit the command executed signal.\r\n    this._commandExecuted.emit({ id, args, result });\r\n\r\n    // Return the result promise to the caller.\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Add a key binding to the registry.\r\n   *\r\n   * @param options - The options for creating the key binding.\r\n   *\r\n   * @returns A disposable which removes the added key binding.\r\n   *\r\n   * #### Notes\r\n   * If multiple key bindings are registered for the same sequence, the\r\n   * binding with the highest selector specificity is executed first. A\r\n   * tie is broken by using the most recently added key binding.\r\n   *\r\n   * Ambiguous key bindings are resolved with a timeout. As an example,\r\n   * suppose two key bindings are registered: one with the key sequence\r\n   * `['Ctrl D']`, and another with `['Ctrl D', 'Ctrl W']`. If the user\r\n   * presses `Ctrl D`, the first binding cannot be immediately executed\r\n   * since the user may intend to complete the chord with `Ctrl W`. For\r\n   * such cases, a timer is used to allow the chord to be completed. If\r\n   * the chord is not completed before the timeout, the first binding\r\n   * is executed.\r\n   */\r\n  addKeyBinding(options: CommandRegistry.IKeyBindingOptions): IDisposable {\r\n    // Create the binding for the given options.\r\n    let binding = Private.createKeyBinding(options);\r\n\r\n    // Add the key binding to the bindings array.\r\n    this._keyBindings.push(binding);\r\n\r\n    // Emit the `bindingChanged` signal.\r\n    this._keyBindingChanged.emit({ binding, type: 'added' });\r\n\r\n    // Return a disposable which will remove the binding.\r\n    return new DisposableDelegate(() => {\r\n      // Remove the binding from the array.\r\n      ArrayExt.removeFirstOf(this._keyBindings, binding);\r\n\r\n      // Emit the `bindingChanged` signal.\r\n      this._keyBindingChanged.emit({ binding, type: 'removed' });\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Process a `'keydown'` event and invoke a matching key binding.\r\n   *\r\n   * @param event - The event object for a `'keydown'` event.\r\n   *\r\n   * #### Notes\r\n   * This should be called in response to a `'keydown'` event in order\r\n   * to invoke the command for the best matching key binding.\r\n   *\r\n   * The registry **does not** install its own listener for `'keydown'`\r\n   * events. This allows the application full control over the nodes\r\n   * and phase for which the registry processes `'keydown'` events.\r\n   *\r\n   * When the keydown event is processed, if the event target or any of its\r\n   * ancestor nodes has a `data-lm-suppress-shortcuts` attribute, its keydown\r\n   * events will not invoke commands.\r\n   */\r\n  processKeydownEvent(event: KeyboardEvent): void {\r\n    // Bail immediately if playing back keystrokes.\r\n    if (this._replaying || CommandRegistry.isModifierKeyPressed(event)) {\r\n      return;\r\n    }\r\n\r\n    // Get the normalized keystroke for the event.\r\n    let keystroke = CommandRegistry.keystrokeForKeydownEvent(event);\r\n\r\n    // If the keystroke is not valid for the keyboard layout, replay\r\n    // any suppressed events and clear the pending state.\r\n    if (!keystroke) {\r\n      this._replayKeydownEvents();\r\n      this._clearPendingState();\r\n      return;\r\n    }\r\n\r\n    // Add the keystroke to the current key sequence.\r\n    this._keystrokes.push(keystroke);\r\n\r\n    // Find the exact and partial matches for the key sequence.\r\n    let { exact, partial } = Private.matchKeyBinding(\r\n      this._keyBindings,\r\n      this._keystrokes,\r\n      event\r\n    );\r\n\r\n    // If there is no exact match and no partial match, replay\r\n    // any suppressed events and clear the pending state.\r\n    if (!exact && !partial) {\r\n      this._replayKeydownEvents();\r\n      this._clearPendingState();\r\n      return;\r\n    }\r\n\r\n    // Stop propagation of the event. If there is only a partial match,\r\n    // the event will be replayed if a final exact match never occurs.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // If there is an exact match but no partial match, the exact match\r\n    // can be dispatched immediately. The pending state is cleared so\r\n    // the next key press starts from the default state.\r\n    if (exact && !partial) {\r\n      this._executeKeyBinding(exact);\r\n      this._clearPendingState();\r\n      return;\r\n    }\r\n\r\n    // If there is both an exact match and a partial match, the exact\r\n    // match is stored for future dispatch in case the timer expires\r\n    // before a more specific match is triggered.\r\n    if (exact) {\r\n      this._exactKeyMatch = exact;\r\n    }\r\n\r\n    // Store the event for possible playback in the future.\r\n    this._keydownEvents.push(event);\r\n\r\n    // (Re)start the timer to dispatch the most recent exact match\r\n    // in case the partial match fails to result in an exact match.\r\n    this._startTimer();\r\n  }\r\n\r\n  /**\r\n   * Start or restart the pending timeout.\r\n   */\r\n  private _startTimer(): void {\r\n    this._clearTimer();\r\n    this._timerID = window.setTimeout(() => {\r\n      this._onPendingTimeout();\r\n    }, Private.CHORD_TIMEOUT);\r\n  }\r\n\r\n  /**\r\n   * Clear the pending timeout.\r\n   */\r\n  private _clearTimer(): void {\r\n    if (this._timerID !== 0) {\r\n      clearTimeout(this._timerID);\r\n      this._timerID = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Replay the keydown events which were suppressed.\r\n   */\r\n  private _replayKeydownEvents(): void {\r\n    if (this._keydownEvents.length === 0) {\r\n      return;\r\n    }\r\n    this._replaying = true;\r\n    this._keydownEvents.forEach(Private.replayKeyEvent);\r\n    this._replaying = false;\r\n  }\r\n\r\n  /**\r\n   * Execute the command for the given key binding.\r\n   *\r\n   * If the command is missing or disabled, a warning will be logged.\r\n   */\r\n  private _executeKeyBinding(binding: CommandRegistry.IKeyBinding): void {\r\n    let { command, args } = binding;\r\n    if (!this.hasCommand(command) || !this.isEnabled(command, args)) {\r\n      let word = this.hasCommand(command) ? 'enabled' : 'registered';\r\n      let keys = binding.keys.join(', ');\r\n      let msg1 = `Cannot execute key binding '${keys}':`;\r\n      let msg2 = `command '${command}' is not ${word}.`;\r\n      console.warn(`${msg1} ${msg2}`);\r\n      return;\r\n    }\r\n    this.execute(command, args);\r\n  }\r\n\r\n  /**\r\n   * Clear the internal pending state.\r\n   */\r\n  private _clearPendingState(): void {\r\n    this._clearTimer();\r\n    this._exactKeyMatch = null;\r\n    this._keystrokes.length = 0;\r\n    this._keydownEvents.length = 0;\r\n  }\r\n\r\n  /**\r\n   * Handle the partial match timeout.\r\n   */\r\n  private _onPendingTimeout(): void {\r\n    this._timerID = 0;\r\n    if (this._exactKeyMatch) {\r\n      this._executeKeyBinding(this._exactKeyMatch);\r\n    } else {\r\n      this._replayKeydownEvents();\r\n    }\r\n    this._clearPendingState();\r\n  }\r\n\r\n  private _timerID = 0;\r\n  private _replaying = false;\r\n  private _keystrokes: string[] = [];\r\n  private _keydownEvents: KeyboardEvent[] = [];\r\n  private _keyBindings: CommandRegistry.IKeyBinding[] = [];\r\n  private _exactKeyMatch: CommandRegistry.IKeyBinding | null = null;\r\n  private _commands: { [id: string]: Private.ICommand } = Object.create(null);\r\n  private _commandChanged = new Signal<\r\n    this,\r\n    CommandRegistry.ICommandChangedArgs\r\n  >(this);\r\n  private _commandExecuted = new Signal<\r\n    this,\r\n    CommandRegistry.ICommandExecutedArgs\r\n  >(this);\r\n  private _keyBindingChanged = new Signal<\r\n    this,\r\n    CommandRegistry.IKeyBindingChangedArgs\r\n  >(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `CommandRegistry` class statics.\r\n */\r\nexport namespace CommandRegistry {\r\n  /**\r\n   * A type alias for a user-defined command function.\r\n   */\r\n  export type CommandFunc<T> = (args: ReadonlyPartialJSONObject) => T;\r\n\r\n  /**\r\n   * A type alias for a simple immutable string dataset.\r\n   */\r\n  export type Dataset = { readonly [key: string]: string };\r\n\r\n  /**\r\n   * An options object for creating a command.\r\n   *\r\n   * #### Notes\r\n   * A command is an abstract representation of code to be executed along\r\n   * with metadata for describing how the command should be displayed in\r\n   * a visual representation.\r\n   *\r\n   * A command is a collection of functions, *not* methods. The command\r\n   * registry will always invoke the command functions with a `thisArg`\r\n   * which is `undefined`.\r\n   */\r\n  export interface ICommandOptions {\r\n    /**\r\n     * The function to invoke when the command is executed.\r\n     *\r\n     * #### Notes\r\n     * This should return the result of the command (if applicable) or\r\n     * a promise which yields the result. The result is resolved as a\r\n     * promise and that promise is returned to the code which executed\r\n     * the command.\r\n     *\r\n     * This may be invoked even when `isEnabled` returns `false`.\r\n     */\r\n    execute: CommandFunc<any | Promise<any>>;\r\n\r\n    /**\r\n     * The label for the command.\r\n     *\r\n     * #### Notes\r\n     * This can be a string literal, or a function which returns the\r\n     * label based on the provided command arguments.\r\n     *\r\n     * The label is often used as the primary text for the command.\r\n     *\r\n     * The default value is an empty string.\r\n     */\r\n    label?: string | CommandFunc<string>;\r\n\r\n    /**\r\n     * The index of the mnemonic character in the command's label.\r\n     *\r\n     * #### Notes\r\n     * This can be an index literal, or a function which returns the\r\n     * mnemonic index based on the provided command arguments.\r\n     *\r\n     * The mnemonic character is often used by menus to provide easy\r\n     * single-key keyboard access for triggering a menu item. It is\r\n     * typically rendered as an underlined character in the label.\r\n     *\r\n     * The default value is `-1`.\r\n     */\r\n    mnemonic?: number | CommandFunc<number>;\r\n\r\n    /**\r\n     * The icon renderer for the command.\r\n     *\r\n     * #### Notes\r\n     * This can be an IRenderer object, or a function which returns the\r\n     * renderer based on the provided command arguments.\r\n     *\r\n     * The default value is undefined.\r\n     *\r\n     * DEPRECATED: if set to a string value, the .icon field will function as\r\n     * an alias for the .iconClass field, for backwards compatibility\r\n     */\r\n    icon?:\r\n      | VirtualElement.IRenderer\r\n      | undefined\r\n      /* <DEPRECATED> */\r\n      | string /* </DEPRECATED> */\r\n      | CommandFunc<\r\n          | VirtualElement.IRenderer\r\n          | undefined\r\n          /* <DEPRECATED> */\r\n          | string /* </DEPRECATED> */\r\n        >;\r\n\r\n    /**\r\n     * The icon class for the command.\r\n     *\r\n     * #### Notes\r\n     * This class name will be added to the icon node for the visual\r\n     * representation of the command.\r\n     *\r\n     * Multiple class names can be separated with white space.\r\n     *\r\n     * This can be a string literal, or a function which returns the\r\n     * icon based on the provided command arguments.\r\n     *\r\n     * The default value is an empty string.\r\n     */\r\n    iconClass?: string | CommandFunc<string>;\r\n\r\n    /**\r\n     * The icon label for the command.\r\n     *\r\n     * #### Notes\r\n     * This label will be added as text to the icon node for the visual\r\n     * representation of the command.\r\n     *\r\n     * This can be a string literal, or a function which returns the\r\n     * label based on the provided command arguments.\r\n     *\r\n     * The default value is an empty string.\r\n     */\r\n    iconLabel?: string | CommandFunc<string>;\r\n\r\n    /**\r\n     * The caption for the command.\r\n     *\r\n     * #### Notes\r\n     * This should be a simple one line description of the command. It\r\n     * is used by some visual representations to show quick info about\r\n     * the command.\r\n     *\r\n     * This can be a string literal, or a function which returns the\r\n     * caption based on the provided command arguments.\r\n     *\r\n     * The default value is an empty string.\r\n     */\r\n    caption?: string | CommandFunc<string>;\r\n\r\n    /**\r\n     * The usage text for the command.\r\n     *\r\n     * #### Notes\r\n     * This should be a full description of the command, which includes\r\n     * information about the structure of the arguments and the type of\r\n     * the return value. It is used by some visual representations when\r\n     * displaying complete help info about the command.\r\n     *\r\n     * This can be a string literal, or a function which returns the\r\n     * usage text based on the provided command arguments.\r\n     *\r\n     * The default value is an empty string.\r\n     */\r\n    usage?: string | CommandFunc<string>;\r\n\r\n    /**\r\n     * The general class name for the command.\r\n     *\r\n     * #### Notes\r\n     * This class name will be added to the primary node for the visual\r\n     * representation of the command.\r\n     *\r\n     * Multiple class names can be separated with white space.\r\n     *\r\n     * This can be a string literal, or a function which returns the\r\n     * class name based on the provided command arguments.\r\n     *\r\n     * The default value is an empty string.\r\n     */\r\n    className?: string | CommandFunc<string>;\r\n\r\n    /**\r\n     * The dataset for the command.\r\n     *\r\n     * #### Notes\r\n     * The dataset values will be added to the primary node for the\r\n     * visual representation of the command.\r\n     *\r\n     * This can be a dataset object, or a function which returns the\r\n     * dataset object based on the provided command arguments.\r\n     *\r\n     * The default value is an empty dataset.\r\n     */\r\n    dataset?: Dataset | CommandFunc<Dataset>;\r\n\r\n    /**\r\n     * A function which indicates whether the command is enabled.\r\n     *\r\n     * #### Notes\r\n     * Visual representations may use this value to display a disabled\r\n     * command as grayed-out or in some other non-interactive fashion.\r\n     *\r\n     * The default value is `() => true`.\r\n     */\r\n    isEnabled?: CommandFunc<boolean>;\r\n\r\n    /**\r\n     * A function which indicates whether the command is toggled.\r\n     *\r\n     * #### Notes\r\n     * Visual representations may use this value to display a toggled\r\n     * command in a different form, such as a check mark icon for a\r\n     * menu item or a depressed state for a toggle button.\r\n     *\r\n     * The default value is `() => false`.\r\n     */\r\n    isToggled?: CommandFunc<boolean>;\r\n\r\n    /**\r\n     * A function which indicates whether the command is toggleable.\r\n     *\r\n     * #### Notes\r\n     * Visual representations may use this value to display a toggled command in\r\n     * a different form, such as a check box for a menu item or a depressed\r\n     * state for a toggle button. This attribute also allows for accessible\r\n     * interfaces to notify the user that the command corresponds to some state.\r\n     *\r\n     * The default value is `true` if an `isToggled` function is given, `false`\r\n     * otherwise.\r\n     */\r\n    isToggleable?: boolean;\r\n\r\n    /**\r\n     * A function which indicates whether the command is visible.\r\n     *\r\n     * #### Notes\r\n     * Visual representations may use this value to hide or otherwise\r\n     * not display a non-visible command.\r\n     *\r\n     * The default value is `() => true`.\r\n     */\r\n    isVisible?: CommandFunc<boolean>;\r\n  }\r\n\r\n  /**\r\n   * An arguments object for the `commandChanged` signal.\r\n   */\r\n  export interface ICommandChangedArgs {\r\n    /**\r\n     * The id of the associated command.\r\n     *\r\n     * This will be `undefined` when the type is `'many-changed'`.\r\n     */\r\n    readonly id: string | undefined;\r\n\r\n    /**\r\n     * Whether the command was added, removed, or changed.\r\n     */\r\n    readonly type: 'added' | 'removed' | 'changed' | 'many-changed';\r\n  }\r\n\r\n  /**\r\n   * An arguments object for the `commandExecuted` signal.\r\n   */\r\n  export interface ICommandExecutedArgs {\r\n    /**\r\n     * The id of the associated command.\r\n     */\r\n    readonly id: string;\r\n\r\n    /**\r\n     * The arguments object passed to the command.\r\n     */\r\n    readonly args: ReadonlyPartialJSONObject;\r\n\r\n    /**\r\n     * The promise which resolves with the result of the command.\r\n     */\r\n    readonly result: Promise<any>;\r\n  }\r\n\r\n  /**\r\n   * An options object for creating a key binding.\r\n   */\r\n  export interface IKeyBindingOptions {\r\n    /**\r\n     * The default key sequence for the key binding.\r\n     *\r\n     * A key sequence is composed of one or more keystrokes, where each\r\n     * keystroke is a combination of modifiers and a primary key.\r\n     *\r\n     * Most key sequences will contain a single keystroke. Key sequences\r\n     * with multiple keystrokes are called \"chords\", and are useful for\r\n     * implementing modal input (ala Vim).\r\n     *\r\n     * Each keystroke in the sequence should be of the form:\r\n     *   `[<modifier 1> [<modifier 2> [<modifier N> ]]]<primary key>`\r\n     *\r\n     * The supported modifiers are: `Accel`, `Alt`, `Cmd`, `Ctrl`, and\r\n     * `Shift`. The `Accel` modifier is translated to `Cmd` on Mac and\r\n     * `Ctrl` on all other platforms. The `Cmd` modifier is ignored on\r\n     * non-Mac platforms.\r\n     *\r\n     * Keystrokes are case sensitive.\r\n     *\r\n     * **Examples:** `['Accel C']`, `['Shift F11']`, `['D', 'D']`\r\n     */\r\n    keys: string[];\r\n\r\n    /**\r\n     * The CSS selector for the key binding.\r\n     *\r\n     * The key binding will only be invoked when the selector matches a\r\n     * node on the propagation path of the keydown event. This allows\r\n     * the key binding to be restricted to user-defined contexts.\r\n     *\r\n     * The selector must not contain commas.\r\n     */\r\n    selector: string;\r\n\r\n    /**\r\n     * The id of the command to execute when the binding is matched.\r\n     */\r\n    command: string;\r\n\r\n    /**\r\n     * The arguments for the command, if necessary.\r\n     *\r\n     * The default value is an empty object.\r\n     */\r\n    args?: ReadonlyPartialJSONObject;\r\n\r\n    /**\r\n     * The key sequence to use when running on Windows.\r\n     *\r\n     * If provided, this will override `keys` on Windows platforms.\r\n     */\r\n    winKeys?: string[];\r\n\r\n    /**\r\n     * The key sequence to use when running on Mac.\r\n     *\r\n     * If provided, this will override `keys` on Mac platforms.\r\n     */\r\n    macKeys?: string[];\r\n\r\n    /**\r\n     * The key sequence to use when running on Linux.\r\n     *\r\n     * If provided, this will override `keys` on Linux platforms.\r\n     */\r\n    linuxKeys?: string[];\r\n  }\r\n\r\n  /**\r\n   * An object which represents a key binding.\r\n   *\r\n   * #### Notes\r\n   * A key binding is an immutable object created by a registry.\r\n   */\r\n  export interface IKeyBinding {\r\n    /**\r\n     * The key sequence for the binding.\r\n     */\r\n    readonly keys: ReadonlyArray<string>;\r\n\r\n    /**\r\n     * The CSS selector for the binding.\r\n     */\r\n    readonly selector: string;\r\n\r\n    /**\r\n     * The command executed when the binding is matched.\r\n     */\r\n    readonly command: string;\r\n\r\n    /**\r\n     * The arguments for the command.\r\n     */\r\n    readonly args: ReadonlyPartialJSONObject;\r\n  }\r\n\r\n  /**\r\n   * An arguments object for the `keyBindingChanged` signal.\r\n   */\r\n  export interface IKeyBindingChangedArgs {\r\n    /**\r\n     * The key binding which was changed.\r\n     */\r\n    readonly binding: IKeyBinding;\r\n\r\n    /**\r\n     * Whether the key binding was added or removed.\r\n     */\r\n    readonly type: 'added' | 'removed';\r\n  }\r\n\r\n  /**\r\n   * An object which holds the results of parsing a keystroke.\r\n   */\r\n  export interface IKeystrokeParts {\r\n    /**\r\n     * Whether `'Cmd'` appears in the keystroke.\r\n     */\r\n    cmd: boolean;\r\n\r\n    /**\r\n     * Whether `'Ctrl'` appears in the keystroke.\r\n     */\r\n    ctrl: boolean;\r\n\r\n    /**\r\n     * Whether `'Alt'` appears in the keystroke.\r\n     */\r\n    alt: boolean;\r\n\r\n    /**\r\n     * Whether `'Shift'` appears in the keystroke.\r\n     */\r\n    shift: boolean;\r\n\r\n    /**\r\n     * The primary key for the keystroke.\r\n     */\r\n    key: string;\r\n  }\r\n\r\n  /**\r\n   * Parse a keystroke into its constituent components.\r\n   *\r\n   * @param keystroke - The keystroke of interest.\r\n   *\r\n   * @returns The parsed components of the keystroke.\r\n   *\r\n   * #### Notes\r\n   * The keystroke should be of the form:\r\n   *   `[<modifier 1> [<modifier 2> [<modifier N> ]]]<primary key>`\r\n   *\r\n   * The supported modifiers are: `Accel`, `Alt`, `Cmd`, `Ctrl`, and\r\n   * `Shift`. The `Accel` modifier is translated to `Cmd` on Mac and\r\n   * `Ctrl` on all other platforms.\r\n   *\r\n   * The parsing is tolerant and will not throw exceptions. Notably:\r\n   *   - Duplicate modifiers are ignored.\r\n   *   - Extra primary keys are ignored.\r\n   *   - The order of modifiers and primary key is irrelevant.\r\n   *   - The keystroke parts should be separated by whitespace.\r\n   *   - The keystroke is case sensitive.\r\n   */\r\n  export function parseKeystroke(keystroke: string): IKeystrokeParts {\r\n    let key = '';\r\n    let alt = false;\r\n    let cmd = false;\r\n    let ctrl = false;\r\n    let shift = false;\r\n    for (let token of keystroke.split(/\\s+/)) {\r\n      if (token === 'Accel') {\r\n        if (Platform.IS_MAC) {\r\n          cmd = true;\r\n        } else {\r\n          ctrl = true;\r\n        }\r\n      } else if (token === 'Alt') {\r\n        alt = true;\r\n      } else if (token === 'Cmd') {\r\n        cmd = true;\r\n      } else if (token === 'Ctrl') {\r\n        ctrl = true;\r\n      } else if (token === 'Shift') {\r\n        shift = true;\r\n      } else if (token.length > 0) {\r\n        key = token;\r\n      }\r\n    }\r\n    return { cmd, ctrl, alt, shift, key };\r\n  }\r\n\r\n  /**\r\n   * Normalize a keystroke into a canonical representation.\r\n   *\r\n   * @param keystroke - The keystroke of interest.\r\n   *\r\n   * @returns The normalized representation of the keystroke.\r\n   *\r\n   * #### Notes\r\n   * This normalizes the keystroke by removing duplicate modifiers and\r\n   * extra primary keys, and assembling the parts in a canonical order.\r\n   *\r\n   * The `Cmd` modifier is ignored on non-Mac platforms.\r\n   */\r\n  export function normalizeKeystroke(keystroke: string): string {\r\n    let mods = '';\r\n    let parts = parseKeystroke(keystroke);\r\n    if (parts.ctrl) {\r\n      mods += 'Ctrl ';\r\n    }\r\n    if (parts.alt) {\r\n      mods += 'Alt ';\r\n    }\r\n    if (parts.shift) {\r\n      mods += 'Shift ';\r\n    }\r\n    if (parts.cmd && Platform.IS_MAC) {\r\n      mods += 'Cmd ';\r\n    }\r\n    return mods + parts.key;\r\n  }\r\n\r\n  /**\r\n   * Get the platform-specific normalized keys for an options object.\r\n   *\r\n   * @param options - The options for the key binding.\r\n   *\r\n   * @returns Array of combined, normalized keys.\r\n   */\r\n  export function normalizeKeys(options: IKeyBindingOptions): string[] {\r\n    let keys: string[];\r\n    if (Platform.IS_WIN) {\r\n      keys = options.winKeys || options.keys;\r\n    } else if (Platform.IS_MAC) {\r\n      keys = options.macKeys || options.keys;\r\n    } else {\r\n      keys = options.linuxKeys || options.keys;\r\n    }\r\n    return keys.map(normalizeKeystroke);\r\n  }\r\n\r\n  /**\r\n   * Format a keystroke for display on the local system.\r\n   */\r\n  export function formatKeystroke(keystroke: string): string {\r\n    let mods = [];\r\n    let separator = Platform.IS_MAC ? ' ' : '+';\r\n    let parts = parseKeystroke(keystroke);\r\n    if (parts.ctrl) {\r\n      mods.push('Ctrl');\r\n    }\r\n    if (parts.alt) {\r\n      mods.push('Alt');\r\n    }\r\n    if (parts.shift) {\r\n      mods.push('Shift');\r\n    }\r\n    if (Platform.IS_MAC && parts.cmd) {\r\n      mods.push('Cmd');\r\n    }\r\n    mods.push(parts.key);\r\n    return mods.map(Private.formatKey).join(separator);\r\n  }\r\n\r\n  /**\r\n   * Check if `'keydown'` event is caused by pressing a modifier key that should be ignored.\r\n   *\r\n   * @param event - The event object for a `'keydown'` event.\r\n   *\r\n   * @returns `true` if modifier key was pressed, `false` otherwise.\r\n   */\r\n  export function isModifierKeyPressed(event: KeyboardEvent): boolean {\r\n    let layout = getKeyboardLayout();\r\n    let key = layout.keyForKeydownEvent(event);\r\n    return layout.isModifierKey(key);\r\n  }\r\n\r\n  /**\r\n   * Create a normalized keystroke for a `'keydown'` event.\r\n   *\r\n   * @param event - The event object for a `'keydown'` event.\r\n   *\r\n   * @returns A normalized keystroke, or an empty string if the event\r\n   *   does not represent a valid keystroke for the given layout.\r\n   */\r\n  export function keystrokeForKeydownEvent(event: KeyboardEvent): string {\r\n    let layout = getKeyboardLayout();\r\n    let key = layout.keyForKeydownEvent(event);\r\n    if (!key || layout.isModifierKey(key)) {\r\n      return '';\r\n    }\r\n    let mods = [];\r\n    if (event.ctrlKey) {\r\n      mods.push('Ctrl');\r\n    }\r\n    if (event.altKey) {\r\n      mods.push('Alt');\r\n    }\r\n    if (event.shiftKey) {\r\n      mods.push('Shift');\r\n    }\r\n    if (event.metaKey && Platform.IS_MAC) {\r\n      mods.push('Cmd');\r\n    }\r\n    mods.push(key);\r\n    return mods.join(' ');\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The timeout in ms for triggering a key binding chord.\r\n   */\r\n  export const CHORD_TIMEOUT = 1000;\r\n\r\n  /**\r\n   * A convenience type alias for a command func.\r\n   */\r\n  export type CommandFunc<T> = CommandRegistry.CommandFunc<T>;\r\n\r\n  /**\r\n   * A convenience type alias for a command dataset.\r\n   */\r\n  export type Dataset = CommandRegistry.Dataset;\r\n\r\n  /**\r\n   * A normalized command object.\r\n   */\r\n  export interface ICommand {\r\n    readonly execute: CommandFunc<any>;\r\n    readonly label: CommandFunc<string>;\r\n    readonly mnemonic: CommandFunc<number>;\r\n\r\n    readonly icon: CommandFunc<\r\n      | VirtualElement.IRenderer\r\n      | undefined\r\n      /* <DEPRECATED> */\r\n      | string /* </DEPRECATED> */\r\n    >;\r\n\r\n    readonly iconClass: CommandFunc<string>;\r\n    readonly iconLabel: CommandFunc<string>;\r\n    readonly caption: CommandFunc<string>;\r\n    readonly usage: CommandFunc<string>;\r\n    readonly className: CommandFunc<string>;\r\n    readonly dataset: CommandFunc<Dataset>;\r\n    readonly isEnabled: CommandFunc<boolean>;\r\n    readonly isToggled: CommandFunc<boolean>;\r\n    readonly isToggleable: boolean;\r\n    readonly isVisible: CommandFunc<boolean>;\r\n  }\r\n\r\n  /**\r\n   * Create a normalized command from an options object.\r\n   */\r\n  export function createCommand(\r\n    options: CommandRegistry.ICommandOptions\r\n  ): ICommand {\r\n    let icon;\r\n    let iconClass;\r\n\r\n    /* <DEPRECATED> */\r\n    if (!options.icon || typeof options.icon === 'string') {\r\n      // alias icon to iconClass\r\n      iconClass = asFunc(options.iconClass || options.icon, emptyStringFunc);\r\n      icon = iconClass;\r\n    } else {\r\n      /* /<DEPRECATED> */\r\n\r\n      iconClass = asFunc(options.iconClass, emptyStringFunc);\r\n      icon = asFunc(options.icon, undefinedFunc);\r\n\r\n      /* <DEPRECATED> */\r\n    }\r\n    /* </DEPRECATED> */\r\n\r\n    return {\r\n      execute: options.execute,\r\n      label: asFunc(options.label, emptyStringFunc),\r\n      mnemonic: asFunc(options.mnemonic, negativeOneFunc),\r\n      icon,\r\n      iconClass,\r\n      iconLabel: asFunc(options.iconLabel, emptyStringFunc),\r\n      caption: asFunc(options.caption, emptyStringFunc),\r\n      usage: asFunc(options.usage, emptyStringFunc),\r\n      className: asFunc(options.className, emptyStringFunc),\r\n      dataset: asFunc(options.dataset, emptyDatasetFunc),\r\n      isEnabled: options.isEnabled || trueFunc,\r\n      isToggled: options.isToggled || falseFunc,\r\n      isToggleable: options.isToggleable || !!options.isToggled,\r\n      isVisible: options.isVisible || trueFunc\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Create a key binding object from key binding options.\r\n   */\r\n  export function createKeyBinding(\r\n    options: CommandRegistry.IKeyBindingOptions\r\n  ): CommandRegistry.IKeyBinding {\r\n    return {\r\n      keys: CommandRegistry.normalizeKeys(options),\r\n      selector: validateSelector(options),\r\n      command: options.command,\r\n      args: options.args || JSONExt.emptyObject\r\n    };\r\n  }\r\n\r\n  /**\r\n   * An object which holds the results of a key binding match.\r\n   */\r\n  export interface IMatchResult {\r\n    /**\r\n     * The best key binding which exactly matches the key sequence.\r\n     */\r\n    exact: CommandRegistry.IKeyBinding | null;\r\n\r\n    /**\r\n     * Whether there are bindings which partially match the sequence.\r\n     */\r\n    partial: boolean;\r\n  }\r\n\r\n  /**\r\n   * Find the key bindings which match a key sequence.\r\n   *\r\n   * This returns a match result which contains the best exact matching\r\n   * binding, and a flag which indicates if there are partial matches.\r\n   */\r\n  export function matchKeyBinding(\r\n    bindings: ReadonlyArray<CommandRegistry.IKeyBinding>,\r\n    keys: ReadonlyArray<string>,\r\n    event: KeyboardEvent\r\n  ): IMatchResult {\r\n    // The current best exact match.\r\n    let exact: CommandRegistry.IKeyBinding | null = null;\r\n\r\n    // Whether a partial match has been found.\r\n    let partial = false;\r\n\r\n    // The match distance for the exact match.\r\n    let distance = Infinity;\r\n\r\n    // The specificity for the exact match.\r\n    let specificity = 0;\r\n\r\n    // Iterate over the bindings and search for the best match.\r\n    for (let i = 0, n = bindings.length; i < n; ++i) {\r\n      // Lookup the current binding.\r\n      let binding = bindings[i];\r\n\r\n      // Check whether the key binding sequence is a match.\r\n      let sqm = matchSequence(binding.keys, keys);\r\n\r\n      // If there is no match, the binding is ignored.\r\n      if (sqm === SequenceMatch.None) {\r\n        continue;\r\n      }\r\n\r\n      // If it is a partial match and no other partial match has been\r\n      // found, ensure the selector matches and set the partial flag.\r\n      if (sqm === SequenceMatch.Partial) {\r\n        if (!partial && targetDistance(binding.selector, event) !== -1) {\r\n          partial = true;\r\n        }\r\n        continue;\r\n      }\r\n\r\n      // Ignore the match if the selector doesn't match, or if the\r\n      // matched node is farther away than the current best match.\r\n      let td = targetDistance(binding.selector, event);\r\n      if (td === -1 || td > distance) {\r\n        continue;\r\n      }\r\n\r\n      // Get the specificity for the selector.\r\n      let sp = Selector.calculateSpecificity(binding.selector);\r\n\r\n      // Update the best match if this match is stronger.\r\n      if (!exact || td < distance || sp >= specificity) {\r\n        exact = binding;\r\n        distance = td;\r\n        specificity = sp;\r\n      }\r\n    }\r\n\r\n    // Return the match result.\r\n    return { exact, partial };\r\n  }\r\n\r\n  /**\r\n   * Replay a keyboard event.\r\n   *\r\n   * This synthetically dispatches a clone of the keyboard event.\r\n   */\r\n  export function replayKeyEvent(event: KeyboardEvent): void {\r\n    event.target!.dispatchEvent(cloneKeyboardEvent(event));\r\n  }\r\n\r\n  export function formatKey(key: string): string {\r\n    if (Platform.IS_MAC) {\r\n      return MAC_DISPLAY.hasOwnProperty(key) ? MAC_DISPLAY[key] : key;\r\n    } else {\r\n      return WIN_DISPLAY.hasOwnProperty(key) ? WIN_DISPLAY[key] : key;\r\n    }\r\n  }\r\n\r\n  const MAC_DISPLAY: { [key: string]: string } = {\r\n    Backspace: '⌫',\r\n    Tab: '⇥',\r\n    Enter: '↩',\r\n    Shift: '⇧',\r\n    Ctrl: '⌃',\r\n    Alt: '⌥',\r\n    Escape: '⎋',\r\n    PageUp: '⇞',\r\n    PageDown: '⇟',\r\n    End: '↘',\r\n    Home: '↖',\r\n    ArrowLeft: '←',\r\n    ArrowUp: '↑',\r\n    ArrowRight: '→',\r\n    ArrowDown: '↓',\r\n    Delete: '⌦',\r\n    Cmd: '⌘'\r\n  };\r\n\r\n  const WIN_DISPLAY: { [key: string]: string } = {\r\n    Escape: 'Esc',\r\n    PageUp: 'Page Up',\r\n    PageDown: 'Page Down',\r\n    ArrowLeft: 'Left',\r\n    ArrowUp: 'Up',\r\n    ArrowRight: 'Right',\r\n    ArrowDown: 'Down',\r\n    Delete: 'Del'\r\n  };\r\n\r\n  /**\r\n   * A singleton empty string function.\r\n   */\r\n  const emptyStringFunc = () => '';\r\n\r\n  /**\r\n   * A singleton `-1` number function\r\n   */\r\n  const negativeOneFunc = () => -1;\r\n\r\n  /**\r\n   * A singleton true boolean function.\r\n   */\r\n  const trueFunc = () => true;\r\n\r\n  /**\r\n   * A singleton false boolean function.\r\n   */\r\n  const falseFunc = () => false;\r\n\r\n  /**\r\n   * A singleton empty dataset function.\r\n   */\r\n  const emptyDatasetFunc = () => ({});\r\n\r\n  /**\r\n   * A singleton undefined function\r\n   */\r\n  const undefinedFunc = () => undefined;\r\n\r\n  /**\r\n   * Cast a value or command func to a command func.\r\n   */\r\n  function asFunc<T>(\r\n    value: undefined | T | CommandFunc<T>,\r\n    dfault: CommandFunc<T>\r\n  ): CommandFunc<T> {\r\n    if (value === undefined) {\r\n      return dfault;\r\n    }\r\n    if (typeof value === 'function') {\r\n      return value as CommandFunc<T>;\r\n    }\r\n    return () => value;\r\n  }\r\n\r\n  /**\r\n   * Validate the selector for an options object.\r\n   *\r\n   * This returns the validated selector, or throws if the selector is\r\n   * invalid or contains commas.\r\n   */\r\n  function validateSelector(\r\n    options: CommandRegistry.IKeyBindingOptions\r\n  ): string {\r\n    if (options.selector.indexOf(',') !== -1) {\r\n      throw new Error(`Selector cannot contain commas: ${options.selector}`);\r\n    }\r\n    if (!Selector.isValid(options.selector)) {\r\n      throw new Error(`Invalid selector: ${options.selector}`);\r\n    }\r\n    return options.selector;\r\n  }\r\n\r\n  /**\r\n   * An enum which describes the possible sequence matches.\r\n   */\r\n  const enum SequenceMatch {\r\n    None,\r\n    Exact,\r\n    Partial\r\n  }\r\n\r\n  /**\r\n   * Test whether a key binding sequence matches a key sequence.\r\n   *\r\n   * Returns a `SequenceMatch` value indicating the type of match.\r\n   */\r\n  function matchSequence(\r\n    bindKeys: ReadonlyArray<string>,\r\n    userKeys: ReadonlyArray<string>\r\n  ): SequenceMatch {\r\n    if (bindKeys.length < userKeys.length) {\r\n      return SequenceMatch.None;\r\n    }\r\n    for (let i = 0, n = userKeys.length; i < n; ++i) {\r\n      if (bindKeys[i] !== userKeys[i]) {\r\n        return SequenceMatch.None;\r\n      }\r\n    }\r\n    if (bindKeys.length > userKeys.length) {\r\n      return SequenceMatch.Partial;\r\n    }\r\n    return SequenceMatch.Exact;\r\n  }\r\n\r\n  /**\r\n   * Find the distance from the target node to the first matching node.\r\n   *\r\n   * This traverses the event path from `target` to `currentTarget` and\r\n   * computes the distance from `target` to the first node which matches\r\n   * the CSS selector. If no match is found, `-1` is returned.\r\n   */\r\n  function targetDistance(selector: string, event: KeyboardEvent): number {\r\n    let targ = event.target as Element | null;\r\n    let curr = event.currentTarget as Element | null;\r\n    for (let dist = 0; targ !== null; targ = targ.parentElement, ++dist) {\r\n      if (targ.hasAttribute('data-lm-suppress-shortcuts')) {\r\n        return -1;\r\n      }\r\n      /* <DEPRECATED> */\r\n      if (targ.hasAttribute('data-p-suppress-shortcuts')) {\r\n        return -1;\r\n      }\r\n      /* </DEPRECATED> */\r\n      if (Selector.matches(targ, selector)) {\r\n        return dist;\r\n      }\r\n      if (targ === curr) {\r\n        return -1;\r\n      }\r\n    }\r\n    return -1;\r\n  }\r\n\r\n  /**\r\n   * Clone a keyboard event.\r\n   */\r\n  function cloneKeyboardEvent(event: KeyboardEvent): KeyboardEvent {\r\n    // A custom event is required because Chrome nulls out the\r\n    // `keyCode` field in user-generated `KeyboardEvent` types.\r\n    let clone = document.createEvent('Event') as any;\r\n    let bubbles = event.bubbles || true;\r\n    let cancelable = event.cancelable || true;\r\n    clone.initEvent(event.type || 'keydown', bubbles, cancelable);\r\n    clone.key = event.key || '';\r\n    clone.keyCode = event.keyCode || 0;\r\n    clone.which = event.keyCode || 0;\r\n    clone.ctrlKey = event.ctrlKey || false;\r\n    clone.altKey = event.altKey || false;\r\n    clone.shiftKey = event.shiftKey || false;\r\n    clone.metaKey = event.metaKey || false;\r\n    clone.view = event.view || window;\r\n    return clone as KeyboardEvent;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt } from '@lumino/algorithm';\r\n\r\n/**\r\n * The names of the supported HTML5 DOM element attributes.\r\n *\r\n * This list is not all-encompassing, rather it attempts to define the\r\n * attribute names which are relevant for use in a virtual DOM context.\r\n * If a standardized or widely supported name is missing, please open\r\n * an issue to have it added.\r\n *\r\n * The attribute names were collected from the following sources:\r\n *   - https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n *   - https://www.w3.org/TR/html5/index.html#attributes-1\r\n *   - https://html.spec.whatwg.org/multipage/indices.html#attributes-3\r\n */\r\nexport type ElementAttrNames =\r\n  | 'abbr'\r\n  | 'accept'\r\n  | 'accept-charset'\r\n  | 'accesskey'\r\n  | 'action'\r\n  | 'allowfullscreen'\r\n  | 'alt'\r\n  | 'autocomplete'\r\n  | 'autofocus'\r\n  | 'autoplay'\r\n  | 'autosave'\r\n  | 'checked'\r\n  | 'cite'\r\n  | 'cols'\r\n  | 'colspan'\r\n  | 'contenteditable'\r\n  | 'controls'\r\n  | 'coords'\r\n  | 'crossorigin'\r\n  | 'data'\r\n  | 'datetime'\r\n  | 'default'\r\n  | 'dir'\r\n  | 'dirname'\r\n  | 'disabled'\r\n  | 'download'\r\n  | 'draggable'\r\n  | 'dropzone'\r\n  | 'enctype'\r\n  | 'form'\r\n  | 'formaction'\r\n  | 'formenctype'\r\n  | 'formmethod'\r\n  | 'formnovalidate'\r\n  | 'formtarget'\r\n  | 'headers'\r\n  | 'height'\r\n  | 'hidden'\r\n  | 'high'\r\n  | 'href'\r\n  | 'hreflang'\r\n  | 'id'\r\n  | 'inputmode'\r\n  | 'integrity'\r\n  | 'ismap'\r\n  | 'kind'\r\n  | 'label'\r\n  | 'lang'\r\n  | 'list'\r\n  | 'loop'\r\n  | 'low'\r\n  | 'max'\r\n  | 'maxlength'\r\n  | 'media'\r\n  | 'mediagroup'\r\n  | 'method'\r\n  | 'min'\r\n  | 'minlength'\r\n  | 'multiple'\r\n  | 'muted'\r\n  | 'name'\r\n  | 'novalidate'\r\n  | 'optimum'\r\n  | 'pattern'\r\n  | 'placeholder'\r\n  | 'poster'\r\n  | 'preload'\r\n  | 'readonly'\r\n  | 'rel'\r\n  | 'required'\r\n  | 'reversed'\r\n  | 'rows'\r\n  | 'rowspan'\r\n  | 'sandbox'\r\n  | 'scope'\r\n  | 'selected'\r\n  | 'shape'\r\n  | 'size'\r\n  | 'sizes'\r\n  | 'span'\r\n  | 'spellcheck'\r\n  | 'src'\r\n  | 'srcdoc'\r\n  | 'srclang'\r\n  | 'srcset'\r\n  | 'start'\r\n  | 'step'\r\n  | 'tabindex'\r\n  | 'target'\r\n  | 'title'\r\n  | 'type'\r\n  | 'typemustmatch'\r\n  | 'usemap'\r\n  | 'value'\r\n  | 'width'\r\n  | 'wrap';\r\n\r\n/**\r\n * The names of ARIA attributes for HTML elements.\r\n *\r\n * The attribute names are collected from\r\n * https://www.w3.org/TR/html5/infrastructure.html#element-attrdef-aria-role\r\n */\r\nexport type ARIAAttrNames =\r\n  | 'aria-activedescendant'\r\n  | 'aria-atomic'\r\n  | 'aria-autocomplete'\r\n  | 'aria-busy'\r\n  | 'aria-checked'\r\n  | 'aria-colcount'\r\n  | 'aria-colindex'\r\n  | 'aria-colspan'\r\n  | 'aria-controls'\r\n  | 'aria-current'\r\n  | 'aria-describedby'\r\n  | 'aria-details'\r\n  | 'aria-dialog'\r\n  | 'aria-disabled'\r\n  | 'aria-dropeffect'\r\n  | 'aria-errormessage'\r\n  | 'aria-expanded'\r\n  | 'aria-flowto'\r\n  | 'aria-grabbed'\r\n  | 'aria-haspopup'\r\n  | 'aria-hidden'\r\n  | 'aria-invalid'\r\n  | 'aria-keyshortcuts'\r\n  | 'aria-label'\r\n  | 'aria-labelledby'\r\n  | 'aria-level'\r\n  | 'aria-live'\r\n  | 'aria-multiline'\r\n  | 'aria-multiselectable'\r\n  | 'aria-orientation'\r\n  | 'aria-owns'\r\n  | 'aria-placeholder'\r\n  | 'aria-posinset'\r\n  | 'aria-pressed'\r\n  | 'aria-readonly'\r\n  | 'aria-relevant'\r\n  | 'aria-required'\r\n  | 'aria-roledescription'\r\n  | 'aria-rowcount'\r\n  | 'aria-rowindex'\r\n  | 'aria-rowspan'\r\n  | 'aria-selected'\r\n  | 'aria-setsize'\r\n  | 'aria-sort'\r\n  | 'aria-valuemax'\r\n  | 'aria-valuemin'\r\n  | 'aria-valuenow'\r\n  | 'aria-valuetext'\r\n  | 'role';\r\n\r\n/**\r\n * The names of the supported HTML5 CSS property names.\r\n *\r\n * If a standardized or widely supported name is missing, please open\r\n * an issue to have it added.\r\n *\r\n * The property names were collected from the following sources:\r\n *   - TypeScript's `lib.dom.d.ts` file\r\n */\r\nexport type CSSPropertyNames =\r\n  | 'alignContent'\r\n  | 'alignItems'\r\n  | 'alignSelf'\r\n  | 'alignmentBaseline'\r\n  | 'animation'\r\n  | 'animationDelay'\r\n  | 'animationDirection'\r\n  | 'animationDuration'\r\n  | 'animationFillMode'\r\n  | 'animationIterationCount'\r\n  | 'animationName'\r\n  | 'animationPlayState'\r\n  | 'animationTimingFunction'\r\n  | 'backfaceVisibility'\r\n  | 'background'\r\n  | 'backgroundAttachment'\r\n  | 'backgroundClip'\r\n  | 'backgroundColor'\r\n  | 'backgroundImage'\r\n  | 'backgroundOrigin'\r\n  | 'backgroundPosition'\r\n  | 'backgroundPositionX'\r\n  | 'backgroundPositionY'\r\n  | 'backgroundRepeat'\r\n  | 'backgroundSize'\r\n  | 'baselineShift'\r\n  | 'border'\r\n  | 'borderBottom'\r\n  | 'borderBottomColor'\r\n  | 'borderBottomLeftRadius'\r\n  | 'borderBottomRightRadius'\r\n  | 'borderBottomStyle'\r\n  | 'borderBottomWidth'\r\n  | 'borderCollapse'\r\n  | 'borderColor'\r\n  | 'borderImage'\r\n  | 'borderImageOutset'\r\n  | 'borderImageRepeat'\r\n  | 'borderImageSlice'\r\n  | 'borderImageSource'\r\n  | 'borderImageWidth'\r\n  | 'borderLeft'\r\n  | 'borderLeftColor'\r\n  | 'borderLeftStyle'\r\n  | 'borderLeftWidth'\r\n  | 'borderRadius'\r\n  | 'borderRight'\r\n  | 'borderRightColor'\r\n  | 'borderRightStyle'\r\n  | 'borderRightWidth'\r\n  | 'borderSpacing'\r\n  | 'borderStyle'\r\n  | 'borderTop'\r\n  | 'borderTopColor'\r\n  | 'borderTopLeftRadius'\r\n  | 'borderTopRightRadius'\r\n  | 'borderTopStyle'\r\n  | 'borderTopWidth'\r\n  | 'borderWidth'\r\n  | 'bottom'\r\n  | 'boxShadow'\r\n  | 'boxSizing'\r\n  | 'breakAfter'\r\n  | 'breakBefore'\r\n  | 'breakInside'\r\n  | 'captionSide'\r\n  | 'clear'\r\n  | 'clip'\r\n  | 'clipPath'\r\n  | 'clipRule'\r\n  | 'color'\r\n  | 'colorInterpolationFilters'\r\n  | 'columnCount'\r\n  | 'columnFill'\r\n  | 'columnGap'\r\n  | 'columnRule'\r\n  | 'columnRuleColor'\r\n  | 'columnRuleStyle'\r\n  | 'columnRuleWidth'\r\n  | 'columnSpan'\r\n  | 'columnWidth'\r\n  | 'columns'\r\n  | 'content'\r\n  | 'counterIncrement'\r\n  | 'counterReset'\r\n  | 'cssFloat'\r\n  | 'cssText'\r\n  | 'cursor'\r\n  | 'direction'\r\n  | 'display'\r\n  | 'dominantBaseline'\r\n  | 'emptyCells'\r\n  | 'enableBackground'\r\n  | 'fill'\r\n  | 'fillOpacity'\r\n  | 'fillRule'\r\n  | 'filter'\r\n  | 'flex'\r\n  | 'flexBasis'\r\n  | 'flexDirection'\r\n  | 'flexFlow'\r\n  | 'flexGrow'\r\n  | 'flexShrink'\r\n  | 'flexWrap'\r\n  | 'floodColor'\r\n  | 'floodOpacity'\r\n  | 'font'\r\n  | 'fontFamily'\r\n  | 'fontFeatureSettings'\r\n  | 'fontSize'\r\n  | 'fontSizeAdjust'\r\n  | 'fontStretch'\r\n  | 'fontStyle'\r\n  | 'fontVariant'\r\n  | 'fontWeight'\r\n  | 'glyphOrientationHorizontal'\r\n  | 'glyphOrientationVertical'\r\n  | 'height'\r\n  | 'imeMode'\r\n  | 'justifyContent'\r\n  | 'kerning'\r\n  | 'left'\r\n  | 'letterSpacing'\r\n  | 'lightingColor'\r\n  | 'lineHeight'\r\n  | 'listStyle'\r\n  | 'listStyleImage'\r\n  | 'listStylePosition'\r\n  | 'listStyleType'\r\n  | 'margin'\r\n  | 'marginBottom'\r\n  | 'marginLeft'\r\n  | 'marginRight'\r\n  | 'marginTop'\r\n  | 'marker'\r\n  | 'markerEnd'\r\n  | 'markerMid'\r\n  | 'markerStart'\r\n  | 'mask'\r\n  | 'maxHeight'\r\n  | 'maxWidth'\r\n  | 'minHeight'\r\n  | 'minWidth'\r\n  | 'msContentZoomChaining'\r\n  | 'msContentZoomLimit'\r\n  | 'msContentZoomLimitMax'\r\n  | 'msContentZoomLimitMin'\r\n  | 'msContentZoomSnap'\r\n  | 'msContentZoomSnapPoints'\r\n  | 'msContentZoomSnapType'\r\n  | 'msContentZooming'\r\n  | 'msFlowFrom'\r\n  | 'msFlowInto'\r\n  | 'msFontFeatureSettings'\r\n  | 'msGridColumn'\r\n  | 'msGridColumnAlign'\r\n  | 'msGridColumnSpan'\r\n  | 'msGridColumns'\r\n  | 'msGridRow'\r\n  | 'msGridRowAlign'\r\n  | 'msGridRowSpan'\r\n  | 'msGridRows'\r\n  | 'msHighContrastAdjust'\r\n  | 'msHyphenateLimitChars'\r\n  | 'msHyphenateLimitLines'\r\n  | 'msHyphenateLimitZone'\r\n  | 'msHyphens'\r\n  | 'msImeAlign'\r\n  | 'msOverflowStyle'\r\n  | 'msScrollChaining'\r\n  | 'msScrollLimit'\r\n  | 'msScrollLimitXMax'\r\n  | 'msScrollLimitXMin'\r\n  | 'msScrollLimitYMax'\r\n  | 'msScrollLimitYMin'\r\n  | 'msScrollRails'\r\n  | 'msScrollSnapPointsX'\r\n  | 'msScrollSnapPointsY'\r\n  | 'msScrollSnapType'\r\n  | 'msScrollSnapX'\r\n  | 'msScrollSnapY'\r\n  | 'msScrollTranslation'\r\n  | 'msTextCombineHorizontal'\r\n  | 'msTextSizeAdjust'\r\n  | 'msTouchAction'\r\n  | 'msTouchSelect'\r\n  | 'msUserSelect'\r\n  | 'msWrapFlow'\r\n  | 'msWrapMargin'\r\n  | 'msWrapThrough'\r\n  | 'opacity'\r\n  | 'order'\r\n  | 'orphans'\r\n  | 'outline'\r\n  | 'outlineColor'\r\n  | 'outlineStyle'\r\n  | 'outlineWidth'\r\n  | 'overflow'\r\n  | 'overflowX'\r\n  | 'overflowY'\r\n  | 'padding'\r\n  | 'paddingBottom'\r\n  | 'paddingLeft'\r\n  | 'paddingRight'\r\n  | 'paddingTop'\r\n  | 'pageBreakAfter'\r\n  | 'pageBreakBefore'\r\n  | 'pageBreakInside'\r\n  | 'perspective'\r\n  | 'perspectiveOrigin'\r\n  | 'pointerEvents'\r\n  | 'position'\r\n  | 'quotes'\r\n  | 'resize'\r\n  | 'right'\r\n  | 'rubyAlign'\r\n  | 'rubyOverhang'\r\n  | 'rubyPosition'\r\n  | 'stopColor'\r\n  | 'stopOpacity'\r\n  | 'stroke'\r\n  | 'strokeDasharray'\r\n  | 'strokeDashoffset'\r\n  | 'strokeLinecap'\r\n  | 'strokeLinejoin'\r\n  | 'strokeMiterlimit'\r\n  | 'strokeOpacity'\r\n  | 'strokeWidth'\r\n  | 'tableLayout'\r\n  | 'textAlign'\r\n  | 'textAlignLast'\r\n  | 'textAnchor'\r\n  | 'textDecoration'\r\n  | 'textIndent'\r\n  | 'textJustify'\r\n  | 'textKashida'\r\n  | 'textKashidaSpace'\r\n  | 'textOverflow'\r\n  | 'textShadow'\r\n  | 'textTransform'\r\n  | 'textUnderlinePosition'\r\n  | 'top'\r\n  | 'touchAction'\r\n  | 'transform'\r\n  | 'transformOrigin'\r\n  | 'transformStyle'\r\n  | 'transition'\r\n  | 'transitionDelay'\r\n  | 'transitionDuration'\r\n  | 'transitionProperty'\r\n  | 'transitionTimingFunction'\r\n  | 'unicodeBidi'\r\n  | 'verticalAlign'\r\n  | 'visibility'\r\n  | 'webkitAlignContent'\r\n  | 'webkitAlignItems'\r\n  | 'webkitAlignSelf'\r\n  | 'webkitAnimation'\r\n  | 'webkitAnimationDelay'\r\n  | 'webkitAnimationDirection'\r\n  | 'webkitAnimationDuration'\r\n  | 'webkitAnimationFillMode'\r\n  | 'webkitAnimationIterationCount'\r\n  | 'webkitAnimationName'\r\n  | 'webkitAnimationPlayState'\r\n  | 'webkitAnimationTimingFunction'\r\n  | 'webkitAppearance'\r\n  | 'webkitBackfaceVisibility'\r\n  | 'webkitBackgroundClip'\r\n  | 'webkitBackgroundOrigin'\r\n  | 'webkitBackgroundSize'\r\n  | 'webkitBorderBottomLeftRadius'\r\n  | 'webkitBorderBottomRightRadius'\r\n  | 'webkitBorderImage'\r\n  | 'webkitBorderRadius'\r\n  | 'webkitBorderTopLeftRadius'\r\n  | 'webkitBorderTopRightRadius'\r\n  | 'webkitBoxAlign'\r\n  | 'webkitBoxDirection'\r\n  | 'webkitBoxFlex'\r\n  | 'webkitBoxOrdinalGroup'\r\n  | 'webkitBoxOrient'\r\n  | 'webkitBoxPack'\r\n  | 'webkitBoxSizing'\r\n  | 'webkitColumnBreakAfter'\r\n  | 'webkitColumnBreakBefore'\r\n  | 'webkitColumnBreakInside'\r\n  | 'webkitColumnCount'\r\n  | 'webkitColumnGap'\r\n  | 'webkitColumnRule'\r\n  | 'webkitColumnRuleColor'\r\n  | 'webkitColumnRuleStyle'\r\n  | 'webkitColumnRuleWidth'\r\n  | 'webkitColumnSpan'\r\n  | 'webkitColumnWidth'\r\n  | 'webkitColumns'\r\n  | 'webkitFilter'\r\n  | 'webkitFlex'\r\n  | 'webkitFlexBasis'\r\n  | 'webkitFlexDirection'\r\n  | 'webkitFlexFlow'\r\n  | 'webkitFlexGrow'\r\n  | 'webkitFlexShrink'\r\n  | 'webkitFlexWrap'\r\n  | 'webkitJustifyContent'\r\n  | 'webkitOrder'\r\n  | 'webkitPerspective'\r\n  | 'webkitPerspectiveOrigin'\r\n  | 'webkitTapHighlightColor'\r\n  | 'webkitTextFillColor'\r\n  | 'webkitTextSizeAdjust'\r\n  | 'webkitTransform'\r\n  | 'webkitTransformOrigin'\r\n  | 'webkitTransformStyle'\r\n  | 'webkitTransition'\r\n  | 'webkitTransitionDelay'\r\n  | 'webkitTransitionDuration'\r\n  | 'webkitTransitionProperty'\r\n  | 'webkitTransitionTimingFunction'\r\n  | 'webkitUserModify'\r\n  | 'webkitUserSelect'\r\n  | 'webkitWritingMode'\r\n  | 'whiteSpace'\r\n  | 'widows'\r\n  | 'width'\r\n  | 'wordBreak'\r\n  | 'wordSpacing'\r\n  | 'wordWrap'\r\n  | 'writingMode'\r\n  | 'zIndex'\r\n  | 'zoom';\r\n\r\n/**\r\n * A mapping of inline event name to event object type.\r\n *\r\n * This mapping is used to create the event listener properties for\r\n * the virtual DOM element attributes object. If a standardized or\r\n * widely supported name is missing, please open an issue to have it\r\n * added.\r\n *\r\n * The event names were collected from the following sources:\r\n *   - TypeScript's `lib.dom.d.ts` file\r\n *   - https://www.w3.org/TR/html5/index.html#attributes-1\r\n *   - https://html.spec.whatwg.org/multipage/webappapis.html#idl-definitions\r\n */\r\nexport type ElementEventMap = {\r\n  onabort: UIEvent;\r\n  onauxclick: MouseEvent;\r\n  onblur: FocusEvent;\r\n  oncanplay: Event;\r\n  oncanplaythrough: Event;\r\n  onchange: Event;\r\n  onclick: MouseEvent;\r\n  oncontextmenu: PointerEvent;\r\n  oncopy: ClipboardEvent;\r\n  oncuechange: Event;\r\n  oncut: ClipboardEvent;\r\n  ondblclick: MouseEvent;\r\n  ondrag: DragEvent;\r\n  ondragend: DragEvent;\r\n  ondragenter: DragEvent;\r\n  ondragexit: DragEvent;\r\n  ondragleave: DragEvent;\r\n  ondragover: DragEvent;\r\n  ondragstart: DragEvent;\r\n  ondrop: DragEvent;\r\n  ondurationchange: Event;\r\n  onemptied: Event;\r\n  onended: ErrorEvent;\r\n  onerror: ErrorEvent;\r\n  onfocus: FocusEvent;\r\n  oninput: Event;\r\n  oninvalid: Event;\r\n  onkeydown: KeyboardEvent;\r\n  onkeypress: KeyboardEvent;\r\n  onkeyup: KeyboardEvent;\r\n  onload: Event;\r\n  onloadeddata: Event;\r\n  onloadedmetadata: Event;\r\n  onloadend: Event;\r\n  onloadstart: Event;\r\n  onmousedown: MouseEvent;\r\n  onmouseenter: MouseEvent;\r\n  onmouseleave: MouseEvent;\r\n  onmousemove: MouseEvent;\r\n  onmouseout: MouseEvent;\r\n  onmouseover: MouseEvent;\r\n  onmouseup: MouseEvent;\r\n  onmousewheel: WheelEvent;\r\n  onpaste: ClipboardEvent;\r\n  onpause: Event;\r\n  onplay: Event;\r\n  onplaying: Event;\r\n  onpointercancel: PointerEvent;\r\n  onpointerdown: PointerEvent;\r\n  onpointerenter: PointerEvent;\r\n  onpointerleave: PointerEvent;\r\n  onpointermove: PointerEvent;\r\n  onpointerout: PointerEvent;\r\n  onpointerover: PointerEvent;\r\n  onpointerup: PointerEvent;\r\n  onprogress: ProgressEvent;\r\n  onratechange: Event;\r\n  onreset: Event;\r\n  onscroll: UIEvent;\r\n  onseeked: Event;\r\n  onseeking: Event;\r\n  onselect: UIEvent;\r\n  onselectstart: Event;\r\n  onstalled: Event;\r\n  onsubmit: Event;\r\n  onsuspend: Event;\r\n  ontimeupdate: Event;\r\n  onvolumechange: Event;\r\n  onwaiting: Event;\r\n};\r\n\r\n/**\r\n * An object which represents a dataset for a virtual DOM element.\r\n *\r\n * The names of the dataset properties will be automatically prefixed\r\n * with `data-` before being added to the node, e.g. `{ thing: '12' }`\r\n * will be rendered as `data-thing='12'` in the DOM element.\r\n *\r\n * Dataset property names should not contain spaces.\r\n */\r\nexport type ElementDataset = {\r\n  readonly [name: string]: string;\r\n};\r\n\r\n/**\r\n * The inline style for for a virtual DOM element.\r\n *\r\n * Style attributes use the JS camel-cased property names instead of\r\n * the CSS hyphenated names for performance and security.\r\n */\r\nexport type ElementInlineStyle = {\r\n  readonly [T in CSSPropertyNames]?: string;\r\n};\r\n\r\n/**\r\n * The ARIA attributes for a virtual element node.\r\n *\r\n * These are the attributes which are applied to a real DOM element via\r\n * `element.setAttribute()`. The supported attribute names are defined\r\n * by the `ARIAAttrNames` type.\r\n */\r\nexport type ElementARIAAttrs = {\r\n  readonly [T in ARIAAttrNames]?: string;\r\n};\r\n\r\n/**\r\n * The base attributes for a virtual element node.\r\n *\r\n * These are the attributes which are applied to a real DOM element via\r\n * `element.setAttribute()`. The supported attribute names are defined\r\n * by the `ElementAttrNames` type.\r\n *\r\n * Node attributes are specified using the lower-case HTML name instead\r\n * of the camel-case JS name due to browser inconsistencies in handling\r\n * the JS versions.\r\n */\r\nexport type ElementBaseAttrs = {\r\n  readonly [T in ElementAttrNames]?: string;\r\n};\r\n\r\n/**\r\n * The inline event listener attributes for a virtual element node.\r\n *\r\n * The supported listeners are defined by the `ElementEventMap` type.\r\n */\r\nexport type ElementEventAttrs = {\r\n  readonly [T in keyof ElementEventMap]?: (\r\n    this: HTMLElement,\r\n    event: ElementEventMap[T]\r\n  ) => any;\r\n};\r\n\r\n/**\r\n * The special-cased attributes for a virtual element node.\r\n */\r\nexport type ElementSpecialAttrs = {\r\n  /**\r\n   * The key id for the virtual element node.\r\n   *\r\n   * If a node is given a key id, the generated DOM node will not be\r\n   * recreated during a rendering update if it only moves among its\r\n   * siblings in the render tree.\r\n   *\r\n   * In general, reordering child nodes will cause the nodes to be\r\n   * completely re-rendered. Keys allow this to be optimized away.\r\n   *\r\n   * If a key is provided, it must be unique among sibling nodes.\r\n   */\r\n  readonly key?: string;\r\n\r\n  /**\r\n   * The JS-safe name for the HTML `class` attribute.\r\n   */\r\n  readonly className?: string;\r\n\r\n  /**\r\n   * The JS-safe name for the HTML `for` attribute.\r\n   */\r\n  readonly htmlFor?: string;\r\n\r\n  /**\r\n   * The dataset for the rendered DOM element.\r\n   */\r\n  readonly dataset?: ElementDataset;\r\n\r\n  /**\r\n   * The inline style for the rendered DOM element.\r\n   */\r\n  readonly style?: ElementInlineStyle;\r\n};\r\n\r\n/**\r\n * The full set of attributes supported by a virtual element node.\r\n *\r\n * This is the combination of the base element attributes, the the ARIA attributes,\r\n * the inline element event listeners, and the special element attributes.\r\n */\r\nexport type ElementAttrs = ElementBaseAttrs &\r\n  ElementARIAAttrs &\r\n  ElementEventAttrs &\r\n  ElementSpecialAttrs;\r\n\r\n/**\r\n * A virtual node which represents plain text content.\r\n *\r\n * #### Notes\r\n * User code will not typically create a `VirtualText` node directly.\r\n * Instead, the `h()` function will be used to create an element tree.\r\n */\r\nexport class VirtualText {\r\n  /**\r\n   * The text content for the node.\r\n   */\r\n  readonly content: string;\r\n\r\n  /**\r\n   * The type of the node.\r\n   *\r\n   * This value can be used as a type guard for discriminating the\r\n   * `VirtualNode` union type.\r\n   */\r\n  readonly type: 'text' = 'text';\r\n\r\n  /**\r\n   * Construct a new virtual text node.\r\n   *\r\n   * @param content - The text content for the node.\r\n   */\r\n  constructor(content: string) {\r\n    this.content = content;\r\n  }\r\n}\r\n\r\n/**\r\n * A virtual node which represents an HTML element.\r\n *\r\n * #### Notes\r\n * User code will not typically create a `VirtualElement` node directly.\r\n * Instead, the `h()` function will be used to create an element tree.\r\n */\r\nexport class VirtualElement {\r\n  /**\r\n   * The tag name for the element.\r\n   */\r\n  readonly tag: string;\r\n\r\n  /**\r\n   * The attributes for the element.\r\n   */\r\n  readonly attrs: ElementAttrs;\r\n\r\n  /**\r\n   * The children for the element.\r\n   */\r\n  readonly children: ReadonlyArray<VirtualNode>;\r\n\r\n  /**\r\n   * An optional custom renderer for the element's children. If set, on render\r\n   * this element's DOM node and it's attrs will be created/updated as normal.\r\n   * At that point the DOM node is handed off to the renderer.\r\n   */\r\n  readonly renderer: VirtualElement.IRenderer | undefined;\r\n\r\n  /**\r\n   * The type of the node.\r\n   *\r\n   * This value can be used as a type guard for discriminating the\r\n   * `VirtualNode` union type.\r\n   */\r\n  readonly type: 'element' = 'element';\r\n\r\n  /**\r\n   * Construct a new virtual element node.\r\n   *\r\n   * @param tag - The element tag name.\r\n   *\r\n   * @param attrs - The element attributes.\r\n   *\r\n   * @param children - The element children.\r\n   *\r\n   * @param renderer - An optional custom renderer for the element.\r\n   */\r\n  constructor(\r\n    tag: string,\r\n    attrs: ElementAttrs,\r\n    children: ReadonlyArray<VirtualNode>,\r\n    renderer?: VirtualElement.IRenderer\r\n  ) {\r\n    this.tag = tag;\r\n    this.attrs = attrs;\r\n    this.children = children;\r\n\r\n    this.renderer = renderer;\r\n  }\r\n}\r\n\r\nexport namespace VirtualElement {\r\n  /**\r\n   * A type describing a custom element renderer\r\n   */\r\n  export type IRenderer = {\r\n    /**\r\n     * Customize how a DOM node is rendered. If .renderer is set on a given\r\n     * instance of VirtualElement, this function will be called every time\r\n     * that VirtualElement is rendered.\r\n     *\r\n     * @param host - The actual DOM node created for a VirtualElement during\r\n     * rendering.\r\n     *\r\n     * On render, host is created and its attrs are set/updated via\r\n     * the standard routines in updateContent. host is then handed off to this\r\n     * function.\r\n     *\r\n     * The render function is free to modify host. The only restriction is\r\n     * is that render should not modify any attributes set by external\r\n     * routines (ie updateContent), as this may cause thrashing when the\r\n     * virtual element is next rendered.\r\n     *\r\n     * @param options - Will be populated with the .attrs and .children fields\r\n     * set on the VirtualElement being rendered.\r\n     */\r\n    render: (\r\n      host: HTMLElement,\r\n      options?: { attrs?: ElementAttrs; children?: ReadonlyArray<VirtualNode> }\r\n    ) => void;\r\n\r\n    /**\r\n     * Optional cleanup function for custom renderers. If the .renderer field\r\n     * of a VirtualELement is set, and if .renderer.unrender is defined, when\r\n     * the element is changed or removed its corresponding DOM element will be\r\n     * passed to this function immediately before it is removed from the DOM.\r\n     *\r\n     * unrender is not required for for simple renderers, such as those\r\n     * implemented using `document.createElement()`. However, for certain\r\n     * rendering techniques explicit cleanup is required in order to avoid\r\n     * resource leaks.\r\n     *\r\n     * For example, if render calls `ReactDOM.render(..., host)`, then\r\n     * there has to also be a corresponding implementation of unrender that\r\n     * calls `ReactDOM.unmountComponentAtNode(host)` in order to prevent\r\n     * a memory leak.\r\n     *\r\n     * @param host - the DOM element to be removed.\r\n     *\r\n     * @param options - Will be populated with the .attrs and .children fields\r\n     * set on the VirtualElement being unrendered.\r\n     */\r\n    unrender?: (\r\n      host: HTMLElement,\r\n      options?: { attrs?: ElementAttrs; children?: ReadonlyArray<VirtualNode> }\r\n    ) => void;\r\n  };\r\n}\r\n\r\n/**\r\n * DEPRECATED - use VirtualElement with a defined renderer param instead.\r\n * This class is provided as a backwards compatibility shim\r\n *\r\n * A \"pass thru\" virtual node whose children are managed by a render and an\r\n * unrender callback. The intent of this flavor of virtual node is to make\r\n * it easy to blend other kinds of virtualdom (eg React) into Phosphor's\r\n * virtualdom.\r\n *\r\n * #### Notes\r\n * User code will not typically create a `VirtualElementPass` node directly.\r\n * Instead, the `hpass()` function will be used to create an element tree.\r\n */\r\nexport class VirtualElementPass extends VirtualElement {\r\n  /**\r\n   * DEPRECATED - use VirtualElement with a defined renderer param instead\r\n   *\r\n   * Construct a new virtual element pass thru node.\r\n   *\r\n   * @param tag - the tag of the parent element of this node. Once the parent\r\n   * element is rendered, it will be passed as an argument to\r\n   * renderer.render\r\n   *\r\n   * @param attrs - attributes that will assigned to the\r\n   * parent element\r\n   *\r\n   * @param renderer - an object with render and unrender\r\n   * functions, each of which should take a single argument of type\r\n   * HTMLElement and return nothing. If null, the parent element\r\n   * will be rendered barren without any children.\r\n   */\r\n  constructor(\r\n    tag: string,\r\n    attrs: ElementAttrs,\r\n    renderer: VirtualElementPass.IRenderer | null\r\n  ) {\r\n    super(tag, attrs, [], renderer || undefined);\r\n  }\r\n}\r\n\r\nexport namespace VirtualElementPass {\r\n  /**\r\n   * DEPRECATED - use VirtualElement.IRenderer instead\r\n   *\r\n   * A type describing a custom element renderer\r\n   */\r\n  export type IRenderer = VirtualElement.IRenderer;\r\n}\r\n\r\n/**\r\n * A type alias for a general virtual node.\r\n */\r\nexport type VirtualNode = VirtualElement | VirtualText;\r\n\r\n/**\r\n * Create a new virtual element node.\r\n *\r\n * @param tag - The tag name for the element.\r\n *\r\n * @param attrs - The attributes for the element, if any.\r\n *\r\n * @param renderer - An optional custom renderer for the element.\r\n *\r\n * @param children - The children for the element, if any.\r\n *\r\n * @returns A new virtual element node for the given parameters.\r\n *\r\n * #### Notes\r\n * The children may be string literals, other virtual nodes, `null`, or\r\n * an array of those things. Strings are converted into text nodes, and\r\n * arrays are inlined as if the array contents were given as positional\r\n * arguments. This makes it simple to build up an array of children by\r\n * any desired means. `null` child values are simply ignored.\r\n *\r\n * A bound function for each HTML tag name is available as a static\r\n * function attached to the `h()` function. E.g. `h('div', ...)` is\r\n * equivalent to `h.div(...)`.\r\n */\r\nexport function h(tag: string, ...children: h.Child[]): VirtualElement;\r\nexport function h(\r\n  tag: string,\r\n  attrs: ElementAttrs,\r\n  ...children: h.Child[]\r\n): VirtualElement;\r\nexport function h(\r\n  tag: string,\r\n  renderer: VirtualElement.IRenderer,\r\n  ...children: h.Child[]\r\n): VirtualElement;\r\nexport function h(\r\n  tag: string,\r\n  attrs: ElementAttrs,\r\n  renderer: VirtualElement.IRenderer,\r\n  ...children: h.Child[]\r\n): VirtualElement;\r\nexport function h(tag: string): VirtualElement {\r\n  let attrs: ElementAttrs = {};\r\n  let renderer: VirtualElement.IRenderer | undefined;\r\n  let children: VirtualNode[] = [];\r\n  for (let i = 1, n = arguments.length; i < n; ++i) {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    let arg = arguments[i];\r\n    if (typeof arg === 'string') {\r\n      children.push(new VirtualText(arg));\r\n    } else if (arg instanceof VirtualText) {\r\n      children.push(arg);\r\n    } else if (arg instanceof VirtualElement) {\r\n      children.push(arg);\r\n    } else if (arg instanceof Array) {\r\n      extend(children, arg);\r\n    } else if ((i === 1 || i === 2) && arg && typeof arg === 'object') {\r\n      if ('render' in arg) {\r\n        renderer = arg;\r\n      } else {\r\n        attrs = arg;\r\n      }\r\n    }\r\n  }\r\n  return new VirtualElement(tag, attrs, children, renderer);\r\n\r\n  function extend(array: VirtualNode[], values: h.Child[]): void {\r\n    for (let child of values) {\r\n      if (typeof child === 'string') {\r\n        array.push(new VirtualText(child));\r\n      } else if (child instanceof VirtualText) {\r\n        array.push(child);\r\n      } else if (child instanceof VirtualElement) {\r\n        array.push(child);\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the `h` function statics.\r\n */\r\nexport namespace h {\r\n  /**\r\n   * A type alias for the supported child argument types.\r\n   */\r\n  export type Child =\r\n    | (string | VirtualNode | null)\r\n    | Array<string | VirtualNode | null>;\r\n\r\n  /**\r\n   * A bound factory function for a specific `h()` tag.\r\n   */\r\n  export interface IFactory {\r\n    (...children: Child[]): VirtualElement;\r\n    (attrs: ElementAttrs, ...children: Child[]): VirtualElement;\r\n    (\r\n      renderer: VirtualElement.IRenderer,\r\n      ...children: h.Child[]\r\n    ): VirtualElement;\r\n    (\r\n      attrs: ElementAttrs,\r\n      renderer: VirtualElement.IRenderer,\r\n      ...children: h.Child[]\r\n    ): VirtualElement;\r\n  }\r\n\r\n  export const a: IFactory = h.bind(undefined, 'a');\r\n  export const abbr: IFactory = h.bind(undefined, 'abbr');\r\n  export const address: IFactory = h.bind(undefined, 'address');\r\n  export const area: IFactory = h.bind(undefined, 'area');\r\n  export const article: IFactory = h.bind(undefined, 'article');\r\n  export const aside: IFactory = h.bind(undefined, 'aside');\r\n  export const audio: IFactory = h.bind(undefined, 'audio');\r\n  export const b: IFactory = h.bind(undefined, 'b');\r\n  export const bdi: IFactory = h.bind(undefined, 'bdi');\r\n  export const bdo: IFactory = h.bind(undefined, 'bdo');\r\n  export const blockquote: IFactory = h.bind(undefined, 'blockquote');\r\n  export const br: IFactory = h.bind(undefined, 'br');\r\n  export const button: IFactory = h.bind(undefined, 'button');\r\n  export const canvas: IFactory = h.bind(undefined, 'canvas');\r\n  export const caption: IFactory = h.bind(undefined, 'caption');\r\n  export const cite: IFactory = h.bind(undefined, 'cite');\r\n  export const code: IFactory = h.bind(undefined, 'code');\r\n  export const col: IFactory = h.bind(undefined, 'col');\r\n  export const colgroup: IFactory = h.bind(undefined, 'colgroup');\r\n  export const data: IFactory = h.bind(undefined, 'data');\r\n  export const datalist: IFactory = h.bind(undefined, 'datalist');\r\n  export const dd: IFactory = h.bind(undefined, 'dd');\r\n  export const del: IFactory = h.bind(undefined, 'del');\r\n  export const dfn: IFactory = h.bind(undefined, 'dfn');\r\n  export const div: IFactory = h.bind(undefined, 'div');\r\n  export const dl: IFactory = h.bind(undefined, 'dl');\r\n  export const dt: IFactory = h.bind(undefined, 'dt');\r\n  export const em: IFactory = h.bind(undefined, 'em');\r\n  export const embed: IFactory = h.bind(undefined, 'embed');\r\n  export const fieldset: IFactory = h.bind(undefined, 'fieldset');\r\n  export const figcaption: IFactory = h.bind(undefined, 'figcaption');\r\n  export const figure: IFactory = h.bind(undefined, 'figure');\r\n  export const footer: IFactory = h.bind(undefined, 'footer');\r\n  export const form: IFactory = h.bind(undefined, 'form');\r\n  export const h1: IFactory = h.bind(undefined, 'h1');\r\n  export const h2: IFactory = h.bind(undefined, 'h2');\r\n  export const h3: IFactory = h.bind(undefined, 'h3');\r\n  export const h4: IFactory = h.bind(undefined, 'h4');\r\n  export const h5: IFactory = h.bind(undefined, 'h5');\r\n  export const h6: IFactory = h.bind(undefined, 'h6');\r\n  export const header: IFactory = h.bind(undefined, 'header');\r\n  export const hr: IFactory = h.bind(undefined, 'hr');\r\n  export const i: IFactory = h.bind(undefined, 'i');\r\n  export const iframe: IFactory = h.bind(undefined, 'iframe');\r\n  export const img: IFactory = h.bind(undefined, 'img');\r\n  export const input: IFactory = h.bind(undefined, 'input');\r\n  export const ins: IFactory = h.bind(undefined, 'ins');\r\n  export const kbd: IFactory = h.bind(undefined, 'kbd');\r\n  export const label: IFactory = h.bind(undefined, 'label');\r\n  export const legend: IFactory = h.bind(undefined, 'legend');\r\n  export const li: IFactory = h.bind(undefined, 'li');\r\n  export const main: IFactory = h.bind(undefined, 'main');\r\n  export const map: IFactory = h.bind(undefined, 'map');\r\n  export const mark: IFactory = h.bind(undefined, 'mark');\r\n  export const meter: IFactory = h.bind(undefined, 'meter');\r\n  export const nav: IFactory = h.bind(undefined, 'nav');\r\n  export const noscript: IFactory = h.bind(undefined, 'noscript');\r\n  export const object: IFactory = h.bind(undefined, 'object');\r\n  export const ol: IFactory = h.bind(undefined, 'ol');\r\n  export const optgroup: IFactory = h.bind(undefined, 'optgroup');\r\n  export const option: IFactory = h.bind(undefined, 'option');\r\n  export const output: IFactory = h.bind(undefined, 'output');\r\n  export const p: IFactory = h.bind(undefined, 'p');\r\n  export const param: IFactory = h.bind(undefined, 'param');\r\n  export const pre: IFactory = h.bind(undefined, 'pre');\r\n  export const progress: IFactory = h.bind(undefined, 'progress');\r\n  export const q: IFactory = h.bind(undefined, 'q');\r\n  export const rp: IFactory = h.bind(undefined, 'rp');\r\n  export const rt: IFactory = h.bind(undefined, 'rt');\r\n  export const ruby: IFactory = h.bind(undefined, 'ruby');\r\n  export const s: IFactory = h.bind(undefined, 's');\r\n  export const samp: IFactory = h.bind(undefined, 'samp');\r\n  export const section: IFactory = h.bind(undefined, 'section');\r\n  export const select: IFactory = h.bind(undefined, 'select');\r\n  export const small: IFactory = h.bind(undefined, 'small');\r\n  export const source: IFactory = h.bind(undefined, 'source');\r\n  export const span: IFactory = h.bind(undefined, 'span');\r\n  export const strong: IFactory = h.bind(undefined, 'strong');\r\n  export const sub: IFactory = h.bind(undefined, 'sub');\r\n  export const summary: IFactory = h.bind(undefined, 'summary');\r\n  export const sup: IFactory = h.bind(undefined, 'sup');\r\n  export const table: IFactory = h.bind(undefined, 'table');\r\n  export const tbody: IFactory = h.bind(undefined, 'tbody');\r\n  export const td: IFactory = h.bind(undefined, 'td');\r\n  export const textarea: IFactory = h.bind(undefined, 'textarea');\r\n  export const tfoot: IFactory = h.bind(undefined, 'tfoot');\r\n  export const th: IFactory = h.bind(undefined, 'th');\r\n  export const thead: IFactory = h.bind(undefined, 'thead');\r\n  export const time: IFactory = h.bind(undefined, 'time');\r\n  export const title: IFactory = h.bind(undefined, 'title');\r\n  export const tr: IFactory = h.bind(undefined, 'tr');\r\n  export const track: IFactory = h.bind(undefined, 'track');\r\n  export const u: IFactory = h.bind(undefined, 'u');\r\n  export const ul: IFactory = h.bind(undefined, 'ul');\r\n  export const var_: IFactory = h.bind(undefined, 'var');\r\n  export const video: IFactory = h.bind(undefined, 'video');\r\n  export const wbr: IFactory = h.bind(undefined, 'wbr');\r\n}\r\n\r\n/**\r\n * DEPRECATED - pass the renderer arg to the h function instead\r\n *\r\n * Create a new \"pass thru\" virtual element node.\r\n *\r\n * @param tag - The tag name for the parent element.\r\n *\r\n * @param attrs - The attributes for the parent element, if any.\r\n *\r\n * @param renderer - an object with render and unrender functions, if any.\r\n *\r\n * @returns A new \"pass thru\" virtual element node for the given parameters.\r\n *\r\n */\r\nexport function hpass(\r\n  tag: string,\r\n  renderer?: VirtualElementPass.IRenderer\r\n): VirtualElementPass;\r\nexport function hpass(\r\n  tag: string,\r\n  attrs: ElementAttrs,\r\n  renderer?: VirtualElementPass.IRenderer\r\n): VirtualElementPass;\r\nexport function hpass(tag: string): VirtualElementPass {\r\n  let attrs: ElementAttrs = {};\r\n  let renderer: VirtualElementPass.IRenderer | null = null;\r\n\r\n  if (arguments.length === 2) {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    const arg = arguments[1];\r\n\r\n    if ('render' in arg) {\r\n      renderer = arg;\r\n    } else {\r\n      attrs = arg;\r\n    }\r\n  } else if (arguments.length === 3) {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    attrs = arguments[1];\r\n    // eslint-disable-next-line prefer-rest-params\r\n    renderer = arguments[2];\r\n  } else if (arguments.length > 3) {\r\n    throw new Error('hpass() should be called with 1, 2, or 3 arguments');\r\n  }\r\n\r\n  return new VirtualElementPass(tag, attrs, renderer);\r\n}\r\n\r\n/**\r\n * The namespace for the virtual DOM rendering functions.\r\n */\r\nexport namespace VirtualDOM {\r\n  /**\r\n   * Create a real DOM element from a virtual element node.\r\n   *\r\n   * @param node - The virtual element node to realize.\r\n   *\r\n   * @returns A new DOM element for the given virtual element node.\r\n   *\r\n   * #### Notes\r\n   * This creates a brand new *real* DOM element with a structure which\r\n   * matches the given virtual DOM node.\r\n   *\r\n   * If virtual diffing is desired, use the `render` function instead.\r\n   */\r\n  export function realize(node: VirtualText): Text;\r\n  export function realize(node: VirtualElement): HTMLElement;\r\n  export function realize(node: VirtualNode): HTMLElement | Text {\r\n    return Private.createDOMNode(node);\r\n  }\r\n\r\n  /**\r\n   * Render virtual DOM content into a host element.\r\n   *\r\n   * @param content - The virtual DOM content to render.\r\n   *\r\n   * @param host - The host element for the rendered content.\r\n   *\r\n   * #### Notes\r\n   * This renders the delta from the previous rendering. It assumes that\r\n   * the content of the host element is not manipulated by external code.\r\n   *\r\n   * Providing `null` content will clear the rendering.\r\n   *\r\n   * Externally modifying the provided content or the host element will\r\n   * result in undefined rendering behavior.\r\n   */\r\n  export function render(\r\n    content: VirtualNode | ReadonlyArray<VirtualNode> | null,\r\n    host: HTMLElement\r\n  ): void {\r\n    let oldContent = Private.hostMap.get(host) || [];\r\n    let newContent = Private.asContentArray(content);\r\n    Private.hostMap.set(host, newContent);\r\n    Private.updateContent(host, oldContent, newContent);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A weak mapping of host element to virtual DOM content.\r\n   */\r\n  export const hostMap = new WeakMap<HTMLElement, ReadonlyArray<VirtualNode>>();\r\n\r\n  /**\r\n   * Cast a content value to a content array.\r\n   */\r\n  export function asContentArray(\r\n    value: VirtualNode | ReadonlyArray<VirtualNode> | null\r\n  ): ReadonlyArray<VirtualNode> {\r\n    if (!value) {\r\n      return [];\r\n    }\r\n    if (value instanceof Array) {\r\n      return value as ReadonlyArray<VirtualNode>;\r\n    }\r\n    return [value as VirtualNode];\r\n  }\r\n\r\n  /**\r\n   * Create a new DOM element for a virtual node.\r\n   */\r\n  export function createDOMNode(node: VirtualText): Text;\r\n  export function createDOMNode(node: VirtualElement): HTMLElement;\r\n  export function createDOMNode(node: VirtualNode): HTMLElement | Text;\r\n  export function createDOMNode(\r\n    node: VirtualNode,\r\n    host: HTMLElement | null\r\n  ): HTMLElement | Text;\r\n  export function createDOMNode(\r\n    node: VirtualNode,\r\n    host: HTMLElement | null,\r\n    before: Node | null\r\n  ): HTMLElement | Text;\r\n  export function createDOMNode(node: VirtualNode): HTMLElement | Text {\r\n    // eslint-disable-next-line prefer-rest-params\r\n    let host = arguments[1] || null;\r\n    // eslint-disable-next-line prefer-rest-params\r\n    const before = arguments[2] || null;\r\n\r\n    if (host) {\r\n      host.insertBefore(createDOMNode(node), before);\r\n    } else {\r\n      // Create a text node for a virtual text node.\r\n      if (node.type === 'text') {\r\n        return document.createTextNode(node.content);\r\n      }\r\n\r\n      // Create the HTML element with the specified tag.\r\n      host = document.createElement(node.tag);\r\n\r\n      // Add the attributes for the new element.\r\n      addAttrs(host, node.attrs);\r\n\r\n      if (node.renderer) {\r\n        node.renderer.render(host, {\r\n          attrs: node.attrs,\r\n          children: node.children\r\n        });\r\n        return host;\r\n      }\r\n\r\n      // Recursively populate the element with child content.\r\n      for (let i = 0, n = node.children.length; i < n; ++i) {\r\n        createDOMNode(node.children[i], host);\r\n      }\r\n    }\r\n\r\n    return host;\r\n  }\r\n\r\n  /**\r\n   * Update a host element with the delta of the virtual content.\r\n   *\r\n   * This is the core \"diff\" algorithm. There is no explicit \"patch\"\r\n   * phase. The host is patched at each step as the diff progresses.\r\n   */\r\n  export function updateContent(\r\n    host: HTMLElement,\r\n    oldContent: ReadonlyArray<VirtualNode>,\r\n    newContent: ReadonlyArray<VirtualNode>\r\n  ): void {\r\n    // Bail early if the content is identical.\r\n    if (oldContent === newContent) {\r\n      return;\r\n    }\r\n\r\n    // Collect the old keyed elems into a mapping.\r\n    let oldKeyed = collectKeys(host, oldContent);\r\n\r\n    // Create a copy of the old content which can be modified in-place.\r\n    let oldCopy = oldContent.slice();\r\n\r\n    // Update the host with the new content. The diff always proceeds\r\n    // forward and never modifies a previously visited index. The old\r\n    // copy array is modified in-place to reflect the changes made to\r\n    // the host children. This causes the stale nodes to be pushed to\r\n    // the end of the host node and removed at the end of the loop.\r\n    let currElem = host.firstChild;\r\n    let newCount = newContent.length;\r\n    for (let i = 0; i < newCount; ++i) {\r\n      // If the old content is exhausted, create a new node.\r\n      if (i >= oldCopy.length) {\r\n        createDOMNode(newContent[i], host);\r\n        continue;\r\n      }\r\n\r\n      // Lookup the old and new virtual nodes.\r\n      let oldVNode = oldCopy[i];\r\n      let newVNode = newContent[i];\r\n\r\n      // If both elements are identical, there is nothing to do.\r\n      if (oldVNode === newVNode) {\r\n        currElem = currElem!.nextSibling;\r\n        continue;\r\n      }\r\n\r\n      // Handle the simplest case of in-place text update first.\r\n      if (oldVNode.type === 'text' && newVNode.type === 'text') {\r\n        currElem!.textContent = newVNode.content;\r\n        currElem = currElem!.nextSibling;\r\n        continue;\r\n      }\r\n\r\n      // If the old or new node is a text node, the other node is now\r\n      // known to be an element node, so create and insert a new node.\r\n      if (oldVNode.type === 'text' || newVNode.type === 'text') {\r\n        ArrayExt.insert(oldCopy, i, newVNode);\r\n        createDOMNode(newVNode, host, currElem);\r\n        continue;\r\n      }\r\n\r\n      // If the old XOR new node has a custom renderer,\r\n      // create and insert a new node.\r\n      if (!oldVNode.renderer != !newVNode.renderer) {\r\n        ArrayExt.insert(oldCopy, i, newVNode);\r\n        createDOMNode(newVNode, host, currElem);\r\n        continue;\r\n      }\r\n\r\n      // At this point, both nodes are known to be element nodes.\r\n\r\n      // If the new elem is keyed, move an old keyed elem to the proper\r\n      // location before proceeding with the diff. The search can start\r\n      // at the current index, since the unmatched old keyed elems are\r\n      // pushed forward in the old copy array.\r\n      let newKey = newVNode.attrs.key;\r\n      if (newKey && newKey in oldKeyed) {\r\n        let pair = oldKeyed[newKey];\r\n        if (pair.vNode !== oldVNode) {\r\n          ArrayExt.move(oldCopy, oldCopy.indexOf(pair.vNode, i + 1), i);\r\n          host.insertBefore(pair.element, currElem);\r\n          oldVNode = pair.vNode;\r\n          currElem = pair.element;\r\n        }\r\n      }\r\n\r\n      // If both elements are identical, there is nothing to do.\r\n      if (oldVNode === newVNode) {\r\n        currElem = currElem!.nextSibling;\r\n        continue;\r\n      }\r\n\r\n      // If the old elem is keyed and does not match the new elem key,\r\n      // create a new node. This is necessary since the old keyed elem\r\n      // may be matched at a later point in the diff.\r\n      let oldKey = oldVNode.attrs.key;\r\n      if (oldKey && oldKey !== newKey) {\r\n        ArrayExt.insert(oldCopy, i, newVNode);\r\n        createDOMNode(newVNode, host, currElem);\r\n        continue;\r\n      }\r\n\r\n      // If the tags are different, create a new node.\r\n      if (oldVNode.tag !== newVNode.tag) {\r\n        ArrayExt.insert(oldCopy, i, newVNode);\r\n        createDOMNode(newVNode, host, currElem);\r\n        continue;\r\n      }\r\n\r\n      // At this point, the element can be updated in-place.\r\n\r\n      // Update the element attributes.\r\n      updateAttrs(currElem as HTMLElement, oldVNode.attrs, newVNode.attrs);\r\n\r\n      // Update the element content.\r\n      if (newVNode.renderer) {\r\n        newVNode.renderer.render(currElem as HTMLElement, {\r\n          attrs: newVNode.attrs,\r\n          children: newVNode.children\r\n        });\r\n      } else {\r\n        updateContent(\r\n          currElem as HTMLElement,\r\n          oldVNode.children,\r\n          newVNode.children\r\n        );\r\n      }\r\n\r\n      // Step to the next sibling element.\r\n      currElem = currElem!.nextSibling;\r\n    }\r\n\r\n    // Cleanup stale DOM\r\n    removeContent(host, oldCopy, newCount, true);\r\n  }\r\n\r\n  /**\r\n   * Handle cleanup of stale vdom and its associated DOM. The host node is\r\n   * traversed recursively (in depth-first order), and any explicit cleanup\r\n   * required by a child node is carried out when it is visited (eg if a node\r\n   * has a custom renderer, the renderer.unrender function will be called).\r\n   * Once the subtree beneath each child of host has been completely visited,\r\n   * that child will be removed via a call to host.removeChild.\r\n   */\r\n  function removeContent(\r\n    host: HTMLElement,\r\n    oldContent: ReadonlyArray<VirtualNode>,\r\n    newCount: number,\r\n    _sentinel: boolean\r\n  ) {\r\n    // Dispose of the old nodes pushed to the end of the host.\r\n    for (let i = oldContent.length - 1; i >= newCount; --i) {\r\n      const oldNode = oldContent[i];\r\n      const child = (_sentinel\r\n        ? host.lastChild\r\n        : host.childNodes[i]) as HTMLElement;\r\n\r\n      // recursively clean up host children\r\n      if (oldNode.type === 'text') {\r\n        // pass\r\n      } else if (oldNode.renderer && oldNode.renderer.unrender) {\r\n        oldNode.renderer.unrender(child!, {\r\n          attrs: oldNode.attrs,\r\n          children: oldNode.children\r\n        });\r\n      } else {\r\n        removeContent(child!, oldNode.children, 0, false);\r\n      }\r\n\r\n      if (_sentinel) {\r\n        host.removeChild(child!);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A set of special-cased attribute names.\r\n   */\r\n  const specialAttrs = {\r\n    key: true,\r\n    className: true,\r\n    htmlFor: true,\r\n    dataset: true,\r\n    style: true\r\n  };\r\n\r\n  /**\r\n   * Add element attributes to a newly created HTML element.\r\n   */\r\n  function addAttrs(element: HTMLElement, attrs: ElementAttrs): void {\r\n    // Add the inline event listeners and node attributes.\r\n    for (let name in attrs) {\r\n      if (name in specialAttrs) {\r\n        continue;\r\n      }\r\n      if (name.substr(0, 2) === 'on') {\r\n        (element as any)[name] = (attrs as any)[name];\r\n      } else {\r\n        element.setAttribute(name, (attrs as any)[name]);\r\n      }\r\n    }\r\n\r\n    // Add the element `class` attribute.\r\n    if (attrs.className !== undefined) {\r\n      element.setAttribute('class', attrs.className);\r\n    }\r\n\r\n    // Add the element `for` attribute.\r\n    if (attrs.htmlFor !== undefined) {\r\n      element.setAttribute('for', attrs.htmlFor);\r\n    }\r\n\r\n    // Add the dataset values.\r\n    if (attrs.dataset) {\r\n      addDataset(element, attrs.dataset);\r\n    }\r\n\r\n    // Add the inline styles.\r\n    if (attrs.style) {\r\n      addStyle(element, attrs.style);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the element attributes of an HTML element.\r\n   */\r\n  function updateAttrs(\r\n    element: HTMLElement,\r\n    oldAttrs: ElementAttrs,\r\n    newAttrs: ElementAttrs\r\n  ): void {\r\n    // Do nothing if the attrs are the same object.\r\n    if (oldAttrs === newAttrs) {\r\n      return;\r\n    }\r\n\r\n    // Setup the strongly typed loop variable.\r\n    let name: keyof ElementAttrs;\r\n\r\n    // Remove attributes and listeners which no longer exist.\r\n    for (name in oldAttrs) {\r\n      if (name in specialAttrs || name in newAttrs) {\r\n        continue;\r\n      }\r\n      if (name.substr(0, 2) === 'on') {\r\n        (element as any)[name] = null;\r\n      } else {\r\n        element.removeAttribute(name);\r\n      }\r\n    }\r\n\r\n    // Add and update new and existing attributes and listeners.\r\n    for (name in newAttrs) {\r\n      if (name in specialAttrs || oldAttrs[name] === newAttrs[name]) {\r\n        continue;\r\n      }\r\n      if (name.substr(0, 2) === 'on') {\r\n        (element as any)[name] = (newAttrs as any)[name];\r\n      } else {\r\n        element.setAttribute(name, (newAttrs as any)[name]);\r\n      }\r\n    }\r\n\r\n    // Update the element `class` attribute.\r\n    if (oldAttrs.className !== newAttrs.className) {\r\n      if (newAttrs.className !== undefined) {\r\n        element.setAttribute('class', newAttrs.className);\r\n      } else {\r\n        element.removeAttribute('class');\r\n      }\r\n    }\r\n\r\n    // Add the element `for` attribute.\r\n    if (oldAttrs.htmlFor !== newAttrs.htmlFor) {\r\n      if (newAttrs.htmlFor !== undefined) {\r\n        element.setAttribute('for', newAttrs.htmlFor);\r\n      } else {\r\n        element.removeAttribute('for');\r\n      }\r\n    }\r\n\r\n    // Update the dataset values.\r\n    if (oldAttrs.dataset !== newAttrs.dataset) {\r\n      updateDataset(element, oldAttrs.dataset || {}, newAttrs.dataset || {});\r\n    }\r\n\r\n    // Update the inline styles.\r\n    if (oldAttrs.style !== newAttrs.style) {\r\n      updateStyle(element, oldAttrs.style || {}, newAttrs.style || {});\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add dataset values to a newly created HTML element.\r\n   */\r\n  function addDataset(element: HTMLElement, dataset: ElementDataset): void {\r\n    for (let name in dataset) {\r\n      element.setAttribute(`data-${name}`, dataset[name]);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the dataset values of an HTML element.\r\n   */\r\n  function updateDataset(\r\n    element: HTMLElement,\r\n    oldDataset: ElementDataset,\r\n    newDataset: ElementDataset\r\n  ): void {\r\n    for (let name in oldDataset) {\r\n      if (!(name in newDataset)) {\r\n        element.removeAttribute(`data-${name}`);\r\n      }\r\n    }\r\n    for (let name in newDataset) {\r\n      if (oldDataset[name] !== newDataset[name]) {\r\n        element.setAttribute(`data-${name}`, newDataset[name]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add inline style values to a newly created HTML element.\r\n   */\r\n  function addStyle(element: HTMLElement, style: ElementInlineStyle): void {\r\n    let elemStyle = element.style;\r\n    let name: keyof ElementInlineStyle;\r\n    for (name in style) {\r\n      (elemStyle as any)[name] = style[name];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the inline style values of an HTML element.\r\n   */\r\n  function updateStyle(\r\n    element: HTMLElement,\r\n    oldStyle: ElementInlineStyle,\r\n    newStyle: ElementInlineStyle\r\n  ): void {\r\n    let elemStyle = element.style;\r\n    let name: keyof ElementInlineStyle;\r\n    for (name in oldStyle) {\r\n      if (!(name in newStyle)) {\r\n        (elemStyle as any)[name] = '';\r\n      }\r\n    }\r\n    for (name in newStyle) {\r\n      if (oldStyle[name] !== newStyle[name]) {\r\n        (elemStyle as any)[name] = newStyle[name];\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A mapping of string key to pair of element and rendered node.\r\n   */\r\n  type KeyMap = {\r\n    [key: string]: { vNode: VirtualElement; element: HTMLElement };\r\n  };\r\n\r\n  /**\r\n   * Collect a mapping of keyed elements for the host content.\r\n   */\r\n  function collectKeys(\r\n    host: HTMLElement,\r\n    content: ReadonlyArray<VirtualNode>\r\n  ): KeyMap {\r\n    let node = host.firstChild;\r\n    let keyMap: KeyMap = Object.create(null);\r\n    for (let vNode of content) {\r\n      if (vNode.type === 'element' && vNode.attrs.key) {\r\n        keyMap[vNode.attrs.key] = { vNode, element: node as HTMLElement };\r\n      }\r\n      node = node!.nextSibling;\r\n    }\r\n    return keyMap;\r\n  }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || from);\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\n\r\n/**\r\n * A sizer object for use with the box engine layout functions.\r\n *\r\n * #### Notes\r\n * A box sizer holds the geometry information for an object along an\r\n * arbitrary layout orientation.\r\n *\r\n * For best performance, this class should be treated as a raw data\r\n * struct. It should not typically be subclassed.\r\n */\r\nexport class BoxSizer {\r\n  /**\r\n   * The preferred size for the sizer.\r\n   *\r\n   * #### Notes\r\n   * The sizer will be given this initial size subject to its size\r\n   * bounds. The sizer will not deviate from this size unless such\r\n   * deviation is required to fit into the available layout space.\r\n   *\r\n   * There is no limit to this value, but it will be clamped to the\r\n   * bounds defined by [[minSize]] and [[maxSize]].\r\n   *\r\n   * The default value is `0`.\r\n   */\r\n  sizeHint = 0;\r\n\r\n  /**\r\n   * The minimum size of the sizer.\r\n   *\r\n   * #### Notes\r\n   * The sizer will never be sized less than this value, even if\r\n   * it means the sizer will overflow the available layout space.\r\n   *\r\n   * It is assumed that this value lies in the range `[0, Infinity)`\r\n   * and that it is `<=` to [[maxSize]]. Failure to adhere to this\r\n   * constraint will yield undefined results.\r\n   *\r\n   * The default value is `0`.\r\n   */\r\n  minSize = 0;\r\n\r\n  /**\r\n   * The maximum size of the sizer.\r\n   *\r\n   * #### Notes\r\n   * The sizer will never be sized greater than this value, even if\r\n   * it means the sizer will underflow the available layout space.\r\n   *\r\n   * It is assumed that this value lies in the range `[0, Infinity]`\r\n   * and that it is `>=` to [[minSize]]. Failure to adhere to this\r\n   * constraint will yield undefined results.\r\n   *\r\n   * The default value is `Infinity`.\r\n   */\r\n  maxSize = Infinity;\r\n\r\n  /**\r\n   * The stretch factor for the sizer.\r\n   *\r\n   * #### Notes\r\n   * This controls how much the sizer stretches relative to its sibling\r\n   * sizers when layout space is distributed. A stretch factor of zero\r\n   * is special and will cause the sizer to only be resized after all\r\n   * other sizers with a stretch factor greater than zero have been\r\n   * resized to their limits.\r\n   *\r\n   * It is assumed that this value is an integer that lies in the range\r\n   * `[0, Infinity)`. Failure to adhere to this constraint will yield\r\n   * undefined results.\r\n   *\r\n   * The default value is `1`.\r\n   */\r\n  stretch = 1;\r\n\r\n  /**\r\n   * The computed size of the sizer.\r\n   *\r\n   * #### Notes\r\n   * This value is the output of a call to [[boxCalc]]. It represents\r\n   * the computed size for the object along the layout orientation,\r\n   * and will always lie in the range `[minSize, maxSize]`.\r\n   *\r\n   * This value is output only.\r\n   *\r\n   * Changing this value will have no effect.\r\n   */\r\n  size = 0;\r\n\r\n  /**\r\n   * An internal storage property for the layout algorithm.\r\n   *\r\n   * #### Notes\r\n   * This value is used as temporary storage by the layout algorithm.\r\n   *\r\n   * Changing this value will have no effect.\r\n   */\r\n  done = false;\r\n}\r\n\r\n/**\r\n * The namespace for the box engine layout functions.\r\n */\r\nexport namespace BoxEngine {\r\n  /**\r\n   * Calculate the optimal layout sizes for a sequence of box sizers.\r\n   *\r\n   * This distributes the available layout space among the box sizers\r\n   * according to the following algorithm:\r\n   *\r\n   * 1. Initialize the sizers's size to its size hint and compute the\r\n   *    sums for each of size hint, min size, and max size.\r\n   *\r\n   * 2. If the total size hint equals the available space, return.\r\n   *\r\n   * 3. If the available space is less than the total min size, set all\r\n   *    sizers to their min size and return.\r\n   *\r\n   * 4. If the available space is greater than the total max size, set\r\n   *    all sizers to their max size and return.\r\n   *\r\n   * 5. If the layout space is less than the total size hint, distribute\r\n   *    the negative delta as follows:\r\n   *\r\n   *    a. Shrink each sizer with a stretch factor greater than zero by\r\n   *       an amount proportional to the negative space and the sum of\r\n   *       stretch factors. If the sizer reaches its min size, remove\r\n   *       it and its stretch factor from the computation.\r\n   *\r\n   *    b. If after adjusting all stretch sizers there remains negative\r\n   *       space, distribute the space equally among the sizers with a\r\n   *       stretch factor of zero. If a sizer reaches its min size,\r\n   *       remove it from the computation.\r\n   *\r\n   * 6. If the layout space is greater than the total size hint,\r\n   *    distribute the positive delta as follows:\r\n   *\r\n   *    a. Expand each sizer with a stretch factor greater than zero by\r\n   *       an amount proportional to the postive space and the sum of\r\n   *       stretch factors. If the sizer reaches its max size, remove\r\n   *       it and its stretch factor from the computation.\r\n   *\r\n   *    b. If after adjusting all stretch sizers there remains positive\r\n   *       space, distribute the space equally among the sizers with a\r\n   *       stretch factor of zero. If a sizer reaches its max size,\r\n   *       remove it from the computation.\r\n   *\r\n   * 7. return\r\n   *\r\n   * @param sizers - The sizers for a particular layout line.\r\n   *\r\n   * @param space - The available layout space for the sizers.\r\n   *\r\n   * @returns The delta between the provided available space and the\r\n   *   actual consumed space. This value will be zero if the sizers\r\n   *   can be adjusted to fit, negative if the available space is too\r\n   *   small, and positive if the available space is too large.\r\n   *\r\n   * #### Notes\r\n   * The [[size]] of each sizer is updated with the computed size.\r\n   *\r\n   * This function can be called at any time to recompute the layout for\r\n   * an existing sequence of sizers. The previously computed results will\r\n   * have no effect on the new output. It is therefore not necessary to\r\n   * create new sizer objects on each resize event.\r\n   */\r\n  export function calc(sizers: ArrayLike<BoxSizer>, space: number): number {\r\n    // Bail early if there is nothing to do.\r\n    let count = sizers.length;\r\n    if (count === 0) {\r\n      return space;\r\n    }\r\n\r\n    // Setup the size and stretch counters.\r\n    let totalMin = 0;\r\n    let totalMax = 0;\r\n    let totalSize = 0;\r\n    let totalStretch = 0;\r\n    let stretchCount = 0;\r\n\r\n    // Setup the sizers and compute the totals.\r\n    for (let i = 0; i < count; ++i) {\r\n      let sizer = sizers[i];\r\n      let min = sizer.minSize;\r\n      let max = sizer.maxSize;\r\n      let hint = sizer.sizeHint;\r\n      sizer.done = false;\r\n      sizer.size = Math.max(min, Math.min(hint, max));\r\n      totalSize += sizer.size;\r\n      totalMin += min;\r\n      totalMax += max;\r\n      if (sizer.stretch > 0) {\r\n        totalStretch += sizer.stretch;\r\n        stretchCount++;\r\n      }\r\n    }\r\n\r\n    // If the space is equal to the total size, return early.\r\n    if (space === totalSize) {\r\n      return 0;\r\n    }\r\n\r\n    // If the space is less than the total min, minimize each sizer.\r\n    if (space <= totalMin) {\r\n      for (let i = 0; i < count; ++i) {\r\n        let sizer = sizers[i];\r\n        sizer.size = sizer.minSize;\r\n      }\r\n      return space - totalMin;\r\n    }\r\n\r\n    // If the space is greater than the total max, maximize each sizer.\r\n    if (space >= totalMax) {\r\n      for (let i = 0; i < count; ++i) {\r\n        let sizer = sizers[i];\r\n        sizer.size = sizer.maxSize;\r\n      }\r\n      return space - totalMax;\r\n    }\r\n\r\n    // The loops below perform sub-pixel precision sizing. A near zero\r\n    // value is used for compares instead of zero to ensure that the\r\n    // loop terminates when the subdivided space is reasonably small.\r\n    let nearZero = 0.01;\r\n\r\n    // A counter which is decremented each time a sizer is resized to\r\n    // its limit. This ensures the loops terminate even if there is\r\n    // space remaining to distribute.\r\n    let notDoneCount = count;\r\n\r\n    // Distribute negative delta space.\r\n    if (space < totalSize) {\r\n      // Shrink each stretchable sizer by an amount proportional to its\r\n      // stretch factor. If a sizer reaches its min size it's marked as\r\n      // done. The loop progresses in phases where each sizer is given\r\n      // a chance to consume its fair share for the pass, regardless of\r\n      // whether a sizer before it reached its limit. This continues\r\n      // until the stretchable sizers or the free space is exhausted.\r\n      let freeSpace = totalSize - space;\r\n      while (stretchCount > 0 && freeSpace > nearZero) {\r\n        let distSpace = freeSpace;\r\n        let distStretch = totalStretch;\r\n        for (let i = 0; i < count; ++i) {\r\n          let sizer = sizers[i];\r\n          if (sizer.done || sizer.stretch === 0) {\r\n            continue;\r\n          }\r\n          let amt = (sizer.stretch * distSpace) / distStretch;\r\n          if (sizer.size - amt <= sizer.minSize) {\r\n            freeSpace -= sizer.size - sizer.minSize;\r\n            totalStretch -= sizer.stretch;\r\n            sizer.size = sizer.minSize;\r\n            sizer.done = true;\r\n            notDoneCount--;\r\n            stretchCount--;\r\n          } else {\r\n            freeSpace -= amt;\r\n            sizer.size -= amt;\r\n          }\r\n        }\r\n      }\r\n      // Distribute any remaining space evenly among the non-stretchable\r\n      // sizers. This progresses in phases in the same manner as above.\r\n      while (notDoneCount > 0 && freeSpace > nearZero) {\r\n        let amt = freeSpace / notDoneCount;\r\n        for (let i = 0; i < count; ++i) {\r\n          let sizer = sizers[i];\r\n          if (sizer.done) {\r\n            continue;\r\n          }\r\n          if (sizer.size - amt <= sizer.minSize) {\r\n            freeSpace -= sizer.size - sizer.minSize;\r\n            sizer.size = sizer.minSize;\r\n            sizer.done = true;\r\n            notDoneCount--;\r\n          } else {\r\n            freeSpace -= amt;\r\n            sizer.size -= amt;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    // Distribute positive delta space.\r\n    else {\r\n      // Expand each stretchable sizer by an amount proportional to its\r\n      // stretch factor. If a sizer reaches its max size it's marked as\r\n      // done. The loop progresses in phases where each sizer is given\r\n      // a chance to consume its fair share for the pass, regardless of\r\n      // whether a sizer before it reached its limit. This continues\r\n      // until the stretchable sizers or the free space is exhausted.\r\n      let freeSpace = space - totalSize;\r\n      while (stretchCount > 0 && freeSpace > nearZero) {\r\n        let distSpace = freeSpace;\r\n        let distStretch = totalStretch;\r\n        for (let i = 0; i < count; ++i) {\r\n          let sizer = sizers[i];\r\n          if (sizer.done || sizer.stretch === 0) {\r\n            continue;\r\n          }\r\n          let amt = (sizer.stretch * distSpace) / distStretch;\r\n          if (sizer.size + amt >= sizer.maxSize) {\r\n            freeSpace -= sizer.maxSize - sizer.size;\r\n            totalStretch -= sizer.stretch;\r\n            sizer.size = sizer.maxSize;\r\n            sizer.done = true;\r\n            notDoneCount--;\r\n            stretchCount--;\r\n          } else {\r\n            freeSpace -= amt;\r\n            sizer.size += amt;\r\n          }\r\n        }\r\n      }\r\n      // Distribute any remaining space evenly among the non-stretchable\r\n      // sizers. This progresses in phases in the same manner as above.\r\n      while (notDoneCount > 0 && freeSpace > nearZero) {\r\n        let amt = freeSpace / notDoneCount;\r\n        for (let i = 0; i < count; ++i) {\r\n          let sizer = sizers[i];\r\n          if (sizer.done) {\r\n            continue;\r\n          }\r\n          if (sizer.size + amt >= sizer.maxSize) {\r\n            freeSpace -= sizer.maxSize - sizer.size;\r\n            sizer.size = sizer.maxSize;\r\n            sizer.done = true;\r\n            notDoneCount--;\r\n          } else {\r\n            freeSpace -= amt;\r\n            sizer.size += amt;\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    // Indicate that the consumed space equals the available space.\r\n    return 0;\r\n  }\r\n\r\n  /**\r\n   * Adjust a sizer by a delta and update its neighbors accordingly.\r\n   *\r\n   * @param sizers - The sizers which should be adjusted.\r\n   *\r\n   * @param index - The index of the sizer to grow.\r\n   *\r\n   * @param delta - The amount to adjust the sizer, positive or negative.\r\n   *\r\n   * #### Notes\r\n   * This will adjust the indicated sizer by the specified amount, along\r\n   * with the sizes of the appropriate neighbors, subject to the limits\r\n   * specified by each of the sizers.\r\n   *\r\n   * This is useful when implementing box layouts where the boundaries\r\n   * between the sizers are interactively adjustable by the user.\r\n   */\r\n  export function adjust(\r\n    sizers: ArrayLike<BoxSizer>,\r\n    index: number,\r\n    delta: number\r\n  ): void {\r\n    // Bail early when there is nothing to do.\r\n    if (sizers.length === 0 || delta === 0) {\r\n      return;\r\n    }\r\n\r\n    // Dispatch to the proper implementation.\r\n    if (delta > 0) {\r\n      growSizer(sizers, index, delta);\r\n    } else {\r\n      shrinkSizer(sizers, index, -delta);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Grow a sizer by a positive delta and adjust neighbors.\r\n   */\r\n  function growSizer(\r\n    sizers: ArrayLike<BoxSizer>,\r\n    index: number,\r\n    delta: number\r\n  ): void {\r\n    // Compute how much the items to the left can expand.\r\n    let growLimit = 0;\r\n    for (let i = 0; i <= index; ++i) {\r\n      let sizer = sizers[i];\r\n      growLimit += sizer.maxSize - sizer.size;\r\n    }\r\n\r\n    // Compute how much the items to the right can shrink.\r\n    let shrinkLimit = 0;\r\n    for (let i = index + 1, n = sizers.length; i < n; ++i) {\r\n      let sizer = sizers[i];\r\n      shrinkLimit += sizer.size - sizer.minSize;\r\n    }\r\n\r\n    // Clamp the delta adjustment to the limits.\r\n    delta = Math.min(delta, growLimit, shrinkLimit);\r\n\r\n    // Grow the sizers to the left by the delta.\r\n    let grow = delta;\r\n    for (let i = index; i >= 0 && grow > 0; --i) {\r\n      let sizer = sizers[i];\r\n      let limit = sizer.maxSize - sizer.size;\r\n      if (limit >= grow) {\r\n        sizer.sizeHint = sizer.size + grow;\r\n        grow = 0;\r\n      } else {\r\n        sizer.sizeHint = sizer.size + limit;\r\n        grow -= limit;\r\n      }\r\n    }\r\n\r\n    // Shrink the sizers to the right by the delta.\r\n    let shrink = delta;\r\n    for (let i = index + 1, n = sizers.length; i < n && shrink > 0; ++i) {\r\n      let sizer = sizers[i];\r\n      let limit = sizer.size - sizer.minSize;\r\n      if (limit >= shrink) {\r\n        sizer.sizeHint = sizer.size - shrink;\r\n        shrink = 0;\r\n      } else {\r\n        sizer.sizeHint = sizer.size - limit;\r\n        shrink -= limit;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Shrink a sizer by a positive delta and adjust neighbors.\r\n   */\r\n  function shrinkSizer(\r\n    sizers: ArrayLike<BoxSizer>,\r\n    index: number,\r\n    delta: number\r\n  ): void {\r\n    // Compute how much the items to the right can expand.\r\n    let growLimit = 0;\r\n    for (let i = index + 1, n = sizers.length; i < n; ++i) {\r\n      let sizer = sizers[i];\r\n      growLimit += sizer.maxSize - sizer.size;\r\n    }\r\n\r\n    // Compute how much the items to the left can shrink.\r\n    let shrinkLimit = 0;\r\n    for (let i = 0; i <= index; ++i) {\r\n      let sizer = sizers[i];\r\n      shrinkLimit += sizer.size - sizer.minSize;\r\n    }\r\n\r\n    // Clamp the delta adjustment to the limits.\r\n    delta = Math.min(delta, growLimit, shrinkLimit);\r\n\r\n    // Grow the sizers to the right by the delta.\r\n    let grow = delta;\r\n    for (let i = index + 1, n = sizers.length; i < n && grow > 0; ++i) {\r\n      let sizer = sizers[i];\r\n      let limit = sizer.maxSize - sizer.size;\r\n      if (limit >= grow) {\r\n        sizer.sizeHint = sizer.size + grow;\r\n        grow = 0;\r\n      } else {\r\n        sizer.sizeHint = sizer.size + limit;\r\n        grow -= limit;\r\n      }\r\n    }\r\n\r\n    // Shrink the sizers to the left by the delta.\r\n    let shrink = delta;\r\n    for (let i = index; i >= 0 && shrink > 0; --i) {\r\n      let sizer = sizers[i];\r\n      let limit = sizer.size - sizer.minSize;\r\n      if (limit >= shrink) {\r\n        sizer.sizeHint = sizer.size - shrink;\r\n        shrink = 0;\r\n      } else {\r\n        sizer.sizeHint = sizer.size - limit;\r\n        shrink -= limit;\r\n      }\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport { VirtualElement } from '@lumino/virtualdom';\r\n\r\n/**\r\n * An object which holds data related to an object's title.\r\n *\r\n * #### Notes\r\n * A title object is intended to hold the data necessary to display a\r\n * header for a particular object. A common example is the `TabPanel`,\r\n * which uses the widget title to populate the tab for a child widget.\r\n */\r\nexport class Title<T> {\r\n  /**\r\n   * Construct a new title.\r\n   *\r\n   * @param options - The options for initializing the title.\r\n   */\r\n  constructor(options: Title.IOptions<T>) {\r\n    this.owner = options.owner;\r\n    if (options.label !== undefined) {\r\n      this._label = options.label;\r\n    }\r\n    if (options.mnemonic !== undefined) {\r\n      this._mnemonic = options.mnemonic;\r\n    }\r\n    if (options.icon !== undefined) {\r\n      /* <DEPRECATED> */\r\n      if (typeof options.icon === 'string') {\r\n        // when ._icon is null, the .icon getter will alias .iconClass\r\n        this._icon = null;\r\n        this._iconClass = options.icon;\r\n      } else {\r\n        /* </DEPRECATED> */\r\n\r\n        this._icon = options.icon;\r\n\r\n        /* <DEPRECATED> */\r\n      }\r\n      /* </DEPRECATED> */\r\n    } else {\r\n      /* <DEPRECATED> */\r\n      // if unset, default to aliasing .iconClass\r\n      this._icon = null;\r\n    }\r\n    /* </DEPRECATED> */\r\n\r\n    if (options.iconClass !== undefined) {\r\n      this._iconClass = options.iconClass;\r\n    }\r\n    if (options.iconLabel !== undefined) {\r\n      this._iconLabel = options.iconLabel;\r\n    }\r\n    if (options.iconRenderer !== undefined) {\r\n      this._icon = options.iconRenderer;\r\n    }\r\n    if (options.caption !== undefined) {\r\n      this._caption = options.caption;\r\n    }\r\n    if (options.className !== undefined) {\r\n      this._className = options.className;\r\n    }\r\n    if (options.closable !== undefined) {\r\n      this._closable = options.closable;\r\n    }\r\n    this._dataset = options.dataset || {};\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the state of the title changes.\r\n   */\r\n  get changed(): ISignal<this, void> {\r\n    return this._changed;\r\n  }\r\n\r\n  /**\r\n   * The object which owns the title.\r\n   */\r\n  readonly owner: T;\r\n\r\n  /**\r\n   * Get the label for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is an empty string.\r\n   */\r\n  get label(): string {\r\n    return this._label;\r\n  }\r\n\r\n  /**\r\n   * Set the label for the title.\r\n   */\r\n  set label(value: string) {\r\n    if (this._label === value) {\r\n      return;\r\n    }\r\n    this._label = value;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  /**\r\n   * Get the mnemonic index for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is `-1`.\r\n   */\r\n  get mnemonic(): number {\r\n    return this._mnemonic;\r\n  }\r\n\r\n  /**\r\n   * Set the mnemonic index for the title.\r\n   */\r\n  set mnemonic(value: number) {\r\n    if (this._mnemonic === value) {\r\n      return;\r\n    }\r\n    this._mnemonic = value;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  /**\r\n   * Get the icon renderer for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is undefined.\r\n   *\r\n   * DEPRECATED: if set to a string value, the .icon field will function as\r\n   * an alias for the .iconClass field, for backwards compatibility\r\n   */\r\n  get icon():\r\n    | VirtualElement.IRenderer\r\n    | undefined\r\n    /* <DEPRECATED> */\r\n    | string /* </DEPRECATED> */ {\r\n    /* <DEPRECATED> */\r\n    if (this._icon === null) {\r\n      // only alias .iconClass if ._icon has been explicitly nulled\r\n      return this.iconClass;\r\n    }\r\n    /* </DEPRECATED> */\r\n\r\n    return this._icon;\r\n  }\r\n\r\n  /**\r\n   * Set the icon renderer for the title.\r\n   *\r\n   * #### Notes\r\n   * A renderer is an object that supplies a render and unrender function.\r\n   *\r\n   * DEPRECATED: if set to a string value, the .icon field will function as\r\n   * an alias for the .iconClass field, for backwards compatibility\r\n   */\r\n  set icon(\r\n    value:\r\n      | VirtualElement.IRenderer\r\n      | undefined\r\n      /* <DEPRECATED> */\r\n      | string /* </DEPRECATED> */\r\n  ) {\r\n    /* <DEPRECATED> */\r\n    if (typeof value === 'string') {\r\n      // when ._icon is null, the .icon getter will alias .iconClass\r\n      this._icon = null;\r\n      this.iconClass = value;\r\n    } else {\r\n      /* </DEPRECATED> */\r\n\r\n      if (this._icon === value) {\r\n        return;\r\n      }\r\n      this._icon = value;\r\n      this._changed.emit(undefined);\r\n\r\n      /* <DEPRECATED> */\r\n    }\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * Get the icon class name for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is an empty string.\r\n   */\r\n  get iconClass(): string {\r\n    return this._iconClass;\r\n  }\r\n\r\n  /**\r\n   * Set the icon class name for the title.\r\n   *\r\n   * #### Notes\r\n   * Multiple class names can be separated with whitespace.\r\n   */\r\n  set iconClass(value: string) {\r\n    if (this._iconClass === value) {\r\n      return;\r\n    }\r\n    this._iconClass = value;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  /**\r\n   * Get the icon label for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is an empty string.\r\n   */\r\n  get iconLabel(): string {\r\n    return this._iconLabel;\r\n  }\r\n\r\n  /**\r\n   * Set the icon label for the title.\r\n   *\r\n   * #### Notes\r\n   * Multiple class names can be separated with whitespace.\r\n   */\r\n  set iconLabel(value: string) {\r\n    if (this._iconLabel === value) {\r\n      return;\r\n    }\r\n    this._iconLabel = value;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  /**\r\n   * @deprecated Use `icon` instead.\r\n   */\r\n  get iconRenderer(): VirtualElement.IRenderer | undefined {\r\n    return this._icon || undefined;\r\n  }\r\n\r\n  /**\r\n   * @deprecated Use `icon` instead.\r\n   */\r\n  set iconRenderer(value: VirtualElement.IRenderer | undefined) {\r\n    this.icon = value;\r\n  }\r\n\r\n  /**\r\n   * Get the caption for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is an empty string.\r\n   */\r\n  get caption(): string {\r\n    return this._caption;\r\n  }\r\n\r\n  /**\r\n   * Set the caption for the title.\r\n   */\r\n  set caption(value: string) {\r\n    if (this._caption === value) {\r\n      return;\r\n    }\r\n    this._caption = value;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  /**\r\n   * Get the extra class name for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is an empty string.\r\n   */\r\n  get className(): string {\r\n    return this._className;\r\n  }\r\n\r\n  /**\r\n   * Set the extra class name for the title.\r\n   *\r\n   * #### Notes\r\n   * Multiple class names can be separated with whitespace.\r\n   */\r\n  set className(value: string) {\r\n    if (this._className === value) {\r\n      return;\r\n    }\r\n    this._className = value;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  /**\r\n   * Get the closable state for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is `false`.\r\n   */\r\n  get closable(): boolean {\r\n    return this._closable;\r\n  }\r\n\r\n  /**\r\n   * Set the closable state for the title.\r\n   *\r\n   * #### Notes\r\n   * This controls the presence of a close icon when applicable.\r\n   */\r\n  set closable(value: boolean) {\r\n    if (this._closable === value) {\r\n      return;\r\n    }\r\n    this._closable = value;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  /**\r\n   * Get the dataset for the title.\r\n   *\r\n   * #### Notes\r\n   * The default value is an empty dataset.\r\n   */\r\n  get dataset(): Title.Dataset {\r\n    return this._dataset;\r\n  }\r\n\r\n  /**\r\n   * Set the dataset for the title.\r\n   *\r\n   * #### Notes\r\n   * This controls the data attributes when applicable.\r\n   */\r\n  set dataset(value: Title.Dataset) {\r\n    if (this._dataset === value) {\r\n      return;\r\n    }\r\n    this._dataset = value;\r\n    this._changed.emit(undefined);\r\n  }\r\n\r\n  private _label = '';\r\n  private _caption = '';\r\n  private _mnemonic = -1;\r\n\r\n  private _icon:\r\n    | VirtualElement.IRenderer\r\n    | undefined\r\n    /* <DEPRECATED> */\r\n    | null /* </DEPRECATED> */;\r\n\r\n  private _iconClass = '';\r\n  private _iconLabel = '';\r\n  private _className = '';\r\n  private _closable = false;\r\n  private _dataset: Title.Dataset;\r\n  private _changed = new Signal<this, void>(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `Title` class statics.\r\n */\r\nexport namespace Title {\r\n  /**\r\n   * A type alias for a simple immutable string dataset.\r\n   */\r\n  export type Dataset = { readonly [key: string]: string };\r\n\r\n  /**\r\n   * An options object for initializing a title.\r\n   */\r\n  export interface IOptions<T> {\r\n    /**\r\n     * The object which owns the title.\r\n     */\r\n    owner: T;\r\n\r\n    /**\r\n     * The label for the title.\r\n     */\r\n    label?: string;\r\n\r\n    /**\r\n     * The mnemonic index for the title.\r\n     */\r\n    mnemonic?: number;\r\n\r\n    /**\r\n     * The icon renderer for the title.\r\n     *\r\n     * DEPRECATED: if set to a string value, the .icon field will function as\r\n     * an alias for the .iconClass field, for backwards compatibility\r\n     */\r\n    icon?: VirtualElement.IRenderer | string;\r\n\r\n    /**\r\n     * The icon class name for the title.\r\n     */\r\n    iconClass?: string;\r\n\r\n    /**\r\n     * The icon label for the title.\r\n     */\r\n    iconLabel?: string;\r\n\r\n    /**\r\n     * @deprecated Use `icon` instead.\r\n     */\r\n    iconRenderer?: VirtualElement.IRenderer;\r\n\r\n    /**\r\n     * The caption for the title.\r\n     */\r\n    caption?: string;\r\n\r\n    /**\r\n     * The extra class name for the title.\r\n     */\r\n    className?: string;\r\n\r\n    /**\r\n     * The closable state for the title.\r\n     */\r\n    closable?: boolean;\r\n\r\n    /**\r\n     * The dataset for the title.\r\n     */\r\n    dataset?: Dataset;\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\n// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { empty, IIterator } from '@lumino/algorithm';\r\n\r\nimport { IObservableDisposable } from '@lumino/disposable';\r\n\r\nimport {\r\n  ConflatableMessage,\r\n  IMessageHandler,\r\n  Message,\r\n  MessageLoop\r\n} from '@lumino/messaging';\r\n\r\nimport { AttachedProperty } from '@lumino/properties';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport { Layout } from './layout';\r\n\r\nimport { Title } from './title';\r\n\r\n/**\r\n * The base class of the lumino widget hierarchy.\r\n *\r\n * #### Notes\r\n * This class will typically be subclassed in order to create a useful\r\n * widget. However, it can be used directly to host externally created\r\n * content.\r\n */\r\nexport class Widget implements IMessageHandler, IObservableDisposable {\r\n  /**\r\n   * Construct a new widget.\r\n   *\r\n   * @param options - The options for initializing the widget.\r\n   */\r\n  constructor(options: Widget.IOptions = {}) {\r\n    this.node = Private.createNode(options);\r\n    this.addClass('lm-Widget');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-Widget');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * Dispose of the widget and its descendant widgets.\r\n   *\r\n   * #### Notes\r\n   * It is unsafe to use the widget after it has been disposed.\r\n   *\r\n   * All calls made to this method after the first are a no-op.\r\n   */\r\n  dispose(): void {\r\n    // Do nothing if the widget is already disposed.\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    // Set the disposed flag and emit the disposed signal.\r\n    this.setFlag(Widget.Flag.IsDisposed);\r\n    this._disposed.emit(undefined);\r\n\r\n    // Remove or detach the widget if necessary.\r\n    if (this.parent) {\r\n      this.parent = null;\r\n    } else if (this.isAttached) {\r\n      Widget.detach(this);\r\n    }\r\n\r\n    // Dispose of the widget layout.\r\n    if (this._layout) {\r\n      this._layout.dispose();\r\n      this._layout = null;\r\n    }\r\n\r\n    // Clear the extra data associated with the widget.\r\n    Signal.clearData(this);\r\n    MessageLoop.clearData(this);\r\n    AttachedProperty.clearData(this);\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the widget is disposed.\r\n   */\r\n  get disposed(): ISignal<this, void> {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Get the DOM node owned by the widget.\r\n   */\r\n  readonly node: HTMLElement;\r\n\r\n  /**\r\n   * Test whether the widget has been disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this.testFlag(Widget.Flag.IsDisposed);\r\n  }\r\n\r\n  /**\r\n   * Test whether the widget's node is attached to the DOM.\r\n   */\r\n  get isAttached(): boolean {\r\n    return this.testFlag(Widget.Flag.IsAttached);\r\n  }\r\n\r\n  /**\r\n   * Test whether the widget is explicitly hidden.\r\n   */\r\n  get isHidden(): boolean {\r\n    return this.testFlag(Widget.Flag.IsHidden);\r\n  }\r\n\r\n  /**\r\n   * Test whether the widget is visible.\r\n   *\r\n   * #### Notes\r\n   * A widget is visible when it is attached to the DOM, is not\r\n   * explicitly hidden, and has no explicitly hidden ancestors.\r\n   */\r\n  get isVisible(): boolean {\r\n    return this.testFlag(Widget.Flag.IsVisible);\r\n  }\r\n\r\n  /**\r\n   * The title object for the widget.\r\n   *\r\n   * #### Notes\r\n   * The title object is used by some container widgets when displaying\r\n   * the widget alongside some title, such as a tab panel or side bar.\r\n   *\r\n   * Since not all widgets will use the title, it is created on demand.\r\n   *\r\n   * The `owner` property of the title is set to this widget.\r\n   */\r\n  get title(): Title<Widget> {\r\n    return Private.titleProperty.get(this);\r\n  }\r\n\r\n  /**\r\n   * Get the id of the widget's DOM node.\r\n   */\r\n  get id(): string {\r\n    return this.node.id;\r\n  }\r\n\r\n  /**\r\n   * Set the id of the widget's DOM node.\r\n   */\r\n  set id(value: string) {\r\n    this.node.id = value;\r\n  }\r\n\r\n  /**\r\n   * The dataset for the widget's DOM node.\r\n   */\r\n  get dataset(): DOMStringMap {\r\n    return this.node.dataset;\r\n  }\r\n\r\n  /**\r\n   * Get the method for hiding the widget.\r\n   */\r\n  get hiddenMode(): Widget.HiddenMode {\r\n    return this._hiddenMode;\r\n  }\r\n\r\n  /**\r\n   * Set the method for hiding the widget.\r\n   */\r\n  set hiddenMode(value: Widget.HiddenMode) {\r\n    if (this._hiddenMode === value) {\r\n      return;\r\n    }\r\n    this._hiddenMode = value;\r\n    switch (value) {\r\n      case Widget.HiddenMode.Display:\r\n        this.node.style.willChange = 'auto';\r\n        break;\r\n      case Widget.HiddenMode.Scale:\r\n        this.node.style.willChange = 'transform';\r\n        break;\r\n    }\r\n\r\n    if (this.isHidden) {\r\n      if (value === Widget.HiddenMode.Display) {\r\n        this.addClass('lm-mod-hidden');\r\n        /* <DEPRECATED> */\r\n        this.addClass('p-mod-hidden');\r\n        /* </DEPRECATED> */\r\n        this.node.style.transform = '';\r\n      } else {\r\n        this.node.style.transform = 'scale(0)';\r\n        this.removeClass('lm-mod-hidden');\r\n        /* <DEPRECATED> */\r\n        this.removeClass('p-mod-hidden');\r\n        /* </DEPRECATED> */\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the parent of the widget.\r\n   */\r\n  get parent(): Widget | null {\r\n    return this._parent;\r\n  }\r\n\r\n  /**\r\n   * Set the parent of the widget.\r\n   *\r\n   * #### Notes\r\n   * Children are typically added to a widget by using a layout, which\r\n   * means user code will not normally set the parent widget directly.\r\n   *\r\n   * The widget will be automatically removed from its old parent.\r\n   *\r\n   * This is a no-op if there is no effective parent change.\r\n   */\r\n  set parent(value: Widget | null) {\r\n    if (this._parent === value) {\r\n      return;\r\n    }\r\n    if (value && this.contains(value)) {\r\n      throw new Error('Invalid parent widget.');\r\n    }\r\n    if (this._parent && !this._parent.isDisposed) {\r\n      let msg = new Widget.ChildMessage('child-removed', this);\r\n      MessageLoop.sendMessage(this._parent, msg);\r\n    }\r\n    this._parent = value;\r\n    if (this._parent && !this._parent.isDisposed) {\r\n      let msg = new Widget.ChildMessage('child-added', this);\r\n      MessageLoop.sendMessage(this._parent, msg);\r\n    }\r\n    if (!this.isDisposed) {\r\n      MessageLoop.sendMessage(this, Widget.Msg.ParentChanged);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the layout for the widget.\r\n   */\r\n  get layout(): Layout | null {\r\n    return this._layout;\r\n  }\r\n\r\n  /**\r\n   * Set the layout for the widget.\r\n   *\r\n   * #### Notes\r\n   * The layout is single-use only. It cannot be changed after the\r\n   * first assignment.\r\n   *\r\n   * The layout is disposed automatically when the widget is disposed.\r\n   */\r\n  set layout(value: Layout | null) {\r\n    if (this._layout === value) {\r\n      return;\r\n    }\r\n    if (this.testFlag(Widget.Flag.DisallowLayout)) {\r\n      throw new Error('Cannot set widget layout.');\r\n    }\r\n    if (this._layout) {\r\n      throw new Error('Cannot change widget layout.');\r\n    }\r\n    if (value!.parent) {\r\n      throw new Error('Cannot change layout parent.');\r\n    }\r\n    this._layout = value;\r\n    value!.parent = this;\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the widget's children.\r\n   *\r\n   * @returns A new iterator over the children of the widget.\r\n   *\r\n   * #### Notes\r\n   * The widget must have a populated layout in order to have children.\r\n   *\r\n   * If a layout is not installed, the returned iterator will be empty.\r\n   */\r\n  children(): IIterator<Widget> {\r\n    return this._layout ? this._layout.iter() : empty<Widget>();\r\n  }\r\n\r\n  /**\r\n   * Test whether a widget is a descendant of this widget.\r\n   *\r\n   * @param widget - The descendant widget of interest.\r\n   *\r\n   * @returns `true` if the widget is a descendant, `false` otherwise.\r\n   */\r\n  contains(widget: Widget): boolean {\r\n    for (let value: Widget | null = widget; value; value = value._parent) {\r\n      if (value === this) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Test whether the widget's DOM node has the given class name.\r\n   *\r\n   * @param name - The class name of interest.\r\n   *\r\n   * @returns `true` if the node has the class, `false` otherwise.\r\n   */\r\n  hasClass(name: string): boolean {\r\n    return this.node.classList.contains(name);\r\n  }\r\n\r\n  /**\r\n   * Add a class name to the widget's DOM node.\r\n   *\r\n   * @param name - The class name to add to the node.\r\n   *\r\n   * #### Notes\r\n   * If the class name is already added to the node, this is a no-op.\r\n   *\r\n   * The class name must not contain whitespace.\r\n   */\r\n  addClass(name: string): void {\r\n    this.node.classList.add(name);\r\n  }\r\n\r\n  /**\r\n   * Remove a class name from the widget's DOM node.\r\n   *\r\n   * @param name - The class name to remove from the node.\r\n   *\r\n   * #### Notes\r\n   * If the class name is not yet added to the node, this is a no-op.\r\n   *\r\n   * The class name must not contain whitespace.\r\n   */\r\n  removeClass(name: string): void {\r\n    this.node.classList.remove(name);\r\n  }\r\n\r\n  /**\r\n   * Toggle a class name on the widget's DOM node.\r\n   *\r\n   * @param name - The class name to toggle on the node.\r\n   *\r\n   * @param force - Whether to force add the class (`true`) or force\r\n   *   remove the class (`false`). If not provided, the presence of\r\n   *   the class will be toggled from its current state.\r\n   *\r\n   * @returns `true` if the class is now present, `false` otherwise.\r\n   *\r\n   * #### Notes\r\n   * The class name must not contain whitespace.\r\n   */\r\n  toggleClass(name: string, force?: boolean): boolean {\r\n    if (force === true) {\r\n      this.node.classList.add(name);\r\n      return true;\r\n    }\r\n    if (force === false) {\r\n      this.node.classList.remove(name);\r\n      return false;\r\n    }\r\n    return this.node.classList.toggle(name);\r\n  }\r\n\r\n  /**\r\n   * Post an `'update-request'` message to the widget.\r\n   *\r\n   * #### Notes\r\n   * This is a simple convenience method for posting the message.\r\n   */\r\n  update(): void {\r\n    MessageLoop.postMessage(this, Widget.Msg.UpdateRequest);\r\n  }\r\n\r\n  /**\r\n   * Post a `'fit-request'` message to the widget.\r\n   *\r\n   * #### Notes\r\n   * This is a simple convenience method for posting the message.\r\n   */\r\n  fit(): void {\r\n    MessageLoop.postMessage(this, Widget.Msg.FitRequest);\r\n  }\r\n\r\n  /**\r\n   * Post an `'activate-request'` message to the widget.\r\n   *\r\n   * #### Notes\r\n   * This is a simple convenience method for posting the message.\r\n   */\r\n  activate(): void {\r\n    MessageLoop.postMessage(this, Widget.Msg.ActivateRequest);\r\n  }\r\n\r\n  /**\r\n   * Send a `'close-request'` message to the widget.\r\n   *\r\n   * #### Notes\r\n   * This is a simple convenience method for sending the message.\r\n   */\r\n  close(): void {\r\n    MessageLoop.sendMessage(this, Widget.Msg.CloseRequest);\r\n  }\r\n\r\n  /**\r\n   * Show the widget and make it visible to its parent widget.\r\n   *\r\n   * #### Notes\r\n   * This causes the [[isHidden]] property to be `false`.\r\n   *\r\n   * If the widget is not explicitly hidden, this is a no-op.\r\n   */\r\n  show(): void {\r\n    if (!this.testFlag(Widget.Flag.IsHidden)) {\r\n      return;\r\n    }\r\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\r\n      MessageLoop.sendMessage(this, Widget.Msg.BeforeShow);\r\n    }\r\n    this.clearFlag(Widget.Flag.IsHidden);\r\n    this.node.removeAttribute('aria-hidden');\r\n    if (this.hiddenMode === Widget.HiddenMode.Display) {\r\n      this.removeClass('lm-mod-hidden');\r\n      /* <DEPRECATED> */\r\n      this.removeClass('p-mod-hidden');\r\n      /* </DEPRECATED> */\r\n    } else {\r\n      this.node.style.transform = '';\r\n    }\r\n\r\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\r\n      MessageLoop.sendMessage(this, Widget.Msg.AfterShow);\r\n    }\r\n    if (this.parent) {\r\n      let msg = new Widget.ChildMessage('child-shown', this);\r\n      MessageLoop.sendMessage(this.parent, msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Hide the widget and make it hidden to its parent widget.\r\n   *\r\n   * #### Notes\r\n   * This causes the [[isHidden]] property to be `true`.\r\n   *\r\n   * If the widget is explicitly hidden, this is a no-op.\r\n   */\r\n  hide(): void {\r\n    if (this.testFlag(Widget.Flag.IsHidden)) {\r\n      return;\r\n    }\r\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\r\n      MessageLoop.sendMessage(this, Widget.Msg.BeforeHide);\r\n    }\r\n    this.setFlag(Widget.Flag.IsHidden);\r\n    this.node.setAttribute('aria-hidden', 'true');\r\n    if (this.hiddenMode === Widget.HiddenMode.Display) {\r\n      this.addClass('lm-mod-hidden');\r\n      /* <DEPRECATED> */\r\n      this.addClass('p-mod-hidden');\r\n      /* </DEPRECATED> */\r\n    } else {\r\n      this.node.style.transform = 'scale(0)';\r\n    }\r\n\r\n    if (this.isAttached && (!this.parent || this.parent.isVisible)) {\r\n      MessageLoop.sendMessage(this, Widget.Msg.AfterHide);\r\n    }\r\n    if (this.parent) {\r\n      let msg = new Widget.ChildMessage('child-hidden', this);\r\n      MessageLoop.sendMessage(this.parent, msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Show or hide the widget according to a boolean value.\r\n   *\r\n   * @param hidden - `true` to hide the widget, or `false` to show it.\r\n   *\r\n   * #### Notes\r\n   * This is a convenience method for `hide()` and `show()`.\r\n   */\r\n  setHidden(hidden: boolean): void {\r\n    if (hidden) {\r\n      this.hide();\r\n    } else {\r\n      this.show();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Test whether the given widget flag is set.\r\n   *\r\n   * #### Notes\r\n   * This will not typically be called directly by user code.\r\n   */\r\n  testFlag(flag: Widget.Flag): boolean {\r\n    return (this._flags & flag) !== 0;\r\n  }\r\n\r\n  /**\r\n   * Set the given widget flag.\r\n   *\r\n   * #### Notes\r\n   * This will not typically be called directly by user code.\r\n   */\r\n  setFlag(flag: Widget.Flag): void {\r\n    this._flags |= flag;\r\n  }\r\n\r\n  /**\r\n   * Clear the given widget flag.\r\n   *\r\n   * #### Notes\r\n   * This will not typically be called directly by user code.\r\n   */\r\n  clearFlag(flag: Widget.Flag): void {\r\n    this._flags &= ~flag;\r\n  }\r\n\r\n  /**\r\n   * Process a message sent to the widget.\r\n   *\r\n   * @param msg - The message sent to the widget.\r\n   *\r\n   * #### Notes\r\n   * Subclasses may reimplement this method as needed.\r\n   */\r\n  processMessage(msg: Message): void {\r\n    switch (msg.type) {\r\n      case 'resize':\r\n        this.notifyLayout(msg);\r\n        this.onResize(msg as Widget.ResizeMessage);\r\n        break;\r\n      case 'update-request':\r\n        this.notifyLayout(msg);\r\n        this.onUpdateRequest(msg);\r\n        break;\r\n      case 'fit-request':\r\n        this.notifyLayout(msg);\r\n        this.onFitRequest(msg);\r\n        break;\r\n      case 'before-show':\r\n        this.notifyLayout(msg);\r\n        this.onBeforeShow(msg);\r\n        break;\r\n      case 'after-show':\r\n        this.setFlag(Widget.Flag.IsVisible);\r\n        this.notifyLayout(msg);\r\n        this.onAfterShow(msg);\r\n        break;\r\n      case 'before-hide':\r\n        this.notifyLayout(msg);\r\n        this.onBeforeHide(msg);\r\n        break;\r\n      case 'after-hide':\r\n        this.clearFlag(Widget.Flag.IsVisible);\r\n        this.notifyLayout(msg);\r\n        this.onAfterHide(msg);\r\n        break;\r\n      case 'before-attach':\r\n        this.notifyLayout(msg);\r\n        this.onBeforeAttach(msg);\r\n        break;\r\n      case 'after-attach':\r\n        if (!this.isHidden && (!this.parent || this.parent.isVisible)) {\r\n          this.setFlag(Widget.Flag.IsVisible);\r\n        }\r\n        this.setFlag(Widget.Flag.IsAttached);\r\n        this.notifyLayout(msg);\r\n        this.onAfterAttach(msg);\r\n        break;\r\n      case 'before-detach':\r\n        this.notifyLayout(msg);\r\n        this.onBeforeDetach(msg);\r\n        break;\r\n      case 'after-detach':\r\n        this.clearFlag(Widget.Flag.IsVisible);\r\n        this.clearFlag(Widget.Flag.IsAttached);\r\n        this.notifyLayout(msg);\r\n        this.onAfterDetach(msg);\r\n        break;\r\n      case 'activate-request':\r\n        this.notifyLayout(msg);\r\n        this.onActivateRequest(msg);\r\n        break;\r\n      case 'close-request':\r\n        this.notifyLayout(msg);\r\n        this.onCloseRequest(msg);\r\n        break;\r\n      case 'child-added':\r\n        this.notifyLayout(msg);\r\n        this.onChildAdded(msg as Widget.ChildMessage);\r\n        break;\r\n      case 'child-removed':\r\n        this.notifyLayout(msg);\r\n        this.onChildRemoved(msg as Widget.ChildMessage);\r\n        break;\r\n      default:\r\n        this.notifyLayout(msg);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Invoke the message processing routine of the widget's layout.\r\n   *\r\n   * @param msg - The message to dispatch to the layout.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the widget does not have a layout.\r\n   *\r\n   * This will not typically be called directly by user code.\r\n   */\r\n  protected notifyLayout(msg: Message): void {\r\n    if (this._layout) {\r\n      this._layout.processParentMessage(msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'close-request'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation unparents or detaches the widget.\r\n   */\r\n  protected onCloseRequest(msg: Message): void {\r\n    if (this.parent) {\r\n      this.parent = null;\r\n    } else if (this.isAttached) {\r\n      Widget.detach(this);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'resize'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onResize(msg: Widget.ResizeMessage): void {}\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'fit-request'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onFitRequest(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on an `'activate-request'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onActivateRequest(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-show'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onBeforeShow(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-show'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onAfterShow(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-hide'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onBeforeHide(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-hide'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onAfterHide(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-attach'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onAfterAttach(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-detach'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onBeforeDetach(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-added'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onChildAdded(msg: Widget.ChildMessage): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-removed'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onChildRemoved(msg: Widget.ChildMessage): void {}\r\n\r\n  private _flags = 0;\r\n  private _layout: Layout | null = null;\r\n  private _parent: Widget | null = null;\r\n  private _disposed = new Signal<this, void>(this);\r\n  private _hiddenMode: Widget.HiddenMode = Widget.HiddenMode.Display;\r\n}\r\n\r\n/**\r\n * The namespace for the `Widget` class statics.\r\n */\r\nexport namespace Widget {\r\n  /**\r\n   * An options object for initializing a widget.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The optional node to use for the widget.\r\n     *\r\n     * If a node is provided, the widget will assume full ownership\r\n     * and control of the node, as if it had created the node itself.\r\n     *\r\n     * The default is a new `<div>`.\r\n     */\r\n    node?: HTMLElement;\r\n\r\n    /**\r\n     * The optional element tag, used for constructing the widget's node.\r\n     *\r\n     * If a pre-constructed node is provided via the `node` arg, this\r\n     * value is ignored.\r\n     */\r\n    tag?: keyof HTMLElementTagNameMap;\r\n  }\r\n\r\n  /**\r\n   * The method for hiding the widget.\r\n   *\r\n   * The default is Display.\r\n   *\r\n   * Using `Scale` will often increase performance as most browsers will not\r\n   * trigger style computation for the `transform` action. This should be used\r\n   * sparingly and tested, since increasing the number of composition layers\r\n   * may slow things down.\r\n   *\r\n   * To ensure the transformation does not trigger style recomputation, you\r\n   * may need to set the widget CSS style `will-change: transform`. This\r\n   * should be used only when needed as it may overwhelm the browser with a\r\n   * high number of layers. See\r\n   * https://developer.mozilla.org/en-US/docs/Web/CSS/will-change\r\n   */\r\n  export enum HiddenMode {\r\n    /**\r\n     * Set a `lm-mod-hidden` CSS class to hide the widget using `display:none`\r\n     * CSS from the standard Lumino CSS.\r\n     */\r\n    Display = 0,\r\n\r\n    /**\r\n     * Hide the widget by setting the `transform` to `'scale(0)'`.\r\n     */\r\n    Scale\r\n  }\r\n\r\n  /**\r\n   * An enum of widget bit flags.\r\n   */\r\n  export enum Flag {\r\n    /**\r\n     * The widget has been disposed.\r\n     */\r\n    IsDisposed = 0x1,\r\n\r\n    /**\r\n     * The widget is attached to the DOM.\r\n     */\r\n    IsAttached = 0x2,\r\n\r\n    /**\r\n     * The widget is hidden.\r\n     */\r\n    IsHidden = 0x4,\r\n\r\n    /**\r\n     * The widget is visible.\r\n     */\r\n    IsVisible = 0x8,\r\n\r\n    /**\r\n     * A layout cannot be set on the widget.\r\n     */\r\n    DisallowLayout = 0x10\r\n  }\r\n\r\n  /**\r\n   * A collection of stateless messages related to widgets.\r\n   */\r\n  export namespace Msg {\r\n    /**\r\n     * A singleton `'before-show'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget before it becomes visible.\r\n     *\r\n     * This message is **not** sent when the widget is being attached.\r\n     */\r\n    export const BeforeShow = new Message('before-show');\r\n\r\n    /**\r\n     * A singleton `'after-show'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget after it becomes visible.\r\n     *\r\n     * This message is **not** sent when the widget is being attached.\r\n     */\r\n    export const AfterShow = new Message('after-show');\r\n\r\n    /**\r\n     * A singleton `'before-hide'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget before it becomes not-visible.\r\n     *\r\n     * This message is **not** sent when the widget is being detached.\r\n     */\r\n    export const BeforeHide = new Message('before-hide');\r\n\r\n    /**\r\n     * A singleton `'after-hide'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget after it becomes not-visible.\r\n     *\r\n     * This message is **not** sent when the widget is being detached.\r\n     */\r\n    export const AfterHide = new Message('after-hide');\r\n\r\n    /**\r\n     * A singleton `'before-attach'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget before it is attached.\r\n     */\r\n    export const BeforeAttach = new Message('before-attach');\r\n\r\n    /**\r\n     * A singleton `'after-attach'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget after it is attached.\r\n     */\r\n    export const AfterAttach = new Message('after-attach');\r\n\r\n    /**\r\n     * A singleton `'before-detach'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget before it is detached.\r\n     */\r\n    export const BeforeDetach = new Message('before-detach');\r\n\r\n    /**\r\n     * A singleton `'after-detach'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget after it is detached.\r\n     */\r\n    export const AfterDetach = new Message('after-detach');\r\n\r\n    /**\r\n     * A singleton `'parent-changed'` message.\r\n     *\r\n     * #### Notes\r\n     * This message is sent to a widget when its parent has changed.\r\n     */\r\n    export const ParentChanged = new Message('parent-changed');\r\n\r\n    /**\r\n     * A singleton conflatable `'update-request'` message.\r\n     *\r\n     * #### Notes\r\n     * This message can be dispatched to supporting widgets in order to\r\n     * update their content based on the current widget state. Not all\r\n     * widgets will respond to messages of this type.\r\n     *\r\n     * For widgets with a layout, this message will inform the layout to\r\n     * update the position and size of its child widgets.\r\n     */\r\n    export const UpdateRequest = new ConflatableMessage('update-request');\r\n\r\n    /**\r\n     * A singleton conflatable `'fit-request'` message.\r\n     *\r\n     * #### Notes\r\n     * For widgets with a layout, this message will inform the layout to\r\n     * recalculate its size constraints to fit the space requirements of\r\n     * its child widgets, and to update their position and size. Not all\r\n     * layouts will respond to messages of this type.\r\n     */\r\n    export const FitRequest = new ConflatableMessage('fit-request');\r\n\r\n    /**\r\n     * A singleton conflatable `'activate-request'` message.\r\n     *\r\n     * #### Notes\r\n     * This message should be dispatched to a widget when it should\r\n     * perform the actions necessary to activate the widget, which\r\n     * may include focusing its node or descendant node.\r\n     */\r\n    export const ActivateRequest = new ConflatableMessage('activate-request');\r\n\r\n    /**\r\n     * A singleton conflatable `'close-request'` message.\r\n     *\r\n     * #### Notes\r\n     * This message should be dispatched to a widget when it should close\r\n     * and remove itself from the widget hierarchy.\r\n     */\r\n    export const CloseRequest = new ConflatableMessage('close-request');\r\n  }\r\n\r\n  /**\r\n   * A message class for child related messages.\r\n   */\r\n  export class ChildMessage extends Message {\r\n    /**\r\n     * Construct a new child message.\r\n     *\r\n     * @param type - The message type.\r\n     *\r\n     * @param child - The child widget for the message.\r\n     */\r\n    constructor(type: string, child: Widget) {\r\n      super(type);\r\n      this.child = child;\r\n    }\r\n\r\n    /**\r\n     * The child widget for the message.\r\n     */\r\n    readonly child: Widget;\r\n  }\r\n\r\n  /**\r\n   * A message class for `'resize'` messages.\r\n   */\r\n  export class ResizeMessage extends Message {\r\n    /**\r\n     * Construct a new resize message.\r\n     *\r\n     * @param width - The **offset width** of the widget, or `-1` if\r\n     *   the width is not known.\r\n     *\r\n     * @param height - The **offset height** of the widget, or `-1` if\r\n     *   the height is not known.\r\n     */\r\n    constructor(width: number, height: number) {\r\n      super('resize');\r\n      this.width = width;\r\n      this.height = height;\r\n    }\r\n\r\n    /**\r\n     * The offset width of the widget.\r\n     *\r\n     * #### Notes\r\n     * This will be `-1` if the width is unknown.\r\n     */\r\n    readonly width: number;\r\n\r\n    /**\r\n     * The offset height of the widget.\r\n     *\r\n     * #### Notes\r\n     * This will be `-1` if the height is unknown.\r\n     */\r\n    readonly height: number;\r\n  }\r\n\r\n  /**\r\n   * The namespace for the `ResizeMessage` class statics.\r\n   */\r\n  export namespace ResizeMessage {\r\n    /**\r\n     * A singleton `'resize'` message with an unknown size.\r\n     */\r\n    export const UnknownSize = new ResizeMessage(-1, -1);\r\n  }\r\n\r\n  /**\r\n   * Attach a widget to a host DOM node.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param host - The DOM node to use as the widget's host.\r\n   *\r\n   * @param ref - The child of `host` to use as the reference element.\r\n   *   If this is provided, the widget will be inserted before this\r\n   *   node in the host. The default is `null`, which will cause the\r\n   *   widget to be added as the last child of the host.\r\n   *\r\n   * #### Notes\r\n   * This will throw an error if the widget is not a root widget, if\r\n   * the widget is already attached, or if the host is not attached\r\n   * to the DOM.\r\n   */\r\n  export function attach(\r\n    widget: Widget,\r\n    host: HTMLElement,\r\n    ref: HTMLElement | null = null\r\n  ): void {\r\n    if (widget.parent) {\r\n      throw new Error('Cannot attach a child widget.');\r\n    }\r\n    if (widget.isAttached || widget.node.isConnected) {\r\n      throw new Error('Widget is already attached.');\r\n    }\r\n    if (!host.isConnected) {\r\n      throw new Error('Host is not attached.');\r\n    }\r\n    MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    host.insertBefore(widget.node, ref);\r\n    MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n  }\r\n\r\n  /**\r\n   * Detach the widget from its host DOM node.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * #### Notes\r\n   * This will throw an error if the widget is not a root widget,\r\n   * or if the widget is not attached to the DOM.\r\n   */\r\n  export function detach(widget: Widget): void {\r\n    if (widget.parent) {\r\n      throw new Error('Cannot detach a child widget.');\r\n    }\r\n    if (!widget.isAttached || !widget.node.isConnected) {\r\n      throw new Error('Widget is not attached.');\r\n    }\r\n    MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    widget.node.parentNode!.removeChild(widget.node);\r\n    MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * An attached property for the widget title object.\r\n   */\r\n  export const titleProperty = new AttachedProperty<Widget, Title<Widget>>({\r\n    name: 'title',\r\n    create: owner => new Title<Widget>({ owner })\r\n  });\r\n\r\n  /**\r\n   * Create a DOM node for the given widget options.\r\n   */\r\n  export function createNode(options: Widget.IOptions): HTMLElement {\r\n    return options.node || document.createElement(options.tag || 'div');\r\n  }\r\n}\r\n","/* eslint-disable @typescript-eslint/no-empty-function */\r\n// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { each, IIterable, IIterator } from '@lumino/algorithm';\r\n\r\nimport { IDisposable } from '@lumino/disposable';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { AttachedProperty } from '@lumino/properties';\r\n\r\nimport { Signal } from '@lumino/signaling';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * An abstract base class for creating lumino layouts.\r\n *\r\n * #### Notes\r\n * A layout is used to add widgets to a parent and to arrange those\r\n * widgets within the parent's DOM node.\r\n *\r\n * This class implements the base functionality which is required of\r\n * nearly all layouts. It must be subclassed in order to be useful.\r\n *\r\n * Notably, this class does not define a uniform interface for adding\r\n * widgets to the layout. A subclass should define that API in a way\r\n * which is meaningful for its intended use.\r\n */\r\nexport abstract class Layout implements IIterable<Widget>, IDisposable {\r\n  /**\r\n   * Construct a new layout.\r\n   *\r\n   * @param options - The options for initializing the layout.\r\n   */\r\n  constructor(options: Layout.IOptions = {}) {\r\n    this._fitPolicy = options.fitPolicy || 'set-min-size';\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   *\r\n   * #### Notes\r\n   * This should be reimplemented to clear and dispose of the widgets.\r\n   *\r\n   * All reimplementations should call the superclass method.\r\n   *\r\n   * This method is called automatically when the parent is disposed.\r\n   */\r\n  dispose(): void {\r\n    this._parent = null;\r\n    this._disposed = true;\r\n    Signal.clearData(this);\r\n    AttachedProperty.clearData(this);\r\n  }\r\n\r\n  /**\r\n   * Test whether the layout is disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Get the parent widget of the layout.\r\n   */\r\n  get parent(): Widget | null {\r\n    return this._parent;\r\n  }\r\n\r\n  /**\r\n   * Set the parent widget of the layout.\r\n   *\r\n   * #### Notes\r\n   * This is set automatically when installing the layout on the parent\r\n   * widget. The parent widget should not be set directly by user code.\r\n   */\r\n  set parent(value: Widget | null) {\r\n    if (this._parent === value) {\r\n      return;\r\n    }\r\n    if (this._parent) {\r\n      throw new Error('Cannot change parent widget.');\r\n    }\r\n    if (value!.layout !== this) {\r\n      throw new Error('Invalid parent widget.');\r\n    }\r\n    this._parent = value;\r\n    this.init();\r\n  }\r\n\r\n  /**\r\n   * Get the fit policy for the layout.\r\n   *\r\n   * #### Notes\r\n   * The fit policy controls the computed size constraints which are\r\n   * applied to the parent widget by the layout.\r\n   *\r\n   * Some layout implementations may ignore the fit policy.\r\n   */\r\n  get fitPolicy(): Layout.FitPolicy {\r\n    return this._fitPolicy;\r\n  }\r\n\r\n  /**\r\n   * Set the fit policy for the layout.\r\n   *\r\n   * #### Notes\r\n   * The fit policy controls the computed size constraints which are\r\n   * applied to the parent widget by the layout.\r\n   *\r\n   * Some layout implementations may ignore the fit policy.\r\n   *\r\n   * Changing the fit policy will clear the current size constraint\r\n   * for the parent widget and then re-fit the parent.\r\n   */\r\n  set fitPolicy(value: Layout.FitPolicy) {\r\n    // Bail if the policy does not change\r\n    if (this._fitPolicy === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal policy.\r\n    this._fitPolicy = value;\r\n\r\n    // Clear the size constraints and schedule a fit of the parent.\r\n    if (this._parent) {\r\n      let style = this._parent.node.style;\r\n      style.minWidth = '';\r\n      style.minHeight = '';\r\n      style.maxWidth = '';\r\n      style.maxHeight = '';\r\n      this._parent.fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the widgets in the layout.\r\n   *\r\n   * @returns A new iterator over the widgets in the layout.\r\n   *\r\n   * #### Notes\r\n   * This abstract method must be implemented by a subclass.\r\n   */\r\n  abstract iter(): IIterator<Widget>;\r\n\r\n  /**\r\n   * Remove a widget from the layout.\r\n   *\r\n   * @param widget - The widget to remove from the layout.\r\n   *\r\n   * #### Notes\r\n   * A widget is automatically removed from the layout when its `parent`\r\n   * is set to `null`. This method should only be invoked directly when\r\n   * removing a widget from a layout which has yet to be installed on a\r\n   * parent widget.\r\n   *\r\n   * This method should *not* modify the widget's `parent`.\r\n   */\r\n  abstract removeWidget(widget: Widget): void;\r\n\r\n  /**\r\n   * Process a message sent to the parent widget.\r\n   *\r\n   * @param msg - The message sent to the parent widget.\r\n   *\r\n   * #### Notes\r\n   * This method is called by the parent widget to process a message.\r\n   *\r\n   * Subclasses may reimplement this method as needed.\r\n   */\r\n  processParentMessage(msg: Message): void {\r\n    switch (msg.type) {\r\n      case 'resize':\r\n        this.onResize(msg as Widget.ResizeMessage);\r\n        break;\r\n      case 'update-request':\r\n        this.onUpdateRequest(msg);\r\n        break;\r\n      case 'fit-request':\r\n        this.onFitRequest(msg);\r\n        break;\r\n      case 'before-show':\r\n        this.onBeforeShow(msg);\r\n        break;\r\n      case 'after-show':\r\n        this.onAfterShow(msg);\r\n        break;\r\n      case 'before-hide':\r\n        this.onBeforeHide(msg);\r\n        break;\r\n      case 'after-hide':\r\n        this.onAfterHide(msg);\r\n        break;\r\n      case 'before-attach':\r\n        this.onBeforeAttach(msg);\r\n        break;\r\n      case 'after-attach':\r\n        this.onAfterAttach(msg);\r\n        break;\r\n      case 'before-detach':\r\n        this.onBeforeDetach(msg);\r\n        break;\r\n      case 'after-detach':\r\n        this.onAfterDetach(msg);\r\n        break;\r\n      case 'child-removed':\r\n        this.onChildRemoved(msg as Widget.ChildMessage);\r\n        break;\r\n      case 'child-shown':\r\n        this.onChildShown(msg as Widget.ChildMessage);\r\n        break;\r\n      case 'child-hidden':\r\n        this.onChildHidden(msg as Widget.ChildMessage);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform layout initialization which requires the parent widget.\r\n   *\r\n   * #### Notes\r\n   * This method is invoked immediately after the layout is installed\r\n   * on the parent widget.\r\n   *\r\n   * The default implementation reparents all of the widgets to the\r\n   * layout parent widget.\r\n   *\r\n   * Subclasses should reimplement this method and attach the child\r\n   * widget nodes to the parent widget's node.\r\n   */\r\n  protected init(): void {\r\n    each(this, widget => {\r\n      widget.parent = this.parent;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'resize'` message.\r\n   *\r\n   * #### Notes\r\n   * The layout should ensure that its widgets are resized according\r\n   * to the specified layout space, and that they are sent a `'resize'`\r\n   * message if appropriate.\r\n   *\r\n   * The default implementation of this method sends an `UnknownSize`\r\n   * resize message to all widgets.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onResize(msg: Widget.ResizeMessage): void {\r\n    each(this, widget => {\r\n      MessageLoop.sendMessage(widget, Widget.ResizeMessage.UnknownSize);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   *\r\n   * #### Notes\r\n   * The layout should ensure that its widgets are resized according\r\n   * to the available layout space, and that they are sent a `'resize'`\r\n   * message if appropriate.\r\n   *\r\n   * The default implementation of this method sends an `UnknownSize`\r\n   * resize message to all widgets.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    each(this, widget => {\r\n      MessageLoop.sendMessage(widget, Widget.ResizeMessage.UnknownSize);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this method forwards the message\r\n   * to all widgets. It assumes all widget nodes are attached to the\r\n   * parent widget node.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    each(this, widget => {\r\n      MessageLoop.sendMessage(widget, msg);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-attach'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this method forwards the message\r\n   * to all widgets. It assumes all widget nodes are attached to the\r\n   * parent widget node.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onAfterAttach(msg: Message): void {\r\n    each(this, widget => {\r\n      MessageLoop.sendMessage(widget, msg);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-detach'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this method forwards the message\r\n   * to all widgets. It assumes all widget nodes are attached to the\r\n   * parent widget node.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onBeforeDetach(msg: Message): void {\r\n    each(this, widget => {\r\n      MessageLoop.sendMessage(widget, msg);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this method forwards the message\r\n   * to all widgets. It assumes all widget nodes are attached to the\r\n   * parent widget node.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    each(this, widget => {\r\n      MessageLoop.sendMessage(widget, msg);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-show'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this method forwards the message to\r\n   * all non-hidden widgets. It assumes all widget nodes are attached\r\n   * to the parent widget node.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onBeforeShow(msg: Message): void {\r\n    each(this, widget => {\r\n      if (!widget.isHidden) {\r\n        MessageLoop.sendMessage(widget, msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-show'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this method forwards the message to\r\n   * all non-hidden widgets. It assumes all widget nodes are attached\r\n   * to the parent widget node.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onAfterShow(msg: Message): void {\r\n    each(this, widget => {\r\n      if (!widget.isHidden) {\r\n        MessageLoop.sendMessage(widget, msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-hide'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this method forwards the message to\r\n   * all non-hidden widgets. It assumes all widget nodes are attached\r\n   * to the parent widget node.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onBeforeHide(msg: Message): void {\r\n    each(this, widget => {\r\n      if (!widget.isHidden) {\r\n        MessageLoop.sendMessage(widget, msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-hide'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this method forwards the message to\r\n   * all non-hidden widgets. It assumes all widget nodes are attached\r\n   * to the parent widget node.\r\n   *\r\n   * This may be reimplemented by subclasses as needed.\r\n   */\r\n  protected onAfterHide(msg: Message): void {\r\n    each(this, widget => {\r\n      if (!widget.isHidden) {\r\n        MessageLoop.sendMessage(widget, msg);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-removed'` message.\r\n   *\r\n   * #### Notes\r\n   * This will remove the child widget from the layout.\r\n   *\r\n   * Subclasses should **not** typically reimplement this method.\r\n   */\r\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\r\n    this.removeWidget(msg.child);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'fit-request'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onFitRequest(msg: Message): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-shown'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onChildShown(msg: Widget.ChildMessage): void {}\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-hidden'` message.\r\n   *\r\n   * #### Notes\r\n   * The default implementation of this handler is a no-op.\r\n   */\r\n  protected onChildHidden(msg: Widget.ChildMessage): void {}\r\n\r\n  private _disposed = false;\r\n  private _fitPolicy: Layout.FitPolicy;\r\n  private _parent: Widget | null = null;\r\n}\r\n\r\n/**\r\n * The namespace for the `Layout` class statics.\r\n */\r\nexport namespace Layout {\r\n  /**\r\n   * A type alias for the layout fit policy.\r\n   *\r\n   * #### Notes\r\n   * The fit policy controls the computed size constraints which are\r\n   * applied to the parent widget by the layout.\r\n   *\r\n   * Some layout implementations may ignore the fit policy.\r\n   */\r\n  export type FitPolicy =\r\n    | /**\r\n     * No size constraint will be applied to the parent widget.\r\n     */\r\n    'set-no-constraint'\r\n\r\n    /**\r\n     * The computed min size will be applied to the parent widget.\r\n     */\r\n    | 'set-min-size';\r\n\r\n  /**\r\n   * An options object for initializing a layout.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The fit policy for the layout.\r\n     *\r\n     * The default is `'set-min-size'`.\r\n     */\r\n    fitPolicy?: FitPolicy;\r\n  }\r\n\r\n  /**\r\n   * A type alias for the horizontal alignment of a widget.\r\n   */\r\n  export type HorizontalAlignment = 'left' | 'center' | 'right';\r\n\r\n  /**\r\n   * A type alias for the vertical alignment of a widget.\r\n   */\r\n  export type VerticalAlignment = 'top' | 'center' | 'bottom';\r\n\r\n  /**\r\n   * Get the horizontal alignment for a widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The horizontal alignment for the widget.\r\n   *\r\n   * #### Notes\r\n   * If the layout width allocated to a widget is larger than its max\r\n   * width, the horizontal alignment controls how the widget is placed\r\n   * within the extra horizontal space.\r\n   *\r\n   * If the allocated width is less than the widget's max width, the\r\n   * horizontal alignment has no effect.\r\n   *\r\n   * Some layout implementations may ignore horizontal alignment.\r\n   */\r\n  export function getHorizontalAlignment(widget: Widget): HorizontalAlignment {\r\n    return Private.horizontalAlignmentProperty.get(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the horizontal alignment for a widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the horizontal alignment.\r\n   *\r\n   * #### Notes\r\n   * If the layout width allocated to a widget is larger than its max\r\n   * width, the horizontal alignment controls how the widget is placed\r\n   * within the extra horizontal space.\r\n   *\r\n   * If the allocated width is less than the widget's max width, the\r\n   * horizontal alignment has no effect.\r\n   *\r\n   * Some layout implementations may ignore horizontal alignment.\r\n   *\r\n   * Changing the horizontal alignment will post an `update-request`\r\n   * message to widget's parent, provided the parent has a layout\r\n   * installed.\r\n   */\r\n  export function setHorizontalAlignment(\r\n    widget: Widget,\r\n    value: HorizontalAlignment\r\n  ): void {\r\n    Private.horizontalAlignmentProperty.set(widget, value);\r\n  }\r\n\r\n  /**\r\n   * Get the vertical alignment for a widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The vertical alignment for the widget.\r\n   *\r\n   * #### Notes\r\n   * If the layout height allocated to a widget is larger than its max\r\n   * height, the vertical alignment controls how the widget is placed\r\n   * within the extra vertical space.\r\n   *\r\n   * If the allocated height is less than the widget's max height, the\r\n   * vertical alignment has no effect.\r\n   *\r\n   * Some layout implementations may ignore vertical alignment.\r\n   */\r\n  export function getVerticalAlignment(widget: Widget): VerticalAlignment {\r\n    return Private.verticalAlignmentProperty.get(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the vertical alignment for a widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the vertical alignment.\r\n   *\r\n   * #### Notes\r\n   * If the layout height allocated to a widget is larger than its max\r\n   * height, the vertical alignment controls how the widget is placed\r\n   * within the extra vertical space.\r\n   *\r\n   * If the allocated height is less than the widget's max height, the\r\n   * vertical alignment has no effect.\r\n   *\r\n   * Some layout implementations may ignore vertical alignment.\r\n   *\r\n   * Changing the horizontal alignment will post an `update-request`\r\n   * message to widget's parent, provided the parent has a layout\r\n   * installed.\r\n   */\r\n  export function setVerticalAlignment(\r\n    widget: Widget,\r\n    value: VerticalAlignment\r\n  ): void {\r\n    Private.verticalAlignmentProperty.set(widget, value);\r\n  }\r\n}\r\n\r\n/**\r\n * An object which assists in the absolute layout of widgets.\r\n *\r\n * #### Notes\r\n * This class is useful when implementing a layout which arranges its\r\n * widgets using absolute positioning.\r\n *\r\n * This class is used by nearly all of the built-in lumino layouts.\r\n */\r\nexport class LayoutItem implements IDisposable {\r\n  /**\r\n   * Construct a new layout item.\r\n   *\r\n   * @param widget - The widget to be managed by the item.\r\n   *\r\n   * #### Notes\r\n   * The widget will be set to absolute positioning.\r\n   */\r\n  constructor(widget: Widget) {\r\n    this.widget = widget;\r\n    this.widget.node.style.position = 'absolute';\r\n  }\r\n\r\n  /**\r\n   * Dispose of the the layout item.\r\n   *\r\n   * #### Notes\r\n   * This will reset the positioning of the widget.\r\n   */\r\n  dispose(): void {\r\n    // Do nothing if the item is already disposed.\r\n    if (this._disposed) {\r\n      return;\r\n    }\r\n\r\n    // Mark the item as disposed.\r\n    this._disposed = true;\r\n\r\n    // Reset the widget style.\r\n    let style = this.widget.node.style;\r\n    style.position = '';\r\n    style.top = '';\r\n    style.left = '';\r\n    style.width = '';\r\n    style.height = '';\r\n  }\r\n\r\n  /**\r\n   * The widget managed by the layout item.\r\n   */\r\n  readonly widget: Widget;\r\n\r\n  /**\r\n   * The computed minimum width of the widget.\r\n   *\r\n   * #### Notes\r\n   * This value can be updated by calling the `fit` method.\r\n   */\r\n  get minWidth(): number {\r\n    return this._minWidth;\r\n  }\r\n\r\n  /**\r\n   * The computed minimum height of the widget.\r\n   *\r\n   * #### Notes\r\n   * This value can be updated by calling the `fit` method.\r\n   */\r\n  get minHeight(): number {\r\n    return this._minHeight;\r\n  }\r\n\r\n  /**\r\n   * The computed maximum width of the widget.\r\n   *\r\n   * #### Notes\r\n   * This value can be updated by calling the `fit` method.\r\n   */\r\n  get maxWidth(): number {\r\n    return this._maxWidth;\r\n  }\r\n\r\n  /**\r\n   * The computed maximum height of the widget.\r\n   *\r\n   * #### Notes\r\n   * This value can be updated by calling the `fit` method.\r\n   */\r\n  get maxHeight(): number {\r\n    return this._maxHeight;\r\n  }\r\n\r\n  /**\r\n   * Whether the layout item is disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this._disposed;\r\n  }\r\n\r\n  /**\r\n   * Whether the managed widget is hidden.\r\n   */\r\n  get isHidden(): boolean {\r\n    return this.widget.isHidden;\r\n  }\r\n\r\n  /**\r\n   * Whether the managed widget is visible.\r\n   */\r\n  get isVisible(): boolean {\r\n    return this.widget.isVisible;\r\n  }\r\n\r\n  /**\r\n   * Whether the managed widget is attached.\r\n   */\r\n  get isAttached(): boolean {\r\n    return this.widget.isAttached;\r\n  }\r\n\r\n  /**\r\n   * Update the computed size limits of the managed widget.\r\n   */\r\n  fit(): void {\r\n    let limits = ElementExt.sizeLimits(this.widget.node);\r\n    this._minWidth = limits.minWidth;\r\n    this._minHeight = limits.minHeight;\r\n    this._maxWidth = limits.maxWidth;\r\n    this._maxHeight = limits.maxHeight;\r\n  }\r\n\r\n  /**\r\n   * Update the position and size of the managed widget.\r\n   *\r\n   * @param left - The left edge position of the layout box.\r\n   *\r\n   * @param top - The top edge position of the layout box.\r\n   *\r\n   * @param width - The width of the layout box.\r\n   *\r\n   * @param height - The height of the layout box.\r\n   */\r\n  update(left: number, top: number, width: number, height: number): void {\r\n    // Clamp the size to the computed size limits.\r\n    let clampW = Math.max(this._minWidth, Math.min(width, this._maxWidth));\r\n    let clampH = Math.max(this._minHeight, Math.min(height, this._maxHeight));\r\n\r\n    // Adjust the left edge for the horizontal alignment, if needed.\r\n    if (clampW < width) {\r\n      switch (Layout.getHorizontalAlignment(this.widget)) {\r\n        case 'left':\r\n          break;\r\n        case 'center':\r\n          left += (width - clampW) / 2;\r\n          break;\r\n        case 'right':\r\n          left += width - clampW;\r\n          break;\r\n        default:\r\n          throw 'unreachable';\r\n      }\r\n    }\r\n\r\n    // Adjust the top edge for the vertical alignment, if needed.\r\n    if (clampH < height) {\r\n      switch (Layout.getVerticalAlignment(this.widget)) {\r\n        case 'top':\r\n          break;\r\n        case 'center':\r\n          top += (height - clampH) / 2;\r\n          break;\r\n        case 'bottom':\r\n          top += height - clampH;\r\n          break;\r\n        default:\r\n          throw 'unreachable';\r\n      }\r\n    }\r\n\r\n    // Set up the resize variables.\r\n    let resized = false;\r\n    let style = this.widget.node.style;\r\n\r\n    // Update the top edge of the widget if needed.\r\n    if (this._top !== top) {\r\n      this._top = top;\r\n      style.top = `${top}px`;\r\n    }\r\n\r\n    // Update the left edge of the widget if needed.\r\n    if (this._left !== left) {\r\n      this._left = left;\r\n      style.left = `${left}px`;\r\n    }\r\n\r\n    // Update the width of the widget if needed.\r\n    if (this._width !== clampW) {\r\n      resized = true;\r\n      this._width = clampW;\r\n      style.width = `${clampW}px`;\r\n    }\r\n\r\n    // Update the height of the widget if needed.\r\n    if (this._height !== clampH) {\r\n      resized = true;\r\n      this._height = clampH;\r\n      style.height = `${clampH}px`;\r\n    }\r\n\r\n    // Send a resize message to the widget if needed.\r\n    if (resized) {\r\n      let msg = new Widget.ResizeMessage(clampW, clampH);\r\n      MessageLoop.sendMessage(this.widget, msg);\r\n    }\r\n  }\r\n\r\n  private _top = NaN;\r\n  private _left = NaN;\r\n  private _width = NaN;\r\n  private _height = NaN;\r\n  private _minWidth = 0;\r\n  private _minHeight = 0;\r\n  private _maxWidth = Infinity;\r\n  private _maxHeight = Infinity;\r\n  private _disposed = false;\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The attached property for a widget horizontal alignment.\r\n   */\r\n  export const horizontalAlignmentProperty = new AttachedProperty<\r\n    Widget,\r\n    Layout.HorizontalAlignment\r\n  >({\r\n    name: 'horizontalAlignment',\r\n    create: () => 'center',\r\n    changed: onAlignmentChanged\r\n  });\r\n\r\n  /**\r\n   * The attached property for a widget vertical alignment.\r\n   */\r\n  export const verticalAlignmentProperty = new AttachedProperty<\r\n    Widget,\r\n    Layout.VerticalAlignment\r\n  >({\r\n    name: 'verticalAlignment',\r\n    create: () => 'top',\r\n    changed: onAlignmentChanged\r\n  });\r\n\r\n  /**\r\n   * The change handler for the attached alignment properties.\r\n   */\r\n  function onAlignmentChanged(child: Widget): void {\r\n    if (child.parent && child.parent.layout) {\r\n      child.parent.update();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each, IIterator, iter } from '@lumino/algorithm';\r\n\r\nimport { MessageLoop } from '@lumino/messaging';\r\n\r\nimport { Layout } from './layout';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A concrete layout implementation suitable for many use cases.\r\n *\r\n * #### Notes\r\n * This class is suitable as a base class for implementing a variety of\r\n * layouts, but can also be used directly with standard CSS to layout a\r\n * collection of widgets.\r\n */\r\nexport class PanelLayout extends Layout {\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   *\r\n   * #### Notes\r\n   * This will clear and dispose all widgets in the layout.\r\n   *\r\n   * All reimplementations should call the superclass method.\r\n   *\r\n   * This method is called automatically when the parent is disposed.\r\n   */\r\n  dispose(): void {\r\n    while (this._widgets.length > 0) {\r\n      this._widgets.pop()!.dispose();\r\n    }\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the widgets in the layout.\r\n   */\r\n  get widgets(): ReadonlyArray<Widget> {\r\n    return this._widgets;\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the widgets in the layout.\r\n   *\r\n   * @returns A new iterator over the widgets in the layout.\r\n   */\r\n  iter(): IIterator<Widget> {\r\n    return iter(this._widgets);\r\n  }\r\n\r\n  /**\r\n   * Add a widget to the end of the layout.\r\n   *\r\n   * @param widget - The widget to add to the layout.\r\n   *\r\n   * #### Notes\r\n   * If the widget is already contained in the layout, it will be moved.\r\n   */\r\n  addWidget(widget: Widget): void {\r\n    this.insertWidget(this._widgets.length, widget);\r\n  }\r\n\r\n  /**\r\n   * Insert a widget into the layout at the specified index.\r\n   *\r\n   * @param index - The index at which to insert the widget.\r\n   *\r\n   * @param widget - The widget to insert into the layout.\r\n   *\r\n   * #### Notes\r\n   * The index will be clamped to the bounds of the widgets.\r\n   *\r\n   * If the widget is already added to the layout, it will be moved.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` which is non-integral.\r\n   */\r\n  insertWidget(index: number, widget: Widget): void {\r\n    // Remove the widget from its current parent. This is a no-op\r\n    // if the widget's parent is already the layout parent widget.\r\n    widget.parent = this.parent;\r\n\r\n    // Look up the current index of the widget.\r\n    let i = this._widgets.indexOf(widget);\r\n\r\n    // Clamp the insert index to the array bounds.\r\n    let j = Math.max(0, Math.min(index, this._widgets.length));\r\n\r\n    // If the widget is not in the array, insert it.\r\n    if (i === -1) {\r\n      // Insert the widget into the array.\r\n      ArrayExt.insert(this._widgets, j, widget);\r\n\r\n      // If the layout is parented, attach the widget to the DOM.\r\n      if (this.parent) {\r\n        this.attachWidget(j, widget);\r\n      }\r\n\r\n      // There is nothing more to do.\r\n      return;\r\n    }\r\n\r\n    // Otherwise, the widget exists in the array and should be moved.\r\n\r\n    // Adjust the index if the location is at the end of the array.\r\n    if (j === this._widgets.length) {\r\n      j--;\r\n    }\r\n\r\n    // Bail if there is no effective move.\r\n    if (i === j) {\r\n      return;\r\n    }\r\n\r\n    // Move the widget to the new location.\r\n    ArrayExt.move(this._widgets, i, j);\r\n\r\n    // If the layout is parented, move the widget in the DOM.\r\n    if (this.parent) {\r\n      this.moveWidget(i, j, widget);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a widget from the layout.\r\n   *\r\n   * @param widget - The widget to remove from the layout.\r\n   *\r\n   * #### Notes\r\n   * A widget is automatically removed from the layout when its `parent`\r\n   * is set to `null`. This method should only be invoked directly when\r\n   * removing a widget from a layout which has yet to be installed on a\r\n   * parent widget.\r\n   *\r\n   * This method does *not* modify the widget's `parent`.\r\n   */\r\n  removeWidget(widget: Widget): void {\r\n    this.removeWidgetAt(this._widgets.indexOf(widget));\r\n  }\r\n\r\n  /**\r\n   * Remove the widget at a given index from the layout.\r\n   *\r\n   * @param index - The index of the widget to remove.\r\n   *\r\n   * #### Notes\r\n   * A widget is automatically removed from the layout when its `parent`\r\n   * is set to `null`. This method should only be invoked directly when\r\n   * removing a widget from a layout which has yet to be installed on a\r\n   * parent widget.\r\n   *\r\n   * This method does *not* modify the widget's `parent`.\r\n   *\r\n   * #### Undefined Behavior\r\n   * An `index` which is non-integral.\r\n   */\r\n  removeWidgetAt(index: number): void {\r\n    // Remove the widget from the array.\r\n    let widget = ArrayExt.removeAt(this._widgets, index);\r\n\r\n    // If the layout is parented, detach the widget from the DOM.\r\n    if (widget && this.parent) {\r\n      this.detachWidget(index, widget);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform layout initialization which requires the parent widget.\r\n   */\r\n  protected init(): void {\r\n    super.init();\r\n    each(this, (widget, index) => {\r\n      this.attachWidget(index, widget);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach a widget to the parent's DOM node.\r\n   *\r\n   * @param index - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to attach to the parent.\r\n   *\r\n   * #### Notes\r\n   * This method is called automatically by the panel layout at the\r\n   * appropriate time. It should not be called directly by user code.\r\n   *\r\n   * The default implementation adds the widgets's node to the parent's\r\n   * node at the proper location, and sends the appropriate attach\r\n   * messages to the widget if the parent is attached to the DOM.\r\n   *\r\n   * Subclasses may reimplement this method to control how the widget's\r\n   * node is added to the parent's node.\r\n   */\r\n  protected attachWidget(index: number, widget: Widget): void {\r\n    // Look up the next sibling reference node.\r\n    let ref = this.parent!.node.children[index];\r\n\r\n    // Send a `'before-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    }\r\n\r\n    // Insert the widget's node before the sibling.\r\n    this.parent!.node.insertBefore(widget.node, ref);\r\n\r\n    // Send an `'after-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move a widget in the parent's DOM node.\r\n   *\r\n   * @param fromIndex - The previous index of the widget in the layout.\r\n   *\r\n   * @param toIndex - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to move in the parent.\r\n   *\r\n   * #### Notes\r\n   * This method is called automatically by the panel layout at the\r\n   * appropriate time. It should not be called directly by user code.\r\n   *\r\n   * The default implementation moves the widget's node to the proper\r\n   * location in the parent's node and sends the appropriate attach and\r\n   * detach messages to the widget if the parent is attached to the DOM.\r\n   *\r\n   * Subclasses may reimplement this method to control how the widget's\r\n   * node is moved in the parent's node.\r\n   */\r\n  protected moveWidget(\r\n    fromIndex: number,\r\n    toIndex: number,\r\n    widget: Widget\r\n  ): void {\r\n    // Send a `'before-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    }\r\n\r\n    // Remove the widget's node from the parent.\r\n    this.parent!.node.removeChild(widget.node);\r\n\r\n    // Send an `'after-detach'` and  message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n    }\r\n\r\n    // Look up the next sibling reference node.\r\n    let ref = this.parent!.node.children[toIndex];\r\n\r\n    // Send a `'before-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    }\r\n\r\n    // Insert the widget's node before the sibling.\r\n    this.parent!.node.insertBefore(widget.node, ref);\r\n\r\n    // Send an `'after-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detach a widget from the parent's DOM node.\r\n   *\r\n   * @param index - The previous index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to detach from the parent.\r\n   *\r\n   * #### Notes\r\n   * This method is called automatically by the panel layout at the\r\n   * appropriate time. It should not be called directly by user code.\r\n   *\r\n   * The default implementation removes the widget's node from the\r\n   * parent's node, and sends the appropriate detach messages to the\r\n   * widget if the parent is attached to the DOM.\r\n   *\r\n   * Subclasses may reimplement this method to control how the widget's\r\n   * node is removed from the parent's node.\r\n   */\r\n  protected detachWidget(index: number, widget: Widget): void {\r\n    // Send a `'before-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    }\r\n\r\n    // Remove the widget's node from the parent.\r\n    this.parent!.node.removeChild(widget.node);\r\n\r\n    // Send an `'after-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n    }\r\n  }\r\n\r\n  private _widgets: Widget[] = [];\r\n}\r\n","export namespace Utils {\r\n  /**\r\n   * Clamp a dimension value to an integer >= 0.\r\n   */\r\n  export function clampDimension(value: number): number {\r\n    return Math.max(0, Math.floor(value));\r\n  }\r\n}\r\n\r\nexport default Utils;\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each } from '@lumino/algorithm';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { AttachedProperty } from '@lumino/properties';\r\n\r\nimport { BoxEngine, BoxSizer } from './boxengine';\r\n\r\nimport { LayoutItem } from './layout';\r\n\r\nimport { PanelLayout } from './panellayout';\r\n\r\nimport { Utils } from './utils';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A layout which arranges its widgets into resizable sections.\r\n */\r\nexport class SplitLayout extends PanelLayout {\r\n  /**\r\n   * Construct a new split layout.\r\n   *\r\n   * @param options - The options for initializing the layout.\r\n   */\r\n  constructor(options: SplitLayout.IOptions) {\r\n    super();\r\n    this.renderer = options.renderer;\r\n    if (options.orientation !== undefined) {\r\n      this._orientation = options.orientation;\r\n    }\r\n    if (options.alignment !== undefined) {\r\n      this._alignment = options.alignment;\r\n    }\r\n    if (options.spacing !== undefined) {\r\n      this._spacing = Utils.clampDimension(options.spacing);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   */\r\n  dispose(): void {\r\n    // Dispose of the layout items.\r\n    each(this._items, item => {\r\n      item.dispose();\r\n    });\r\n\r\n    // Clear the layout state.\r\n    this._box = null;\r\n    this._items.length = 0;\r\n    this._sizers.length = 0;\r\n    this._handles.length = 0;\r\n\r\n    // Dispose of the rest of the layout.\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * The renderer used by the split layout.\r\n   */\r\n  readonly renderer: SplitLayout.IRenderer;\r\n\r\n  /**\r\n   * Get the layout orientation for the split layout.\r\n   */\r\n  get orientation(): SplitLayout.Orientation {\r\n    return this._orientation;\r\n  }\r\n\r\n  /**\r\n   * Set the layout orientation for the split layout.\r\n   */\r\n  set orientation(value: SplitLayout.Orientation) {\r\n    if (this._orientation === value) {\r\n      return;\r\n    }\r\n    this._orientation = value;\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n    this.parent.dataset['orientation'] = value;\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * Get the content alignment for the split layout.\r\n   *\r\n   * #### Notes\r\n   * This is the alignment of the widgets in the layout direction.\r\n   *\r\n   * The alignment has no effect if the widgets can expand  to fill the\r\n   * entire split layout.\r\n   */\r\n  get alignment(): SplitLayout.Alignment {\r\n    return this._alignment;\r\n  }\r\n\r\n  /**\r\n   * Set the content alignment for the split layout.\r\n   *\r\n   * #### Notes\r\n   * This is the alignment of the widgets in the layout direction.\r\n   *\r\n   * The alignment has no effect if the widgets can expand  to fill the\r\n   * entire split layout.\r\n   */\r\n  set alignment(value: SplitLayout.Alignment) {\r\n    if (this._alignment === value) {\r\n      return;\r\n    }\r\n    this._alignment = value;\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n    this.parent.dataset['alignment'] = value;\r\n    this.parent.update();\r\n  }\r\n\r\n  /**\r\n   * Get the inter-element spacing for the split layout.\r\n   */\r\n  get spacing(): number {\r\n    return this._spacing;\r\n  }\r\n\r\n  /**\r\n   * Set the inter-element spacing for the split layout.\r\n   */\r\n  set spacing(value: number) {\r\n    value = Utils.clampDimension(value);\r\n    if (this._spacing === value) {\r\n      return;\r\n    }\r\n    this._spacing = value;\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the split handles in the layout.\r\n   */\r\n  get handles(): ReadonlyArray<HTMLDivElement> {\r\n    return this._handles;\r\n  }\r\n\r\n  /**\r\n   * Get the relative sizes of the widgets in the layout.\r\n   *\r\n   * @returns A new array of the relative sizes of the widgets.\r\n   *\r\n   * #### Notes\r\n   * The returned sizes reflect the sizes of the widgets normalized\r\n   * relative to their siblings.\r\n   *\r\n   * This method **does not** measure the DOM nodes.\r\n   */\r\n  relativeSizes(): number[] {\r\n    return Private.normalize(this._sizers.map(sizer => sizer.size));\r\n  }\r\n\r\n  /**\r\n   * Set the relative sizes for the widgets in the layout.\r\n   *\r\n   * @param sizes - The relative sizes for the widgets in the panel.\r\n   *\r\n   * #### Notes\r\n   * Extra values are ignored, too few will yield an undefined layout.\r\n   *\r\n   * The actual geometry of the DOM nodes is updated asynchronously.\r\n   */\r\n  setRelativeSizes(sizes: number[]): void {\r\n    // Copy the sizes and pad with zeros as needed.\r\n    let n = this._sizers.length;\r\n    let temp = sizes.slice(0, n);\r\n    while (temp.length < n) {\r\n      temp.push(0);\r\n    }\r\n\r\n    // Normalize the padded sizes.\r\n    let normed = Private.normalize(temp);\r\n\r\n    // Apply the normalized sizes to the sizers.\r\n    for (let i = 0; i < n; ++i) {\r\n      let sizer = this._sizers[i];\r\n      sizer.sizeHint = normed[i];\r\n      sizer.size = normed[i];\r\n    }\r\n\r\n    // Set the flag indicating the sizes are normalized.\r\n    this._hasNormedSizes = true;\r\n\r\n    // Trigger an update of the parent widget.\r\n    if (this.parent) {\r\n      this.parent.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Move the offset position of a split handle.\r\n   *\r\n   * @param index - The index of the handle of the interest.\r\n   *\r\n   * @param position - The desired offset position of the handle.\r\n   *\r\n   * #### Notes\r\n   * The position is relative to the offset parent.\r\n   *\r\n   * This will move the handle as close as possible to the desired\r\n   * position. The sibling widgets will be adjusted as necessary.\r\n   */\r\n  moveHandle(index: number, position: number): void {\r\n    // Bail if the index is invalid or the handle is hidden.\r\n    let handle = this._handles[index];\r\n    if (!handle || handle.classList.contains('lm-mod-hidden')) {\r\n      return;\r\n    }\r\n\r\n    // Compute the desired delta movement for the handle.\r\n    let delta: number;\r\n    if (this._orientation === 'horizontal') {\r\n      delta = position - handle.offsetLeft;\r\n    } else {\r\n      delta = position - handle.offsetTop;\r\n    }\r\n\r\n    // Bail if there is no handle movement.\r\n    if (delta === 0) {\r\n      return;\r\n    }\r\n\r\n    // Prevent widget resizing unless needed.\r\n    for (let sizer of this._sizers) {\r\n      if (sizer.size > 0) {\r\n        sizer.sizeHint = sizer.size;\r\n      }\r\n    }\r\n\r\n    // Adjust the sizers to reflect the handle movement.\r\n    BoxEngine.adjust(this._sizers, index, delta);\r\n\r\n    // Update the layout of the widgets.\r\n    if (this.parent) {\r\n      this.parent.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform layout initialization which requires the parent widget.\r\n   */\r\n  protected init(): void {\r\n    this.parent!.dataset['orientation'] = this.orientation;\r\n    this.parent!.dataset['alignment'] = this.alignment;\r\n    super.init();\r\n  }\r\n\r\n  /**\r\n   * Attach a widget to the parent's DOM node.\r\n   *\r\n   * @param index - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to attach to the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected attachWidget(index: number, widget: Widget): void {\r\n    // Create the item, handle, and sizer for the new widget.\r\n    let item = new LayoutItem(widget);\r\n    let handle = Private.createHandle(this.renderer);\r\n    let average = Private.averageSize(this._sizers);\r\n    let sizer = Private.createSizer(average);\r\n\r\n    // Insert the item, handle, and sizer into the internal arrays.\r\n    ArrayExt.insert(this._items, index, item);\r\n    ArrayExt.insert(this._sizers, index, sizer);\r\n    ArrayExt.insert(this._handles, index, handle);\r\n\r\n    // Send a `'before-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    }\r\n\r\n    // Add the widget and handle nodes to the parent.\r\n    this.parent!.node.appendChild(widget.node);\r\n    this.parent!.node.appendChild(handle);\r\n\r\n    // Send an `'after-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n    }\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * Move a widget in the parent's DOM node.\r\n   *\r\n   * @param fromIndex - The previous index of the widget in the layout.\r\n   *\r\n   * @param toIndex - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to move in the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected moveWidget(\r\n    fromIndex: number,\r\n    toIndex: number,\r\n    widget: Widget\r\n  ): void {\r\n    // Move the item, sizer, and handle for the widget.\r\n    ArrayExt.move(this._items, fromIndex, toIndex);\r\n    ArrayExt.move(this._sizers, fromIndex, toIndex);\r\n    ArrayExt.move(this._handles, fromIndex, toIndex);\r\n\r\n    // Post a fit request to the parent to show/hide last handle.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * Detach a widget from the parent's DOM node.\r\n   *\r\n   * @param index - The previous index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to detach from the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected detachWidget(index: number, widget: Widget): void {\r\n    // Remove the item, handle, and sizer for the widget.\r\n    let item = ArrayExt.removeAt(this._items, index);\r\n    let handle = ArrayExt.removeAt(this._handles, index);\r\n    ArrayExt.removeAt(this._sizers, index);\r\n\r\n    // Send a `'before-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    }\r\n\r\n    // Remove the widget and handle nodes from the parent.\r\n    this.parent!.node.removeChild(widget.node);\r\n    this.parent!.node.removeChild(handle!);\r\n\r\n    // Send an `'after-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n    }\r\n\r\n    // Dispose of the layout item.\r\n    item!.dispose();\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-show'` message.\r\n   */\r\n  protected onBeforeShow(msg: Message): void {\r\n    super.onBeforeShow(msg);\r\n    this.parent!.update();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    super.onBeforeAttach(msg);\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-shown'` message.\r\n   */\r\n  protected onChildShown(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-hidden'` message.\r\n   */\r\n  protected onChildHidden(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'resize'` message.\r\n   */\r\n  protected onResize(msg: Widget.ResizeMessage): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(msg.width, msg.height);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(-1, -1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'fit-request'` message.\r\n   */\r\n  protected onFitRequest(msg: Message): void {\r\n    if (this.parent!.isAttached) {\r\n      this._fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the item position.\r\n   *\r\n   * @param i Item index\r\n   * @param isHorizontal Whether the layout is horizontal or not\r\n   * @param left Left position in pixels\r\n   * @param top Top position in pixels\r\n   * @param height Item height\r\n   * @param width Item width\r\n   * @param size Item size\r\n   */\r\n  protected updateItemPosition(\r\n    i: number,\r\n    isHorizontal: boolean,\r\n    left: number,\r\n    top: number,\r\n    height: number,\r\n    width: number,\r\n    size: number\r\n  ): void {\r\n    const item = this._items[i];\r\n    if (item.isHidden) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the style for the handle.\r\n    let handleStyle = this._handles[i].style;\r\n\r\n    // Update the widget and handle, and advance the relevant edge.\r\n    if (isHorizontal) {\r\n      left += this.widgetOffset;\r\n      item.update(left, top, size, height);\r\n      left += size;\r\n      handleStyle.top = `${top}px`;\r\n      handleStyle.left = `${left}px`;\r\n      handleStyle.width = `${this._spacing}px`;\r\n      handleStyle.height = `${height}px`;\r\n    } else {\r\n      top += this.widgetOffset;\r\n      item.update(left, top, width, size);\r\n      top += size;\r\n      handleStyle.top = `${top}px`;\r\n      handleStyle.left = `${left}px`;\r\n      handleStyle.width = `${width}px`;\r\n      handleStyle.height = `${this._spacing}px`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fit the layout to the total size required by the widgets.\r\n   */\r\n  private _fit(): void {\r\n    // Update the handles and track the visible widget count.\r\n    let nVisible = 0;\r\n    let lastHandleIndex = -1;\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      if (this._items[i].isHidden) {\r\n        this._handles[i].classList.add('lm-mod-hidden');\r\n        /* <DEPRECATED> */\r\n        this._handles[i].classList.add('p-mod-hidden');\r\n        /* </DEPRECATED> */\r\n      } else {\r\n        this._handles[i].classList.remove('lm-mod-hidden');\r\n        /* <DEPRECATED> */\r\n        this._handles[i].classList.remove('p-mod-hidden');\r\n        /* </DEPRECATED> */\r\n        lastHandleIndex = i;\r\n        nVisible++;\r\n      }\r\n    }\r\n\r\n    // Hide the handle for the last visible widget.\r\n    if (lastHandleIndex !== -1) {\r\n      this._handles[lastHandleIndex].classList.add('lm-mod-hidden');\r\n      /* <DEPRECATED> */\r\n      this._handles[lastHandleIndex].classList.add('p-mod-hidden');\r\n      /* </DEPRECATED> */\r\n    }\r\n\r\n    // Update the fixed space for the visible items.\r\n    this._fixed =\r\n      this._spacing * Math.max(0, nVisible - 1) +\r\n      this.widgetOffset * this._items.length;\r\n\r\n    // Setup the computed minimum size.\r\n    let horz = this._orientation === 'horizontal';\r\n    let minW = horz ? this._fixed : 0;\r\n    let minH = horz ? 0 : this._fixed;\r\n\r\n    // Update the sizers and computed size limits.\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      // Fetch the item and corresponding box sizer.\r\n      let item = this._items[i];\r\n      let sizer = this._sizers[i];\r\n\r\n      // Prevent resizing unless necessary.\r\n      if (sizer.size > 0) {\r\n        sizer.sizeHint = sizer.size;\r\n      }\r\n\r\n      // If the item is hidden, it should consume zero size.\r\n      if (item.isHidden) {\r\n        sizer.minSize = 0;\r\n        sizer.maxSize = 0;\r\n        continue;\r\n      }\r\n\r\n      // Update the size limits for the item.\r\n      item.fit();\r\n\r\n      // Update the stretch factor.\r\n      sizer.stretch = SplitLayout.getStretch(item.widget);\r\n\r\n      // Update the sizer limits and computed min size.\r\n      if (horz) {\r\n        sizer.minSize = item.minWidth;\r\n        sizer.maxSize = item.maxWidth;\r\n        minW += item.minWidth;\r\n        minH = Math.max(minH, item.minHeight);\r\n      } else {\r\n        sizer.minSize = item.minHeight;\r\n        sizer.maxSize = item.maxHeight;\r\n        minH += item.minHeight;\r\n        minW = Math.max(minW, item.minWidth);\r\n      }\r\n    }\r\n\r\n    // Update the box sizing and add it to the computed min size.\r\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\r\n    minW += box.horizontalSum;\r\n    minH += box.verticalSum;\r\n\r\n    // Update the parent's min size constraints.\r\n    let style = this.parent!.node.style;\r\n    style.minWidth = `${minW}px`;\r\n    style.minHeight = `${minH}px`;\r\n\r\n    // Set the dirty flag to ensure only a single update occurs.\r\n    this._dirty = true;\r\n\r\n    // Notify the ancestor that it should fit immediately. This may\r\n    // cause a resize of the parent, fulfilling the required update.\r\n    if (this.parent!.parent) {\r\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\r\n    }\r\n\r\n    // If the dirty flag is still set, the parent was not resized.\r\n    // Trigger the required update on the parent widget immediately.\r\n    if (this._dirty) {\r\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the layout position and size of the widgets.\r\n   *\r\n   * The parent offset dimensions should be `-1` if unknown.\r\n   */\r\n  private _update(offsetWidth: number, offsetHeight: number): void {\r\n    // Clear the dirty flag to indicate the update occurred.\r\n    this._dirty = false;\r\n\r\n    // Compute the visible item count.\r\n    let nVisible = 0;\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      nVisible += +!this._items[i].isHidden;\r\n    }\r\n\r\n    // Bail early if there are no visible items to layout.\r\n    if (nVisible === 0 && this.widgetOffset === 0) {\r\n      return;\r\n    }\r\n\r\n    // Measure the parent if the offset dimensions are unknown.\r\n    if (offsetWidth < 0) {\r\n      offsetWidth = this.parent!.node.offsetWidth;\r\n    }\r\n    if (offsetHeight < 0) {\r\n      offsetHeight = this.parent!.node.offsetHeight;\r\n    }\r\n\r\n    // Ensure the parent box sizing data is computed.\r\n    if (!this._box) {\r\n      this._box = ElementExt.boxSizing(this.parent!.node);\r\n    }\r\n\r\n    // Compute the actual layout bounds adjusted for border and padding.\r\n    let top = this._box.paddingTop;\r\n    let left = this._box.paddingLeft;\r\n    let width = offsetWidth - this._box.horizontalSum;\r\n    let height = offsetHeight - this._box.verticalSum;\r\n\r\n    // Set up the variables for justification and alignment offset.\r\n    let extra = 0;\r\n    let offset = 0;\r\n    let horz = this._orientation === 'horizontal';\r\n\r\n    if (nVisible > 0) {\r\n      // Compute the adjusted layout space.\r\n      let space: number;\r\n      if (horz) {\r\n        // left += this.widgetOffset;\r\n        space = Math.max(0, width - this._fixed);\r\n      } else {\r\n        // top += this.widgetOffset;\r\n        space = Math.max(0, height - this._fixed);\r\n      }\r\n\r\n      // Scale the size hints if they are normalized.\r\n      if (this._hasNormedSizes) {\r\n        for (let sizer of this._sizers) {\r\n          sizer.sizeHint *= space;\r\n        }\r\n        this._hasNormedSizes = false;\r\n      }\r\n\r\n      // Distribute the layout space to the box sizers.\r\n      let delta = BoxEngine.calc(this._sizers, space);\r\n\r\n      // Account for alignment if there is extra layout space.\r\n      if (delta > 0) {\r\n        switch (this._alignment) {\r\n          case 'start':\r\n            break;\r\n          case 'center':\r\n            extra = 0;\r\n            offset = delta / 2;\r\n            break;\r\n          case 'end':\r\n            extra = 0;\r\n            offset = delta;\r\n            break;\r\n          case 'justify':\r\n            extra = delta / nVisible;\r\n            offset = 0;\r\n            break;\r\n          default:\r\n            throw 'unreachable';\r\n        }\r\n      }\r\n    }\r\n\r\n    // Layout the items using the computed box sizes.\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      // Fetch the item.\r\n      const item = this._items[i];\r\n\r\n      // Fetch the computed size for the widget.\r\n      const size = item.isHidden ? 0 : this._sizers[i].size + extra;\r\n\r\n      this.updateItemPosition(\r\n        i,\r\n        horz,\r\n        horz ? left + offset : left,\r\n        horz ? top : top + offset,\r\n        height,\r\n        width,\r\n        size\r\n      );\r\n\r\n      const fullOffset =\r\n        this.widgetOffset +\r\n        (this._handles[i].classList.contains('lm-mod-hidden')\r\n          ? 0\r\n          : this._spacing);\r\n\r\n      if (horz) {\r\n        left += size + fullOffset;\r\n      } else {\r\n        top += size + fullOffset;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected widgetOffset = 0;\r\n  private _fixed = 0;\r\n  private _spacing = 4;\r\n  private _dirty = false;\r\n  private _hasNormedSizes = false;\r\n  private _sizers: BoxSizer[] = [];\r\n  private _items: LayoutItem[] = [];\r\n  private _handles: HTMLDivElement[] = [];\r\n  private _box: ElementExt.IBoxSizing | null = null;\r\n  private _alignment: SplitLayout.Alignment = 'start';\r\n  private _orientation: SplitLayout.Orientation = 'horizontal';\r\n}\r\n\r\n/**\r\n * The namespace for the `SplitLayout` class statics.\r\n */\r\nexport namespace SplitLayout {\r\n  /**\r\n   * A type alias for a split layout orientation.\r\n   */\r\n  export type Orientation = 'horizontal' | 'vertical';\r\n\r\n  /**\r\n   * A type alias for a split layout alignment.\r\n   */\r\n  export type Alignment = 'start' | 'center' | 'end' | 'justify';\r\n\r\n  /**\r\n   * An options object for initializing a split layout.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The renderer to use for the split layout.\r\n     */\r\n    renderer: IRenderer;\r\n\r\n    /**\r\n     * The orientation of the layout.\r\n     *\r\n     * The default is `'horizontal'`.\r\n     */\r\n    orientation?: Orientation;\r\n\r\n    /**\r\n     * The content alignment of the layout.\r\n     *\r\n     * The default is `'start'`.\r\n     */\r\n    alignment?: Alignment;\r\n\r\n    /**\r\n     * The spacing between items in the layout.\r\n     *\r\n     * The default is `4`.\r\n     */\r\n    spacing?: number;\r\n  }\r\n\r\n  /**\r\n   * A renderer for use with a split layout.\r\n   */\r\n  export interface IRenderer {\r\n    /**\r\n     * Create a new handle for use with a split layout.\r\n     *\r\n     * @returns A new handle element.\r\n     */\r\n    createHandle(): HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * Get the split layout stretch factor for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The split layout stretch factor for the widget.\r\n   */\r\n  export function getStretch(widget: Widget): number {\r\n    return Private.stretchProperty.get(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the split layout stretch factor for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the stretch factor.\r\n   */\r\n  export function setStretch(widget: Widget, value: number): void {\r\n    Private.stretchProperty.set(widget, value);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The property descriptor for a widget stretch factor.\r\n   */\r\n  export const stretchProperty = new AttachedProperty<Widget, number>({\r\n    name: 'stretch',\r\n    create: () => 0,\r\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\r\n    changed: onChildSizingChanged\r\n  });\r\n\r\n  /**\r\n   * Create a new box sizer with the given size hint.\r\n   */\r\n  export function createSizer(size: number): BoxSizer {\r\n    let sizer = new BoxSizer();\r\n    sizer.sizeHint = Math.floor(size);\r\n    return sizer;\r\n  }\r\n\r\n  /**\r\n   * Create a new split handle node using the given renderer.\r\n   */\r\n  export function createHandle(\r\n    renderer: SplitLayout.IRenderer\r\n  ): HTMLDivElement {\r\n    let handle = renderer.createHandle();\r\n    handle.style.position = 'absolute';\r\n    return handle;\r\n  }\r\n\r\n  /**\r\n   * Compute the average size of an array of box sizers.\r\n   */\r\n  export function averageSize(sizers: BoxSizer[]): number {\r\n    return sizers.reduce((v, s) => v + s.size, 0) / sizers.length || 0;\r\n  }\r\n\r\n  /**\r\n   * Normalize an array of values.\r\n   */\r\n  export function normalize(values: number[]): number[] {\r\n    let n = values.length;\r\n    if (n === 0) {\r\n      return [];\r\n    }\r\n    let sum = values.reduce((a, b) => a + Math.abs(b), 0);\r\n    return sum === 0 ? values.map(v => 1 / n) : values.map(v => v / sum);\r\n  }\r\n\r\n  /**\r\n   * The change handler for the attached sizing properties.\r\n   */\r\n  function onChildSizingChanged(child: Widget): void {\r\n    if (child.parent && child.parent.layout instanceof SplitLayout) {\r\n      child.parent.fit();\r\n    }\r\n  }\r\n}\r\n","import { ArrayExt } from '@lumino/algorithm';\r\nimport { SplitLayout } from './splitlayout';\r\nimport { Title } from './title';\r\nimport Utils from './utils';\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A layout which arranges its widgets into collapsible resizable sections.\r\n */\r\nexport class AccordionLayout extends SplitLayout {\r\n  /**\r\n   * Construct a new accordion layout.\r\n   *\r\n   * @param options - The options for initializing the layout.\r\n   *\r\n   * #### Notes\r\n   * The default orientation will be vertical.\r\n   *\r\n   * Titles must be rotated for horizontal accordion panel using CSS: see accordionpanel.css\r\n   */\r\n  constructor(options: AccordionLayout.IOptions) {\r\n    super({ ...options, orientation: options.orientation || 'vertical' });\r\n    this.titleSpace = options.titleSpace || 22;\r\n  }\r\n\r\n  /**\r\n   * The section title height or width depending on the orientation.\r\n   */\r\n  get titleSpace(): number {\r\n    return this.widgetOffset;\r\n  }\r\n  set titleSpace(value: number) {\r\n    value = Utils.clampDimension(value);\r\n    if (this.widgetOffset === value) {\r\n      return;\r\n    }\r\n    this.widgetOffset = value;\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the section titles in the panel.\r\n   */\r\n  get titles(): ReadonlyArray<HTMLElement> {\r\n    return this._titles;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   */\r\n  dispose(): void {\r\n    if (this.isDisposed) {\r\n      return;\r\n    }\r\n\r\n    // Clear the layout state.\r\n    this._titles.length = 0;\r\n\r\n    // Dispose of the rest of the layout.\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * The renderer used by the accordion layout.\r\n   */\r\n  readonly renderer: AccordionLayout.IRenderer;\r\n\r\n  public updateTitle(index: number, widget: Widget): void {\r\n    const oldTitle = this._titles[index];\r\n    const expanded = oldTitle.classList.contains('lm-mod-expanded');\r\n    const newTitle = Private.createTitle(this.renderer, widget.title, expanded);\r\n    this._titles[index] = newTitle;\r\n\r\n    // Add the title node to the parent before the widget.\r\n    this.parent!.node.replaceChild(newTitle, oldTitle);\r\n  }\r\n\r\n  /**\r\n   * Attach a widget to the parent's DOM node.\r\n   *\r\n   * @param index - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to attach to the parent.\r\n   */\r\n  protected attachWidget(index: number, widget: Widget): void {\r\n    const title = Private.createTitle(this.renderer, widget.title);\r\n\r\n    ArrayExt.insert(this._titles, index, title);\r\n\r\n    // Add the title node to the parent before the widget.\r\n    this.parent!.node.appendChild(title);\r\n\r\n    widget.node.setAttribute('role', 'region');\r\n    widget.node.setAttribute('aria-labelledby', title.id);\r\n\r\n    super.attachWidget(index, widget);\r\n  }\r\n\r\n  /**\r\n   * Move a widget in the parent's DOM node.\r\n   *\r\n   * @param fromIndex - The previous index of the widget in the layout.\r\n   *\r\n   * @param toIndex - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to move in the parent.\r\n   */\r\n  protected moveWidget(\r\n    fromIndex: number,\r\n    toIndex: number,\r\n    widget: Widget\r\n  ): void {\r\n    ArrayExt.move(this._titles, fromIndex, toIndex);\r\n    super.moveWidget(fromIndex, toIndex, widget);\r\n  }\r\n\r\n  /**\r\n   * Detach a widget from the parent's DOM node.\r\n   *\r\n   * @param index - The previous index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to detach from the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected detachWidget(index: number, widget: Widget): void {\r\n    const title = ArrayExt.removeAt(this._titles, index);\r\n\r\n    this.parent!.node.removeChild(title!);\r\n\r\n    super.detachWidget(index, widget);\r\n  }\r\n\r\n  /**\r\n   * Update the item position.\r\n   *\r\n   * @param i Item index\r\n   * @param isHorizontal Whether the layout is horizontal or not\r\n   * @param left Left position in pixels\r\n   * @param top Top position in pixels\r\n   * @param height Item height\r\n   * @param width Item width\r\n   * @param size Item size\r\n   */\r\n  protected updateItemPosition(\r\n    i: number,\r\n    isHorizontal: boolean,\r\n    left: number,\r\n    top: number,\r\n    height: number,\r\n    width: number,\r\n    size: number\r\n  ): void {\r\n    const titleStyle = this._titles[i].style;\r\n\r\n    // Titles must be rotated for horizontal accordion panel using CSS: see accordionpanel.css\r\n    titleStyle.top = `${top}px`;\r\n    titleStyle.left = `${left}px`;\r\n    titleStyle.height = `${this.widgetOffset}px`;\r\n    if (isHorizontal) {\r\n      titleStyle.width = `${height}px`;\r\n    } else {\r\n      titleStyle.width = `${width}px`;\r\n    }\r\n\r\n    super.updateItemPosition(i, isHorizontal, left, top, height, width, size);\r\n  }\r\n\r\n  private _titles: HTMLElement[] = [];\r\n}\r\n\r\nexport namespace AccordionLayout {\r\n  /**\r\n   * A type alias for a accordion layout orientation.\r\n   */\r\n  export type Orientation = SplitLayout.Orientation;\r\n\r\n  /**\r\n   * A type alias for a accordion layout alignment.\r\n   */\r\n  export type Alignment = SplitLayout.Alignment;\r\n\r\n  /**\r\n   * An options object for initializing a accordion layout.\r\n   */\r\n  export interface IOptions extends SplitLayout.IOptions {\r\n    /**\r\n     * The renderer to use for the accordion layout.\r\n     */\r\n    renderer: IRenderer;\r\n\r\n    /**\r\n     * The section title height or width depending on the orientation.\r\n     *\r\n     * The default is `22`.\r\n     */\r\n    titleSpace?: number;\r\n  }\r\n\r\n  /**\r\n   * A renderer for use with an accordion layout.\r\n   */\r\n  export interface IRenderer extends SplitLayout.IRenderer {\r\n    /**\r\n     * Common class name for all accordion titles.\r\n     */\r\n    readonly titleClassName: string;\r\n\r\n    /**\r\n     * Render the element for a section title.\r\n     *\r\n     * @param data - The data to use for rendering the section title.\r\n     *\r\n     * @returns A element representing the section title.\r\n     */\r\n    createSectionTitle(title: Title<Widget>): HTMLElement;\r\n  }\r\n}\r\n\r\nnamespace Private {\r\n  /**\r\n   * Create the title HTML element.\r\n   *\r\n   * @param renderer Accordion renderer\r\n   * @param data Widget title\r\n   * @returns Title HTML element\r\n   */\r\n  export function createTitle(\r\n    renderer: AccordionLayout.IRenderer,\r\n    data: Title<Widget>,\r\n    expanded: boolean = true\r\n  ): HTMLElement {\r\n    const title = renderer.createSectionTitle(data);\r\n    title.style.position = 'absolute';\r\n    title.setAttribute('aria-label', `${data.label} Section`);\r\n    title.setAttribute('aria-expanded', expanded ? 'true' : 'false');\r\n    title.setAttribute('aria-controls', data.owner.id);\r\n    if (expanded) {\r\n      title.classList.add('lm-mod-expanded');\r\n    }\r\n    return title;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { PanelLayout } from './panellayout';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A simple and convenient panel widget class.\r\n *\r\n * #### Notes\r\n * This class is suitable as a base class for implementing a variety of\r\n * convenience panel widgets, but can also be used directly with CSS to\r\n * arrange a collection of widgets.\r\n *\r\n * This class provides a convenience wrapper around a [[PanelLayout]].\r\n */\r\nexport class Panel extends Widget {\r\n  /**\r\n   * Construct a new panel.\r\n   *\r\n   * @param options - The options for initializing the panel.\r\n   */\r\n  constructor(options: Panel.IOptions = {}) {\r\n    super();\r\n    this.addClass('lm-Panel');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-Panel');\r\n    /* </DEPRECATED> */\r\n    this.layout = Private.createLayout(options);\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the widgets in the panel.\r\n   */\r\n  get widgets(): ReadonlyArray<Widget> {\r\n    return (this.layout as PanelLayout).widgets;\r\n  }\r\n\r\n  /**\r\n   * Add a widget to the end of the panel.\r\n   *\r\n   * @param widget - The widget to add to the panel.\r\n   *\r\n   * #### Notes\r\n   * If the widget is already contained in the panel, it will be moved.\r\n   */\r\n  addWidget(widget: Widget): void {\r\n    (this.layout as PanelLayout).addWidget(widget);\r\n  }\r\n\r\n  /**\r\n   * Insert a widget at the specified index.\r\n   *\r\n   * @param index - The index at which to insert the widget.\r\n   *\r\n   * @param widget - The widget to insert into to the panel.\r\n   *\r\n   * #### Notes\r\n   * If the widget is already contained in the panel, it will be moved.\r\n   */\r\n  insertWidget(index: number, widget: Widget): void {\r\n    (this.layout as PanelLayout).insertWidget(index, widget);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the `Panel` class statics.\r\n */\r\nexport namespace Panel {\r\n  /**\r\n   * An options object for creating a panel.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The panel layout to use for the panel.\r\n     *\r\n     * The default is a new `PanelLayout`.\r\n     */\r\n    layout?: PanelLayout;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Create a panel layout for the given panel options.\r\n   */\r\n  export function createLayout(options: Panel.IOptions): PanelLayout {\r\n    return options.layout || new PanelLayout();\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt } from '@lumino/algorithm';\r\n\r\nimport { IDisposable } from '@lumino/disposable';\r\n\r\nimport { Drag } from '@lumino/dragdrop';\r\n\r\nimport { Message } from '@lumino/messaging';\r\n\r\nimport { Panel } from './panel';\r\n\r\nimport { SplitLayout } from './splitlayout';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A panel which arranges its widgets into resizable sections.\r\n *\r\n * #### Notes\r\n * This class provides a convenience wrapper around a [[SplitLayout]].\r\n */\r\nexport class SplitPanel extends Panel {\r\n  /**\r\n   * Construct a new split panel.\r\n   *\r\n   * @param options - The options for initializing the split panel.\r\n   */\r\n  constructor(options: SplitPanel.IOptions = {}) {\r\n    super({ layout: Private.createLayout(options) });\r\n    this.addClass('lm-SplitPanel');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-SplitPanel');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the panel.\r\n   */\r\n  dispose(): void {\r\n    this._releaseMouse();\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Get the layout orientation for the split panel.\r\n   */\r\n  get orientation(): SplitPanel.Orientation {\r\n    return (this.layout as SplitLayout).orientation;\r\n  }\r\n\r\n  /**\r\n   * Set the layout orientation for the split panel.\r\n   */\r\n  set orientation(value: SplitPanel.Orientation) {\r\n    (this.layout as SplitLayout).orientation = value;\r\n  }\r\n\r\n  /**\r\n   * Get the content alignment for the split panel.\r\n   *\r\n   * #### Notes\r\n   * This is the alignment of the widgets in the layout direction.\r\n   *\r\n   * The alignment has no effect if the widgets can expand to fill the\r\n   * entire split panel.\r\n   */\r\n  get alignment(): SplitPanel.Alignment {\r\n    return (this.layout as SplitLayout).alignment;\r\n  }\r\n\r\n  /**\r\n   * Set the content alignment for the split panel.\r\n   *\r\n   * #### Notes\r\n   * This is the alignment of the widgets in the layout direction.\r\n   *\r\n   * The alignment has no effect if the widgets can expand to fill the\r\n   * entire split panel.\r\n   */\r\n  set alignment(value: SplitPanel.Alignment) {\r\n    (this.layout as SplitLayout).alignment = value;\r\n  }\r\n\r\n  /**\r\n   * Get the inter-element spacing for the split panel.\r\n   */\r\n  get spacing(): number {\r\n    return (this.layout as SplitLayout).spacing;\r\n  }\r\n\r\n  /**\r\n   * Set the inter-element spacing for the split panel.\r\n   */\r\n  set spacing(value: number) {\r\n    (this.layout as SplitLayout).spacing = value;\r\n  }\r\n\r\n  /**\r\n   * The renderer used by the split panel.\r\n   */\r\n  get renderer(): SplitPanel.IRenderer {\r\n    return (this.layout as SplitLayout).renderer;\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the split handles in the panel.\r\n   */\r\n  get handles(): ReadonlyArray<HTMLDivElement> {\r\n    return (this.layout as SplitLayout).handles;\r\n  }\r\n\r\n  /**\r\n   * Get the relative sizes of the widgets in the panel.\r\n   *\r\n   * @returns A new array of the relative sizes of the widgets.\r\n   *\r\n   * #### Notes\r\n   * The returned sizes reflect the sizes of the widgets normalized\r\n   * relative to their siblings.\r\n   *\r\n   * This method **does not** measure the DOM nodes.\r\n   */\r\n  relativeSizes(): number[] {\r\n    return (this.layout as SplitLayout).relativeSizes();\r\n  }\r\n\r\n  /**\r\n   * Set the relative sizes for the widgets in the panel.\r\n   *\r\n   * @param sizes - The relative sizes for the widgets in the panel.\r\n   *\r\n   * #### Notes\r\n   * Extra values are ignored, too few will yield an undefined layout.\r\n   *\r\n   * The actual geometry of the DOM nodes is updated asynchronously.\r\n   */\r\n  setRelativeSizes(sizes: number[]): void {\r\n    (this.layout as SplitLayout).setRelativeSizes(sizes);\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the split panel.\r\n   *\r\n   * @param event - The DOM event sent to the panel.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the panel's DOM node. It should\r\n   * not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'mousedown':\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'mousemove':\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'mouseup':\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'pointerdown':\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'pointermove':\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'pointerup':\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'keydown':\r\n        this._evtKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'contextmenu':\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('mousedown', this);\r\n    this.node.addEventListener('pointerdown', this);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    this.node.removeEventListener('mousedown', this);\r\n    this.node.removeEventListener('pointerdown', this);\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-added'` message.\r\n   */\r\n  protected onChildAdded(msg: Widget.ChildMessage): void {\r\n    msg.child.addClass('lm-SplitPanel-child');\r\n    /* <DEPRECATED> */\r\n    msg.child.addClass('p-SplitPanel-child');\r\n    /* </DEPRECATED> */\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-removed'` message.\r\n   */\r\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\r\n    msg.child.removeClass('lm-SplitPanel-child');\r\n    /* <DEPRECATED> */\r\n    msg.child.removeClass('p-SplitPanel-child');\r\n    /* </DEPRECATED> */\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the split panel.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    // Stop input events during drag.\r\n    if (this._pressData) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n\r\n    // Release the mouse if `Escape` is pressed.\r\n    if (event.keyCode === 27) {\r\n      this._releaseMouse();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousedown'` event for the split panel.\r\n   */\r\n  private _evtMouseDown(event: MouseEvent): void {\r\n    // Do nothing if the left mouse button is not pressed.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Find the handle which contains the mouse target, if any.\r\n    let layout = this.layout as SplitLayout;\r\n    let index = ArrayExt.findFirstIndex(layout.handles, handle => {\r\n      return handle.contains(event.target as HTMLElement);\r\n    });\r\n\r\n    // Bail early if the mouse press was not on a handle.\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event when a split handle is pressed.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Add the extra document listeners.\r\n    document.addEventListener('mouseup', this, true);\r\n    document.addEventListener('mousemove', this, true);\r\n    document.addEventListener('pointerup', this, true);\r\n    document.addEventListener('pointermove', this, true);\r\n    document.addEventListener('keydown', this, true);\r\n    document.addEventListener('contextmenu', this, true);\r\n\r\n    // Compute the offset delta for the handle press.\r\n    let delta: number;\r\n    let handle = layout.handles[index];\r\n    let rect = handle.getBoundingClientRect();\r\n    if (layout.orientation === 'horizontal') {\r\n      delta = event.clientX - rect.left;\r\n    } else {\r\n      delta = event.clientY - rect.top;\r\n    }\r\n\r\n    // Override the cursor and store the press data.\r\n    let style = window.getComputedStyle(handle);\r\n    let override = Drag.overrideCursor(style.cursor!);\r\n    this._pressData = { index, delta, override };\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousemove'` event for the split panel.\r\n   */\r\n  private _evtMouseMove(event: MouseEvent): void {\r\n    // Stop the event when dragging a split handle.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Compute the desired offset position for the handle.\r\n    let pos: number;\r\n    let layout = this.layout as SplitLayout;\r\n    let rect = this.node.getBoundingClientRect();\r\n    if (layout.orientation === 'horizontal') {\r\n      pos = event.clientX - rect.left - this._pressData!.delta;\r\n    } else {\r\n      pos = event.clientY - rect.top - this._pressData!.delta;\r\n    }\r\n\r\n    // Move the handle as close to the desired position as possible.\r\n    layout.moveHandle(this._pressData!.index, pos);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseup'` event for the split panel.\r\n   */\r\n  private _evtMouseUp(event: MouseEvent): void {\r\n    // Do nothing if the left mouse button is not released.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event when releasing a handle.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Finalize the mouse release.\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * Release the mouse grab for the split panel.\r\n   */\r\n  private _releaseMouse(): void {\r\n    // Bail early if no drag is in progress.\r\n    if (!this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Clear the override cursor.\r\n    this._pressData.override.dispose();\r\n    this._pressData = null;\r\n\r\n    // Remove the extra document listeners.\r\n    document.removeEventListener('mouseup', this, true);\r\n    document.removeEventListener('mousemove', this, true);\r\n    document.removeEventListener('keydown', this, true);\r\n    document.removeEventListener('pointerup', this, true);\r\n    document.removeEventListener('pointermove', this, true);\r\n    document.removeEventListener('contextmenu', this, true);\r\n  }\r\n\r\n  private _pressData: Private.IPressData | null = null;\r\n}\r\n\r\n/**\r\n * The namespace for the `SplitPanel` class statics.\r\n */\r\nexport namespace SplitPanel {\r\n  /**\r\n   * A type alias for a split panel orientation.\r\n   */\r\n  export type Orientation = SplitLayout.Orientation;\r\n\r\n  /**\r\n   * A type alias for a split panel alignment.\r\n   */\r\n  export type Alignment = SplitLayout.Alignment;\r\n\r\n  /**\r\n   * A type alias for a split panel renderer.\r\n   */\r\n  export type IRenderer = SplitLayout.IRenderer;\r\n\r\n  /**\r\n   * An options object for initializing a split panel.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The renderer to use for the split panel.\r\n     *\r\n     * The default is a shared renderer instance.\r\n     */\r\n    renderer?: IRenderer;\r\n\r\n    /**\r\n     * The layout orientation of the panel.\r\n     *\r\n     * The default is `'horizontal'`.\r\n     */\r\n    orientation?: Orientation;\r\n\r\n    /**\r\n     * The content alignment of the panel.\r\n     *\r\n     * The default is `'start'`.\r\n     */\r\n    alignment?: Alignment;\r\n\r\n    /**\r\n     * The spacing between items in the panel.\r\n     *\r\n     * The default is `4`.\r\n     */\r\n    spacing?: number;\r\n\r\n    /**\r\n     * The split layout to use for the split panel.\r\n     *\r\n     * If this is provided, the other options are ignored.\r\n     *\r\n     * The default is a new `SplitLayout`.\r\n     */\r\n    layout?: SplitLayout;\r\n  }\r\n\r\n  /**\r\n   * The default implementation of `IRenderer`.\r\n   */\r\n  export class Renderer implements IRenderer {\r\n    /**\r\n     * Create a new handle for use with a split panel.\r\n     *\r\n     * @returns A new handle element for a split panel.\r\n     */\r\n    createHandle(): HTMLDivElement {\r\n      let handle = document.createElement('div');\r\n      handle.className = 'lm-SplitPanel-handle';\r\n      /* <DEPRECATED> */\r\n      handle.classList.add('p-SplitPanel-handle');\r\n      /* </DEPRECATED> */\r\n      return handle;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The default `Renderer` instance.\r\n   */\r\n  export const defaultRenderer = new Renderer();\r\n\r\n  /**\r\n   * Get the split panel stretch factor for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The split panel stretch factor for the widget.\r\n   */\r\n  export function getStretch(widget: Widget): number {\r\n    return SplitLayout.getStretch(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the split panel stretch factor for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the stretch factor.\r\n   */\r\n  export function setStretch(widget: Widget, value: number): void {\r\n    SplitLayout.setStretch(widget, value);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * An object which holds mouse press data.\r\n   */\r\n  export interface IPressData {\r\n    /**\r\n     * The index of the pressed handle.\r\n     */\r\n    index: number;\r\n\r\n    /**\r\n     * The offset of the press in handle coordinates.\r\n     */\r\n    delta: number;\r\n\r\n    /**\r\n     * The disposable which will clear the override cursor.\r\n     */\r\n    override: IDisposable;\r\n  }\r\n\r\n  /**\r\n   * Create a split layout for the given panel options.\r\n   */\r\n  export function createLayout(options: SplitPanel.IOptions): SplitLayout {\r\n    return (\r\n      options.layout ||\r\n      new SplitLayout({\r\n        renderer: options.renderer || SplitPanel.defaultRenderer,\r\n        orientation: options.orientation,\r\n        alignment: options.alignment,\r\n        spacing: options.spacing\r\n      })\r\n    );\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n\r\nimport { ArrayExt } from '@lumino/algorithm';\r\nimport { Message } from '@lumino/messaging';\r\nimport { AccordionLayout } from './accordionlayout';\r\nimport { SplitLayout } from './splitlayout';\r\nimport { SplitPanel } from './splitpanel';\r\nimport { Title } from './title';\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A panel which arranges its widgets into resizable sections separated by a title widget.\r\n *\r\n * #### Notes\r\n * This class provides a convenience wrapper around [[AccordionLayout]].\r\n */\r\nexport class AccordionPanel extends SplitPanel {\r\n  /**\r\n   * Construct a new accordion panel.\r\n   *\r\n   * @param options - The options for initializing the accordion panel.\r\n   */\r\n  constructor(options: AccordionPanel.IOptions = {}) {\r\n    super({ ...options, layout: Private.createLayout(options) });\r\n    this.addClass('lm-AccordionPanel');\r\n  }\r\n\r\n  /**\r\n   * The renderer used by the accordion panel.\r\n   */\r\n  get renderer(): AccordionPanel.IRenderer {\r\n    return (this.layout as AccordionLayout).renderer;\r\n  }\r\n\r\n  /**\r\n   * The section title space.\r\n   *\r\n   * This is the height if the panel is vertical and the width if it is\r\n   * horizontal.\r\n   */\r\n  get titleSpace(): number {\r\n    return (this.layout as AccordionLayout).titleSpace;\r\n  }\r\n  set titleSpace(value: number) {\r\n    (this.layout as AccordionLayout).titleSpace = value;\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the section titles in the panel.\r\n   */\r\n  get titles(): ReadonlyArray<HTMLElement> {\r\n    return (this.layout as AccordionLayout).titles;\r\n  }\r\n\r\n  /**\r\n   * Add a widget to the end of the panel.\r\n   *\r\n   * @param widget - The widget to add to the panel.\r\n   *\r\n   * #### Notes\r\n   * If the widget is already contained in the panel, it will be moved.\r\n   */\r\n  addWidget(widget: Widget): void {\r\n    super.addWidget(widget);\r\n    widget.title.changed.connect(this._onTitleChanged, this);\r\n  }\r\n\r\n  /**\r\n   * Insert a widget at the specified index.\r\n   *\r\n   * @param index - The index at which to insert the widget.\r\n   *\r\n   * @param widget - The widget to insert into to the panel.\r\n   *\r\n   * #### Notes\r\n   * If the widget is already contained in the panel, it will be moved.\r\n   */\r\n  insertWidget(index: number, widget: Widget): void {\r\n    super.insertWidget(index, widget);\r\n    widget.title.changed.connect(this._onTitleChanged, this);\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the accordion panel.\r\n   *\r\n   * @param event - The DOM event sent to the panel.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the panel's DOM node. It should\r\n   * not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    super.handleEvent(event);\r\n    switch (event.type) {\r\n      case 'click':\r\n        this._evtClick(event as MouseEvent);\r\n        break;\r\n      case 'keydown':\r\n        this._eventKeyDown(event as KeyboardEvent);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('click', this);\r\n    this.node.addEventListener('keydown', this);\r\n    super.onBeforeAttach(msg);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    super.onAfterDetach(msg);\r\n    this.node.removeEventListener('click', this);\r\n    this.node.removeEventListener('keydown', this);\r\n  }\r\n\r\n  /**\r\n   * Handle the `changed` signal of a title object.\r\n   */\r\n  private _onTitleChanged(sender: Title<Widget>): void {\r\n    const index = ArrayExt.findFirstIndex(this.widgets, widget => {\r\n      return widget.contains(sender.owner);\r\n    });\r\n\r\n    if (index >= 0) {\r\n      (this.layout as AccordionLayout).updateTitle(index, sender.owner);\r\n      this.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'click'` event for the accordion panel\r\n   */\r\n  private _evtClick(event: MouseEvent): void {\r\n    const target = event.target as HTMLElement | null;\r\n\r\n    if (target) {\r\n      const index = ArrayExt.findFirstIndex(this.titles, title => {\r\n        return title.contains(target);\r\n      });\r\n\r\n      if (index >= 0) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        const title = this.titles[index];\r\n        const widget = (this.layout as AccordionLayout).widgets[index];\r\n        if (widget.isHidden) {\r\n          title.classList.add('lm-mod-expanded');\r\n          title.setAttribute('aria-expanded', 'true');\r\n          widget.show();\r\n        } else {\r\n          title.classList.remove('lm-mod-expanded');\r\n          title.setAttribute('aria-expanded', 'false');\r\n          widget.hide();\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the accordion panel.\r\n   */\r\n  private _eventKeyDown(event: KeyboardEvent): void {\r\n    if (event.defaultPrevented) {\r\n      return;\r\n    }\r\n\r\n    const target = event.target as HTMLElement | null;\r\n    let handled = false;\r\n    if (target) {\r\n      const index = ArrayExt.findFirstIndex(this.titles, title => {\r\n        return title.contains(target);\r\n      });\r\n\r\n      if (index >= 0) {\r\n        const keyCode = event.keyCode.toString();\r\n\r\n        // If Space or Enter is pressed on title, emulate click event\r\n        if (event.key.match(/Space|Enter/) || keyCode.match(/13|32/)) {\r\n          target.click();\r\n          handled = true;\r\n        } else if (\r\n          this.orientation === 'horizontal'\r\n            ? event.key.match(/ArrowLeft|ArrowRight/) || keyCode.match(/37|39/)\r\n            : event.key.match(/ArrowUp|ArrowDown/) || keyCode.match(/38|40/)\r\n        ) {\r\n          // If Up or Down (for vertical) / Left or Right (for horizontal) is pressed on title, loop on titles\r\n          const direction =\r\n            event.key.match(/ArrowLeft|ArrowUp/) || keyCode.match(/37|38/)\r\n              ? -1\r\n              : 1;\r\n          const length = this.titles.length;\r\n          const newIndex = (index + length + direction) % length;\r\n\r\n          this.titles[newIndex].focus();\r\n          handled = true;\r\n        } else if (event.key === 'End' || keyCode === '35') {\r\n          // If End is pressed on title, focus on the last title\r\n          this.titles[this.titles.length - 1].focus();\r\n          handled = true;\r\n        } else if (event.key === 'Home' || keyCode === '36') {\r\n          // If Home is pressed on title, focus on the first title\r\n          this.titles[0].focus();\r\n          handled = true;\r\n        }\r\n      }\r\n\r\n      if (handled) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the `AccordionPanel` class statics.\r\n */\r\nexport namespace AccordionPanel {\r\n  /**\r\n   * A type alias for a accordion panel orientation.\r\n   */\r\n  export type Orientation = SplitLayout.Orientation;\r\n\r\n  /**\r\n   * A type alias for a accordion panel alignment.\r\n   */\r\n  export type Alignment = SplitLayout.Alignment;\r\n\r\n  /**\r\n   * A type alias for a accordion panel renderer.\r\n   */\r\n  export type IRenderer = AccordionLayout.IRenderer;\r\n\r\n  /**\r\n   * An options object for initializing a accordion panel.\r\n   */\r\n  export interface IOptions extends Partial<AccordionLayout.IOptions> {\r\n    /**\r\n     * The accordion layout to use for the accordion panel.\r\n     *\r\n     * If this is provided, the other options are ignored.\r\n     *\r\n     * The default is a new `AccordionLayout`.\r\n     */\r\n    layout?: AccordionLayout;\r\n  }\r\n\r\n  /**\r\n   * The default implementation of `IRenderer`.\r\n   */\r\n  export class Renderer extends SplitPanel.Renderer implements IRenderer {\r\n    /**\r\n     * A selector which matches any title node in the accordion.\r\n     */\r\n    readonly titleClassName = 'lm-AccordionPanel-title';\r\n\r\n    /**\r\n     * Render the collapse indicator for a section title.\r\n     *\r\n     * @param data - The data to use for rendering the section title.\r\n     *\r\n     * @returns A element representing the collapse indicator.\r\n     */\r\n    createCollapseIcon(data: Title<Widget>): HTMLElement {\r\n      return document.createElement('span');\r\n    }\r\n\r\n    /**\r\n     * Render the element for a section title.\r\n     *\r\n     * @param data - The data to use for rendering the section title.\r\n     *\r\n     * @returns A element representing the section title.\r\n     */\r\n    createSectionTitle(data: Title<Widget>): HTMLElement {\r\n      const handle = document.createElement('h3');\r\n      handle.setAttribute('role', 'button');\r\n      handle.setAttribute('tabindex', '0');\r\n      handle.id = this.createTitleKey(data);\r\n      handle.className = this.titleClassName;\r\n      handle.title = data.caption;\r\n      for (const aData in data.dataset) {\r\n        handle.dataset[aData] = data.dataset[aData];\r\n      }\r\n\r\n      const collapser = handle.appendChild(this.createCollapseIcon(data));\r\n      collapser.className = 'lm-AccordionPanel-titleCollapser';\r\n\r\n      const label = handle.appendChild(document.createElement('span'));\r\n      label.className = 'lm-AccordionPanel-titleLabel';\r\n      label.textContent = data.label;\r\n\r\n      return handle;\r\n    }\r\n\r\n    /**\r\n     * Create a unique render key for the title.\r\n     *\r\n     * @param data - The data to use for the title.\r\n     *\r\n     * @returns The unique render key for the title.\r\n     *\r\n     * #### Notes\r\n     * This method caches the key against the section title the first time\r\n     * the key is generated.\r\n     */\r\n    createTitleKey(data: Title<Widget>): string {\r\n      let key = this._titleKeys.get(data);\r\n      if (key === undefined) {\r\n        key = `title-key-${this._titleID++}`;\r\n        this._titleKeys.set(data, key);\r\n      }\r\n      return key;\r\n    }\r\n\r\n    private _titleID = 0;\r\n    private _titleKeys = new WeakMap<Title<Widget>, string>();\r\n  }\r\n\r\n  /**\r\n   * The default `Renderer` instance.\r\n   */\r\n  export const defaultRenderer = new Renderer();\r\n}\r\n\r\nnamespace Private {\r\n  /**\r\n   * Create an accordion layout for the given panel options.\r\n   *\r\n   * @param options Panel options\r\n   * @returns Panel layout\r\n   */\r\n  export function createLayout(\r\n    options: AccordionPanel.IOptions\r\n  ): AccordionLayout {\r\n    return (\r\n      options.layout ||\r\n      new AccordionLayout({\r\n        renderer: options.renderer || AccordionPanel.defaultRenderer,\r\n        orientation: options.orientation,\r\n        alignment: options.alignment,\r\n        spacing: options.spacing,\r\n        titleSpace: options.titleSpace\r\n      })\r\n    );\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each } from '@lumino/algorithm';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { AttachedProperty } from '@lumino/properties';\r\n\r\nimport { BoxEngine, BoxSizer } from './boxengine';\r\n\r\nimport { LayoutItem } from './layout';\r\n\r\nimport { PanelLayout } from './panellayout';\r\n\r\nimport Utils from './utils';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A layout which arranges its widgets in a single row or column.\r\n */\r\nexport class BoxLayout extends PanelLayout {\r\n  /**\r\n   * Construct a new box layout.\r\n   *\r\n   * @param options - The options for initializing the layout.\r\n   */\r\n  constructor(options: BoxLayout.IOptions = {}) {\r\n    super();\r\n    if (options.direction !== undefined) {\r\n      this._direction = options.direction;\r\n    }\r\n    if (options.alignment !== undefined) {\r\n      this._alignment = options.alignment;\r\n    }\r\n    if (options.spacing !== undefined) {\r\n      this._spacing = Utils.clampDimension(options.spacing);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   */\r\n  dispose(): void {\r\n    // Dispose of the layout items.\r\n    each(this._items, item => {\r\n      item.dispose();\r\n    });\r\n\r\n    // Clear the layout state.\r\n    this._box = null;\r\n    this._items.length = 0;\r\n    this._sizers.length = 0;\r\n\r\n    // Dispose of the rest of the layout.\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Get the layout direction for the box layout.\r\n   */\r\n  get direction(): BoxLayout.Direction {\r\n    return this._direction;\r\n  }\r\n\r\n  /**\r\n   * Set the layout direction for the box layout.\r\n   */\r\n  set direction(value: BoxLayout.Direction) {\r\n    if (this._direction === value) {\r\n      return;\r\n    }\r\n    this._direction = value;\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n    this.parent.dataset['direction'] = value;\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * Get the content alignment for the box layout.\r\n   *\r\n   * #### Notes\r\n   * This is the alignment of the widgets in the layout direction.\r\n   *\r\n   * The alignment has no effect if the widgets can expand to fill the\r\n   * entire box layout.\r\n   */\r\n  get alignment(): BoxLayout.Alignment {\r\n    return this._alignment;\r\n  }\r\n\r\n  /**\r\n   * Set the content alignment for the box layout.\r\n   *\r\n   * #### Notes\r\n   * This is the alignment of the widgets in the layout direction.\r\n   *\r\n   * The alignment has no effect if the widgets can expand to fill the\r\n   * entire box layout.\r\n   */\r\n  set alignment(value: BoxLayout.Alignment) {\r\n    if (this._alignment === value) {\r\n      return;\r\n    }\r\n    this._alignment = value;\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n    this.parent.dataset['alignment'] = value;\r\n    this.parent.update();\r\n  }\r\n\r\n  /**\r\n   * Get the inter-element spacing for the box layout.\r\n   */\r\n  get spacing(): number {\r\n    return this._spacing;\r\n  }\r\n\r\n  /**\r\n   * Set the inter-element spacing for the box layout.\r\n   */\r\n  set spacing(value: number) {\r\n    value = Utils.clampDimension(value);\r\n    if (this._spacing === value) {\r\n      return;\r\n    }\r\n    this._spacing = value;\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * Perform layout initialization which requires the parent widget.\r\n   */\r\n  protected init(): void {\r\n    this.parent!.dataset['direction'] = this.direction;\r\n    this.parent!.dataset['alignment'] = this.alignment;\r\n    super.init();\r\n  }\r\n\r\n  /**\r\n   * Attach a widget to the parent's DOM node.\r\n   *\r\n   * @param index - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to attach to the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected attachWidget(index: number, widget: Widget): void {\r\n    // Create and add a new layout item for the widget.\r\n    ArrayExt.insert(this._items, index, new LayoutItem(widget));\r\n\r\n    // Create and add a new sizer for the widget.\r\n    ArrayExt.insert(this._sizers, index, new BoxSizer());\r\n\r\n    // Send a `'before-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    }\r\n\r\n    // Add the widget's node to the parent.\r\n    this.parent!.node.appendChild(widget.node);\r\n\r\n    // Send an `'after-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n    }\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * Move a widget in the parent's DOM node.\r\n   *\r\n   * @param fromIndex - The previous index of the widget in the layout.\r\n   *\r\n   * @param toIndex - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to move in the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected moveWidget(\r\n    fromIndex: number,\r\n    toIndex: number,\r\n    widget: Widget\r\n  ): void {\r\n    // Move the layout item for the widget.\r\n    ArrayExt.move(this._items, fromIndex, toIndex);\r\n\r\n    // Move the sizer for the widget.\r\n    ArrayExt.move(this._sizers, fromIndex, toIndex);\r\n\r\n    // Post an update request for the parent widget.\r\n    this.parent!.update();\r\n  }\r\n\r\n  /**\r\n   * Detach a widget from the parent's DOM node.\r\n   *\r\n   * @param index - The previous index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to detach from the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected detachWidget(index: number, widget: Widget): void {\r\n    // Remove the layout item for the widget.\r\n    let item = ArrayExt.removeAt(this._items, index);\r\n\r\n    // Remove the sizer for the widget.\r\n    ArrayExt.removeAt(this._sizers, index);\r\n\r\n    // Send a `'before-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    }\r\n\r\n    // Remove the widget's node from the parent.\r\n    this.parent!.node.removeChild(widget.node);\r\n\r\n    // Send an `'after-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n    }\r\n\r\n    // Dispose of the layout item.\r\n    item!.dispose();\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-show'` message.\r\n   */\r\n  protected onBeforeShow(msg: Message): void {\r\n    super.onBeforeShow(msg);\r\n    this.parent!.update();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    super.onBeforeAttach(msg);\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-shown'` message.\r\n   */\r\n  protected onChildShown(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-hidden'` message.\r\n   */\r\n  protected onChildHidden(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'resize'` message.\r\n   */\r\n  protected onResize(msg: Widget.ResizeMessage): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(msg.width, msg.height);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(-1, -1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'fit-request'` message.\r\n   */\r\n  protected onFitRequest(msg: Message): void {\r\n    if (this.parent!.isAttached) {\r\n      this._fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fit the layout to the total size required by the widgets.\r\n   */\r\n  private _fit(): void {\r\n    // Compute the visible item count.\r\n    let nVisible = 0;\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      nVisible += +!this._items[i].isHidden;\r\n    }\r\n\r\n    // Update the fixed space for the visible items.\r\n    this._fixed = this._spacing * Math.max(0, nVisible - 1);\r\n\r\n    // Setup the computed minimum size.\r\n    let horz = Private.isHorizontal(this._direction);\r\n    let minW = horz ? this._fixed : 0;\r\n    let minH = horz ? 0 : this._fixed;\r\n\r\n    // Update the sizers and computed minimum size.\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      // Fetch the item and corresponding box sizer.\r\n      let item = this._items[i];\r\n      let sizer = this._sizers[i];\r\n\r\n      // If the item is hidden, it should consume zero size.\r\n      if (item.isHidden) {\r\n        sizer.minSize = 0;\r\n        sizer.maxSize = 0;\r\n        continue;\r\n      }\r\n\r\n      // Update the size limits for the item.\r\n      item.fit();\r\n\r\n      // Update the size basis and stretch factor.\r\n      sizer.sizeHint = BoxLayout.getSizeBasis(item.widget);\r\n      sizer.stretch = BoxLayout.getStretch(item.widget);\r\n\r\n      // Update the sizer limits and computed min size.\r\n      if (horz) {\r\n        sizer.minSize = item.minWidth;\r\n        sizer.maxSize = item.maxWidth;\r\n        minW += item.minWidth;\r\n        minH = Math.max(minH, item.minHeight);\r\n      } else {\r\n        sizer.minSize = item.minHeight;\r\n        sizer.maxSize = item.maxHeight;\r\n        minH += item.minHeight;\r\n        minW = Math.max(minW, item.minWidth);\r\n      }\r\n    }\r\n\r\n    // Update the box sizing and add it to the computed min size.\r\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\r\n    minW += box.horizontalSum;\r\n    minH += box.verticalSum;\r\n\r\n    // Update the parent's min size constraints.\r\n    let style = this.parent!.node.style;\r\n    style.minWidth = `${minW}px`;\r\n    style.minHeight = `${minH}px`;\r\n\r\n    // Set the dirty flag to ensure only a single update occurs.\r\n    this._dirty = true;\r\n\r\n    // Notify the ancestor that it should fit immediately. This may\r\n    // cause a resize of the parent, fulfilling the required update.\r\n    if (this.parent!.parent) {\r\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\r\n    }\r\n\r\n    // If the dirty flag is still set, the parent was not resized.\r\n    // Trigger the required update on the parent widget immediately.\r\n    if (this._dirty) {\r\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the layout position and size of the widgets.\r\n   *\r\n   * The parent offset dimensions should be `-1` if unknown.\r\n   */\r\n  private _update(offsetWidth: number, offsetHeight: number): void {\r\n    // Clear the dirty flag to indicate the update occurred.\r\n    this._dirty = false;\r\n\r\n    // Compute the visible item count.\r\n    let nVisible = 0;\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      nVisible += +!this._items[i].isHidden;\r\n    }\r\n\r\n    // Bail early if there are no visible items to layout.\r\n    if (nVisible === 0) {\r\n      return;\r\n    }\r\n\r\n    // Measure the parent if the offset dimensions are unknown.\r\n    if (offsetWidth < 0) {\r\n      offsetWidth = this.parent!.node.offsetWidth;\r\n    }\r\n    if (offsetHeight < 0) {\r\n      offsetHeight = this.parent!.node.offsetHeight;\r\n    }\r\n\r\n    // Ensure the parent box sizing data is computed.\r\n    if (!this._box) {\r\n      this._box = ElementExt.boxSizing(this.parent!.node);\r\n    }\r\n\r\n    // Compute the layout area adjusted for border and padding.\r\n    let top = this._box.paddingTop;\r\n    let left = this._box.paddingLeft;\r\n    let width = offsetWidth - this._box.horizontalSum;\r\n    let height = offsetHeight - this._box.verticalSum;\r\n\r\n    // Distribute the layout space and adjust the start position.\r\n    let delta: number;\r\n    switch (this._direction) {\r\n      case 'left-to-right':\r\n        delta = BoxEngine.calc(this._sizers, Math.max(0, width - this._fixed));\r\n        break;\r\n      case 'top-to-bottom':\r\n        delta = BoxEngine.calc(this._sizers, Math.max(0, height - this._fixed));\r\n        break;\r\n      case 'right-to-left':\r\n        delta = BoxEngine.calc(this._sizers, Math.max(0, width - this._fixed));\r\n        left += width;\r\n        break;\r\n      case 'bottom-to-top':\r\n        delta = BoxEngine.calc(this._sizers, Math.max(0, height - this._fixed));\r\n        top += height;\r\n        break;\r\n      default:\r\n        throw 'unreachable';\r\n    }\r\n\r\n    // Setup the variables for justification and alignment offset.\r\n    let extra = 0;\r\n    let offset = 0;\r\n\r\n    // Account for alignment if there is extra layout space.\r\n    if (delta > 0) {\r\n      switch (this._alignment) {\r\n        case 'start':\r\n          break;\r\n        case 'center':\r\n          extra = 0;\r\n          offset = delta / 2;\r\n          break;\r\n        case 'end':\r\n          extra = 0;\r\n          offset = delta;\r\n          break;\r\n        case 'justify':\r\n          extra = delta / nVisible;\r\n          offset = 0;\r\n          break;\r\n        default:\r\n          throw 'unreachable';\r\n      }\r\n    }\r\n\r\n    // Layout the items using the computed box sizes.\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      // Fetch the item.\r\n      let item = this._items[i];\r\n\r\n      // Ignore hidden items.\r\n      if (item.isHidden) {\r\n        continue;\r\n      }\r\n\r\n      // Fetch the computed size for the widget.\r\n      let size = this._sizers[i].size;\r\n\r\n      // Update the widget geometry and advance the relevant edge.\r\n      switch (this._direction) {\r\n        case 'left-to-right':\r\n          item.update(left + offset, top, size + extra, height);\r\n          left += size + extra + this._spacing;\r\n          break;\r\n        case 'top-to-bottom':\r\n          item.update(left, top + offset, width, size + extra);\r\n          top += size + extra + this._spacing;\r\n          break;\r\n        case 'right-to-left':\r\n          item.update(left - offset - size - extra, top, size + extra, height);\r\n          left -= size + extra + this._spacing;\r\n          break;\r\n        case 'bottom-to-top':\r\n          item.update(left, top - offset - size - extra, width, size + extra);\r\n          top -= size + extra + this._spacing;\r\n          break;\r\n        default:\r\n          throw 'unreachable';\r\n      }\r\n    }\r\n  }\r\n\r\n  private _fixed = 0;\r\n  private _spacing = 4;\r\n  private _dirty = false;\r\n  private _sizers: BoxSizer[] = [];\r\n  private _items: LayoutItem[] = [];\r\n  private _box: ElementExt.IBoxSizing | null = null;\r\n  private _alignment: BoxLayout.Alignment = 'start';\r\n  private _direction: BoxLayout.Direction = 'top-to-bottom';\r\n}\r\n\r\n/**\r\n * The namespace for the `BoxLayout` class statics.\r\n */\r\nexport namespace BoxLayout {\r\n  /**\r\n   * A type alias for a box layout direction.\r\n   */\r\n  export type Direction =\r\n    | 'left-to-right'\r\n    | 'right-to-left'\r\n    | 'top-to-bottom'\r\n    | 'bottom-to-top';\r\n\r\n  /**\r\n   * A type alias for a box layout alignment.\r\n   */\r\n  export type Alignment = 'start' | 'center' | 'end' | 'justify';\r\n\r\n  /**\r\n   * An options object for initializing a box layout.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The direction of the layout.\r\n     *\r\n     * The default is `'top-to-bottom'`.\r\n     */\r\n    direction?: Direction;\r\n\r\n    /**\r\n     * The content alignment of the layout.\r\n     *\r\n     * The default is `'start'`.\r\n     */\r\n    alignment?: Alignment;\r\n\r\n    /**\r\n     * The spacing between items in the layout.\r\n     *\r\n     * The default is `4`.\r\n     */\r\n    spacing?: number;\r\n  }\r\n\r\n  /**\r\n   * Get the box layout stretch factor for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The box layout stretch factor for the widget.\r\n   */\r\n  export function getStretch(widget: Widget): number {\r\n    return Private.stretchProperty.get(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the box layout stretch factor for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the stretch factor.\r\n   */\r\n  export function setStretch(widget: Widget, value: number): void {\r\n    Private.stretchProperty.set(widget, value);\r\n  }\r\n\r\n  /**\r\n   * Get the box layout size basis for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The box layout size basis for the widget.\r\n   */\r\n  export function getSizeBasis(widget: Widget): number {\r\n    return Private.sizeBasisProperty.get(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the box layout size basis for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the size basis.\r\n   */\r\n  export function setSizeBasis(widget: Widget, value: number): void {\r\n    Private.sizeBasisProperty.set(widget, value);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The property descriptor for a widget stretch factor.\r\n   */\r\n  export const stretchProperty = new AttachedProperty<Widget, number>({\r\n    name: 'stretch',\r\n    create: () => 0,\r\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\r\n    changed: onChildSizingChanged\r\n  });\r\n\r\n  /**\r\n   * The property descriptor for a widget size basis.\r\n   */\r\n  export const sizeBasisProperty = new AttachedProperty<Widget, number>({\r\n    name: 'sizeBasis',\r\n    create: () => 0,\r\n    coerce: (owner, value) => Math.max(0, Math.floor(value)),\r\n    changed: onChildSizingChanged\r\n  });\r\n\r\n  /**\r\n   * Test whether a direction has horizontal orientation.\r\n   */\r\n  export function isHorizontal(dir: BoxLayout.Direction): boolean {\r\n    return dir === 'left-to-right' || dir === 'right-to-left';\r\n  }\r\n\r\n  /**\r\n   * Clamp a spacing value to an integer >= 0.\r\n   */\r\n  export function clampSpacing(value: number): number {\r\n    return Math.max(0, Math.floor(value));\r\n  }\r\n\r\n  /**\r\n   * The change handler for the attached sizing properties.\r\n   */\r\n  function onChildSizingChanged(child: Widget): void {\r\n    if (child.parent && child.parent.layout instanceof BoxLayout) {\r\n      child.parent.fit();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { BoxLayout } from './boxlayout';\r\n\r\nimport { Panel } from './panel';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A panel which arranges its widgets in a single row or column.\r\n *\r\n * #### Notes\r\n * This class provides a convenience wrapper around a [[BoxLayout]].\r\n */\r\nexport class BoxPanel extends Panel {\r\n  /**\r\n   * Construct a new box panel.\r\n   *\r\n   * @param options - The options for initializing the box panel.\r\n   */\r\n  constructor(options: BoxPanel.IOptions = {}) {\r\n    super({ layout: Private.createLayout(options) });\r\n    this.addClass('lm-BoxPanel');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-BoxPanel');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * Get the layout direction for the box panel.\r\n   */\r\n  get direction(): BoxPanel.Direction {\r\n    return (this.layout as BoxLayout).direction;\r\n  }\r\n\r\n  /**\r\n   * Set the layout direction for the box panel.\r\n   */\r\n  set direction(value: BoxPanel.Direction) {\r\n    (this.layout as BoxLayout).direction = value;\r\n  }\r\n\r\n  /**\r\n   * Get the content alignment for the box panel.\r\n   *\r\n   * #### Notes\r\n   * This is the alignment of the widgets in the layout direction.\r\n   *\r\n   * The alignment has no effect if the widgets can expand to fill the\r\n   * entire box layout.\r\n   */\r\n  get alignment(): BoxPanel.Alignment {\r\n    return (this.layout as BoxLayout).alignment;\r\n  }\r\n\r\n  /**\r\n   * Set the content alignment for the box panel.\r\n   *\r\n   * #### Notes\r\n   * This is the alignment of the widgets in the layout direction.\r\n   *\r\n   * The alignment has no effect if the widgets can expand to fill the\r\n   * entire box layout.\r\n   */\r\n  set alignment(value: BoxPanel.Alignment) {\r\n    (this.layout as BoxLayout).alignment = value;\r\n  }\r\n\r\n  /**\r\n   * Get the inter-element spacing for the box panel.\r\n   */\r\n  get spacing(): number {\r\n    return (this.layout as BoxLayout).spacing;\r\n  }\r\n\r\n  /**\r\n   * Set the inter-element spacing for the box panel.\r\n   */\r\n  set spacing(value: number) {\r\n    (this.layout as BoxLayout).spacing = value;\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-added'` message.\r\n   */\r\n  protected onChildAdded(msg: Widget.ChildMessage): void {\r\n    msg.child.addClass('lm-BoxPanel-child');\r\n    /* <DEPRECATED> */\r\n    msg.child.addClass('p-BoxPanel-child');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-removed'` message.\r\n   */\r\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\r\n    msg.child.removeClass('lm-BoxPanel-child');\r\n    /* <DEPRECATED> */\r\n    msg.child.removeClass('p-BoxPanel-child');\r\n    /* </DEPRECATED> */\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the `BoxPanel` class statics.\r\n */\r\nexport namespace BoxPanel {\r\n  /**\r\n   * A type alias for a box panel direction.\r\n   */\r\n  export type Direction = BoxLayout.Direction;\r\n\r\n  /**\r\n   * A type alias for a box panel alignment.\r\n   */\r\n  export type Alignment = BoxLayout.Alignment;\r\n\r\n  /**\r\n   * An options object for initializing a box panel.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The layout direction of the panel.\r\n     *\r\n     * The default is `'top-to-bottom'`.\r\n     */\r\n    direction?: Direction;\r\n\r\n    /**\r\n     * The content alignment of the panel.\r\n     *\r\n     * The default is `'start'`.\r\n     */\r\n    alignment?: Alignment;\r\n\r\n    /**\r\n     * The spacing between items in the panel.\r\n     *\r\n     * The default is `4`.\r\n     */\r\n    spacing?: number;\r\n\r\n    /**\r\n     * The box layout to use for the box panel.\r\n     *\r\n     * If this is provided, the other options are ignored.\r\n     *\r\n     * The default is a new `BoxLayout`.\r\n     */\r\n    layout?: BoxLayout;\r\n  }\r\n\r\n  /**\r\n   * Get the box panel stretch factor for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The box panel stretch factor for the widget.\r\n   */\r\n  export function getStretch(widget: Widget): number {\r\n    return BoxLayout.getStretch(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the box panel stretch factor for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the stretch factor.\r\n   */\r\n  export function setStretch(widget: Widget, value: number): void {\r\n    BoxLayout.setStretch(widget, value);\r\n  }\r\n\r\n  /**\r\n   * Get the box panel size basis for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The box panel size basis for the widget.\r\n   */\r\n  export function getSizeBasis(widget: Widget): number {\r\n    return BoxLayout.getSizeBasis(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the box panel size basis for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the size basis.\r\n   */\r\n  export function setSizeBasis(widget: Widget, value: number): void {\r\n    BoxLayout.setSizeBasis(widget, value);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Create a box layout for the given panel options.\r\n   */\r\n  export function createLayout(options: BoxPanel.IOptions): BoxLayout {\r\n    return options.layout || new BoxLayout(options);\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, StringExt } from '@lumino/algorithm';\r\n\r\nimport { JSONExt, ReadonlyJSONObject } from '@lumino/coreutils';\r\n\r\nimport { CommandRegistry } from '@lumino/commands';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Message } from '@lumino/messaging';\r\n\r\nimport {\r\n  ElementDataset,\r\n  h,\r\n  VirtualDOM,\r\n  VirtualElement\r\n} from '@lumino/virtualdom';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A widget which displays command items as a searchable palette.\r\n */\r\nexport class CommandPalette extends Widget {\r\n  /**\r\n   * Construct a new command palette.\r\n   *\r\n   * @param options - The options for initializing the palette.\r\n   */\r\n  constructor(options: CommandPalette.IOptions) {\r\n    super({ node: Private.createNode() });\r\n    this.addClass('lm-CommandPalette');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-CommandPalette');\r\n    /* </DEPRECATED> */\r\n    this.setFlag(Widget.Flag.DisallowLayout);\r\n    this.commands = options.commands;\r\n    this.renderer = options.renderer || CommandPalette.defaultRenderer;\r\n    this.commands.commandChanged.connect(this._onGenericChange, this);\r\n    this.commands.keyBindingChanged.connect(this._onGenericChange, this);\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the widget.\r\n   */\r\n  dispose(): void {\r\n    this._items.length = 0;\r\n    this._results = null;\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * The command registry used by the command palette.\r\n   */\r\n  readonly commands: CommandRegistry;\r\n\r\n  /**\r\n   * The renderer used by the command palette.\r\n   */\r\n  readonly renderer: CommandPalette.IRenderer;\r\n\r\n  /**\r\n   * The command palette search node.\r\n   *\r\n   * #### Notes\r\n   * This is the node which contains the search-related elements.\r\n   */\r\n  get searchNode(): HTMLDivElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-CommandPalette-search'\r\n    )[0] as HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * The command palette input node.\r\n   *\r\n   * #### Notes\r\n   * This is the actual input node for the search area.\r\n   */\r\n  get inputNode(): HTMLInputElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-CommandPalette-input'\r\n    )[0] as HTMLInputElement;\r\n  }\r\n\r\n  /**\r\n   * The command palette content node.\r\n   *\r\n   * #### Notes\r\n   * This is the node which holds the command item nodes.\r\n   *\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get contentNode(): HTMLUListElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-CommandPalette-content'\r\n    )[0] as HTMLUListElement;\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the command items in the palette.\r\n   */\r\n  get items(): ReadonlyArray<CommandPalette.IItem> {\r\n    return this._items;\r\n  }\r\n\r\n  /**\r\n   * Add a command item to the command palette.\r\n   *\r\n   * @param options - The options for creating the command item.\r\n   *\r\n   * @returns The command item added to the palette.\r\n   */\r\n  addItem(options: CommandPalette.IItemOptions): CommandPalette.IItem {\r\n    // Create a new command item for the options.\r\n    let item = Private.createItem(this.commands, options);\r\n\r\n    // Add the item to the array.\r\n    this._items.push(item);\r\n\r\n    // Refresh the search results.\r\n    this.refresh();\r\n\r\n    // Return the item added to the palette.\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * Adds command items to the command palette.\r\n   *\r\n   * @param items - An array of options for creating each command item.\r\n   *\r\n   * @returns The command items added to the palette.\r\n   */\r\n  addItems(items: CommandPalette.IItemOptions[]): CommandPalette.IItem[] {\r\n    const newItems = items.map(item => Private.createItem(this.commands, item));\r\n    newItems.forEach(item => this._items.push(item));\r\n    this.refresh();\r\n    return newItems;\r\n  }\r\n\r\n  /**\r\n   * Remove an item from the command palette.\r\n   *\r\n   * @param item - The item to remove from the palette.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the item is not in the palette.\r\n   */\r\n  removeItem(item: CommandPalette.IItem): void {\r\n    this.removeItemAt(this._items.indexOf(item));\r\n  }\r\n\r\n  /**\r\n   * Remove the item at a given index from the command palette.\r\n   *\r\n   * @param index - The index of the item to remove.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the index is out of range.\r\n   */\r\n  removeItemAt(index: number): void {\r\n    // Remove the item from the array.\r\n    let item = ArrayExt.removeAt(this._items, index);\r\n\r\n    // Bail if the index is out of range.\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    // Refresh the search results.\r\n    this.refresh();\r\n  }\r\n\r\n  /**\r\n   * Remove all items from the command palette.\r\n   */\r\n  clearItems(): void {\r\n    // Bail if there is nothing to remove.\r\n    if (this._items.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Clear the array of items.\r\n    this._items.length = 0;\r\n\r\n    // Refresh the search results.\r\n    this.refresh();\r\n  }\r\n\r\n  /**\r\n   * Clear the search results and schedule an update.\r\n   *\r\n   * #### Notes\r\n   * This should be called whenever the search results of the palette\r\n   * should be updated.\r\n   *\r\n   * This is typically called automatically by the palette as needed,\r\n   * but can be called manually if the input text is programatically\r\n   * changed.\r\n   *\r\n   * The rendered results are updated asynchronously.\r\n   */\r\n  refresh(): void {\r\n    this._results = null;\r\n    if (this.inputNode.value !== '') {\r\n      let clear = this.node.getElementsByClassName(\r\n        'lm-close-icon'\r\n      )[0] as HTMLInputElement;\r\n      clear.style.display = 'inherit';\r\n    } else {\r\n      let clear = this.node.getElementsByClassName(\r\n        'lm-close-icon'\r\n      )[0] as HTMLInputElement;\r\n      clear.style.display = 'none';\r\n    }\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the command palette.\r\n   *\r\n   * @param event - The DOM event sent to the command palette.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the command palette's DOM node.\r\n   * It should not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'click':\r\n        this._evtClick(event as MouseEvent);\r\n        break;\r\n      case 'keydown':\r\n        this._evtKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'input':\r\n        this.refresh();\r\n        break;\r\n      case 'focus':\r\n      case 'blur':\r\n        this._toggleFocused();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('click', this);\r\n    this.node.addEventListener('keydown', this);\r\n    this.node.addEventListener('input', this);\r\n    this.node.addEventListener('focus', this, true);\r\n    this.node.addEventListener('blur', this, true);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    this.node.removeEventListener('click', this);\r\n    this.node.removeEventListener('keydown', this);\r\n    this.node.removeEventListener('input', this);\r\n    this.node.removeEventListener('focus', this, true);\r\n    this.node.removeEventListener('blur', this, true);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'activate-request'` message.\r\n   */\r\n  protected onActivateRequest(msg: Message): void {\r\n    if (this.isAttached) {\r\n      let input = this.inputNode;\r\n      input.focus();\r\n      input.select();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    // Fetch the current query text and content node.\r\n    let query = this.inputNode.value;\r\n    let contentNode = this.contentNode;\r\n\r\n    // Ensure the search results are generated.\r\n    let results = this._results;\r\n    if (!results) {\r\n      // Generate and store the new search results.\r\n      results = this._results = Private.search(this._items, query);\r\n\r\n      // Reset the active index.\r\n      this._activeIndex = query\r\n        ? ArrayExt.findFirstIndex(results, Private.canActivate)\r\n        : -1;\r\n    }\r\n\r\n    // If there is no query and no results, clear the content.\r\n    if (!query && results.length === 0) {\r\n      VirtualDOM.render(null, contentNode);\r\n      return;\r\n    }\r\n\r\n    // If the is a query but no results, render the empty message.\r\n    if (query && results.length === 0) {\r\n      let content = this.renderer.renderEmptyMessage({ query });\r\n      VirtualDOM.render(content, contentNode);\r\n      return;\r\n    }\r\n\r\n    // Create the render content for the search results.\r\n    let renderer = this.renderer;\r\n    let activeIndex = this._activeIndex;\r\n    let content = new Array<VirtualElement>(results.length);\r\n    for (let i = 0, n = results.length; i < n; ++i) {\r\n      let result = results[i];\r\n      if (result.type === 'header') {\r\n        let indices = result.indices;\r\n        let category = result.category;\r\n        content[i] = renderer.renderHeader({ category, indices });\r\n      } else {\r\n        let item = result.item;\r\n        let indices = result.indices;\r\n        let active = i === activeIndex;\r\n        content[i] = renderer.renderItem({ item, indices, active });\r\n      }\r\n    }\r\n\r\n    // Render the search result content.\r\n    VirtualDOM.render(content, contentNode);\r\n\r\n    // Adjust the scroll position as needed.\r\n    if (activeIndex < 0 || activeIndex >= results.length) {\r\n      contentNode.scrollTop = 0;\r\n    } else {\r\n      let element = contentNode.children[activeIndex];\r\n      ElementExt.scrollIntoViewIfNeeded(contentNode, element);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'click'` event for the command palette.\r\n   */\r\n  private _evtClick(event: MouseEvent): void {\r\n    // Bail if the click is not the left button.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Clear input if the target is clear button\r\n    if ((event.target as HTMLElement).classList.contains('lm-close-icon')) {\r\n      this.inputNode.value = '';\r\n      this.refresh();\r\n      return;\r\n    }\r\n\r\n    // Find the index of the item which was clicked.\r\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\r\n      return node.contains(event.target as HTMLElement);\r\n    });\r\n\r\n    // Bail if the click was not on an item.\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    // Kill the event when a content item is clicked.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Execute the item if possible.\r\n    this._execute(index);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the command palette.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n      return;\r\n    }\r\n    switch (event.keyCode) {\r\n      case 13: // Enter\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this._execute(this._activeIndex);\r\n        break;\r\n      case 38: // Up Arrow\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this._activatePreviousItem();\r\n        break;\r\n      case 40: // Down Arrow\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this._activateNextItem();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Activate the next enabled command item.\r\n   */\r\n  private _activateNextItem(): void {\r\n    // Bail if there are no search results.\r\n    if (!this._results || this._results.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Find the next enabled item index.\r\n    let ai = this._activeIndex;\r\n    let n = this._results.length;\r\n    let start = ai < n - 1 ? ai + 1 : 0;\r\n    let stop = start === 0 ? n - 1 : start - 1;\r\n    this._activeIndex = ArrayExt.findFirstIndex(\r\n      this._results,\r\n      Private.canActivate,\r\n      start,\r\n      stop\r\n    );\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Activate the previous enabled command item.\r\n   */\r\n  private _activatePreviousItem(): void {\r\n    // Bail if there are no search results.\r\n    if (!this._results || this._results.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Find the previous enabled item index.\r\n    let ai = this._activeIndex;\r\n    let n = this._results.length;\r\n    let start = ai <= 0 ? n - 1 : ai - 1;\r\n    let stop = start === n - 1 ? 0 : start + 1;\r\n    this._activeIndex = ArrayExt.findLastIndex(\r\n      this._results,\r\n      Private.canActivate,\r\n      start,\r\n      stop\r\n    );\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Execute the command item at the given index, if possible.\r\n   */\r\n  private _execute(index: number): void {\r\n    // Bail if there are no search results.\r\n    if (!this._results) {\r\n      return;\r\n    }\r\n\r\n    // Bail if the index is out of range.\r\n    let part = this._results[index];\r\n    if (!part) {\r\n      return;\r\n    }\r\n\r\n    // Update the search text if the item is a header.\r\n    if (part.type === 'header') {\r\n      let input = this.inputNode;\r\n      input.value = `${part.category.toLowerCase()} `;\r\n      input.focus();\r\n      this.refresh();\r\n      return;\r\n    }\r\n\r\n    // Bail if item is not enabled.\r\n    if (!part.item.isEnabled) {\r\n      return;\r\n    }\r\n\r\n    // Execute the item.\r\n    this.commands.execute(part.item.command, part.item.args);\r\n\r\n    // Clear the query text.\r\n    this.inputNode.value = '';\r\n\r\n    // Refresh the search results.\r\n    this.refresh();\r\n  }\r\n\r\n  /**\r\n   * Toggle the focused modifier based on the input node focus state.\r\n   */\r\n  private _toggleFocused(): void {\r\n    let focused = document.activeElement === this.inputNode;\r\n    this.toggleClass('lm-mod-focused', focused);\r\n    /* <DEPRECATED> */\r\n    this.toggleClass('p-mod-focused', focused);\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * A signal handler for generic command changes.\r\n   */\r\n  private _onGenericChange(): void {\r\n    this.refresh();\r\n  }\r\n\r\n  private _activeIndex = -1;\r\n  private _items: CommandPalette.IItem[] = [];\r\n  private _results: Private.SearchResult[] | null = null;\r\n}\r\n\r\n/**\r\n * The namespace for the `CommandPalette` class statics.\r\n */\r\nexport namespace CommandPalette {\r\n  /**\r\n   * An options object for creating a command palette.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The command registry for use with the command palette.\r\n     */\r\n    commands: CommandRegistry;\r\n\r\n    /**\r\n     * A custom renderer for use with the command palette.\r\n     *\r\n     * The default is a shared renderer instance.\r\n     */\r\n    renderer?: IRenderer;\r\n  }\r\n\r\n  /**\r\n   * An options object for creating a command item.\r\n   */\r\n  export interface IItemOptions {\r\n    /**\r\n     * The category for the item.\r\n     */\r\n    category: string;\r\n\r\n    /**\r\n     * The command to execute when the item is triggered.\r\n     */\r\n    command: string;\r\n\r\n    /**\r\n     * The arguments for the command.\r\n     *\r\n     * The default value is an empty object.\r\n     */\r\n    args?: ReadonlyJSONObject;\r\n\r\n    /**\r\n     * The rank for the command item.\r\n     *\r\n     * The rank is used as a tie-breaker when ordering command items\r\n     * for display. Items are sorted in the following order:\r\n     *   1. Text match (lower is better)\r\n     *   2. Category (locale order)\r\n     *   3. Rank (lower is better)\r\n     *   4. Label (locale order)\r\n     *\r\n     * The default rank is `Infinity`.\r\n     */\r\n    rank?: number;\r\n  }\r\n\r\n  /**\r\n   * An object which represents an item in a command palette.\r\n   *\r\n   * #### Notes\r\n   * Item objects are created automatically by a command palette.\r\n   */\r\n  export interface IItem {\r\n    /**\r\n     * The command to execute when the item is triggered.\r\n     */\r\n    readonly command: string;\r\n\r\n    /**\r\n     * The arguments for the command.\r\n     */\r\n    readonly args: ReadonlyJSONObject;\r\n\r\n    /**\r\n     * The category for the command item.\r\n     */\r\n    readonly category: string;\r\n\r\n    /**\r\n     * The rank for the command item.\r\n     */\r\n    readonly rank: number;\r\n\r\n    /**\r\n     * The display label for the command item.\r\n     */\r\n    readonly label: string;\r\n\r\n    /**\r\n     * The display caption for the command item.\r\n     */\r\n    readonly caption: string;\r\n\r\n    /**\r\n     * The icon renderer for the command item.\r\n     */\r\n    readonly icon:\r\n      | VirtualElement.IRenderer\r\n      | undefined\r\n      /* <DEPRECATED> */\r\n      | string /* </DEPRECATED> */;\r\n\r\n    /**\r\n     * The icon class for the command item.\r\n     */\r\n    readonly iconClass: string;\r\n\r\n    /**\r\n     * The icon label for the command item.\r\n     */\r\n    readonly iconLabel: string;\r\n\r\n    /**\r\n     * The extra class name for the command item.\r\n     */\r\n    readonly className: string;\r\n\r\n    /**\r\n     * The dataset for the command item.\r\n     */\r\n    readonly dataset: CommandRegistry.Dataset;\r\n\r\n    /**\r\n     * Whether the command item is enabled.\r\n     */\r\n    readonly isEnabled: boolean;\r\n\r\n    /**\r\n     * Whether the command item is toggled.\r\n     */\r\n    readonly isToggled: boolean;\r\n\r\n    /**\r\n     * Whether the command item is toggleable.\r\n     */\r\n    readonly isToggleable: boolean;\r\n\r\n    /**\r\n     * Whether the command item is visible.\r\n     */\r\n    readonly isVisible: boolean;\r\n\r\n    /**\r\n     * The key binding for the command item.\r\n     */\r\n    readonly keyBinding: CommandRegistry.IKeyBinding | null;\r\n  }\r\n\r\n  /**\r\n   * The render data for a command palette header.\r\n   */\r\n  export interface IHeaderRenderData {\r\n    /**\r\n     * The category of the header.\r\n     */\r\n    readonly category: string;\r\n\r\n    /**\r\n     * The indices of the matched characters in the category.\r\n     */\r\n    readonly indices: ReadonlyArray<number> | null;\r\n  }\r\n\r\n  /**\r\n   * The render data for a command palette item.\r\n   */\r\n  export interface IItemRenderData {\r\n    /**\r\n     * The command palette item to render.\r\n     */\r\n    readonly item: IItem;\r\n\r\n    /**\r\n     * The indices of the matched characters in the label.\r\n     */\r\n    readonly indices: ReadonlyArray<number> | null;\r\n\r\n    /**\r\n     * Whether the item is the active item.\r\n     */\r\n    readonly active: boolean;\r\n  }\r\n\r\n  /**\r\n   * The render data for a command palette empty message.\r\n   */\r\n  export interface IEmptyMessageRenderData {\r\n    /**\r\n     * The query which failed to match any commands.\r\n     */\r\n    query: string;\r\n  }\r\n\r\n  /**\r\n   * A renderer for use with a command palette.\r\n   */\r\n  export interface IRenderer {\r\n    /**\r\n     * Render the virtual element for a command palette header.\r\n     *\r\n     * @param data - The data to use for rendering the header.\r\n     *\r\n     * @returns A virtual element representing the header.\r\n     */\r\n    renderHeader(data: IHeaderRenderData): VirtualElement;\r\n\r\n    /**\r\n     * Render the virtual element for a command palette item.\r\n     *\r\n     * @param data - The data to use for rendering the item.\r\n     *\r\n     * @returns A virtual element representing the item.\r\n     *\r\n     * #### Notes\r\n     * The command palette will not render invisible items.\r\n     */\r\n    renderItem(data: IItemRenderData): VirtualElement;\r\n\r\n    /**\r\n     * Render the empty results message for a command palette.\r\n     *\r\n     * @param data - The data to use for rendering the message.\r\n     *\r\n     * @returns A virtual element representing the message.\r\n     */\r\n    renderEmptyMessage(data: IEmptyMessageRenderData): VirtualElement;\r\n  }\r\n\r\n  /**\r\n   * The default implementation of `IRenderer`.\r\n   */\r\n  export class Renderer implements IRenderer {\r\n    /**\r\n     * Render the virtual element for a command palette header.\r\n     *\r\n     * @param data - The data to use for rendering the header.\r\n     *\r\n     * @returns A virtual element representing the header.\r\n     */\r\n    renderHeader(data: IHeaderRenderData): VirtualElement {\r\n      let content = this.formatHeader(data);\r\n      return h.li(\r\n        {\r\n          className:\r\n            'lm-CommandPalette-header' +\r\n            /* <DEPRECATED> */\r\n            ' p-CommandPalette-header'\r\n          /* </DEPRECATED> */\r\n        },\r\n        content\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the virtual element for a command palette item.\r\n     *\r\n     * @param data - The data to use for rendering the item.\r\n     *\r\n     * @returns A virtual element representing the item.\r\n     */\r\n    renderItem(data: IItemRenderData): VirtualElement {\r\n      let className = this.createItemClass(data);\r\n      let dataset = this.createItemDataset(data);\r\n      if (data.item.isToggleable) {\r\n        return h.li(\r\n          {\r\n            className,\r\n            dataset,\r\n            role: 'checkbox',\r\n            'aria-checked': `${data.item.isToggled}`\r\n          },\r\n          this.renderItemIcon(data),\r\n          this.renderItemContent(data),\r\n          this.renderItemShortcut(data)\r\n        );\r\n      }\r\n      return h.li(\r\n        {\r\n          className,\r\n          dataset\r\n        },\r\n        this.renderItemIcon(data),\r\n        this.renderItemContent(data),\r\n        this.renderItemShortcut(data)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the empty results message for a command palette.\r\n     *\r\n     * @param data - The data to use for rendering the message.\r\n     *\r\n     * @returns A virtual element representing the message.\r\n     */\r\n    renderEmptyMessage(data: IEmptyMessageRenderData): VirtualElement {\r\n      let content = this.formatEmptyMessage(data);\r\n      return h.li(\r\n        {\r\n          className:\r\n            'lm-CommandPalette-emptyMessage' +\r\n            /* <DEPRECATED> */\r\n            ' p-CommandPalette-emptyMessage'\r\n          /* </DEPRECATED> */\r\n        },\r\n        content\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the icon for a command palette item.\r\n     *\r\n     * @param data - The data to use for rendering the icon.\r\n     *\r\n     * @returns A virtual element representing the icon.\r\n     */\r\n    renderItemIcon(data: IItemRenderData): VirtualElement {\r\n      let className = this.createIconClass(data);\r\n\r\n      /* <DEPRECATED> */\r\n      if (typeof data.item.icon === 'string') {\r\n        return h.div({ className }, data.item.iconLabel);\r\n      }\r\n      /* </DEPRECATED> */\r\n\r\n      // if data.item.icon is undefined, it will be ignored\r\n      return h.div({ className }, data.item.icon!, data.item.iconLabel);\r\n    }\r\n\r\n    /**\r\n     * Render the content for a command palette item.\r\n     *\r\n     * @param data - The data to use for rendering the content.\r\n     *\r\n     * @returns A virtual element representing the content.\r\n     */\r\n    renderItemContent(data: IItemRenderData): VirtualElement {\r\n      return h.div(\r\n        {\r\n          className:\r\n            'lm-CommandPalette-itemContent' +\r\n            /* <DEPRECATED> */\r\n            ' p-CommandPalette-itemContent'\r\n          /* </DEPRECATED> */\r\n        },\r\n        this.renderItemLabel(data),\r\n        this.renderItemCaption(data)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the label for a command palette item.\r\n     *\r\n     * @param data - The data to use for rendering the label.\r\n     *\r\n     * @returns A virtual element representing the label.\r\n     */\r\n    renderItemLabel(data: IItemRenderData): VirtualElement {\r\n      let content = this.formatItemLabel(data);\r\n      return h.div(\r\n        {\r\n          className:\r\n            'lm-CommandPalette-itemLabel' +\r\n            /* <DEPRECATED> */\r\n            ' p-CommandPalette-itemLabel'\r\n          /* </DEPRECATED> */\r\n        },\r\n        content\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the caption for a command palette item.\r\n     *\r\n     * @param data - The data to use for rendering the caption.\r\n     *\r\n     * @returns A virtual element representing the caption.\r\n     */\r\n    renderItemCaption(data: IItemRenderData): VirtualElement {\r\n      let content = this.formatItemCaption(data);\r\n      return h.div(\r\n        {\r\n          className:\r\n            'lm-CommandPalette-itemCaption' +\r\n            /* <DEPRECATED> */\r\n            ' p-CommandPalette-itemCaption'\r\n          /* </DEPRECATED> */\r\n        },\r\n        content\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the shortcut for a command palette item.\r\n     *\r\n     * @param data - The data to use for rendering the shortcut.\r\n     *\r\n     * @returns A virtual element representing the shortcut.\r\n     */\r\n    renderItemShortcut(data: IItemRenderData): VirtualElement {\r\n      let content = this.formatItemShortcut(data);\r\n      return h.div(\r\n        {\r\n          className:\r\n            'lm-CommandPalette-itemShortcut' +\r\n            /* <DEPRECATED> */\r\n            ' p-CommandPalette-itemShortcut'\r\n          /* </DEPRECATED> */\r\n        },\r\n        content\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Create the class name for the command palette item.\r\n     *\r\n     * @param data - The data to use for the class name.\r\n     *\r\n     * @returns The full class name for the command palette item.\r\n     */\r\n    createItemClass(data: IItemRenderData): string {\r\n      // Set up the initial class name.\r\n      let name = 'lm-CommandPalette-item';\r\n      /* <DEPRECATED> */\r\n      name += ' p-CommandPalette-item';\r\n      /* </DEPRECATED> */\r\n\r\n      // Add the boolean state classes.\r\n      if (!data.item.isEnabled) {\r\n        name += ' lm-mod-disabled';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-disabled';\r\n        /* </DEPRECATED> */\r\n      }\r\n      if (data.item.isToggled) {\r\n        name += ' lm-mod-toggled';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-toggled';\r\n        /* </DEPRECATED> */\r\n      }\r\n      if (data.active) {\r\n        name += ' lm-mod-active';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-active';\r\n        /* </DEPRECATED> */\r\n      }\r\n\r\n      // Add the extra class.\r\n      let extra = data.item.className;\r\n      if (extra) {\r\n        name += ` ${extra}`;\r\n      }\r\n\r\n      // Return the complete class name.\r\n      return name;\r\n    }\r\n\r\n    /**\r\n     * Create the dataset for the command palette item.\r\n     *\r\n     * @param data - The data to use for creating the dataset.\r\n     *\r\n     * @returns The dataset for the command palette item.\r\n     */\r\n    createItemDataset(data: IItemRenderData): ElementDataset {\r\n      return { ...data.item.dataset, command: data.item.command };\r\n    }\r\n\r\n    /**\r\n     * Create the class name for the command item icon.\r\n     *\r\n     * @param data - The data to use for the class name.\r\n     *\r\n     * @returns The full class name for the item icon.\r\n     */\r\n    createIconClass(data: IItemRenderData): string {\r\n      let name = 'lm-CommandPalette-itemIcon';\r\n      /* <DEPRECATED> */\r\n      name += ' p-CommandPalette-itemIcon';\r\n      /* </DEPRECATED> */\r\n      let extra = data.item.iconClass;\r\n      return extra ? `${name} ${extra}` : name;\r\n    }\r\n\r\n    /**\r\n     * Create the render content for the header node.\r\n     *\r\n     * @param data - The data to use for the header content.\r\n     *\r\n     * @returns The content to add to the header node.\r\n     */\r\n    formatHeader(data: IHeaderRenderData): h.Child {\r\n      if (!data.indices || data.indices.length === 0) {\r\n        return data.category;\r\n      }\r\n      return StringExt.highlight(data.category, data.indices, h.mark);\r\n    }\r\n\r\n    /**\r\n     * Create the render content for the empty message node.\r\n     *\r\n     * @param data - The data to use for the empty message content.\r\n     *\r\n     * @returns The content to add to the empty message node.\r\n     */\r\n    formatEmptyMessage(data: IEmptyMessageRenderData): h.Child {\r\n      return `No commands found that match '${data.query}'`;\r\n    }\r\n\r\n    /**\r\n     * Create the render content for the item shortcut node.\r\n     *\r\n     * @param data - The data to use for the shortcut content.\r\n     *\r\n     * @returns The content to add to the shortcut node.\r\n     */\r\n    formatItemShortcut(data: IItemRenderData): h.Child {\r\n      let kb = data.item.keyBinding;\r\n      return kb\r\n        ? kb.keys.map(CommandRegistry.formatKeystroke).join(', ')\r\n        : null;\r\n    }\r\n\r\n    /**\r\n     * Create the render content for the item label node.\r\n     *\r\n     * @param data - The data to use for the label content.\r\n     *\r\n     * @returns The content to add to the label node.\r\n     */\r\n    formatItemLabel(data: IItemRenderData): h.Child {\r\n      if (!data.indices || data.indices.length === 0) {\r\n        return data.item.label;\r\n      }\r\n      return StringExt.highlight(data.item.label, data.indices, h.mark);\r\n    }\r\n\r\n    /**\r\n     * Create the render content for the item caption node.\r\n     *\r\n     * @param data - The data to use for the caption content.\r\n     *\r\n     * @returns The content to add to the caption node.\r\n     */\r\n    formatItemCaption(data: IItemRenderData): h.Child {\r\n      return data.item.caption;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The default `Renderer` instance.\r\n   */\r\n  export const defaultRenderer = new Renderer();\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Create the DOM node for a command palette.\r\n   */\r\n  export function createNode(): HTMLDivElement {\r\n    let node = document.createElement('div');\r\n    let search = document.createElement('div');\r\n    let wrapper = document.createElement('div');\r\n    let input = document.createElement('input');\r\n    let content = document.createElement('ul');\r\n    let clear = document.createElement('button');\r\n    search.className = 'lm-CommandPalette-search';\r\n    wrapper.className = 'lm-CommandPalette-wrapper';\r\n    input.className = 'lm-CommandPalette-input';\r\n    clear.className = 'lm-close-icon';\r\n\r\n    content.className = 'lm-CommandPalette-content';\r\n    /* <DEPRECATED> */\r\n    search.classList.add('p-CommandPalette-search');\r\n    wrapper.classList.add('p-CommandPalette-wrapper');\r\n    input.classList.add('p-CommandPalette-input');\r\n    content.classList.add('p-CommandPalette-content');\r\n    /* </DEPRECATED> */\r\n    input.spellcheck = false;\r\n    wrapper.appendChild(input);\r\n    wrapper.appendChild(clear);\r\n    search.appendChild(wrapper);\r\n    node.appendChild(search);\r\n    node.appendChild(content);\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Create a new command item from a command registry and options.\r\n   */\r\n  export function createItem(\r\n    commands: CommandRegistry,\r\n    options: CommandPalette.IItemOptions\r\n  ): CommandPalette.IItem {\r\n    return new CommandItem(commands, options);\r\n  }\r\n\r\n  /**\r\n   * A search result object for a header label.\r\n   */\r\n  export interface IHeaderResult {\r\n    /**\r\n     * The discriminated type of the object.\r\n     */\r\n    readonly type: 'header';\r\n\r\n    /**\r\n     * The category for the header.\r\n     */\r\n    readonly category: string;\r\n\r\n    /**\r\n     * The indices of the matched category characters.\r\n     */\r\n    readonly indices: ReadonlyArray<number> | null;\r\n  }\r\n\r\n  /**\r\n   * A search result object for a command item.\r\n   */\r\n  export interface IItemResult {\r\n    /**\r\n     * The discriminated type of the object.\r\n     */\r\n    readonly type: 'item';\r\n\r\n    /**\r\n     * The command item which was matched.\r\n     */\r\n    readonly item: CommandPalette.IItem;\r\n\r\n    /**\r\n     * The indices of the matched label characters.\r\n     */\r\n    readonly indices: ReadonlyArray<number> | null;\r\n  }\r\n\r\n  /**\r\n   * A type alias for a search result item.\r\n   */\r\n  export type SearchResult = IHeaderResult | IItemResult;\r\n\r\n  /**\r\n   * Search an array of command items for fuzzy matches.\r\n   */\r\n  export function search(\r\n    items: CommandPalette.IItem[],\r\n    query: string\r\n  ): SearchResult[] {\r\n    // Fuzzy match the items for the query.\r\n    let scores = matchItems(items, query);\r\n\r\n    // Sort the items based on their score.\r\n    scores.sort(scoreCmp);\r\n\r\n    // Create the results for the search.\r\n    return createResults(scores);\r\n  }\r\n\r\n  /**\r\n   * Test whether a result item can be activated.\r\n   */\r\n  export function canActivate(result: SearchResult): boolean {\r\n    return result.type === 'item' && result.item.isEnabled;\r\n  }\r\n\r\n  /**\r\n   * Normalize a category for a command item.\r\n   */\r\n  function normalizeCategory(category: string): string {\r\n    return category.trim().replace(/\\s+/g, ' ');\r\n  }\r\n\r\n  /**\r\n   * Normalize the query text for a fuzzy search.\r\n   */\r\n  function normalizeQuery(text: string): string {\r\n    return text.replace(/\\s+/g, '').toLowerCase();\r\n  }\r\n\r\n  /**\r\n   * An enum of the supported match types.\r\n   */\r\n  const enum MatchType {\r\n    Label,\r\n    Category,\r\n    Split,\r\n    Default\r\n  }\r\n\r\n  /**\r\n   * A text match score with associated command item.\r\n   */\r\n  interface IScore {\r\n    /**\r\n     * The numerical type for the text match.\r\n     */\r\n    matchType: MatchType;\r\n\r\n    /**\r\n     * The numerical score for the text match.\r\n     */\r\n    score: number;\r\n\r\n    /**\r\n     * The indices of the matched category characters.\r\n     */\r\n    categoryIndices: number[] | null;\r\n\r\n    /**\r\n     * The indices of the matched label characters.\r\n     */\r\n    labelIndices: number[] | null;\r\n\r\n    /**\r\n     * The command item associated with the match.\r\n     */\r\n    item: CommandPalette.IItem;\r\n  }\r\n\r\n  /**\r\n   * Perform a fuzzy match on an array of command items.\r\n   */\r\n  function matchItems(items: CommandPalette.IItem[], query: string): IScore[] {\r\n    // Normalize the query text to lower case with no whitespace.\r\n    query = normalizeQuery(query);\r\n\r\n    // Create the array to hold the scores.\r\n    let scores: IScore[] = [];\r\n\r\n    // Iterate over the items and match against the query.\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      // Ignore items which are not visible.\r\n      let item = items[i];\r\n      if (!item.isVisible) {\r\n        continue;\r\n      }\r\n\r\n      // If the query is empty, all items are matched by default.\r\n      if (!query) {\r\n        scores.push({\r\n          matchType: MatchType.Default,\r\n          categoryIndices: null,\r\n          labelIndices: null,\r\n          score: 0,\r\n          item\r\n        });\r\n        continue;\r\n      }\r\n\r\n      // Run the fuzzy search for the item and query.\r\n      let score = fuzzySearch(item, query);\r\n\r\n      // Ignore the item if it is not a match.\r\n      if (!score) {\r\n        continue;\r\n      }\r\n\r\n      // Penalize disabled items.\r\n      // TODO - push disabled items all the way down in sort cmp?\r\n      if (!item.isEnabled) {\r\n        score.score += 1000;\r\n      }\r\n\r\n      // Add the score to the results.\r\n      scores.push(score);\r\n    }\r\n\r\n    // Return the final array of scores.\r\n    return scores;\r\n  }\r\n\r\n  /**\r\n   * Perform a fuzzy search on a single command item.\r\n   */\r\n  function fuzzySearch(\r\n    item: CommandPalette.IItem,\r\n    query: string\r\n  ): IScore | null {\r\n    // Create the source text to be searched.\r\n    let category = item.category.toLowerCase();\r\n    let label = item.label.toLowerCase();\r\n    let source = `${category} ${label}`;\r\n\r\n    // Set up the match score and indices array.\r\n    let score = Infinity;\r\n    let indices: number[] | null = null;\r\n\r\n    // The regex for search word boundaries\r\n    let rgx = /\\b\\w/g;\r\n\r\n    // Search the source by word boundary.\r\n    // eslint-disable-next-line no-constant-condition\r\n    while (true) {\r\n      // Find the next word boundary in the source.\r\n      let rgxMatch = rgx.exec(source);\r\n\r\n      // Break if there is no more source context.\r\n      if (!rgxMatch) {\r\n        break;\r\n      }\r\n\r\n      // Run the string match on the relevant substring.\r\n      let match = StringExt.matchSumOfDeltas(source, query, rgxMatch.index);\r\n\r\n      // Break if there is no match.\r\n      if (!match) {\r\n        break;\r\n      }\r\n\r\n      // Update the match if the score is better.\r\n      if (match && match.score <= score) {\r\n        score = match.score;\r\n        indices = match.indices;\r\n      }\r\n    }\r\n\r\n    // Bail if there was no match.\r\n    if (!indices || score === Infinity) {\r\n      return null;\r\n    }\r\n\r\n    // Compute the pivot index between category and label text.\r\n    let pivot = category.length + 1;\r\n\r\n    // Find the slice index to separate matched indices.\r\n    let j = ArrayExt.lowerBound(indices, pivot, (a, b) => a - b);\r\n\r\n    // Extract the matched category and label indices.\r\n    let categoryIndices = indices.slice(0, j);\r\n    let labelIndices = indices.slice(j);\r\n\r\n    // Adjust the label indices for the pivot offset.\r\n    for (let i = 0, n = labelIndices.length; i < n; ++i) {\r\n      labelIndices[i] -= pivot;\r\n    }\r\n\r\n    // Handle a pure label match.\r\n    if (categoryIndices.length === 0) {\r\n      return {\r\n        matchType: MatchType.Label,\r\n        categoryIndices: null,\r\n        labelIndices,\r\n        score,\r\n        item\r\n      };\r\n    }\r\n\r\n    // Handle a pure category match.\r\n    if (labelIndices.length === 0) {\r\n      return {\r\n        matchType: MatchType.Category,\r\n        categoryIndices,\r\n        labelIndices: null,\r\n        score,\r\n        item\r\n      };\r\n    }\r\n\r\n    // Handle a split match.\r\n    return {\r\n      matchType: MatchType.Split,\r\n      categoryIndices,\r\n      labelIndices,\r\n      score,\r\n      item\r\n    };\r\n  }\r\n\r\n  /**\r\n   * A sort comparison function for a match score.\r\n   */\r\n  function scoreCmp(a: IScore, b: IScore): number {\r\n    // First compare based on the match type\r\n    let m1 = a.matchType - b.matchType;\r\n    if (m1 !== 0) {\r\n      return m1;\r\n    }\r\n\r\n    // Otherwise, compare based on the match score.\r\n    let d1 = a.score - b.score;\r\n    if (d1 !== 0) {\r\n      return d1;\r\n    }\r\n\r\n    // Find the match index based on the match type.\r\n    let i1 = 0;\r\n    let i2 = 0;\r\n    switch (a.matchType) {\r\n      case MatchType.Label:\r\n        i1 = a.labelIndices![0];\r\n        i2 = b.labelIndices![0];\r\n        break;\r\n      case MatchType.Category:\r\n      case MatchType.Split:\r\n        i1 = a.categoryIndices![0];\r\n        i2 = b.categoryIndices![0];\r\n        break;\r\n    }\r\n\r\n    // Compare based on the match index.\r\n    if (i1 !== i2) {\r\n      return i1 - i2;\r\n    }\r\n\r\n    // Otherwise, compare by category.\r\n    let d2 = a.item.category.localeCompare(b.item.category);\r\n    if (d2 !== 0) {\r\n      return d2;\r\n    }\r\n\r\n    // Otherwise, compare by rank.\r\n    let r1 = a.item.rank;\r\n    let r2 = b.item.rank;\r\n    if (r1 !== r2) {\r\n      return r1 < r2 ? -1 : 1; // Infinity safe\r\n    }\r\n\r\n    // Finally, compare by label.\r\n    return a.item.label.localeCompare(b.item.label);\r\n  }\r\n\r\n  /**\r\n   * Create the results from an array of sorted scores.\r\n   */\r\n  function createResults(scores: IScore[]): SearchResult[] {\r\n    // Set up an array to track which scores have been visited.\r\n    let visited = new Array(scores.length);\r\n    ArrayExt.fill(visited, false);\r\n\r\n    // Set up the search results array.\r\n    let results: SearchResult[] = [];\r\n\r\n    // Iterate over each score in the array.\r\n    for (let i = 0, n = scores.length; i < n; ++i) {\r\n      // Ignore a score which has already been processed.\r\n      if (visited[i]) {\r\n        continue;\r\n      }\r\n\r\n      // Extract the current item and indices.\r\n      let { item, categoryIndices } = scores[i];\r\n\r\n      // Extract the category for the current item.\r\n      let category = item.category;\r\n\r\n      // Add the header result for the category.\r\n      results.push({ type: 'header', category, indices: categoryIndices });\r\n\r\n      // Find the rest of the scores with the same category.\r\n      for (let j = i; j < n; ++j) {\r\n        // Ignore a score which has already been processed.\r\n        if (visited[j]) {\r\n          continue;\r\n        }\r\n\r\n        // Extract the data for the current score.\r\n        let { item, labelIndices } = scores[j];\r\n\r\n        // Ignore an item with a different category.\r\n        if (item.category !== category) {\r\n          continue;\r\n        }\r\n\r\n        // Create the item result for the score.\r\n        results.push({ type: 'item', item, indices: labelIndices });\r\n\r\n        // Mark the score as processed.\r\n        visited[j] = true;\r\n      }\r\n    }\r\n\r\n    // Return the final results.\r\n    return results;\r\n  }\r\n\r\n  /**\r\n   * A concrete implementation of `CommandPalette.IItem`.\r\n   */\r\n  class CommandItem implements CommandPalette.IItem {\r\n    /**\r\n     * Construct a new command item.\r\n     */\r\n    constructor(\r\n      commands: CommandRegistry,\r\n      options: CommandPalette.IItemOptions\r\n    ) {\r\n      this._commands = commands;\r\n      this.category = normalizeCategory(options.category);\r\n      this.command = options.command;\r\n      this.args = options.args || JSONExt.emptyObject;\r\n      this.rank = options.rank !== undefined ? options.rank : Infinity;\r\n    }\r\n\r\n    /**\r\n     * The category for the command item.\r\n     */\r\n    readonly category: string;\r\n\r\n    /**\r\n     * The command to execute when the item is triggered.\r\n     */\r\n    readonly command: string;\r\n\r\n    /**\r\n     * The arguments for the command.\r\n     */\r\n    readonly args: ReadonlyJSONObject;\r\n\r\n    /**\r\n     * The rank for the command item.\r\n     */\r\n    readonly rank: number;\r\n\r\n    /**\r\n     * The display label for the command item.\r\n     */\r\n    get label(): string {\r\n      return this._commands.label(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * The icon renderer for the command item.\r\n     */\r\n    get icon():\r\n      | VirtualElement.IRenderer\r\n      | undefined\r\n      /* <DEPRECATED> */\r\n      | string /* </DEPRECATED> */ {\r\n      return this._commands.icon(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * The icon class for the command item.\r\n     */\r\n    get iconClass(): string {\r\n      return this._commands.iconClass(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * The icon label for the command item.\r\n     */\r\n    get iconLabel(): string {\r\n      return this._commands.iconLabel(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * The display caption for the command item.\r\n     */\r\n    get caption(): string {\r\n      return this._commands.caption(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * The extra class name for the command item.\r\n     */\r\n    get className(): string {\r\n      return this._commands.className(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * The dataset for the command item.\r\n     */\r\n    get dataset(): CommandRegistry.Dataset {\r\n      return this._commands.dataset(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * Whether the command item is enabled.\r\n     */\r\n    get isEnabled(): boolean {\r\n      return this._commands.isEnabled(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * Whether the command item is toggled.\r\n     */\r\n    get isToggled(): boolean {\r\n      return this._commands.isToggled(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * Whether the command item is toggleable.\r\n     */\r\n    get isToggleable(): boolean {\r\n      return this._commands.isToggleable(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * Whether the command item is visible.\r\n     */\r\n    get isVisible(): boolean {\r\n      return this._commands.isVisible(this.command, this.args);\r\n    }\r\n\r\n    /**\r\n     * The key binding for the command item.\r\n     */\r\n    get keyBinding(): CommandRegistry.IKeyBinding | null {\r\n      let { command, args } = this;\r\n      return (\r\n        ArrayExt.findLastValue(this._commands.keyBindings, kb => {\r\n          return kb.command === command && JSONExt.deepEqual(kb.args, args);\r\n        }) || null\r\n      );\r\n    }\r\n\r\n    private _commands: CommandRegistry;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt } from '@lumino/algorithm';\r\n\r\nimport { CommandRegistry } from '@lumino/commands';\r\n\r\nimport { JSONExt, ReadonlyJSONObject } from '@lumino/coreutils';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { getKeyboardLayout } from '@lumino/keyboard';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport {\r\n  ARIAAttrNames,\r\n  ElementARIAAttrs,\r\n  ElementDataset,\r\n  h,\r\n  VirtualDOM,\r\n  VirtualElement\r\n} from '@lumino/virtualdom';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A widget which displays items as a canonical menu.\r\n */\r\nexport class Menu extends Widget {\r\n  /**\r\n   * Construct a new menu.\r\n   *\r\n   * @param options - The options for initializing the menu.\r\n   */\r\n  constructor(options: Menu.IOptions) {\r\n    super({ node: Private.createNode() });\r\n    this.addClass('lm-Menu');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-Menu');\r\n    /* </DEPRECATED> */\r\n    this.setFlag(Widget.Flag.DisallowLayout);\r\n    this.commands = options.commands;\r\n    this.renderer = options.renderer || Menu.defaultRenderer;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the menu.\r\n   */\r\n  dispose(): void {\r\n    this.close();\r\n    this._items.length = 0;\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * A signal emitted just before the menu is closed.\r\n   *\r\n   * #### Notes\r\n   * This signal is emitted when the menu receives a `'close-request'`\r\n   * message, just before it removes itself from the DOM.\r\n   *\r\n   * This signal is not emitted if the menu is already detached from\r\n   * the DOM when it receives the `'close-request'` message.\r\n   */\r\n  get aboutToClose(): ISignal<this, void> {\r\n    return this._aboutToClose;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when a new menu is requested by the user.\r\n   *\r\n   * #### Notes\r\n   * This signal is emitted whenever the user presses the right or left\r\n   * arrow keys, and a submenu cannot be opened or closed in response.\r\n   *\r\n   * This signal is useful when implementing menu bars in order to open\r\n   * the next or previous menu in response to a user key press.\r\n   *\r\n   * This signal is only emitted for the root menu in a hierarchy.\r\n   */\r\n  get menuRequested(): ISignal<this, 'next' | 'previous'> {\r\n    return this._menuRequested;\r\n  }\r\n\r\n  /**\r\n   * The command registry used by the menu.\r\n   */\r\n  readonly commands: CommandRegistry;\r\n\r\n  /**\r\n   * The renderer used by the menu.\r\n   */\r\n  readonly renderer: Menu.IRenderer;\r\n\r\n  /**\r\n   * The parent menu of the menu.\r\n   *\r\n   * #### Notes\r\n   * This is `null` unless the menu is an open submenu.\r\n   */\r\n  get parentMenu(): Menu | null {\r\n    return this._parentMenu;\r\n  }\r\n\r\n  /**\r\n   * The child menu of the menu.\r\n   *\r\n   * #### Notes\r\n   * This is `null` unless the menu has an open submenu.\r\n   */\r\n  get childMenu(): Menu | null {\r\n    return this._childMenu;\r\n  }\r\n\r\n  /**\r\n   * The root menu of the menu hierarchy.\r\n   */\r\n  get rootMenu(): Menu {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    let menu: Menu = this;\r\n    while (menu._parentMenu) {\r\n      menu = menu._parentMenu;\r\n    }\r\n    return menu;\r\n  }\r\n\r\n  /**\r\n   * The leaf menu of the menu hierarchy.\r\n   */\r\n  get leafMenu(): Menu {\r\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\r\n    let menu: Menu = this;\r\n    while (menu._childMenu) {\r\n      menu = menu._childMenu;\r\n    }\r\n    return menu;\r\n  }\r\n\r\n  /**\r\n   * The menu content node.\r\n   *\r\n   * #### Notes\r\n   * This is the node which holds the menu item nodes.\r\n   *\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get contentNode(): HTMLUListElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-Menu-content'\r\n    )[0] as HTMLUListElement;\r\n  }\r\n\r\n  /**\r\n   * Get the currently active menu item.\r\n   */\r\n  get activeItem(): Menu.IItem | null {\r\n    return this._items[this._activeIndex] || null;\r\n  }\r\n\r\n  /**\r\n   * Set the currently active menu item.\r\n   *\r\n   * #### Notes\r\n   * If the item cannot be activated, the item will be set to `null`.\r\n   */\r\n  set activeItem(value: Menu.IItem | null) {\r\n    this.activeIndex = value ? this._items.indexOf(value) : -1;\r\n  }\r\n\r\n  /**\r\n   * Get the index of the currently active menu item.\r\n   *\r\n   * #### Notes\r\n   * This will be `-1` if no menu item is active.\r\n   */\r\n  get activeIndex(): number {\r\n    return this._activeIndex;\r\n  }\r\n\r\n  /**\r\n   * Set the index of the currently active menu item.\r\n   *\r\n   * #### Notes\r\n   * If the item cannot be activated, the index will be set to `-1`.\r\n   */\r\n  set activeIndex(value: number) {\r\n    // Adjust the value for an out of range index.\r\n    if (value < 0 || value >= this._items.length) {\r\n      value = -1;\r\n    }\r\n\r\n    // Ensure the item can be activated.\r\n    if (value !== -1 && !Private.canActivate(this._items[value])) {\r\n      value = -1;\r\n    }\r\n\r\n    // Bail if the index will not change.\r\n    if (this._activeIndex === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the active index.\r\n    this._activeIndex = value;\r\n\r\n    // Make active element in focus\r\n    if (\r\n      this._activeIndex >= 0 &&\r\n      this.contentNode.childNodes[this._activeIndex]\r\n    ) {\r\n      (this.contentNode.childNodes[this._activeIndex] as HTMLElement).focus();\r\n    }\r\n\r\n    // schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the menu items in the menu.\r\n   */\r\n  get items(): ReadonlyArray<Menu.IItem> {\r\n    return this._items;\r\n  }\r\n\r\n  /**\r\n   * Activate the next selectable item in the menu.\r\n   *\r\n   * #### Notes\r\n   * If no item is selectable, the index will be set to `-1`.\r\n   */\r\n  activateNextItem(): void {\r\n    let n = this._items.length;\r\n    let ai = this._activeIndex;\r\n    let start = ai < n - 1 ? ai + 1 : 0;\r\n    let stop = start === 0 ? n - 1 : start - 1;\r\n    this.activeIndex = ArrayExt.findFirstIndex(\r\n      this._items,\r\n      Private.canActivate,\r\n      start,\r\n      stop\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Activate the previous selectable item in the menu.\r\n   *\r\n   * #### Notes\r\n   * If no item is selectable, the index will be set to `-1`.\r\n   */\r\n  activatePreviousItem(): void {\r\n    let n = this._items.length;\r\n    let ai = this._activeIndex;\r\n    let start = ai <= 0 ? n - 1 : ai - 1;\r\n    let stop = start === n - 1 ? 0 : start + 1;\r\n    this.activeIndex = ArrayExt.findLastIndex(\r\n      this._items,\r\n      Private.canActivate,\r\n      start,\r\n      stop\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Trigger the active menu item.\r\n   *\r\n   * #### Notes\r\n   * If the active item is a submenu, it will be opened and the first\r\n   * item will be activated.\r\n   *\r\n   * If the active item is a command, the command will be executed.\r\n   *\r\n   * If the menu is not attached, this is a no-op.\r\n   *\r\n   * If there is no active item, this is a no-op.\r\n   */\r\n  triggerActiveItem(): void {\r\n    // Bail if the menu is not attached.\r\n    if (!this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    // Bail if there is no active item.\r\n    let item = this.activeItem;\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    // Cancel the pending timers.\r\n    this._cancelOpenTimer();\r\n    this._cancelCloseTimer();\r\n\r\n    // If the item is a submenu, open it.\r\n    if (item.type === 'submenu') {\r\n      this._openChildMenu(true);\r\n      return;\r\n    }\r\n\r\n    // Close the root menu before executing the command.\r\n    this.rootMenu.close();\r\n\r\n    // Execute the command for the item.\r\n    let { command, args } = item;\r\n    if (this.commands.isEnabled(command, args)) {\r\n      this.commands.execute(command, args);\r\n    } else {\r\n      console.log(`Command '${command}' is disabled.`);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a menu item to the end of the menu.\r\n   *\r\n   * @param options - The options for creating the menu item.\r\n   *\r\n   * @returns The menu item added to the menu.\r\n   */\r\n  addItem(options: Menu.IItemOptions): Menu.IItem {\r\n    return this.insertItem(this._items.length, options);\r\n  }\r\n\r\n  /**\r\n   * Insert a menu item into the menu at the specified index.\r\n   *\r\n   * @param index - The index at which to insert the item.\r\n   *\r\n   * @param options - The options for creating the menu item.\r\n   *\r\n   * @returns The menu item added to the menu.\r\n   *\r\n   * #### Notes\r\n   * The index will be clamped to the bounds of the items.\r\n   */\r\n  insertItem(index: number, options: Menu.IItemOptions): Menu.IItem {\r\n    // Close the menu if it's attached.\r\n    if (this.isAttached) {\r\n      this.close();\r\n    }\r\n\r\n    // Reset the active index.\r\n    this.activeIndex = -1;\r\n\r\n    // Clamp the insert index to the array bounds.\r\n    let i = Math.max(0, Math.min(index, this._items.length));\r\n\r\n    // Create the item for the options.\r\n    let item = Private.createItem(this, options);\r\n\r\n    // Insert the item into the array.\r\n    ArrayExt.insert(this._items, i, item);\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n\r\n    // Return the item added to the menu.\r\n    return item;\r\n  }\r\n\r\n  /**\r\n   * Remove an item from the menu.\r\n   *\r\n   * @param item - The item to remove from the menu.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the item is not in the menu.\r\n   */\r\n  removeItem(item: Menu.IItem): void {\r\n    this.removeItemAt(this._items.indexOf(item));\r\n  }\r\n\r\n  /**\r\n   * Remove the item at a given index from the menu.\r\n   *\r\n   * @param index - The index of the item to remove.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the index is out of range.\r\n   */\r\n  removeItemAt(index: number): void {\r\n    // Close the menu if it's attached.\r\n    if (this.isAttached) {\r\n      this.close();\r\n    }\r\n\r\n    // Reset the active index.\r\n    this.activeIndex = -1;\r\n\r\n    // Remove the item from the array.\r\n    let item = ArrayExt.removeAt(this._items, index);\r\n\r\n    // Bail if the index is out of range.\r\n    if (!item) {\r\n      return;\r\n    }\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Remove all menu items from the menu.\r\n   */\r\n  clearItems(): void {\r\n    // Close the menu if it's attached.\r\n    if (this.isAttached) {\r\n      this.close();\r\n    }\r\n\r\n    // Reset the active index.\r\n    this.activeIndex = -1;\r\n\r\n    // Bail if there is nothing to remove.\r\n    if (this._items.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Clear the items.\r\n    this._items.length = 0;\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Open the menu at the specified location.\r\n   *\r\n   * @param x - The client X coordinate of the menu location.\r\n   *\r\n   * @param y - The client Y coordinate of the menu location.\r\n   *\r\n   * @param options - The additional options for opening the menu.\r\n   *\r\n   * #### Notes\r\n   * The menu will be opened at the given location unless it will not\r\n   * fully fit on the screen. If it will not fit, it will be adjusted\r\n   * to fit naturally on the screen.\r\n   *\r\n   * This is a no-op if the menu is already attached to the DOM.\r\n   */\r\n  open(x: number, y: number, options: Menu.IOpenOptions = {}): void {\r\n    // Bail early if the menu is already attached.\r\n    if (this.isAttached) {\r\n      return;\r\n    }\r\n\r\n    // Extract the position options.\r\n    let forceX = options.forceX || false;\r\n    let forceY = options.forceY || false;\r\n\r\n    // Open the menu as a root menu.\r\n    Private.openRootMenu(this, x, y, forceX, forceY);\r\n\r\n    // Activate the menu to accept keyboard input.\r\n    this.activate();\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the menu.\r\n   *\r\n   * @param event - The DOM event sent to the menu.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the menu's DOM nodes. It should\r\n   * not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'keydown':\r\n        this._evtKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'mouseup':\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'mousemove':\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'mouseenter':\r\n        this._evtMouseEnter(event as MouseEvent);\r\n        break;\r\n      case 'mouseleave':\r\n        this._evtMouseLeave(event as MouseEvent);\r\n        break;\r\n      case 'mousedown':\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'contextmenu':\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('keydown', this);\r\n    this.node.addEventListener('mouseup', this);\r\n    this.node.addEventListener('mousemove', this);\r\n    this.node.addEventListener('mouseenter', this);\r\n    this.node.addEventListener('mouseleave', this);\r\n    this.node.addEventListener('contextmenu', this);\r\n    document.addEventListener('mousedown', this, true);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    this.node.removeEventListener('keydown', this);\r\n    this.node.removeEventListener('mouseup', this);\r\n    this.node.removeEventListener('mousemove', this);\r\n    this.node.removeEventListener('mouseenter', this);\r\n    this.node.removeEventListener('mouseleave', this);\r\n    this.node.removeEventListener('contextmenu', this);\r\n    document.removeEventListener('mousedown', this, true);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'activate-request'` message.\r\n   */\r\n  protected onActivateRequest(msg: Message): void {\r\n    if (this.isAttached) {\r\n      this.node.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    let items = this._items;\r\n    let renderer = this.renderer;\r\n    let activeIndex = this._activeIndex;\r\n    let collapsedFlags = Private.computeCollapsed(items);\r\n    let content = new Array<VirtualElement>(items.length);\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      let item = items[i];\r\n      let active = i === activeIndex;\r\n      let collapsed = collapsedFlags[i];\r\n      content[i] = renderer.renderItem({\r\n        item,\r\n        active,\r\n        collapsed,\r\n        onfocus: () => {\r\n          this.activeIndex = i;\r\n        }\r\n      });\r\n    }\r\n    VirtualDOM.render(content, this.contentNode);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'close-request'` message.\r\n   */\r\n  protected onCloseRequest(msg: Message): void {\r\n    // Cancel the pending timers.\r\n    this._cancelOpenTimer();\r\n    this._cancelCloseTimer();\r\n\r\n    // Reset the active index.\r\n    this.activeIndex = -1;\r\n\r\n    // Close any open child menu.\r\n    let childMenu = this._childMenu;\r\n    if (childMenu) {\r\n      this._childIndex = -1;\r\n      this._childMenu = null;\r\n      childMenu._parentMenu = null;\r\n      childMenu.close();\r\n    }\r\n\r\n    // Remove this menu from its parent and activate the parent.\r\n    let parentMenu = this._parentMenu;\r\n    if (parentMenu) {\r\n      this._parentMenu = null;\r\n      parentMenu._childIndex = -1;\r\n      parentMenu._childMenu = null;\r\n      parentMenu.activate();\r\n    }\r\n\r\n    // Emit the `aboutToClose` signal if the menu is attached.\r\n    if (this.isAttached) {\r\n      this._aboutToClose.emit(undefined);\r\n    }\r\n\r\n    // Finish closing the menu.\r\n    super.onCloseRequest(msg);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the menu.\r\n   *\r\n   * #### Notes\r\n   * This listener is attached to the menu node.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    // A menu handles all keydown events.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Fetch the key code for the event.\r\n    let kc = event.keyCode;\r\n\r\n    // Enter\r\n    if (kc === 13) {\r\n      this.triggerActiveItem();\r\n      return;\r\n    }\r\n\r\n    // Escape\r\n    if (kc === 27) {\r\n      this.close();\r\n      return;\r\n    }\r\n\r\n    // Left Arrow\r\n    if (kc === 37) {\r\n      if (this._parentMenu) {\r\n        this.close();\r\n      } else {\r\n        this._menuRequested.emit('previous');\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Up Arrow\r\n    if (kc === 38) {\r\n      this.activatePreviousItem();\r\n      return;\r\n    }\r\n\r\n    // Right Arrow\r\n    if (kc === 39) {\r\n      let item = this.activeItem;\r\n      if (item && item.type === 'submenu') {\r\n        this.triggerActiveItem();\r\n      } else {\r\n        this.rootMenu._menuRequested.emit('next');\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Down Arrow\r\n    if (kc === 40) {\r\n      this.activateNextItem();\r\n      return;\r\n    }\r\n\r\n    // Get the pressed key character.\r\n    let key = getKeyboardLayout().keyForKeydownEvent(event);\r\n\r\n    // Bail if the key is not valid.\r\n    if (!key) {\r\n      return;\r\n    }\r\n\r\n    // Search for the next best matching mnemonic item.\r\n    let start = this._activeIndex + 1;\r\n    let result = Private.findMnemonic(this._items, key, start);\r\n\r\n    // Handle the requested mnemonic based on the search results.\r\n    // If exactly one mnemonic is matched, that item is triggered.\r\n    // Otherwise, the next mnemonic is activated if available,\r\n    // followed by the auto mnemonic if available.\r\n    if (result.index !== -1 && !result.multiple) {\r\n      this.activeIndex = result.index;\r\n      this.triggerActiveItem();\r\n    } else if (result.index !== -1) {\r\n      this.activeIndex = result.index;\r\n    } else if (result.auto !== -1) {\r\n      this.activeIndex = result.auto;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseup'` event for the menu.\r\n   *\r\n   * #### Notes\r\n   * This listener is attached to the menu node.\r\n   */\r\n  private _evtMouseUp(event: MouseEvent): void {\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    this.triggerActiveItem();\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousemove'` event for the menu.\r\n   *\r\n   * #### Notes\r\n   * This listener is attached to the menu node.\r\n   */\r\n  private _evtMouseMove(event: MouseEvent): void {\r\n    // Hit test the item nodes for the item under the mouse.\r\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\r\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\r\n    });\r\n\r\n    // Bail early if the mouse is already over the active index.\r\n    if (index === this._activeIndex) {\r\n      return;\r\n    }\r\n\r\n    // Update and coerce the active index.\r\n    this.activeIndex = index;\r\n    index = this.activeIndex;\r\n\r\n    // If the index is the current child index, cancel the timers.\r\n    if (index === this._childIndex) {\r\n      this._cancelOpenTimer();\r\n      this._cancelCloseTimer();\r\n      return;\r\n    }\r\n\r\n    // If a child menu is currently open, start the close timer.\r\n    if (this._childIndex !== -1) {\r\n      this._startCloseTimer();\r\n    }\r\n\r\n    // Cancel the open timer to give a full delay for opening.\r\n    this._cancelOpenTimer();\r\n\r\n    // Bail if the active item is not a valid submenu item.\r\n    let item = this.activeItem;\r\n    if (!item || item.type !== 'submenu' || !item.submenu) {\r\n      return;\r\n    }\r\n\r\n    // Start the open timer to open the active item submenu.\r\n    this._startOpenTimer();\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseenter'` event for the menu.\r\n   *\r\n   * #### Notes\r\n   * This listener is attached to the menu node.\r\n   */\r\n  private _evtMouseEnter(event: MouseEvent): void {\r\n    // Synchronize the active ancestor items.\r\n    for (let menu = this._parentMenu; menu; menu = menu._parentMenu) {\r\n      menu._cancelOpenTimer();\r\n      menu._cancelCloseTimer();\r\n      menu.activeIndex = menu._childIndex;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseleave'` event for the menu.\r\n   *\r\n   * #### Notes\r\n   * This listener is attached to the menu node.\r\n   */\r\n  private _evtMouseLeave(event: MouseEvent): void {\r\n    // Cancel any pending submenu opening.\r\n    this._cancelOpenTimer();\r\n\r\n    // If there is no open child menu, just reset the active index.\r\n    if (!this._childMenu) {\r\n      this.activeIndex = -1;\r\n      return;\r\n    }\r\n\r\n    // If the mouse is over the child menu, cancel the close timer.\r\n    let { clientX, clientY } = event;\r\n    if (ElementExt.hitTest(this._childMenu.node, clientX, clientY)) {\r\n      this._cancelCloseTimer();\r\n      return;\r\n    }\r\n\r\n    // Otherwise, reset the active index and start the close timer.\r\n    this.activeIndex = -1;\r\n    this._startCloseTimer();\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousedown'` event for the menu.\r\n   *\r\n   * #### Notes\r\n   * This listener is attached to the document node.\r\n   */\r\n  private _evtMouseDown(event: MouseEvent): void {\r\n    // Bail if the menu is not a root menu.\r\n    if (this._parentMenu) {\r\n      return;\r\n    }\r\n\r\n    // The mouse button which is pressed is irrelevant. If the press\r\n    // is not on a menu, the entire hierarchy is closed and the event\r\n    // is allowed to propagate. This allows other code to act on the\r\n    // event, such as focusing the clicked element.\r\n    if (Private.hitTestMenus(this, event.clientX, event.clientY)) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    } else {\r\n      this.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open the child menu at the active index immediately.\r\n   *\r\n   * If a different child menu is already open, it will be closed,\r\n   * even if the active item is not a valid submenu.\r\n   */\r\n  private _openChildMenu(activateFirst = false): void {\r\n    // If the item is not a valid submenu, close the child menu.\r\n    let item = this.activeItem;\r\n    if (!item || item.type !== 'submenu' || !item.submenu) {\r\n      this._closeChildMenu();\r\n      return;\r\n    }\r\n\r\n    // Do nothing if the child menu will not change.\r\n    let submenu = item.submenu;\r\n    if (submenu === this._childMenu) {\r\n      return;\r\n    }\r\n\r\n    // Ensure the current child menu is closed.\r\n    this._closeChildMenu();\r\n\r\n    // Update the private child state.\r\n    this._childMenu = submenu;\r\n    this._childIndex = this._activeIndex;\r\n\r\n    // Set the parent menu reference for the child.\r\n    submenu._parentMenu = this;\r\n\r\n    // Ensure the menu is updated and lookup the item node.\r\n    MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\r\n    let itemNode = this.contentNode.children[this._activeIndex];\r\n\r\n    // Open the submenu at the active node.\r\n    Private.openSubmenu(submenu, itemNode as HTMLElement);\r\n\r\n    // Activate the first item if desired.\r\n    if (activateFirst) {\r\n      submenu.activeIndex = -1;\r\n      submenu.activateNextItem();\r\n    }\r\n\r\n    // Activate the child menu.\r\n    submenu.activate();\r\n  }\r\n\r\n  /**\r\n   * Close the child menu immediately.\r\n   *\r\n   * This is a no-op if a child menu is not open.\r\n   */\r\n  private _closeChildMenu(): void {\r\n    if (this._childMenu) {\r\n      this._childMenu.close();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the open timer, unless it is already pending.\r\n   */\r\n  private _startOpenTimer(): void {\r\n    if (this._openTimerID === 0) {\r\n      this._openTimerID = window.setTimeout(() => {\r\n        this._openTimerID = 0;\r\n        this._openChildMenu();\r\n      }, Private.TIMER_DELAY);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Start the close timer, unless it is already pending.\r\n   */\r\n  private _startCloseTimer(): void {\r\n    if (this._closeTimerID === 0) {\r\n      this._closeTimerID = window.setTimeout(() => {\r\n        this._closeTimerID = 0;\r\n        this._closeChildMenu();\r\n      }, Private.TIMER_DELAY);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancel the open timer, if the timer is pending.\r\n   */\r\n  private _cancelOpenTimer(): void {\r\n    if (this._openTimerID !== 0) {\r\n      clearTimeout(this._openTimerID);\r\n      this._openTimerID = 0;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Cancel the close timer, if the timer is pending.\r\n   */\r\n  private _cancelCloseTimer(): void {\r\n    if (this._closeTimerID !== 0) {\r\n      clearTimeout(this._closeTimerID);\r\n      this._closeTimerID = 0;\r\n    }\r\n  }\r\n\r\n  private _childIndex = -1;\r\n  private _activeIndex = -1;\r\n  private _openTimerID = 0;\r\n  private _closeTimerID = 0;\r\n  private _items: Menu.IItem[] = [];\r\n  private _childMenu: Menu | null = null;\r\n  private _parentMenu: Menu | null = null;\r\n  private _aboutToClose = new Signal<this, void>(this);\r\n  private _menuRequested = new Signal<this, 'next' | 'previous'>(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `Menu` class statics.\r\n */\r\nexport namespace Menu {\r\n  /**\r\n   * An options object for creating a menu.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The command registry for use with the menu.\r\n     */\r\n    commands: CommandRegistry;\r\n\r\n    /**\r\n     * A custom renderer for use with the menu.\r\n     *\r\n     * The default is a shared renderer instance.\r\n     */\r\n    renderer?: IRenderer;\r\n  }\r\n\r\n  /**\r\n   * An options object for the `open` method on a menu.\r\n   */\r\n  export interface IOpenOptions {\r\n    /**\r\n     * Whether to force the X position of the menu.\r\n     *\r\n     * Setting to `true` will disable the logic which repositions the\r\n     * X coordinate of the menu if it will not fit entirely on screen.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    forceX?: boolean;\r\n\r\n    /**\r\n     * Whether to force the Y position of the menu.\r\n     *\r\n     * Setting to `true` will disable the logic which repositions the\r\n     * Y coordinate of the menu if it will not fit entirely on screen.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    forceY?: boolean;\r\n  }\r\n\r\n  /**\r\n   * A type alias for a menu item type.\r\n   */\r\n  export type ItemType = 'command' | 'submenu' | 'separator';\r\n\r\n  /**\r\n   * An options object for creating a menu item.\r\n   */\r\n  export interface IItemOptions {\r\n    /**\r\n     * The type of the menu item.\r\n     *\r\n     * The default value is `'command'`.\r\n     */\r\n    type?: ItemType;\r\n\r\n    /**\r\n     * The command to execute when the item is triggered.\r\n     *\r\n     * The default value is an empty string.\r\n     */\r\n    command?: string;\r\n\r\n    /**\r\n     * The arguments for the command.\r\n     *\r\n     * The default value is an empty object.\r\n     */\r\n    args?: ReadonlyJSONObject;\r\n\r\n    /**\r\n     * The submenu for a `'submenu'` type item.\r\n     *\r\n     * The default value is `null`.\r\n     */\r\n    submenu?: Menu | null;\r\n  }\r\n\r\n  /**\r\n   * An object which represents a menu item.\r\n   *\r\n   * #### Notes\r\n   * Item objects are created automatically by a menu.\r\n   */\r\n  export interface IItem {\r\n    /**\r\n     * The type of the menu item.\r\n     */\r\n    readonly type: ItemType;\r\n\r\n    /**\r\n     * The command to execute when the item is triggered.\r\n     */\r\n    readonly command: string;\r\n\r\n    /**\r\n     * The arguments for the command.\r\n     */\r\n    readonly args: ReadonlyJSONObject;\r\n\r\n    /**\r\n     * The submenu for a `'submenu'` type item.\r\n     */\r\n    readonly submenu: Menu | null;\r\n\r\n    /**\r\n     * The display label for the menu item.\r\n     */\r\n    readonly label: string;\r\n\r\n    /**\r\n     * The mnemonic index for the menu item.\r\n     */\r\n    readonly mnemonic: number;\r\n\r\n    /**\r\n     * The icon renderer for the menu item.\r\n     */\r\n    readonly icon:\r\n      | VirtualElement.IRenderer\r\n      | undefined\r\n      /* <DEPRECATED> */\r\n      | string /* </DEPRECATED> */;\r\n\r\n    /**\r\n     * The icon class for the menu item.\r\n     */\r\n    readonly iconClass: string;\r\n\r\n    /**\r\n     * The icon label for the menu item.\r\n     */\r\n    readonly iconLabel: string;\r\n\r\n    /**\r\n     * The display caption for the menu item.\r\n     */\r\n    readonly caption: string;\r\n\r\n    /**\r\n     * The extra class name for the menu item.\r\n     */\r\n    readonly className: string;\r\n\r\n    /**\r\n     * The dataset for the menu item.\r\n     */\r\n    readonly dataset: CommandRegistry.Dataset;\r\n\r\n    /**\r\n     * Whether the menu item is enabled.\r\n     */\r\n    readonly isEnabled: boolean;\r\n\r\n    /**\r\n     * Whether the menu item is toggled.\r\n     */\r\n    readonly isToggled: boolean;\r\n\r\n    /**\r\n     * Whether the menu item is visible.\r\n     */\r\n    readonly isVisible: boolean;\r\n\r\n    /**\r\n     * The key binding for the menu item.\r\n     */\r\n    readonly keyBinding: CommandRegistry.IKeyBinding | null;\r\n  }\r\n\r\n  /**\r\n   * An object which holds the data to render a menu item.\r\n   */\r\n  export interface IRenderData {\r\n    /**\r\n     * The item to be rendered.\r\n     */\r\n    readonly item: IItem;\r\n\r\n    /**\r\n     * Whether the item is the active item.\r\n     */\r\n    readonly active: boolean;\r\n\r\n    /**\r\n     * Whether the item should be collapsed.\r\n     */\r\n    readonly collapsed: boolean;\r\n\r\n    /**\r\n     * Handler for when element is in focus.\r\n     */\r\n    readonly onfocus?: () => void;\r\n  }\r\n\r\n  /**\r\n   * A renderer for use with a menu.\r\n   */\r\n  export interface IRenderer {\r\n    /**\r\n     * Render the virtual element for a menu item.\r\n     *\r\n     * @param data - The data to use for rendering the item.\r\n     *\r\n     * @returns A virtual element representing the item.\r\n     */\r\n    renderItem(data: IRenderData): VirtualElement;\r\n  }\r\n\r\n  /**\r\n   * The default implementation of `IRenderer`.\r\n   *\r\n   * #### Notes\r\n   * Subclasses are free to reimplement rendering methods as needed.\r\n   */\r\n  export class Renderer implements IRenderer {\r\n    /**\r\n     * Render the virtual element for a menu item.\r\n     *\r\n     * @param data - The data to use for rendering the item.\r\n     *\r\n     * @returns A virtual element representing the item.\r\n     */\r\n    renderItem(data: IRenderData): VirtualElement {\r\n      let className = this.createItemClass(data);\r\n      let dataset = this.createItemDataset(data);\r\n      let aria = this.createItemARIA(data);\r\n      return h.li(\r\n        {\r\n          className,\r\n          dataset,\r\n          tabindex: '0',\r\n          onfocus: data.onfocus,\r\n          ...aria\r\n        },\r\n        this.renderIcon(data),\r\n        this.renderLabel(data),\r\n        this.renderShortcut(data),\r\n        this.renderSubmenu(data)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the icon element for a menu item.\r\n     *\r\n     * @param data - The data to use for rendering the icon.\r\n     *\r\n     * @returns A virtual element representing the item icon.\r\n     */\r\n    renderIcon(data: IRenderData): VirtualElement {\r\n      let className = this.createIconClass(data);\r\n\r\n      /* <DEPRECATED> */\r\n      if (typeof data.item.icon === 'string') {\r\n        return h.div({ className }, data.item.iconLabel);\r\n      }\r\n      /* </DEPRECATED> */\r\n\r\n      // if data.item.icon is undefined, it will be ignored\r\n      return h.div({ className }, data.item.icon!, data.item.iconLabel);\r\n    }\r\n\r\n    /**\r\n     * Render the label element for a menu item.\r\n     *\r\n     * @param data - The data to use for rendering the label.\r\n     *\r\n     * @returns A virtual element representing the item label.\r\n     */\r\n    renderLabel(data: IRenderData): VirtualElement {\r\n      let content = this.formatLabel(data);\r\n      return h.div(\r\n        {\r\n          className:\r\n            'lm-Menu-itemLabel' +\r\n            /* <DEPRECATED> */\r\n            ' p-Menu-itemLabel'\r\n          /* </DEPRECATED> */\r\n        },\r\n        content\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the shortcut element for a menu item.\r\n     *\r\n     * @param data - The data to use for rendering the shortcut.\r\n     *\r\n     * @returns A virtual element representing the item shortcut.\r\n     */\r\n    renderShortcut(data: IRenderData): VirtualElement {\r\n      let content = this.formatShortcut(data);\r\n      return h.div(\r\n        {\r\n          className:\r\n            'lm-Menu-itemShortcut' +\r\n            /* <DEPRECATED> */\r\n            ' p-Menu-itemShortcut'\r\n          /* </DEPRECATED> */\r\n        },\r\n        content\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the submenu icon element for a menu item.\r\n     *\r\n     * @param data - The data to use for rendering the submenu icon.\r\n     *\r\n     * @returns A virtual element representing the submenu icon.\r\n     */\r\n    renderSubmenu(data: IRenderData): VirtualElement {\r\n      return h.div({\r\n        className:\r\n          'lm-Menu-itemSubmenuIcon' +\r\n          /* <DEPRECATED> */\r\n          ' p-Menu-itemSubmenuIcon'\r\n        /* </DEPRECATED> */\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Create the class name for the menu item.\r\n     *\r\n     * @param data - The data to use for the class name.\r\n     *\r\n     * @returns The full class name for the menu item.\r\n     */\r\n    createItemClass(data: IRenderData): string {\r\n      // Setup the initial class name.\r\n      let name = 'lm-Menu-item';\r\n      /* <DEPRECATED> */\r\n      name += ' p-Menu-item';\r\n      /* </DEPRECATED> */\r\n\r\n      // Add the boolean state classes.\r\n      if (!data.item.isEnabled) {\r\n        name += ' lm-mod-disabled';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-disabled';\r\n        /* </DEPRECATED> */\r\n      }\r\n      if (data.item.isToggled) {\r\n        name += ' lm-mod-toggled';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-toggled';\r\n        /* </DEPRECATED> */\r\n      }\r\n      if (!data.item.isVisible) {\r\n        name += ' lm-mod-hidden';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-hidden';\r\n        /* </DEPRECATED> */\r\n      }\r\n      if (data.active) {\r\n        name += ' lm-mod-active';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-active';\r\n        /* </DEPRECATED> */\r\n      }\r\n      if (data.collapsed) {\r\n        name += ' lm-mod-collapsed';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-collapsed';\r\n        /* </DEPRECATED> */\r\n      }\r\n\r\n      // Add the extra class.\r\n      let extra = data.item.className;\r\n      if (extra) {\r\n        name += ` ${extra}`;\r\n      }\r\n\r\n      // Return the complete class name.\r\n      return name;\r\n    }\r\n\r\n    /**\r\n     * Create the dataset for the menu item.\r\n     *\r\n     * @param data - The data to use for creating the dataset.\r\n     *\r\n     * @returns The dataset for the menu item.\r\n     */\r\n    createItemDataset(data: IRenderData): ElementDataset {\r\n      let result: ElementDataset;\r\n      let { type, command, dataset } = data.item;\r\n      if (type === 'command') {\r\n        result = { ...dataset, type, command };\r\n      } else {\r\n        result = { ...dataset, type };\r\n      }\r\n      return result;\r\n    }\r\n\r\n    /**\r\n     * Create the class name for the menu item icon.\r\n     *\r\n     * @param data - The data to use for the class name.\r\n     *\r\n     * @returns The full class name for the item icon.\r\n     */\r\n    createIconClass(data: IRenderData): string {\r\n      let name = 'lm-Menu-itemIcon';\r\n      /* <DEPRECATED> */\r\n      name += ' p-Menu-itemIcon';\r\n      /* </DEPRECATED> */\r\n      let extra = data.item.iconClass;\r\n      return extra ? `${name} ${extra}` : name;\r\n    }\r\n\r\n    /**\r\n     * Create the aria attributes for menu item.\r\n     *\r\n     * @param data - The data to use for the aria attributes.\r\n     *\r\n     * @returns The aria attributes object for the item.\r\n     */\r\n    createItemARIA(data: IRenderData): ElementARIAAttrs {\r\n      let aria: { [T in ARIAAttrNames]?: string } = {};\r\n      switch (data.item.type) {\r\n        case 'separator':\r\n          aria.role = 'presentation';\r\n          break;\r\n        case 'submenu':\r\n          aria['aria-haspopup'] = 'true';\r\n          if (!data.item.isEnabled) {\r\n            aria['aria-disabled'] = 'true';\r\n          }\r\n          break;\r\n        default:\r\n          if (!data.item.isEnabled) {\r\n            aria['aria-disabled'] = 'true';\r\n          }\r\n          aria.role = 'menuitem';\r\n      }\r\n      return aria;\r\n    }\r\n\r\n    /**\r\n     * Create the render content for the label node.\r\n     *\r\n     * @param data - The data to use for the label content.\r\n     *\r\n     * @returns The content to add to the label node.\r\n     */\r\n    formatLabel(data: IRenderData): h.Child {\r\n      // Fetch the label text and mnemonic index.\r\n      let { label, mnemonic } = data.item;\r\n\r\n      // If the index is out of range, do not modify the label.\r\n      if (mnemonic < 0 || mnemonic >= label.length) {\r\n        return label;\r\n      }\r\n\r\n      // Split the label into parts.\r\n      let prefix = label.slice(0, mnemonic);\r\n      let suffix = label.slice(mnemonic + 1);\r\n      let char = label[mnemonic];\r\n\r\n      // Wrap the mnemonic character in a span.\r\n      let span = h.span(\r\n        {\r\n          className:\r\n            'lm-Menu-itemMnemonic' +\r\n            /* <DEPRECATED> */\r\n            ' p-Menu-itemMnemonic'\r\n          /* </DEPRECATED> */\r\n        },\r\n        char\r\n      );\r\n\r\n      // Return the content parts.\r\n      return [prefix, span, suffix];\r\n    }\r\n\r\n    /**\r\n     * Create the render content for the shortcut node.\r\n     *\r\n     * @param data - The data to use for the shortcut content.\r\n     *\r\n     * @returns The content to add to the shortcut node.\r\n     */\r\n    formatShortcut(data: IRenderData): h.Child {\r\n      let kb = data.item.keyBinding;\r\n      return kb\r\n        ? kb.keys.map(CommandRegistry.formatKeystroke).join(', ')\r\n        : null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The default `Renderer` instance.\r\n   */\r\n  export const defaultRenderer = new Renderer();\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The ms delay for opening and closing a submenu.\r\n   */\r\n  export const TIMER_DELAY = 300;\r\n\r\n  /**\r\n   * The horizontal pixel overlap for an open submenu.\r\n   */\r\n  export const SUBMENU_OVERLAP = 3;\r\n\r\n  /**\r\n   * Create the DOM node for a menu.\r\n   */\r\n  export function createNode(): HTMLDivElement {\r\n    let node = document.createElement('div');\r\n    let content = document.createElement('ul');\r\n    content.className = 'lm-Menu-content';\r\n    /* <DEPRECATED> */\r\n    content.classList.add('p-Menu-content');\r\n    /* </DEPRECATED> */\r\n    node.appendChild(content);\r\n    content.setAttribute('role', 'menu');\r\n    node.tabIndex = 0;\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Test whether a menu item can be activated.\r\n   */\r\n  export function canActivate(item: Menu.IItem): boolean {\r\n    return item.type !== 'separator' && item.isEnabled && item.isVisible;\r\n  }\r\n\r\n  /**\r\n   * Create a new menu item for an owner menu.\r\n   */\r\n  export function createItem(\r\n    owner: Menu,\r\n    options: Menu.IItemOptions\r\n  ): Menu.IItem {\r\n    return new MenuItem(owner.commands, options);\r\n  }\r\n\r\n  /**\r\n   * Hit test a menu hierarchy starting at the given root.\r\n   */\r\n  export function hitTestMenus(menu: Menu, x: number, y: number): boolean {\r\n    for (let temp: Menu | null = menu; temp; temp = temp.childMenu) {\r\n      if (ElementExt.hitTest(temp.node, x, y)) {\r\n        return true;\r\n      }\r\n    }\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Compute which extra separator items should be collapsed.\r\n   */\r\n  export function computeCollapsed(\r\n    items: ReadonlyArray<Menu.IItem>\r\n  ): boolean[] {\r\n    // Allocate the return array and fill it with `false`.\r\n    let result = new Array<boolean>(items.length);\r\n    ArrayExt.fill(result, false);\r\n\r\n    // Collapse the leading separators.\r\n    let k1 = 0;\r\n    let n = items.length;\r\n    for (; k1 < n; ++k1) {\r\n      let item = items[k1];\r\n      if (!item.isVisible) {\r\n        continue;\r\n      }\r\n      if (item.type !== 'separator') {\r\n        break;\r\n      }\r\n      result[k1] = true;\r\n    }\r\n\r\n    // Hide the trailing separators.\r\n    let k2 = n - 1;\r\n    for (; k2 >= 0; --k2) {\r\n      let item = items[k2];\r\n      if (!item.isVisible) {\r\n        continue;\r\n      }\r\n      if (item.type !== 'separator') {\r\n        break;\r\n      }\r\n      result[k2] = true;\r\n    }\r\n\r\n    // Hide the remaining consecutive separators.\r\n    let hide = false;\r\n    while (++k1 < k2) {\r\n      let item = items[k1];\r\n      if (!item.isVisible) {\r\n        continue;\r\n      }\r\n      if (item.type !== 'separator') {\r\n        hide = false;\r\n      } else if (hide) {\r\n        result[k1] = true;\r\n      } else {\r\n        hide = true;\r\n      }\r\n    }\r\n\r\n    // Return the resulting flags.\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Open a menu as a root menu at the target location.\r\n   */\r\n  export function openRootMenu(\r\n    menu: Menu,\r\n    x: number,\r\n    y: number,\r\n    forceX: boolean,\r\n    forceY: boolean\r\n  ): void {\r\n    // Ensure the menu is updated before attaching and measuring.\r\n    MessageLoop.sendMessage(menu, Widget.Msg.UpdateRequest);\r\n\r\n    // Get the current position and size of the main viewport.\r\n    let px = window.pageXOffset;\r\n    let py = window.pageYOffset;\r\n    let cw = document.documentElement.clientWidth;\r\n    let ch = document.documentElement.clientHeight;\r\n\r\n    // Compute the maximum allowed height for the menu.\r\n    let maxHeight = ch - (forceY ? y : 0);\r\n\r\n    // Fetch common variables.\r\n    let node = menu.node;\r\n    let style = node.style;\r\n\r\n    // Clear the menu geometry and prepare it for measuring.\r\n    style.top = '';\r\n    style.left = '';\r\n    style.width = '';\r\n    style.height = '';\r\n    style.visibility = 'hidden';\r\n    style.maxHeight = `${maxHeight}px`;\r\n\r\n    // Attach the menu to the document.\r\n    Widget.attach(menu, document.body);\r\n\r\n    // Measure the size of the menu.\r\n    let { width, height } = node.getBoundingClientRect();\r\n\r\n    // Adjust the X position of the menu to fit on-screen.\r\n    if (!forceX && x + width > px + cw) {\r\n      x = px + cw - width;\r\n    }\r\n\r\n    // Adjust the Y position of the menu to fit on-screen.\r\n    if (!forceY && y + height > py + ch) {\r\n      if (y > py + ch) {\r\n        y = py + ch - height;\r\n      } else {\r\n        y = y - height;\r\n      }\r\n    }\r\n\r\n    // Update the position of the menu to the computed position.\r\n    style.top = `${Math.max(0, y)}px`;\r\n    style.left = `${Math.max(0, x)}px`;\r\n\r\n    // Finally, make the menu visible on the screen.\r\n    style.visibility = '';\r\n  }\r\n\r\n  /**\r\n   * Open a menu as a submenu using an item node for positioning.\r\n   */\r\n  export function openSubmenu(submenu: Menu, itemNode: HTMLElement): void {\r\n    // Ensure the menu is updated before opening.\r\n    MessageLoop.sendMessage(submenu, Widget.Msg.UpdateRequest);\r\n\r\n    // Get the current position and size of the main viewport.\r\n    let px = window.pageXOffset;\r\n    let py = window.pageYOffset;\r\n    let cw = document.documentElement.clientWidth;\r\n    let ch = document.documentElement.clientHeight;\r\n\r\n    // Compute the maximum allowed height for the menu.\r\n    let maxHeight = ch;\r\n\r\n    // Fetch common variables.\r\n    let node = submenu.node;\r\n    let style = node.style;\r\n\r\n    // Clear the menu geometry and prepare it for measuring.\r\n    style.top = '';\r\n    style.left = '';\r\n    style.width = '';\r\n    style.height = '';\r\n    style.visibility = 'hidden';\r\n    style.maxHeight = `${maxHeight}px`;\r\n\r\n    // Attach the menu to the document.\r\n    Widget.attach(submenu, document.body);\r\n\r\n    // Measure the size of the menu.\r\n    let { width, height } = node.getBoundingClientRect();\r\n\r\n    // Compute the box sizing for the menu.\r\n    let box = ElementExt.boxSizing(submenu.node);\r\n\r\n    // Get the bounding rect for the target item node.\r\n    let itemRect = itemNode.getBoundingClientRect();\r\n\r\n    // Compute the target X position.\r\n    let x = itemRect.right - SUBMENU_OVERLAP;\r\n\r\n    // Adjust the X position to fit on the screen.\r\n    if (x + width > px + cw) {\r\n      x = itemRect.left + SUBMENU_OVERLAP - width;\r\n    }\r\n\r\n    // Compute the target Y position.\r\n    let y = itemRect.top - box.borderTop - box.paddingTop;\r\n\r\n    // Adjust the Y position to fit on the screen.\r\n    if (y + height > py + ch) {\r\n      y = itemRect.bottom + box.borderBottom + box.paddingBottom - height;\r\n    }\r\n\r\n    // Update the position of the menu to the computed position.\r\n    style.top = `${Math.max(0, y)}px`;\r\n    style.left = `${Math.max(0, x)}px`;\r\n\r\n    // Finally, make the menu visible on the screen.\r\n    style.visibility = '';\r\n  }\r\n\r\n  /**\r\n   * The results of a mnemonic search.\r\n   */\r\n  export interface IMnemonicResult {\r\n    /**\r\n     * The index of the first matching mnemonic item, or `-1`.\r\n     */\r\n    index: number;\r\n\r\n    /**\r\n     * Whether multiple mnemonic items matched.\r\n     */\r\n    multiple: boolean;\r\n\r\n    /**\r\n     * The index of the first auto matched non-mnemonic item.\r\n     */\r\n    auto: number;\r\n  }\r\n\r\n  /**\r\n   * Find the best matching mnemonic item.\r\n   *\r\n   * The search starts at the given index and wraps around.\r\n   */\r\n  export function findMnemonic(\r\n    items: ReadonlyArray<Menu.IItem>,\r\n    key: string,\r\n    start: number\r\n  ): IMnemonicResult {\r\n    // Setup the result variables.\r\n    let index = -1;\r\n    let auto = -1;\r\n    let multiple = false;\r\n\r\n    // Normalize the key to upper case.\r\n    let upperKey = key.toUpperCase();\r\n\r\n    // Search the items from the given start index.\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      // Compute the wrapped index.\r\n      let k = (i + start) % n;\r\n\r\n      // Lookup the item\r\n      let item = items[k];\r\n\r\n      // Ignore items which cannot be activated.\r\n      if (!canActivate(item)) {\r\n        continue;\r\n      }\r\n\r\n      // Ignore items with an empty label.\r\n      let label = item.label;\r\n      if (label.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Lookup the mnemonic index for the label.\r\n      let mn = item.mnemonic;\r\n\r\n      // Handle a valid mnemonic index.\r\n      if (mn >= 0 && mn < label.length) {\r\n        if (label[mn].toUpperCase() === upperKey) {\r\n          if (index === -1) {\r\n            index = k;\r\n          } else {\r\n            multiple = true;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n\r\n      // Finally, handle the auto index if possible.\r\n      if (auto === -1 && label[0].toUpperCase() === upperKey) {\r\n        auto = k;\r\n      }\r\n    }\r\n\r\n    // Return the search results.\r\n    return { index, multiple, auto };\r\n  }\r\n\r\n  /**\r\n   * A concrete implementation of `Menu.IItem`.\r\n   */\r\n  class MenuItem implements Menu.IItem {\r\n    /**\r\n     * Construct a new menu item.\r\n     */\r\n    constructor(commands: CommandRegistry, options: Menu.IItemOptions) {\r\n      this._commands = commands;\r\n      this.type = options.type || 'command';\r\n      this.command = options.command || '';\r\n      this.args = options.args || JSONExt.emptyObject;\r\n      this.submenu = options.submenu || null;\r\n    }\r\n\r\n    /**\r\n     * The type of the menu item.\r\n     */\r\n    readonly type: Menu.ItemType;\r\n\r\n    /**\r\n     * The command to execute when the item is triggered.\r\n     */\r\n    readonly command: string;\r\n\r\n    /**\r\n     * The arguments for the command.\r\n     */\r\n    readonly args: ReadonlyJSONObject;\r\n\r\n    /**\r\n     * The submenu for a `'submenu'` type item.\r\n     */\r\n    readonly submenu: Menu | null;\r\n\r\n    /**\r\n     * The display label for the menu item.\r\n     */\r\n    get label(): string {\r\n      if (this.type === 'command') {\r\n        return this._commands.label(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu' && this.submenu) {\r\n        return this.submenu.title.label;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    /**\r\n     * The mnemonic index for the menu item.\r\n     */\r\n    get mnemonic(): number {\r\n      if (this.type === 'command') {\r\n        return this._commands.mnemonic(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu' && this.submenu) {\r\n        return this.submenu.title.mnemonic;\r\n      }\r\n      return -1;\r\n    }\r\n\r\n    /**\r\n     * The icon renderer for the menu item.\r\n     */\r\n    get icon():\r\n      | VirtualElement.IRenderer\r\n      | undefined\r\n      /* <DEPRECATED> */\r\n      | string /* </DEPRECATED> */ {\r\n      if (this.type === 'command') {\r\n        return this._commands.icon(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu' && this.submenu) {\r\n        return this.submenu.title.icon;\r\n      }\r\n\r\n      /* <DEPRECATED> */\r\n      // alias to icon class if not otherwise defined\r\n      return this.iconClass;\r\n      /* </DEPRECATED> */\r\n\r\n      /* <FUTURE>\r\n      return undefined;\r\n      </FUTURE> */\r\n    }\r\n\r\n    /**\r\n     * The icon class for the menu item.\r\n     */\r\n    get iconClass(): string {\r\n      if (this.type === 'command') {\r\n        return this._commands.iconClass(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu' && this.submenu) {\r\n        return this.submenu.title.iconClass;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    /**\r\n     * The icon label for the menu item.\r\n     */\r\n    get iconLabel(): string {\r\n      if (this.type === 'command') {\r\n        return this._commands.iconLabel(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu' && this.submenu) {\r\n        return this.submenu.title.iconLabel;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    /**\r\n     * The display caption for the menu item.\r\n     */\r\n    get caption(): string {\r\n      if (this.type === 'command') {\r\n        return this._commands.caption(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu' && this.submenu) {\r\n        return this.submenu.title.caption;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    /**\r\n     * The extra class name for the menu item.\r\n     */\r\n    get className(): string {\r\n      if (this.type === 'command') {\r\n        return this._commands.className(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu' && this.submenu) {\r\n        return this.submenu.title.className;\r\n      }\r\n      return '';\r\n    }\r\n\r\n    /**\r\n     * The dataset for the menu item.\r\n     */\r\n    get dataset(): CommandRegistry.Dataset {\r\n      if (this.type === 'command') {\r\n        return this._commands.dataset(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu' && this.submenu) {\r\n        return this.submenu.title.dataset;\r\n      }\r\n      return {};\r\n    }\r\n\r\n    /**\r\n     * Whether the menu item is enabled.\r\n     */\r\n    get isEnabled(): boolean {\r\n      if (this.type === 'command') {\r\n        return this._commands.isEnabled(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu') {\r\n        return this.submenu !== null;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * Whether the menu item is toggled.\r\n     */\r\n    get isToggled(): boolean {\r\n      if (this.type === 'command') {\r\n        return this._commands.isToggled(this.command, this.args);\r\n      }\r\n      return false;\r\n    }\r\n\r\n    /**\r\n     * Whether the menu item is visible.\r\n     */\r\n    get isVisible(): boolean {\r\n      if (this.type === 'command') {\r\n        return this._commands.isVisible(this.command, this.args);\r\n      }\r\n      if (this.type === 'submenu') {\r\n        return this.submenu !== null;\r\n      }\r\n      return true;\r\n    }\r\n\r\n    /**\r\n     * The key binding for the menu item.\r\n     */\r\n    get keyBinding(): CommandRegistry.IKeyBinding | null {\r\n      if (this.type === 'command') {\r\n        let { command, args } = this;\r\n        return (\r\n          ArrayExt.findLastValue(this._commands.keyBindings, kb => {\r\n            return kb.command === command && JSONExt.deepEqual(kb.args, args);\r\n          }) || null\r\n        );\r\n      }\r\n      return null;\r\n    }\r\n\r\n    private _commands: CommandRegistry;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each } from '@lumino/algorithm';\r\n\r\nimport { CommandRegistry } from '@lumino/commands';\r\n\r\nimport { DisposableDelegate, IDisposable } from '@lumino/disposable';\r\n\r\nimport { Selector } from '@lumino/domutils';\r\n\r\nimport { Menu } from './menu';\r\n\r\n/**\r\n * An object which implements a universal context menu.\r\n *\r\n * #### Notes\r\n * The items shown in the context menu are determined by CSS selector\r\n * matching against the DOM hierarchy at the site of the mouse click.\r\n * This is similar in concept to how keyboard shortcuts are matched\r\n * in the command registry.\r\n */\r\nexport class ContextMenu {\r\n  /**\r\n   * Construct a new context menu.\r\n   *\r\n   * @param options - The options for initializing the menu.\r\n   */\r\n  constructor(options: ContextMenu.IOptions) {\r\n    const { groupByTarget, sortBySelector, ...others } = options;\r\n    this.menu = new Menu(others);\r\n    this._groupByTarget = groupByTarget !== false;\r\n    this._sortBySelector = sortBySelector !== false;\r\n  }\r\n\r\n  /**\r\n   * The menu widget which displays the matched context items.\r\n   */\r\n  readonly menu: Menu;\r\n\r\n  /**\r\n   * Add an item to the context menu.\r\n   *\r\n   * @param options - The options for creating the item.\r\n   *\r\n   * @returns A disposable which will remove the item from the menu.\r\n   */\r\n  addItem(options: ContextMenu.IItemOptions): IDisposable {\r\n    // Create an item from the given options.\r\n    let item = Private.createItem(options, this._idTick++);\r\n\r\n    // Add the item to the internal array.\r\n    this._items.push(item);\r\n\r\n    // Return a disposable which will remove the item.\r\n    return new DisposableDelegate(() => {\r\n      ArrayExt.removeFirstOf(this._items, item);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Open the context menu in response to a `'contextmenu'` event.\r\n   *\r\n   * @param event - The `'contextmenu'` event of interest.\r\n   *\r\n   * @returns `true` if the menu was opened, or `false` if no items\r\n   *   matched the event and the menu was not opened.\r\n   *\r\n   * #### Notes\r\n   * This method will populate the context menu with items which match\r\n   * the propagation path of the event, then open the menu at the mouse\r\n   * position indicated by the event.\r\n   */\r\n  open(event: MouseEvent): boolean {\r\n    // Clear the current contents of the context menu.\r\n    this.menu.clearItems();\r\n\r\n    // Bail early if there are no items to match.\r\n    if (this._items.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    // Find the matching items for the event.\r\n    let items = Private.matchItems(\r\n      this._items,\r\n      event,\r\n      this._groupByTarget,\r\n      this._sortBySelector\r\n    );\r\n\r\n    // Bail if there are no matching items.\r\n    if (!items || items.length === 0) {\r\n      return false;\r\n    }\r\n\r\n    // Add the filtered items to the menu.\r\n    each(items, item => {\r\n      this.menu.addItem(item);\r\n    });\r\n\r\n    // Open the context menu at the current mouse position.\r\n    this.menu.open(event.clientX, event.clientY);\r\n\r\n    // Indicate success.\r\n    return true;\r\n  }\r\n\r\n  private _groupByTarget: boolean = true;\r\n  private _idTick = 0;\r\n  private _items: Private.IItem[] = [];\r\n  private _sortBySelector: boolean = true;\r\n}\r\n\r\n/**\r\n * The namespace for the `ContextMenu` class statics.\r\n */\r\nexport namespace ContextMenu {\r\n  /**\r\n   * An options object for initializing a context menu.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The command registry to use with the context menu.\r\n     */\r\n    commands: CommandRegistry;\r\n\r\n    /**\r\n     * A custom renderer for use with the context menu.\r\n     */\r\n    renderer?: Menu.IRenderer;\r\n\r\n    /**\r\n     * Whether to sort by selector and rank or only rank.\r\n     *\r\n     * Default true.\r\n     */\r\n    sortBySelector?: boolean;\r\n\r\n    /**\r\n     * Whether to group items following the DOM hierarchy.\r\n     *\r\n     * Default true.\r\n     *\r\n     * #### Note\r\n     * If true, when the mouse event occurs on element `span` within `div.top`,\r\n     * the items matching `div.top` will be shown before the ones matching `body`.\r\n     */\r\n    groupByTarget?: boolean;\r\n  }\r\n\r\n  /**\r\n   * An options object for creating a context menu item.\r\n   */\r\n  export interface IItemOptions extends Menu.IItemOptions {\r\n    /**\r\n     * The CSS selector for the context menu item.\r\n     *\r\n     * The context menu item will only be displayed in the context menu\r\n     * when the selector matches a node on the propagation path of the\r\n     * contextmenu event. This allows the menu item to be restricted to\r\n     * user-defined contexts.\r\n     *\r\n     * The selector must not contain commas.\r\n     */\r\n    selector: string;\r\n\r\n    /**\r\n     * The rank for the item.\r\n     *\r\n     * The rank is used as a tie-breaker when ordering context menu\r\n     * items for display. Items are sorted in the following order:\r\n     *   1. Depth in the DOM tree (deeper is better)\r\n     *   2. Selector specificity (higher is better)\r\n     *   3. Rank (lower is better)\r\n     *   4. Insertion order\r\n     *\r\n     * The default rank is `Infinity`.\r\n     */\r\n    rank?: number;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A normalized item for a context menu.\r\n   */\r\n  export interface IItem extends Menu.IItemOptions {\r\n    /**\r\n     * The selector for the item.\r\n     */\r\n    selector: string;\r\n\r\n    /**\r\n     * The rank for the item.\r\n     */\r\n    rank: number;\r\n\r\n    /**\r\n     * The tie-breaking id for the item.\r\n     */\r\n    id: number;\r\n  }\r\n\r\n  /**\r\n   * Create a normalized context menu item from an options object.\r\n   */\r\n  export function createItem(\r\n    options: ContextMenu.IItemOptions,\r\n    id: number\r\n  ): IItem {\r\n    let selector = validateSelector(options.selector);\r\n    let rank = options.rank !== undefined ? options.rank : Infinity;\r\n    return { ...options, selector, rank, id };\r\n  }\r\n\r\n  /**\r\n   * Find the items which match a context menu event.\r\n   *\r\n   * The results are sorted by DOM level, specificity, and rank.\r\n   */\r\n  export function matchItems(\r\n    items: IItem[],\r\n    event: MouseEvent,\r\n    groupByTarget: boolean,\r\n    sortBySelector: boolean\r\n  ): IItem[] | null {\r\n    // Look up the target of the event.\r\n    let target = event.target as Element | null;\r\n\r\n    // Bail if there is no target.\r\n    if (!target) {\r\n      return null;\r\n    }\r\n\r\n    // Look up the current target of the event.\r\n    let currentTarget = event.currentTarget as Element | null;\r\n\r\n    // Bail if there is no current target.\r\n    if (!currentTarget) {\r\n      return null;\r\n    }\r\n\r\n    // There are some third party libraries that cause the `target` to\r\n    // be detached from the DOM before lumino can process the event.\r\n    // If that happens, search for a new target node by point. If that\r\n    // node is still dangling, bail.\r\n    if (!currentTarget.contains(target)) {\r\n      target = document.elementFromPoint(event.clientX, event.clientY);\r\n      if (!target || !currentTarget.contains(target)) {\r\n        return null;\r\n      }\r\n    }\r\n\r\n    // Set up the result array.\r\n    let result: IItem[] = [];\r\n\r\n    // Copy the items array to allow in-place modification.\r\n    let availableItems: Array<IItem | null> = items.slice();\r\n\r\n    // Walk up the DOM hierarchy searching for matches.\r\n    while (target !== null) {\r\n      // Set up the match array for this DOM level.\r\n      let matches: IItem[] = [];\r\n\r\n      // Search the remaining items for matches.\r\n      for (let i = 0, n = availableItems.length; i < n; ++i) {\r\n        // Fetch the item.\r\n        let item = availableItems[i];\r\n\r\n        // Skip items which are already consumed.\r\n        if (!item) {\r\n          continue;\r\n        }\r\n\r\n        // Skip items which do not match the element.\r\n        if (!Selector.matches(target, item.selector)) {\r\n          continue;\r\n        }\r\n\r\n        // Add the matched item to the result for this DOM level.\r\n        matches.push(item);\r\n\r\n        // Mark the item as consumed.\r\n        availableItems[i] = null;\r\n      }\r\n\r\n      // Sort the matches for this level and add them to the results.\r\n      if (matches.length !== 0) {\r\n        if (groupByTarget) {\r\n          matches.sort(sortBySelector ? itemCmp : itemCmpRank);\r\n        }\r\n        result.push(...matches);\r\n      }\r\n\r\n      // Stop searching at the limits of the DOM range.\r\n      if (target === currentTarget) {\r\n        break;\r\n      }\r\n\r\n      // Step to the parent DOM level.\r\n      target = target.parentElement;\r\n    }\r\n\r\n    if (!groupByTarget) {\r\n      result.sort(sortBySelector ? itemCmp : itemCmpRank);\r\n    }\r\n\r\n    // Return the matched and sorted results.\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Validate the selector for a menu item.\r\n   *\r\n   * This returns the validated selector, or throws if the selector is\r\n   * invalid or contains commas.\r\n   */\r\n  function validateSelector(selector: string): string {\r\n    if (selector.indexOf(',') !== -1) {\r\n      throw new Error(`Selector cannot contain commas: ${selector}`);\r\n    }\r\n    if (!Selector.isValid(selector)) {\r\n      throw new Error(`Invalid selector: ${selector}`);\r\n    }\r\n    return selector;\r\n  }\r\n\r\n  /**\r\n   * A sort comparison function for a context menu item by ranks.\r\n   */\r\n  function itemCmpRank(a: IItem, b: IItem): number {\r\n    // Sort based on rank.\r\n    let r1 = a.rank;\r\n    let r2 = b.rank;\r\n    if (r1 !== r2) {\r\n      return r1 < r2 ? -1 : 1; // Infinity-safe\r\n    }\r\n\r\n    // When all else fails, sort by item id.\r\n    return a.id - b.id;\r\n  }\r\n\r\n  /**\r\n   * A sort comparison function for a context menu item by selectors and ranks.\r\n   */\r\n  function itemCmp(a: IItem, b: IItem): number {\r\n    // Sort first based on selector specificity.\r\n    let s1 = Selector.calculateSpecificity(a.selector);\r\n    let s2 = Selector.calculateSpecificity(b.selector);\r\n    if (s1 !== s2) {\r\n      return s2 - s1;\r\n    }\r\n\r\n    // If specificities are equal\r\n    return itemCmpRank(a, b);\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each } from '@lumino/algorithm';\r\n\r\nimport { IDisposable } from '@lumino/disposable';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Drag } from '@lumino/dragdrop';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport {\r\n  ElementARIAAttrs,\r\n  ElementDataset,\r\n  ElementInlineStyle,\r\n  h,\r\n  VirtualDOM,\r\n  VirtualElement\r\n} from '@lumino/virtualdom';\r\n\r\nimport { Title } from './title';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A widget which displays titles as a single row or column of tabs.\r\n *\r\n * #### Notes\r\n * If CSS transforms are used to rotate nodes for vertically oriented\r\n * text, then tab dragging will not work correctly. The `tabsMovable`\r\n * property should be set to `false` when rotating nodes from CSS.\r\n */\r\nexport class TabBar<T> extends Widget {\r\n  /**\r\n   * Construct a new tab bar.\r\n   *\r\n   * @param options - The options for initializing the tab bar.\r\n   */\r\n  constructor(options: TabBar.IOptions<T> = {}) {\r\n    super({ node: Private.createNode() });\r\n    this.addClass('lm-TabBar');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-TabBar');\r\n    /* </DEPRECATED> */\r\n    this.contentNode.setAttribute('role', 'tablist');\r\n    this.setFlag(Widget.Flag.DisallowLayout);\r\n    this._document = options.document || document;\r\n    this.tabsMovable = options.tabsMovable || false;\r\n    this.titlesEditable = options.titlesEditable || false;\r\n    this.allowDeselect = options.allowDeselect || false;\r\n    this.addButtonEnabled = options.addButtonEnabled || false;\r\n    this.insertBehavior = options.insertBehavior || 'select-tab-if-needed';\r\n    this.name = options.name || '';\r\n    this.orientation = options.orientation || 'horizontal';\r\n    this.removeBehavior = options.removeBehavior || 'select-tab-after';\r\n    this.renderer = options.renderer || TabBar.defaultRenderer;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the widget.\r\n   */\r\n  dispose(): void {\r\n    this._releaseMouse();\r\n    this._titles.length = 0;\r\n    this._previousTitle = null;\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the current tab is changed.\r\n   *\r\n   * #### Notes\r\n   * This signal is emitted when the currently selected tab is changed\r\n   * either through user or programmatic interaction.\r\n   *\r\n   * Notably, this signal is not emitted when the index of the current\r\n   * tab changes due to tabs being inserted, removed, or moved. It is\r\n   * only emitted when the actual current tab node is changed.\r\n   */\r\n  get currentChanged(): ISignal<this, TabBar.ICurrentChangedArgs<T>> {\r\n    return this._currentChanged;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when a tab is moved by the user.\r\n   *\r\n   * #### Notes\r\n   * This signal is emitted when a tab is moved by user interaction.\r\n   *\r\n   * This signal is not emitted when a tab is moved programmatically.\r\n   */\r\n  get tabMoved(): ISignal<this, TabBar.ITabMovedArgs<T>> {\r\n    return this._tabMoved;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when a tab is clicked by the user.\r\n   *\r\n   * #### Notes\r\n   * If the clicked tab is not the current tab, the clicked tab will be\r\n   * made current and the `currentChanged` signal will be emitted first.\r\n   *\r\n   * This signal is emitted even if the clicked tab is the current tab.\r\n   */\r\n  get tabActivateRequested(): ISignal<\r\n    this,\r\n    TabBar.ITabActivateRequestedArgs<T>\r\n  > {\r\n    return this._tabActivateRequested;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the tab bar add button is clicked.\r\n   */\r\n  get addRequested(): ISignal<this, void> {\r\n    return this._addRequested;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when a tab close icon is clicked.\r\n   *\r\n   * #### Notes\r\n   * This signal is not emitted unless the tab title is `closable`.\r\n   */\r\n  get tabCloseRequested(): ISignal<this, TabBar.ITabCloseRequestedArgs<T>> {\r\n    return this._tabCloseRequested;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when a tab is dragged beyond the detach threshold.\r\n   *\r\n   * #### Notes\r\n   * This signal is emitted when the user drags a tab with the mouse,\r\n   * and mouse is dragged beyond the detach threshold.\r\n   *\r\n   * The consumer of the signal should call `releaseMouse` and remove\r\n   * the tab in order to complete the detach.\r\n   *\r\n   * This signal is only emitted once per drag cycle.\r\n   */\r\n  get tabDetachRequested(): ISignal<this, TabBar.ITabDetachRequestedArgs<T>> {\r\n    return this._tabDetachRequested;\r\n  }\r\n\r\n  /**\r\n   * The renderer used by the tab bar.\r\n   */\r\n  readonly renderer: TabBar.IRenderer<T>;\r\n\r\n  /**\r\n   * The document to use with the tab bar.\r\n   *\r\n   * The default is the global `document` instance.\r\n   */\r\n  get document(): Document | ShadowRoot {\r\n    return this._document;\r\n  }\r\n\r\n  /**\r\n   * Whether the tabs are movable by the user.\r\n   *\r\n   * #### Notes\r\n   * Tabs can always be moved programmatically.\r\n   */\r\n  tabsMovable: boolean;\r\n\r\n  /**\r\n   * Whether the titles can be user-edited.\r\n   *\r\n   */\r\n  get titlesEditable(): boolean {\r\n    return this._titlesEditable;\r\n  }\r\n\r\n  /**\r\n   * Set whether titles can be user edited.\r\n   *\r\n   */\r\n  set titlesEditable(value: boolean) {\r\n    this._titlesEditable = value;\r\n  }\r\n\r\n  /**\r\n   * Whether a tab can be deselected by the user.\r\n   *\r\n   * #### Notes\r\n   * Tabs can be always be deselected programmatically.\r\n   */\r\n  allowDeselect: boolean;\r\n\r\n  /**\r\n   * The selection behavior when inserting a tab.\r\n   */\r\n  insertBehavior: TabBar.InsertBehavior;\r\n\r\n  /**\r\n   * The selection behavior when removing a tab.\r\n   */\r\n  removeBehavior: TabBar.RemoveBehavior;\r\n\r\n  /**\r\n   * Get the currently selected title.\r\n   *\r\n   * #### Notes\r\n   * This will be `null` if no tab is selected.\r\n   */\r\n  get currentTitle(): Title<T> | null {\r\n    return this._titles[this._currentIndex] || null;\r\n  }\r\n\r\n  /**\r\n   * Set the currently selected title.\r\n   *\r\n   * #### Notes\r\n   * If the title does not exist, the title will be set to `null`.\r\n   */\r\n  set currentTitle(value: Title<T> | null) {\r\n    this.currentIndex = value ? this._titles.indexOf(value) : -1;\r\n  }\r\n\r\n  /**\r\n   * Get the index of the currently selected tab.\r\n   *\r\n   * #### Notes\r\n   * This will be `-1` if no tab is selected.\r\n   */\r\n  get currentIndex(): number {\r\n    return this._currentIndex;\r\n  }\r\n\r\n  /**\r\n   * Set the index of the currently selected tab.\r\n   *\r\n   * #### Notes\r\n   * If the value is out of range, the index will be set to `-1`.\r\n   */\r\n  set currentIndex(value: number) {\r\n    // Adjust for an out of range index.\r\n    if (value < 0 || value >= this._titles.length) {\r\n      value = -1;\r\n    }\r\n\r\n    // Bail early if the index will not change.\r\n    if (this._currentIndex === value) {\r\n      return;\r\n    }\r\n\r\n    // Look up the previous index and title.\r\n    let pi = this._currentIndex;\r\n    let pt = this._titles[pi] || null;\r\n\r\n    // Look up the current index and title.\r\n    let ci = value;\r\n    let ct = this._titles[ci] || null;\r\n\r\n    // Update the current index and previous title.\r\n    this._currentIndex = ci;\r\n    this._previousTitle = pt;\r\n\r\n    // Schedule an update of the tabs.\r\n    this.update();\r\n\r\n    // Emit the current changed signal.\r\n    this._currentChanged.emit({\r\n      previousIndex: pi,\r\n      previousTitle: pt,\r\n      currentIndex: ci,\r\n      currentTitle: ct\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the name of the tab bar.\r\n   */\r\n  get name(): string {\r\n    return this._name;\r\n  }\r\n\r\n  /**\r\n   * Set the name of the tab bar.\r\n   */\r\n  set name(value: string) {\r\n    this._name = value;\r\n    if (value) {\r\n      this.contentNode.setAttribute('aria-label', value);\r\n    } else {\r\n      this.contentNode.removeAttribute('aria-label');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the orientation of the tab bar.\r\n   *\r\n   * #### Notes\r\n   * This controls whether the tabs are arranged in a row or column.\r\n   */\r\n  get orientation(): TabBar.Orientation {\r\n    return this._orientation;\r\n  }\r\n\r\n  /**\r\n   * Set the orientation of the tab bar.\r\n   *\r\n   * #### Notes\r\n   * This controls whether the tabs are arranged in a row or column.\r\n   */\r\n  set orientation(value: TabBar.Orientation) {\r\n    // Do nothing if the orientation does not change.\r\n    if (this._orientation === value) {\r\n      return;\r\n    }\r\n\r\n    // Release the mouse before making any changes.\r\n    this._releaseMouse();\r\n\r\n    // Toggle the orientation values.\r\n    this._orientation = value;\r\n    this.dataset['orientation'] = value;\r\n    this.contentNode.setAttribute('aria-orientation', value);\r\n  }\r\n\r\n  /**\r\n   * Whether the add button is enabled.\r\n   */\r\n  get addButtonEnabled(): boolean {\r\n    return this._addButtonEnabled;\r\n  }\r\n\r\n  /**\r\n   * Set whether the add button is enabled.\r\n   */\r\n  set addButtonEnabled(value: boolean) {\r\n    // Do nothing if the value does not change.\r\n    if (this._addButtonEnabled === value) {\r\n      return;\r\n    }\r\n\r\n    this._addButtonEnabled = value;\r\n    if (value) {\r\n      this.addButtonNode.classList.remove('lm-mod-hidden');\r\n    } else {\r\n      this.addButtonNode.classList.add('lm-mod-hidden');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the titles in the tab bar.\r\n   */\r\n  get titles(): ReadonlyArray<Title<T>> {\r\n    return this._titles;\r\n  }\r\n\r\n  /**\r\n   * The tab bar content node.\r\n   *\r\n   * #### Notes\r\n   * This is the node which holds the tab nodes.\r\n   *\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get contentNode(): HTMLUListElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-TabBar-content'\r\n    )[0] as HTMLUListElement;\r\n  }\r\n\r\n  /**\r\n   * The tab bar add button node.\r\n   *\r\n   * #### Notes\r\n   * This is the node which holds the add button.\r\n   *\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get addButtonNode(): HTMLDivElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-TabBar-addButton'\r\n    )[0] as HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * Add a tab to the end of the tab bar.\r\n   *\r\n   * @param value - The title which holds the data for the tab,\r\n   *   or an options object to convert to a title.\r\n   *\r\n   * @returns The title object added to the tab bar.\r\n   *\r\n   * #### Notes\r\n   * If the title is already added to the tab bar, it will be moved.\r\n   */\r\n  addTab(value: Title<T> | Title.IOptions<T>): Title<T> {\r\n    return this.insertTab(this._titles.length, value);\r\n  }\r\n\r\n  /**\r\n   * Insert a tab into the tab bar at the specified index.\r\n   *\r\n   * @param index - The index at which to insert the tab.\r\n   *\r\n   * @param value - The title which holds the data for the tab,\r\n   *   or an options object to convert to a title.\r\n   *\r\n   * @returns The title object added to the tab bar.\r\n   *\r\n   * #### Notes\r\n   * The index will be clamped to the bounds of the tabs.\r\n   *\r\n   * If the title is already added to the tab bar, it will be moved.\r\n   */\r\n  insertTab(index: number, value: Title<T> | Title.IOptions<T>): Title<T> {\r\n    // Release the mouse before making any changes.\r\n    this._releaseMouse();\r\n\r\n    // Coerce the value to a title.\r\n    let title = Private.asTitle(value);\r\n\r\n    // Look up the index of the title.\r\n    let i = this._titles.indexOf(title);\r\n\r\n    // Clamp the insert index to the array bounds.\r\n    let j = Math.max(0, Math.min(index, this._titles.length));\r\n\r\n    // If the title is not in the array, insert it.\r\n    if (i === -1) {\r\n      // Insert the title into the array.\r\n      ArrayExt.insert(this._titles, j, title);\r\n\r\n      // Connect to the title changed signal.\r\n      title.changed.connect(this._onTitleChanged, this);\r\n\r\n      // Schedule an update of the tabs.\r\n      this.update();\r\n\r\n      // Adjust the current index for the insert.\r\n      this._adjustCurrentForInsert(j, title);\r\n\r\n      // Return the title added to the tab bar.\r\n      return title;\r\n    }\r\n\r\n    // Otherwise, the title exists in the array and should be moved.\r\n\r\n    // Adjust the index if the location is at the end of the array.\r\n    if (j === this._titles.length) {\r\n      j--;\r\n    }\r\n\r\n    // Bail if there is no effective move.\r\n    if (i === j) {\r\n      return title;\r\n    }\r\n\r\n    // Move the title to the new location.\r\n    ArrayExt.move(this._titles, i, j);\r\n\r\n    // Schedule an update of the tabs.\r\n    this.update();\r\n\r\n    // Adjust the current index for the move.\r\n    this._adjustCurrentForMove(i, j);\r\n\r\n    // Return the title added to the tab bar.\r\n    return title;\r\n  }\r\n\r\n  /**\r\n   * Remove a tab from the tab bar.\r\n   *\r\n   * @param title - The title for the tab to remove.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the title is not in the tab bar.\r\n   */\r\n  removeTab(title: Title<T>): void {\r\n    this.removeTabAt(this._titles.indexOf(title));\r\n  }\r\n\r\n  /**\r\n   * Remove the tab at a given index from the tab bar.\r\n   *\r\n   * @param index - The index of the tab to remove.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the index is out of range.\r\n   */\r\n  removeTabAt(index: number): void {\r\n    // Release the mouse before making any changes.\r\n    this._releaseMouse();\r\n\r\n    // Remove the title from the array.\r\n    let title = ArrayExt.removeAt(this._titles, index);\r\n\r\n    // Bail if the index is out of range.\r\n    if (!title) {\r\n      return;\r\n    }\r\n\r\n    // Disconnect from the title changed signal.\r\n    title.changed.disconnect(this._onTitleChanged, this);\r\n\r\n    // Clear the previous title if it's being removed.\r\n    if (title === this._previousTitle) {\r\n      this._previousTitle = null;\r\n    }\r\n\r\n    // Schedule an update of the tabs.\r\n    this.update();\r\n\r\n    // Adjust the current index for the remove.\r\n    this._adjustCurrentForRemove(index, title);\r\n  }\r\n\r\n  /**\r\n   * Remove all tabs from the tab bar.\r\n   */\r\n  clearTabs(): void {\r\n    // Bail if there is nothing to remove.\r\n    if (this._titles.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Release the mouse before making any changes.\r\n    this._releaseMouse();\r\n\r\n    // Disconnect from the title changed signals.\r\n    for (let title of this._titles) {\r\n      title.changed.disconnect(this._onTitleChanged, this);\r\n    }\r\n\r\n    // Get the current index and title.\r\n    let pi = this.currentIndex;\r\n    let pt = this.currentTitle;\r\n\r\n    // Reset the current index and previous title.\r\n    this._currentIndex = -1;\r\n    this._previousTitle = null;\r\n\r\n    // Clear the title array.\r\n    this._titles.length = 0;\r\n\r\n    // Schedule an update of the tabs.\r\n    this.update();\r\n\r\n    // If no tab was selected, there's nothing else to do.\r\n    if (pi === -1) {\r\n      return;\r\n    }\r\n\r\n    // Emit the current changed signal.\r\n    this._currentChanged.emit({\r\n      previousIndex: pi,\r\n      previousTitle: pt,\r\n      currentIndex: -1,\r\n      currentTitle: null\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Release the mouse and restore the non-dragged tab positions.\r\n   *\r\n   * #### Notes\r\n   * This will cause the tab bar to stop handling mouse events and to\r\n   * restore the tabs to their non-dragged positions.\r\n   */\r\n  releaseMouse(): void {\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the tab bar.\r\n   *\r\n   * @param event - The DOM event sent to the tab bar.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the tab bar's DOM node.\r\n   *\r\n   * This should not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'mousedown': // <DEPRECATED>\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'mousemove': // <DEPRECATED>\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'mouseup': // <DEPRECATED>\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'pointerdown':\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'pointermove':\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'pointerup':\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'dblclick':\r\n        this._evtDblClick(event as MouseEvent);\r\n        break;\r\n      case 'keydown':\r\n        this._evtKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'contextmenu':\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('mousedown', this); // <DEPRECATED>\r\n    this.node.addEventListener('pointerdown', this);\r\n    this.node.addEventListener('dblclick', this);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    this.node.removeEventListener('mousedown', this); // <DEPRECATED>\r\n    this.node.removeEventListener('pointerdown', this);\r\n    this.node.removeEventListener('dblclick', this);\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    let titles = this._titles;\r\n    let renderer = this.renderer;\r\n    let currentTitle = this.currentTitle;\r\n    let content = new Array<VirtualElement>(titles.length);\r\n    for (let i = 0, n = titles.length; i < n; ++i) {\r\n      let title = titles[i];\r\n      let current = title === currentTitle;\r\n      let zIndex = current ? n : n - i - 1;\r\n      content[i] = renderer.renderTab({ title, current, zIndex });\r\n    }\r\n    VirtualDOM.render(content, this.contentNode);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'dblclick'` event for the tab bar.\r\n   */\r\n  private _evtDblClick(event: MouseEvent): void {\r\n    // Do nothing if titles are not editable\r\n    if (!this.titlesEditable) {\r\n      return;\r\n    }\r\n\r\n    let tabs = this.contentNode.children;\r\n\r\n    // Find the index of the released tab.\r\n    let index = ArrayExt.findFirstIndex(tabs, tab => {\r\n      return ElementExt.hitTest(tab, event.clientX, event.clientY);\r\n    });\r\n\r\n    // Do nothing if the press is not on a tab.\r\n    if (index === -1) {\r\n      return;\r\n    }\r\n\r\n    let title = this.titles[index];\r\n    let label = tabs[index].querySelector('.lm-TabBar-tabLabel') as HTMLElement;\r\n    if (label && label.contains(event.target as HTMLElement)) {\r\n      let value = title.label || '';\r\n\r\n      // Clear the label element\r\n      let oldValue = label.innerHTML;\r\n      label.innerHTML = '';\r\n\r\n      let input = document.createElement('input');\r\n      input.classList.add('lm-TabBar-tabInput');\r\n      input.value = value;\r\n      label.appendChild(input);\r\n\r\n      let onblur = () => {\r\n        input.removeEventListener('blur', onblur);\r\n        label.innerHTML = oldValue;\r\n      };\r\n\r\n      input.addEventListener('dblclick', (event: Event) =>\r\n        event.stopPropagation()\r\n      );\r\n      input.addEventListener('blur', onblur);\r\n      input.addEventListener('keydown', (event: KeyboardEvent) => {\r\n        if (event.key === 'Enter') {\r\n          if (input.value !== '') {\r\n            title.label = title.caption = input.value;\r\n          }\r\n          onblur();\r\n        } else if (event.key === 'Escape') {\r\n          onblur();\r\n        }\r\n      });\r\n      input.select();\r\n      input.focus();\r\n\r\n      if (label.children.length > 0) {\r\n        (label.children[0] as HTMLElement).focus();\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the tab bar.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    // Stop all input events during drag.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Release the mouse if `Escape` is pressed.\r\n    if (event.keyCode === 27) {\r\n      this._releaseMouse();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousedown'` event for the tab bar.\r\n   */\r\n  private _evtMouseDown(event: MouseEvent): void {\r\n    // Do nothing if it's not a left or middle mouse press.\r\n    if (event.button !== 0 && event.button !== 1) {\r\n      return;\r\n    }\r\n\r\n    // Do nothing if a drag is in progress.\r\n    if (this._dragData) {\r\n      return;\r\n    }\r\n\r\n    // Check if the add button was clicked.\r\n    let addButtonClicked =\r\n      this.addButtonEnabled &&\r\n      this.addButtonNode.contains(event.target as HTMLElement);\r\n\r\n    // Lookup the tab nodes.\r\n    let tabs = this.contentNode.children;\r\n\r\n    // Find the index of the pressed tab.\r\n    let index = ArrayExt.findFirstIndex(tabs, tab => {\r\n      return ElementExt.hitTest(tab, event.clientX, event.clientY);\r\n    });\r\n\r\n    // Do nothing if the press is not on a tab or the add button.\r\n    if (index === -1 && !addButtonClicked) {\r\n      return;\r\n    }\r\n\r\n    // Pressing on a tab stops the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Initialize the non-measured parts of the drag data.\r\n    this._dragData = {\r\n      tab: tabs[index] as HTMLElement,\r\n      index: index,\r\n      pressX: event.clientX,\r\n      pressY: event.clientY,\r\n      tabPos: -1,\r\n      tabSize: -1,\r\n      tabPressPos: -1,\r\n      targetIndex: -1,\r\n      tabLayout: null,\r\n      contentRect: null,\r\n      override: null,\r\n      dragActive: false,\r\n      dragAborted: false,\r\n      detachRequested: false\r\n    };\r\n\r\n    // Add the document mouse up listener.\r\n    this.document.addEventListener('mouseup', this, true); // <DEPRECATED>\r\n    this.document.addEventListener('pointerup', this, true);\r\n\r\n    // Do nothing else if the middle button or add button is clicked.\r\n    if (event.button === 1 || addButtonClicked) {\r\n      return;\r\n    }\r\n\r\n    // Do nothing else if the close icon is clicked.\r\n    let icon = tabs[index].querySelector(this.renderer.closeIconSelector);\r\n    if (icon && icon.contains(event.target as HTMLElement)) {\r\n      return;\r\n    }\r\n\r\n    // Add the extra listeners if the tabs are movable.\r\n    if (this.tabsMovable) {\r\n      this.document.addEventListener('mousemove', this, true); // <DEPRECATED>\r\n      this.document.addEventListener('pointermove', this, true);\r\n      this.document.addEventListener('keydown', this, true);\r\n      this.document.addEventListener('contextmenu', this, true);\r\n    }\r\n\r\n    // Update the current index as appropriate.\r\n    if (this.allowDeselect && this.currentIndex === index) {\r\n      this.currentIndex = -1;\r\n    } else {\r\n      this.currentIndex = index;\r\n    }\r\n\r\n    // Do nothing else if there is no current tab.\r\n    if (this.currentIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    // Emit the tab activate request signal.\r\n    this._tabActivateRequested.emit({\r\n      index: this.currentIndex,\r\n      title: this.currentTitle!\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousemove'` event for the tab bar.\r\n   */\r\n  private _evtMouseMove(event: MouseEvent): void {\r\n    // Do nothing if no drag is in progress.\r\n    let data = this._dragData;\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    // Suppress the event during a drag.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Lookup the tab nodes.\r\n    let tabs = this.contentNode.children;\r\n\r\n    // Bail early if the drag threshold has not been met.\r\n    if (!data.dragActive && !Private.dragExceeded(data, event)) {\r\n      return;\r\n    }\r\n\r\n    // Activate the drag if necessary.\r\n    if (!data.dragActive) {\r\n      // Fill in the rest of the drag data measurements.\r\n      let tabRect = data.tab.getBoundingClientRect();\r\n      if (this._orientation === 'horizontal') {\r\n        data.tabPos = data.tab.offsetLeft;\r\n        data.tabSize = tabRect.width;\r\n        data.tabPressPos = data.pressX - tabRect.left;\r\n      } else {\r\n        data.tabPos = data.tab.offsetTop;\r\n        data.tabSize = tabRect.height;\r\n        data.tabPressPos = data.pressY - tabRect.top;\r\n      }\r\n      data.tabLayout = Private.snapTabLayout(tabs, this._orientation);\r\n      data.contentRect = this.contentNode.getBoundingClientRect();\r\n      data.override = Drag.overrideCursor('default');\r\n\r\n      // Add the dragging style classes.\r\n      data.tab.classList.add('lm-mod-dragging');\r\n      this.addClass('lm-mod-dragging');\r\n      /* <DEPRECATED> */\r\n      data.tab.classList.add('p-mod-dragging');\r\n      this.addClass('p-mod-dragging');\r\n      /* </DEPRECATED> */\r\n\r\n      // Mark the drag as active.\r\n      data.dragActive = true;\r\n    }\r\n\r\n    // Emit the detach requested signal if the threshold is exceeded.\r\n    if (!data.detachRequested && Private.detachExceeded(data, event)) {\r\n      // Only emit the signal once per drag cycle.\r\n      data.detachRequested = true;\r\n\r\n      // Setup the arguments for the signal.\r\n      let index = data.index;\r\n      let clientX = event.clientX;\r\n      let clientY = event.clientY;\r\n      let tab = tabs[index] as HTMLElement;\r\n      let title = this._titles[index];\r\n\r\n      // Emit the tab detach requested signal.\r\n      this._tabDetachRequested.emit({ index, title, tab, clientX, clientY });\r\n\r\n      // Bail if the signal handler aborted the drag.\r\n      if (data.dragAborted) {\r\n        return;\r\n      }\r\n    }\r\n\r\n    // Update the positions of the tabs.\r\n    Private.layoutTabs(tabs, data, event, this._orientation);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseup'` event for the document.\r\n   */\r\n  private _evtMouseUp(event: MouseEvent): void {\r\n    // Do nothing if it's not a left or middle mouse release.\r\n    if (event.button !== 0 && event.button !== 1) {\r\n      return;\r\n    }\r\n\r\n    // Do nothing if no drag is in progress.\r\n    const data = this._dragData;\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Remove the extra mouse event listeners.\r\n    this.document.removeEventListener('mousemove', this, true); // <DEPRECATED>\r\n    this.document.removeEventListener('mouseup', this, true); // <DEPRECATED>\r\n    this.document.removeEventListener('pointermove', this, true);\r\n    this.document.removeEventListener('pointerup', this, true);\r\n    this.document.removeEventListener('keydown', this, true);\r\n    this.document.removeEventListener('contextmenu', this, true);\r\n\r\n    // Handle a release when the drag is not active.\r\n    if (!data.dragActive) {\r\n      // Clear the drag data.\r\n      this._dragData = null;\r\n\r\n      // Handle clicking the add button.\r\n      let addButtonClicked =\r\n        this.addButtonEnabled &&\r\n        this.addButtonNode.contains(event.target as HTMLElement);\r\n      if (addButtonClicked) {\r\n        this._addRequested.emit(undefined);\r\n        return;\r\n      }\r\n\r\n      // Lookup the tab nodes.\r\n      let tabs = this.contentNode.children;\r\n\r\n      // Find the index of the released tab.\r\n      let index = ArrayExt.findFirstIndex(tabs, tab => {\r\n        return ElementExt.hitTest(tab, event.clientX, event.clientY);\r\n      });\r\n\r\n      // Do nothing if the release is not on the original pressed tab.\r\n      if (index !== data.index) {\r\n        return;\r\n      }\r\n\r\n      // Ignore the release if the title is not closable.\r\n      let title = this._titles[index];\r\n      if (!title.closable) {\r\n        return;\r\n      }\r\n\r\n      // Emit the close requested signal if the middle button is released.\r\n      if (event.button === 1) {\r\n        this._tabCloseRequested.emit({ index, title });\r\n        return;\r\n      }\r\n\r\n      // Emit the close requested signal if the close icon was released.\r\n      let icon = tabs[index].querySelector(this.renderer.closeIconSelector);\r\n      if (icon && icon.contains(event.target as HTMLElement)) {\r\n        this._tabCloseRequested.emit({ index, title });\r\n        return;\r\n      }\r\n\r\n      // Otherwise, there is nothing left to do.\r\n      return;\r\n    }\r\n\r\n    // Do nothing if the left button is not released.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Position the tab at its final resting position.\r\n    Private.finalizeTabPosition(data, this._orientation);\r\n\r\n    // Remove the dragging class from the tab so it can be transitioned.\r\n    data.tab.classList.remove('lm-mod-dragging');\r\n    /* <DEPRECATED> */\r\n    data.tab.classList.remove('p-mod-dragging');\r\n    /* </DEPRECATED> */\r\n\r\n    // Parse the transition duration for releasing the tab.\r\n    let duration = Private.parseTransitionDuration(data.tab);\r\n\r\n    // Complete the release on a timer to allow the tab to transition.\r\n    setTimeout(() => {\r\n      // Do nothing if the drag has been aborted.\r\n      if (data.dragAborted) {\r\n        return;\r\n      }\r\n\r\n      // Clear the drag data reference.\r\n      this._dragData = null;\r\n\r\n      // Reset the positions of the tabs.\r\n      Private.resetTabPositions(this.contentNode.children, this._orientation);\r\n\r\n      // Clear the cursor grab.\r\n      data.override!.dispose();\r\n\r\n      // Remove the remaining dragging style.\r\n      this.removeClass('lm-mod-dragging');\r\n      /* <DEPRECATED> */\r\n      this.removeClass('p-mod-dragging');\r\n      /* </DEPRECATED> */\r\n\r\n      // If the tab was not moved, there is nothing else to do.\r\n      let i = data.index;\r\n      let j = data.targetIndex;\r\n      if (j === -1 || i === j) {\r\n        return;\r\n      }\r\n\r\n      // Move the title to the new locations.\r\n      ArrayExt.move(this._titles, i, j);\r\n\r\n      // Adjust the current index for the move.\r\n      this._adjustCurrentForMove(i, j);\r\n\r\n      // Emit the tab moved signal.\r\n      this._tabMoved.emit({\r\n        fromIndex: i,\r\n        toIndex: j,\r\n        title: this._titles[j]\r\n      });\r\n\r\n      // Update the tabs immediately to prevent flicker.\r\n      MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\r\n    }, duration);\r\n  }\r\n\r\n  /**\r\n   * Release the mouse and restore the non-dragged tab positions.\r\n   */\r\n  private _releaseMouse(): void {\r\n    // Do nothing if no drag is in progress.\r\n    let data = this._dragData;\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    // Clear the drag data reference.\r\n    this._dragData = null;\r\n\r\n    // Remove the extra mouse listeners.\r\n    this.document.removeEventListener('mousemove', this, true); // <DEPRECATED>\r\n    this.document.removeEventListener('mouseup', this, true); // <DEPRECATED>\r\n    this.document.removeEventListener('pointermove', this, true);\r\n    this.document.removeEventListener('pointerup', this, true);\r\n    this.document.removeEventListener('keydown', this, true);\r\n    this.document.removeEventListener('contextmenu', this, true);\r\n\r\n    // Indicate the drag has been aborted. This allows the mouse\r\n    // event handlers to return early when the drag is canceled.\r\n    data.dragAborted = true;\r\n\r\n    // If the drag is not active, there's nothing more to do.\r\n    if (!data.dragActive) {\r\n      return;\r\n    }\r\n\r\n    // Reset the tabs to their non-dragged positions.\r\n    Private.resetTabPositions(this.contentNode.children, this._orientation);\r\n\r\n    // Clear the cursor override.\r\n    data.override!.dispose();\r\n\r\n    // Clear the dragging style classes.\r\n    data.tab.classList.remove('lm-mod-dragging');\r\n    this.removeClass('lm-mod-dragging');\r\n    /* <DEPRECATED> */\r\n    data.tab.classList.remove('p-mod-dragging');\r\n    this.removeClass('p-mod-dragging');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * Adjust the current index for a tab insert operation.\r\n   *\r\n   * This method accounts for the tab bar's insertion behavior when\r\n   * adjusting the current index and emitting the changed signal.\r\n   */\r\n  private _adjustCurrentForInsert(i: number, title: Title<T>): void {\r\n    // Lookup commonly used variables.\r\n    let ct = this.currentTitle;\r\n    let ci = this._currentIndex;\r\n    let bh = this.insertBehavior;\r\n\r\n    // TODO: do we need to do an update to update the aria-selected attribute?\r\n\r\n    // Handle the behavior where the new tab is always selected,\r\n    // or the behavior where the new tab is selected if needed.\r\n    if (bh === 'select-tab' || (bh === 'select-tab-if-needed' && ci === -1)) {\r\n      this._currentIndex = i;\r\n      this._previousTitle = ct;\r\n      this._currentChanged.emit({\r\n        previousIndex: ci,\r\n        previousTitle: ct,\r\n        currentIndex: i,\r\n        currentTitle: title\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Otherwise, silently adjust the current index if needed.\r\n    if (ci >= i) {\r\n      this._currentIndex++;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjust the current index for a tab move operation.\r\n   *\r\n   * This method will not cause the actual current tab to change.\r\n   * It silently adjusts the index to account for the given move.\r\n   */\r\n  private _adjustCurrentForMove(i: number, j: number): void {\r\n    if (this._currentIndex === i) {\r\n      this._currentIndex = j;\r\n    } else if (this._currentIndex < i && this._currentIndex >= j) {\r\n      this._currentIndex++;\r\n    } else if (this._currentIndex > i && this._currentIndex <= j) {\r\n      this._currentIndex--;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adjust the current index for a tab remove operation.\r\n   *\r\n   * This method accounts for the tab bar's remove behavior when\r\n   * adjusting the current index and emitting the changed signal.\r\n   */\r\n  private _adjustCurrentForRemove(i: number, title: Title<T>): void {\r\n    // Lookup commonly used variables.\r\n    let ci = this._currentIndex;\r\n    let bh = this.removeBehavior;\r\n\r\n    // Silently adjust the index if the current tab is not removed.\r\n    if (ci !== i) {\r\n      if (ci > i) {\r\n        this._currentIndex--;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // TODO: do we need to do an update to adjust the aria-selected value?\r\n\r\n    // No tab gets selected if the tab bar is empty.\r\n    if (this._titles.length === 0) {\r\n      this._currentIndex = -1;\r\n      this._currentChanged.emit({\r\n        previousIndex: i,\r\n        previousTitle: title,\r\n        currentIndex: -1,\r\n        currentTitle: null\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Handle behavior where the next sibling tab is selected.\r\n    if (bh === 'select-tab-after') {\r\n      this._currentIndex = Math.min(i, this._titles.length - 1);\r\n      this._currentChanged.emit({\r\n        previousIndex: i,\r\n        previousTitle: title,\r\n        currentIndex: this._currentIndex,\r\n        currentTitle: this.currentTitle\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Handle behavior where the previous sibling tab is selected.\r\n    if (bh === 'select-tab-before') {\r\n      this._currentIndex = Math.max(0, i - 1);\r\n      this._currentChanged.emit({\r\n        previousIndex: i,\r\n        previousTitle: title,\r\n        currentIndex: this._currentIndex,\r\n        currentTitle: this.currentTitle\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Handle behavior where the previous history tab is selected.\r\n    if (bh === 'select-previous-tab') {\r\n      if (this._previousTitle) {\r\n        this._currentIndex = this._titles.indexOf(this._previousTitle);\r\n        this._previousTitle = null;\r\n      } else {\r\n        this._currentIndex = Math.min(i, this._titles.length - 1);\r\n      }\r\n      this._currentChanged.emit({\r\n        previousIndex: i,\r\n        previousTitle: title,\r\n        currentIndex: this._currentIndex,\r\n        currentTitle: this.currentTitle\r\n      });\r\n      return;\r\n    }\r\n\r\n    // Otherwise, no tab gets selected.\r\n    this._currentIndex = -1;\r\n    this._currentChanged.emit({\r\n      previousIndex: i,\r\n      previousTitle: title,\r\n      currentIndex: -1,\r\n      currentTitle: null\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Handle the `changed` signal of a title object.\r\n   */\r\n  private _onTitleChanged(sender: Title<T>): void {\r\n    this.update();\r\n  }\r\n\r\n  private _name: string;\r\n  private _currentIndex = -1;\r\n  private _titles: Title<T>[] = [];\r\n  private _orientation: TabBar.Orientation;\r\n  private _document: Document | ShadowRoot;\r\n  private _titlesEditable: boolean = false;\r\n  private _previousTitle: Title<T> | null = null;\r\n  private _dragData: Private.IDragData | null = null;\r\n  private _addButtonEnabled: boolean = false;\r\n  private _tabMoved = new Signal<this, TabBar.ITabMovedArgs<T>>(this);\r\n  private _currentChanged = new Signal<this, TabBar.ICurrentChangedArgs<T>>(\r\n    this\r\n  );\r\n  private _addRequested = new Signal<this, void>(this);\r\n  private _tabCloseRequested = new Signal<\r\n    this,\r\n    TabBar.ITabCloseRequestedArgs<T>\r\n  >(this);\r\n  private _tabDetachRequested = new Signal<\r\n    this,\r\n    TabBar.ITabDetachRequestedArgs<T>\r\n  >(this);\r\n  private _tabActivateRequested = new Signal<\r\n    this,\r\n    TabBar.ITabActivateRequestedArgs<T>\r\n  >(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `TabBar` class statics.\r\n */\r\nexport namespace TabBar {\r\n  /**\r\n   * A type alias for a tab bar orientation.\r\n   */\r\n  export type Orientation =\r\n    | /**\r\n     * The tabs are arranged in a single row, left-to-right.\r\n     *\r\n     * The tab text orientation is horizontal.\r\n     */\r\n    'horizontal'\r\n\r\n    /**\r\n     * The tabs are arranged in a single column, top-to-bottom.\r\n     *\r\n     * The tab text orientation is horizontal.\r\n     */\r\n    | 'vertical';\r\n\r\n  /**\r\n   * A type alias for the selection behavior on tab insert.\r\n   */\r\n  export type InsertBehavior =\r\n    | /**\r\n     * The selected tab will not be changed.\r\n     */\r\n    'none'\r\n\r\n    /**\r\n     * The inserted tab will be selected.\r\n     */\r\n    | 'select-tab'\r\n\r\n    /**\r\n     * The inserted tab will be selected if the current tab is null.\r\n     */\r\n    | 'select-tab-if-needed';\r\n\r\n  /**\r\n   * A type alias for the selection behavior on tab remove.\r\n   */\r\n  export type RemoveBehavior =\r\n    | /**\r\n     * No tab will be selected.\r\n     */\r\n    'none'\r\n\r\n    /**\r\n     * The tab after the removed tab will be selected if possible.\r\n     */\r\n    | 'select-tab-after'\r\n\r\n    /**\r\n     * The tab before the removed tab will be selected if possible.\r\n     */\r\n    | 'select-tab-before'\r\n\r\n    /**\r\n     * The previously selected tab will be selected if possible.\r\n     */\r\n    | 'select-previous-tab';\r\n\r\n  /**\r\n   * An options object for creating a tab bar.\r\n   */\r\n  export interface IOptions<T> {\r\n    /**\r\n     * The document to use with the tab bar.\r\n     *\r\n     * The default is the global `document` instance.\r\n     */\r\n\r\n    document?: Document | ShadowRoot;\r\n\r\n    /**\r\n     * Name of the tab bar.\r\n     *\r\n     * This is used for accessibility reasons. The default is the empty string.\r\n     */\r\n    name?: string;\r\n\r\n    /**\r\n     * The layout orientation of the tab bar.\r\n     *\r\n     * The default is `horizontal`.\r\n     */\r\n    orientation?: TabBar.Orientation;\r\n\r\n    /**\r\n     * Whether the tabs are movable by the user.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    tabsMovable?: boolean;\r\n\r\n    /**\r\n     * Whether a tab can be deselected by the user.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    allowDeselect?: boolean;\r\n\r\n    /**\r\n     * Whether the titles can be directly edited by the user.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    titlesEditable?: boolean;\r\n\r\n    /**\r\n     * Whether the add button is enabled.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    addButtonEnabled?: boolean;\r\n\r\n    /**\r\n     * The selection behavior when inserting a tab.\r\n     *\r\n     * The default is `'select-tab-if-needed'`.\r\n     */\r\n    insertBehavior?: TabBar.InsertBehavior;\r\n\r\n    /**\r\n     * The selection behavior when removing a tab.\r\n     *\r\n     * The default is `'select-tab-after'`.\r\n     */\r\n    removeBehavior?: TabBar.RemoveBehavior;\r\n\r\n    /**\r\n     * A renderer to use with the tab bar.\r\n     *\r\n     * The default is a shared renderer instance.\r\n     */\r\n    renderer?: IRenderer<T>;\r\n  }\r\n\r\n  /**\r\n   * The arguments object for the `currentChanged` signal.\r\n   */\r\n  export interface ICurrentChangedArgs<T> {\r\n    /**\r\n     * The previously selected index.\r\n     */\r\n    readonly previousIndex: number;\r\n\r\n    /**\r\n     * The previously selected title.\r\n     */\r\n    readonly previousTitle: Title<T> | null;\r\n\r\n    /**\r\n     * The currently selected index.\r\n     */\r\n    readonly currentIndex: number;\r\n\r\n    /**\r\n     * The currently selected title.\r\n     */\r\n    readonly currentTitle: Title<T> | null;\r\n  }\r\n\r\n  /**\r\n   * The arguments object for the `tabMoved` signal.\r\n   */\r\n  export interface ITabMovedArgs<T> {\r\n    /**\r\n     * The previous index of the tab.\r\n     */\r\n    readonly fromIndex: number;\r\n\r\n    /**\r\n     * The current index of the tab.\r\n     */\r\n    readonly toIndex: number;\r\n\r\n    /**\r\n     * The title for the tab.\r\n     */\r\n    readonly title: Title<T>;\r\n  }\r\n\r\n  /**\r\n   * The arguments object for the `tabActivateRequested` signal.\r\n   */\r\n  export interface ITabActivateRequestedArgs<T> {\r\n    /**\r\n     * The index of the tab to activate.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The title for the tab.\r\n     */\r\n    readonly title: Title<T>;\r\n  }\r\n\r\n  /**\r\n   * The arguments object for the `tabCloseRequested` signal.\r\n   */\r\n  export interface ITabCloseRequestedArgs<T> {\r\n    /**\r\n     * The index of the tab to close.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The title for the tab.\r\n     */\r\n    readonly title: Title<T>;\r\n  }\r\n\r\n  /**\r\n   * The arguments object for the `tabDetachRequested` signal.\r\n   */\r\n  export interface ITabDetachRequestedArgs<T> {\r\n    /**\r\n     * The index of the tab to detach.\r\n     */\r\n    readonly index: number;\r\n\r\n    /**\r\n     * The title for the tab.\r\n     */\r\n    readonly title: Title<T>;\r\n\r\n    /**\r\n     * The node representing the tab.\r\n     */\r\n    readonly tab: HTMLElement;\r\n\r\n    /**\r\n     * The current client X position of the mouse.\r\n     */\r\n    readonly clientX: number;\r\n\r\n    /**\r\n     * The current client Y position of the mouse.\r\n     */\r\n    readonly clientY: number;\r\n  }\r\n\r\n  /**\r\n   * An object which holds the data to render a tab.\r\n   */\r\n  export interface IRenderData<T> {\r\n    /**\r\n     * The title associated with the tab.\r\n     */\r\n    readonly title: Title<T>;\r\n\r\n    /**\r\n     * Whether the tab is the current tab.\r\n     */\r\n    readonly current: boolean;\r\n\r\n    /**\r\n     * The z-index for the tab.\r\n     */\r\n    readonly zIndex: number;\r\n  }\r\n\r\n  /**\r\n   * A renderer for use with a tab bar.\r\n   */\r\n  export interface IRenderer<T> {\r\n    /**\r\n     * A selector which matches the close icon node in a tab.\r\n     */\r\n    readonly closeIconSelector: string;\r\n\r\n    /**\r\n     * Render the virtual element for a tab.\r\n     *\r\n     * @param data - The data to use for rendering the tab.\r\n     *\r\n     * @returns A virtual element representing the tab.\r\n     */\r\n    renderTab(data: IRenderData<T>): VirtualElement;\r\n  }\r\n\r\n  /**\r\n   * The default implementation of `IRenderer`.\r\n   *\r\n   * #### Notes\r\n   * Subclasses are free to reimplement rendering methods as needed.\r\n   */\r\n  export class Renderer implements IRenderer<any> {\r\n    /**\r\n     * A selector which matches the close icon node in a tab.\r\n     */\r\n    readonly closeIconSelector = '.lm-TabBar-tabCloseIcon';\r\n\r\n    /**\r\n     * Render the virtual element for a tab.\r\n     *\r\n     * @param data - The data to use for rendering the tab.\r\n     *\r\n     * @returns A virtual element representing the tab.\r\n     */\r\n    renderTab(data: IRenderData<any>): VirtualElement {\r\n      let title = data.title.caption;\r\n      let key = this.createTabKey(data);\r\n      let id = key;\r\n      let style = this.createTabStyle(data);\r\n      let className = this.createTabClass(data);\r\n      let dataset = this.createTabDataset(data);\r\n      let aria = this.createTabARIA(data);\r\n      if (data.title.closable) {\r\n        return h.li(\r\n          { id, key, className, title, style, dataset, ...aria },\r\n          this.renderIcon(data),\r\n          this.renderLabel(data),\r\n          this.renderCloseIcon(data)\r\n        );\r\n      } else {\r\n        return h.li(\r\n          { id, key, className, title, style, dataset, ...aria },\r\n          this.renderIcon(data),\r\n          this.renderLabel(data)\r\n        );\r\n      }\r\n    }\r\n\r\n    /**\r\n     * Render the icon element for a tab.\r\n     *\r\n     * @param data - The data to use for rendering the tab.\r\n     *\r\n     * @returns A virtual element representing the tab icon.\r\n     */\r\n    renderIcon(data: IRenderData<any>): VirtualElement {\r\n      const { title } = data;\r\n      let className = this.createIconClass(data);\r\n\r\n      /* <DEPRECATED> */\r\n      if (typeof title.icon === 'string') {\r\n        return h.div({ className }, title.iconLabel);\r\n      }\r\n      /* </DEPRECATED> */\r\n\r\n      // if title.icon is undefined, it will be ignored\r\n      return h.div({ className }, title.icon!, title.iconLabel);\r\n    }\r\n\r\n    /**\r\n     * Render the label element for a tab.\r\n     *\r\n     * @param data - The data to use for rendering the tab.\r\n     *\r\n     * @returns A virtual element representing the tab label.\r\n     */\r\n    renderLabel(data: IRenderData<any>): VirtualElement {\r\n      return h.div(\r\n        {\r\n          className:\r\n            'lm-TabBar-tabLabel' +\r\n            /* <DEPRECATED> */\r\n            ' p-TabBar-tabLabel'\r\n          /* </DEPRECATED> */\r\n        },\r\n        data.title.label\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the close icon element for a tab.\r\n     *\r\n     * @param data - The data to use for rendering the tab.\r\n     *\r\n     * @returns A virtual element representing the tab close icon.\r\n     */\r\n    renderCloseIcon(data: IRenderData<any>): VirtualElement {\r\n      return h.div({\r\n        className:\r\n          'lm-TabBar-tabCloseIcon' +\r\n          /* <DEPRECATED> */\r\n          ' p-TabBar-tabCloseIcon'\r\n        /* </DEPRECATED> */\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Create a unique render key for the tab.\r\n     *\r\n     * @param data - The data to use for the tab.\r\n     *\r\n     * @returns The unique render key for the tab.\r\n     *\r\n     * #### Notes\r\n     * This method caches the key against the tab title the first time\r\n     * the key is generated. This enables efficient rendering of moved\r\n     * tabs and avoids subtle hover style artifacts.\r\n     */\r\n    createTabKey(data: IRenderData<any>): string {\r\n      let key = this._tabKeys.get(data.title);\r\n      if (key === undefined) {\r\n        key = `tab-key-${this._tabID++}`;\r\n        this._tabKeys.set(data.title, key);\r\n      }\r\n      return key;\r\n    }\r\n\r\n    /**\r\n     * Create the inline style object for a tab.\r\n     *\r\n     * @param data - The data to use for the tab.\r\n     *\r\n     * @returns The inline style data for the tab.\r\n     */\r\n    createTabStyle(data: IRenderData<any>): ElementInlineStyle {\r\n      return { zIndex: `${data.zIndex}` };\r\n    }\r\n\r\n    /**\r\n     * Create the class name for the tab.\r\n     *\r\n     * @param data - The data to use for the tab.\r\n     *\r\n     * @returns The full class name for the tab.\r\n     */\r\n    createTabClass(data: IRenderData<any>): string {\r\n      let name = 'lm-TabBar-tab';\r\n      /* <DEPRECATED> */\r\n      name += ' p-TabBar-tab';\r\n      /* </DEPRECATED> */\r\n      if (data.title.className) {\r\n        name += ` ${data.title.className}`;\r\n      }\r\n      if (data.title.closable) {\r\n        name += ' lm-mod-closable';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-closable';\r\n        /* </DEPRECATED> */\r\n      }\r\n      if (data.current) {\r\n        name += ' lm-mod-current';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-current';\r\n        /* </DEPRECATED> */\r\n      }\r\n      return name;\r\n    }\r\n\r\n    /**\r\n     * Create the dataset for a tab.\r\n     *\r\n     * @param data - The data to use for the tab.\r\n     *\r\n     * @returns The dataset for the tab.\r\n     */\r\n    createTabDataset(data: IRenderData<any>): ElementDataset {\r\n      return data.title.dataset;\r\n    }\r\n\r\n    /**\r\n     * Create the ARIA attributes for a tab.\r\n     *\r\n     * @param data - The data to use for the tab.\r\n     *\r\n     * @returns The ARIA attributes for the tab.\r\n     */\r\n    createTabARIA(data: IRenderData<any>): ElementARIAAttrs {\r\n      return { role: 'tab', 'aria-selected': data.current.toString() };\r\n    }\r\n\r\n    /**\r\n     * Create the class name for the tab icon.\r\n     *\r\n     * @param data - The data to use for the tab.\r\n     *\r\n     * @returns The full class name for the tab icon.\r\n     */\r\n    createIconClass(data: IRenderData<any>): string {\r\n      let name = 'lm-TabBar-tabIcon';\r\n      /* <DEPRECATED> */\r\n      name += ' p-TabBar-tabIcon';\r\n      /* </DEPRECATED> */\r\n      let extra = data.title.iconClass;\r\n      return extra ? `${name} ${extra}` : name;\r\n    }\r\n\r\n    private _tabID = 0;\r\n    private _tabKeys = new WeakMap<Title<any>, string>();\r\n  }\r\n\r\n  /**\r\n   * The default `Renderer` instance.\r\n   */\r\n  export const defaultRenderer = new Renderer();\r\n\r\n  /**\r\n   * A selector which matches the add button node in the tab bar.\r\n   */\r\n  export const addButtonSelector = '.lm-TabBar-addButton';\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The start drag distance threshold.\r\n   */\r\n  export const DRAG_THRESHOLD = 5;\r\n\r\n  /**\r\n   * The detach distance threshold.\r\n   */\r\n  export const DETACH_THRESHOLD = 20;\r\n\r\n  /**\r\n   * A struct which holds the drag data for a tab bar.\r\n   */\r\n  export interface IDragData {\r\n    /**\r\n     * The tab node being dragged.\r\n     */\r\n    tab: HTMLElement;\r\n\r\n    /**\r\n     * The index of the tab being dragged.\r\n     */\r\n    index: number;\r\n\r\n    /**\r\n     * The mouse press client X position.\r\n     */\r\n    pressX: number;\r\n\r\n    /**\r\n     * The mouse press client Y position.\r\n     */\r\n    pressY: number;\r\n\r\n    /**\r\n     * The offset left/top of the tab being dragged.\r\n     *\r\n     * This will be `-1` if the drag is not active.\r\n     */\r\n    tabPos: number;\r\n\r\n    /**\r\n     * The offset width/height of the tab being dragged.\r\n     *\r\n     * This will be `-1` if the drag is not active.\r\n     */\r\n    tabSize: number;\r\n\r\n    /**\r\n     * The original mouse X/Y position in tab coordinates.\r\n     *\r\n     * This will be `-1` if the drag is not active.\r\n     */\r\n    tabPressPos: number;\r\n\r\n    /**\r\n     * The tab target index upon mouse release.\r\n     *\r\n     * This will be `-1` if the drag is not active.\r\n     */\r\n    targetIndex: number;\r\n\r\n    /**\r\n     * The array of tab layout objects snapped at drag start.\r\n     *\r\n     * This will be `null` if the drag is not active.\r\n     */\r\n    tabLayout: ITabLayout[] | null;\r\n\r\n    /**\r\n     * The bounding client rect of the tab bar content node.\r\n     *\r\n     * This will be `null` if the drag is not active.\r\n     */\r\n    contentRect: ClientRect | null;\r\n\r\n    /**\r\n     * The disposable to clean up the cursor override.\r\n     *\r\n     * This will be `null` if the drag is not active.\r\n     */\r\n    override: IDisposable | null;\r\n\r\n    /**\r\n     * Whether the drag is currently active.\r\n     */\r\n    dragActive: boolean;\r\n\r\n    /**\r\n     * Whether the drag has been aborted.\r\n     */\r\n    dragAborted: boolean;\r\n\r\n    /**\r\n     * Whether a detach request as been made.\r\n     */\r\n    detachRequested: boolean;\r\n  }\r\n\r\n  /**\r\n   * An object which holds layout data for a tab.\r\n   */\r\n  export interface ITabLayout {\r\n    /**\r\n     * The left/top margin value for the tab.\r\n     */\r\n    margin: number;\r\n\r\n    /**\r\n     * The offset left/top position of the tab.\r\n     */\r\n    pos: number;\r\n\r\n    /**\r\n     * The offset width/height of the tab.\r\n     */\r\n    size: number;\r\n  }\r\n\r\n  /**\r\n   * Create the DOM node for a tab bar.\r\n   */\r\n  export function createNode(): HTMLDivElement {\r\n    let node = document.createElement('div');\r\n    let content = document.createElement('ul');\r\n    content.setAttribute('role', 'tablist');\r\n    content.className = 'lm-TabBar-content';\r\n    /* <DEPRECATED> */\r\n    content.classList.add('p-TabBar-content');\r\n    /* </DEPRECATED> */\r\n    node.appendChild(content);\r\n\r\n    let add = document.createElement('div');\r\n    add.className = 'lm-TabBar-addButton lm-mod-hidden';\r\n    node.appendChild(add);\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Coerce a title or options into a real title.\r\n   */\r\n  export function asTitle<T>(value: Title<T> | Title.IOptions<T>): Title<T> {\r\n    return value instanceof Title ? value : new Title<T>(value);\r\n  }\r\n\r\n  /**\r\n   * Parse the transition duration for a tab node.\r\n   */\r\n  export function parseTransitionDuration(tab: HTMLElement): number {\r\n    let style = window.getComputedStyle(tab);\r\n    return 1000 * (parseFloat(style.transitionDuration!) || 0);\r\n  }\r\n\r\n  /**\r\n   * Get a snapshot of the current tab layout values.\r\n   */\r\n  export function snapTabLayout(\r\n    tabs: HTMLCollection,\r\n    orientation: TabBar.Orientation\r\n  ): ITabLayout[] {\r\n    let layout = new Array<ITabLayout>(tabs.length);\r\n    for (let i = 0, n = tabs.length; i < n; ++i) {\r\n      let node = tabs[i] as HTMLElement;\r\n      let style = window.getComputedStyle(node);\r\n      if (orientation === 'horizontal') {\r\n        layout[i] = {\r\n          pos: node.offsetLeft,\r\n          size: node.offsetWidth,\r\n          margin: parseFloat(style.marginLeft!) || 0\r\n        };\r\n      } else {\r\n        layout[i] = {\r\n          pos: node.offsetTop,\r\n          size: node.offsetHeight,\r\n          margin: parseFloat(style.marginTop!) || 0\r\n        };\r\n      }\r\n    }\r\n    return layout;\r\n  }\r\n\r\n  /**\r\n   * Test if the event exceeds the drag threshold.\r\n   */\r\n  export function dragExceeded(data: IDragData, event: MouseEvent): boolean {\r\n    let dx = Math.abs(event.clientX - data.pressX);\r\n    let dy = Math.abs(event.clientY - data.pressY);\r\n    return dx >= DRAG_THRESHOLD || dy >= DRAG_THRESHOLD;\r\n  }\r\n\r\n  /**\r\n   * Test if the event exceeds the drag detach threshold.\r\n   */\r\n  export function detachExceeded(data: IDragData, event: MouseEvent): boolean {\r\n    let rect = data.contentRect!;\r\n    return (\r\n      event.clientX < rect.left - DETACH_THRESHOLD ||\r\n      event.clientX >= rect.right + DETACH_THRESHOLD ||\r\n      event.clientY < rect.top - DETACH_THRESHOLD ||\r\n      event.clientY >= rect.bottom + DETACH_THRESHOLD\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Update the relative tab positions and computed target index.\r\n   */\r\n  export function layoutTabs(\r\n    tabs: HTMLCollection,\r\n    data: IDragData,\r\n    event: MouseEvent,\r\n    orientation: TabBar.Orientation\r\n  ): void {\r\n    // Compute the orientation-sensitive values.\r\n    let pressPos: number;\r\n    let localPos: number;\r\n    let clientPos: number;\r\n    let clientSize: number;\r\n    if (orientation === 'horizontal') {\r\n      pressPos = data.pressX;\r\n      localPos = event.clientX - data.contentRect!.left;\r\n      clientPos = event.clientX;\r\n      clientSize = data.contentRect!.width;\r\n    } else {\r\n      pressPos = data.pressY;\r\n      localPos = event.clientY - data.contentRect!.top;\r\n      clientPos = event.clientY;\r\n      clientSize = data.contentRect!.height;\r\n    }\r\n\r\n    // Compute the target data.\r\n    let targetIndex = data.index;\r\n    let targetPos = localPos - data.tabPressPos;\r\n    let targetEnd = targetPos + data.tabSize;\r\n\r\n    // Update the relative tab positions.\r\n    for (let i = 0, n = tabs.length; i < n; ++i) {\r\n      let pxPos: string;\r\n      let layout = data.tabLayout![i];\r\n      let threshold = layout.pos + (layout.size >> 1);\r\n      if (i < data.index && targetPos < threshold) {\r\n        pxPos = `${data.tabSize + data.tabLayout![i + 1].margin}px`;\r\n        targetIndex = Math.min(targetIndex, i);\r\n      } else if (i > data.index && targetEnd > threshold) {\r\n        pxPos = `${-data.tabSize - layout.margin}px`;\r\n        targetIndex = Math.max(targetIndex, i);\r\n      } else if (i === data.index) {\r\n        let ideal = clientPos - pressPos;\r\n        let limit = clientSize - (data.tabPos + data.tabSize);\r\n        pxPos = `${Math.max(-data.tabPos, Math.min(ideal, limit))}px`;\r\n      } else {\r\n        pxPos = '';\r\n      }\r\n      if (orientation === 'horizontal') {\r\n        (tabs[i] as HTMLElement).style.left = pxPos;\r\n      } else {\r\n        (tabs[i] as HTMLElement).style.top = pxPos;\r\n      }\r\n    }\r\n\r\n    // Update the computed target index.\r\n    data.targetIndex = targetIndex;\r\n  }\r\n\r\n  /**\r\n   * Position the drag tab at its final resting relative position.\r\n   */\r\n  export function finalizeTabPosition(\r\n    data: IDragData,\r\n    orientation: TabBar.Orientation\r\n  ): void {\r\n    // Compute the orientation-sensitive client size.\r\n    let clientSize: number;\r\n    if (orientation === 'horizontal') {\r\n      clientSize = data.contentRect!.width;\r\n    } else {\r\n      clientSize = data.contentRect!.height;\r\n    }\r\n\r\n    // Compute the ideal final tab position.\r\n    let ideal: number;\r\n    if (data.targetIndex === data.index) {\r\n      ideal = 0;\r\n    } else if (data.targetIndex > data.index) {\r\n      let tgt = data.tabLayout![data.targetIndex];\r\n      ideal = tgt.pos + tgt.size - data.tabSize - data.tabPos;\r\n    } else {\r\n      let tgt = data.tabLayout![data.targetIndex];\r\n      ideal = tgt.pos - data.tabPos;\r\n    }\r\n\r\n    // Compute the tab position limit.\r\n    let limit = clientSize - (data.tabPos + data.tabSize);\r\n    let final = Math.max(-data.tabPos, Math.min(ideal, limit));\r\n\r\n    // Set the final orientation-sensitive position.\r\n    if (orientation === 'horizontal') {\r\n      data.tab.style.left = `${final}px`;\r\n    } else {\r\n      data.tab.style.top = `${final}px`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Reset the relative positions of the given tabs.\r\n   */\r\n  export function resetTabPositions(\r\n    tabs: HTMLCollection,\r\n    orientation: TabBar.Orientation\r\n  ): void {\r\n    each(tabs, tab => {\r\n      if (orientation === 'horizontal') {\r\n        (tab as HTMLElement).style.left = '';\r\n      } else {\r\n        (tab as HTMLElement).style.top = '';\r\n      }\r\n    });\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport {\r\n  ArrayExt,\r\n  chain,\r\n  ChainIterator,\r\n  each,\r\n  empty,\r\n  IIterator,\r\n  map,\r\n  once,\r\n  reduce\r\n} from '@lumino/algorithm';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { BoxEngine, BoxSizer } from './boxengine';\r\n\r\nimport { Layout, LayoutItem } from './layout';\r\n\r\nimport { TabBar } from './tabbar';\r\n\r\nimport Utils from './utils';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A layout which provides a flexible docking arrangement.\r\n *\r\n * #### Notes\r\n * The consumer of this layout is responsible for handling all signals\r\n * from the generated tab bars and managing the visibility of widgets\r\n * and tab bars as needed.\r\n */\r\nexport class DockLayout extends Layout {\r\n  /**\r\n   * Construct a new dock layout.\r\n   *\r\n   * @param options - The options for initializing the layout.\r\n   */\r\n  constructor(options: DockLayout.IOptions) {\r\n    super();\r\n    this.renderer = options.renderer;\r\n    if (options.spacing !== undefined) {\r\n      this._spacing = Utils.clampDimension(options.spacing);\r\n    }\r\n    this._document = options.document || document;\r\n    this._hiddenMode =\r\n      options.hiddenMode !== undefined\r\n        ? options.hiddenMode\r\n        : Widget.HiddenMode.Display;\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   *\r\n   * #### Notes\r\n   * This will clear and dispose all widgets in the layout.\r\n   */\r\n  dispose(): void {\r\n    // Get an iterator over the widgets in the layout.\r\n    let widgets = this.iter();\r\n\r\n    // Dispose of the layout items.\r\n    this._items.forEach(item => {\r\n      item.dispose();\r\n    });\r\n\r\n    // Clear the layout state before disposing the widgets.\r\n    this._box = null;\r\n    this._root = null;\r\n    this._items.clear();\r\n\r\n    // Dispose of the widgets contained in the old layout root.\r\n    each(widgets, widget => {\r\n      widget.dispose();\r\n    });\r\n\r\n    // Dispose of the base class.\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * The renderer used by the dock layout.\r\n   */\r\n  readonly renderer: DockLayout.IRenderer;\r\n\r\n  /**\r\n   * The method for hiding child widgets.\r\n   *\r\n   * #### Notes\r\n   * If there is only one child widget, `Display` hiding mode will be used\r\n   * regardless of this setting.\r\n   */\r\n  get hiddenMode(): Widget.HiddenMode {\r\n    return this._hiddenMode;\r\n  }\r\n  set hiddenMode(v: Widget.HiddenMode) {\r\n    if (this._hiddenMode === v) {\r\n      return;\r\n    }\r\n    this._hiddenMode = v;\r\n    each(this.tabBars(), bar => {\r\n      if (bar.titles.length > 1) {\r\n        bar.titles.forEach(title => {\r\n          title.owner.hiddenMode = this._hiddenMode;\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Get the inter-element spacing for the dock layout.\r\n   */\r\n  get spacing(): number {\r\n    return this._spacing;\r\n  }\r\n\r\n  /**\r\n   * Set the inter-element spacing for the dock layout.\r\n   */\r\n  set spacing(value: number) {\r\n    value = Utils.clampDimension(value);\r\n    if (this._spacing === value) {\r\n      return;\r\n    }\r\n    this._spacing = value;\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * Whether the dock layout is empty.\r\n   */\r\n  get isEmpty(): boolean {\r\n    return this._root === null;\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over all widgets in the layout.\r\n   *\r\n   * @returns A new iterator over the widgets in the layout.\r\n   *\r\n   * #### Notes\r\n   * This iterator includes the generated tab bars.\r\n   */\r\n  iter(): IIterator<Widget> {\r\n    return this._root ? this._root.iterAllWidgets() : empty<Widget>();\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the user widgets in the layout.\r\n   *\r\n   * @returns A new iterator over the user widgets in the layout.\r\n   *\r\n   * #### Notes\r\n   * This iterator does not include the generated tab bars.\r\n   */\r\n  widgets(): IIterator<Widget> {\r\n    return this._root ? this._root.iterUserWidgets() : empty<Widget>();\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the selected widgets in the layout.\r\n   *\r\n   * @returns A new iterator over the selected user widgets.\r\n   *\r\n   * #### Notes\r\n   * This iterator yields the widgets corresponding to the current tab\r\n   * of each tab bar in the layout.\r\n   */\r\n  selectedWidgets(): IIterator<Widget> {\r\n    return this._root ? this._root.iterSelectedWidgets() : empty<Widget>();\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the tab bars in the layout.\r\n   *\r\n   * @returns A new iterator over the tab bars in the layout.\r\n   *\r\n   * #### Notes\r\n   * This iterator does not include the user widgets.\r\n   */\r\n  tabBars(): IIterator<TabBar<Widget>> {\r\n    return this._root ? this._root.iterTabBars() : empty<TabBar<Widget>>();\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the handles in the layout.\r\n   *\r\n   * @returns A new iterator over the handles in the layout.\r\n   */\r\n  handles(): IIterator<HTMLDivElement> {\r\n    return this._root ? this._root.iterHandles() : empty<HTMLDivElement>();\r\n  }\r\n\r\n  /**\r\n   * Move a handle to the given offset position.\r\n   *\r\n   * @param handle - The handle to move.\r\n   *\r\n   * @param offsetX - The desired offset X position of the handle.\r\n   *\r\n   * @param offsetY - The desired offset Y position of the handle.\r\n   *\r\n   * #### Notes\r\n   * If the given handle is not contained in the layout, this is no-op.\r\n   *\r\n   * The handle will be moved as close as possible to the desired\r\n   * position without violating any of the layout constraints.\r\n   *\r\n   * Only one of the coordinates is used depending on the orientation\r\n   * of the handle. This method accepts both coordinates to make it\r\n   * easy to invoke from a mouse move event without needing to know\r\n   * the handle orientation.\r\n   */\r\n  moveHandle(handle: HTMLDivElement, offsetX: number, offsetY: number): void {\r\n    // Bail early if there is no root or if the handle is hidden.\r\n    let hidden = handle.classList.contains('lm-mod-hidden');\r\n    /* <DEPRECATED> */\r\n    hidden = hidden || handle.classList.contains('p-mod-hidden');\r\n    /* </DEPRECATED> */\r\n    if (!this._root || hidden) {\r\n      return;\r\n    }\r\n\r\n    // Lookup the split node for the handle.\r\n    let data = this._root.findSplitNode(handle);\r\n    if (!data) {\r\n      return;\r\n    }\r\n\r\n    // Compute the desired delta movement for the handle.\r\n    let delta: number;\r\n    if (data.node.orientation === 'horizontal') {\r\n      delta = offsetX - handle.offsetLeft;\r\n    } else {\r\n      delta = offsetY - handle.offsetTop;\r\n    }\r\n\r\n    // Bail if there is no handle movement.\r\n    if (delta === 0) {\r\n      return;\r\n    }\r\n\r\n    // Prevent sibling resizing unless needed.\r\n    data.node.holdSizes();\r\n\r\n    // Adjust the sizers to reflect the handle movement.\r\n    BoxEngine.adjust(data.node.sizers, data.index, delta);\r\n\r\n    // Update the layout of the widgets.\r\n    if (this.parent) {\r\n      this.parent.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Save the current configuration of the dock layout.\r\n   *\r\n   * @returns A new config object for the current layout state.\r\n   *\r\n   * #### Notes\r\n   * The return value can be provided to the `restoreLayout` method\r\n   * in order to restore the layout to its current configuration.\r\n   */\r\n  saveLayout(): DockLayout.ILayoutConfig {\r\n    // Bail early if there is no root.\r\n    if (!this._root) {\r\n      return { main: null };\r\n    }\r\n\r\n    // Hold the current sizes in the layout tree.\r\n    this._root.holdAllSizes();\r\n\r\n    // Return the layout config.\r\n    return { main: this._root.createConfig() };\r\n  }\r\n\r\n  /**\r\n   * Restore the layout to a previously saved configuration.\r\n   *\r\n   * @param config - The layout configuration to restore.\r\n   *\r\n   * #### Notes\r\n   * Widgets which currently belong to the layout but which are not\r\n   * contained in the config will be unparented.\r\n   */\r\n  restoreLayout(config: DockLayout.ILayoutConfig): void {\r\n    // Create the widget set for validating the config.\r\n    let widgetSet = new Set<Widget>();\r\n\r\n    // Normalize the main area config and collect the widgets.\r\n    let mainConfig: DockLayout.AreaConfig | null;\r\n    if (config.main) {\r\n      mainConfig = Private.normalizeAreaConfig(config.main, widgetSet);\r\n    } else {\r\n      mainConfig = null;\r\n    }\r\n\r\n    // Create iterators over the old content.\r\n    let oldWidgets = this.widgets();\r\n    let oldTabBars = this.tabBars();\r\n    let oldHandles = this.handles();\r\n\r\n    // Clear the root before removing the old content.\r\n    this._root = null;\r\n\r\n    // Unparent the old widgets which are not in the new config.\r\n    each(oldWidgets, widget => {\r\n      if (!widgetSet.has(widget)) {\r\n        widget.parent = null;\r\n      }\r\n    });\r\n\r\n    // Dispose of the old tab bars.\r\n    each(oldTabBars, tabBar => {\r\n      tabBar.dispose();\r\n    });\r\n\r\n    // Remove the old handles.\r\n    each(oldHandles, handle => {\r\n      if (handle.parentNode) {\r\n        handle.parentNode.removeChild(handle);\r\n      }\r\n    });\r\n\r\n    // Reparent the new widgets to the current parent.\r\n    widgetSet.forEach(widget => {\r\n      widget.parent = this.parent;\r\n    });\r\n\r\n    // Create the root node for the new config.\r\n    if (mainConfig) {\r\n      this._root = Private.realizeAreaConfig(mainConfig, {\r\n        createTabBar: () => this._createTabBar(),\r\n        createHandle: () => this._createHandle()\r\n      });\r\n    } else {\r\n      this._root = null;\r\n    }\r\n\r\n    // If there is no parent, there is nothing more to do.\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n\r\n    // Attach the new widgets to the parent.\r\n    widgetSet.forEach(widget => {\r\n      this.attachWidget(widget);\r\n    });\r\n\r\n    // Post a fit request to the parent.\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * Add a widget to the dock layout.\r\n   *\r\n   * @param widget - The widget to add to the dock layout.\r\n   *\r\n   * @param options - The additional options for adding the widget.\r\n   *\r\n   * #### Notes\r\n   * The widget will be moved if it is already contained in the layout.\r\n   *\r\n   * An error will be thrown if the reference widget is invalid.\r\n   */\r\n  addWidget(widget: Widget, options: DockLayout.IAddOptions = {}): void {\r\n    // Parse the options.\r\n    let ref = options.ref || null;\r\n    let mode = options.mode || 'tab-after';\r\n\r\n    // Find the tab node which holds the reference widget.\r\n    let refNode: Private.TabLayoutNode | null = null;\r\n    if (this._root && ref) {\r\n      refNode = this._root.findTabNode(ref);\r\n    }\r\n\r\n    // Throw an error if the reference widget is invalid.\r\n    if (ref && !refNode) {\r\n      throw new Error('Reference widget is not in the layout.');\r\n    }\r\n\r\n    // Reparent the widget to the current layout parent.\r\n    widget.parent = this.parent;\r\n\r\n    // Insert the widget according to the insert mode.\r\n    switch (mode) {\r\n      case 'tab-after':\r\n        this._insertTab(widget, ref, refNode, true);\r\n        break;\r\n      case 'tab-before':\r\n        this._insertTab(widget, ref, refNode, false);\r\n        break;\r\n      case 'split-top':\r\n        this._insertSplit(widget, ref, refNode, 'vertical', false);\r\n        break;\r\n      case 'split-left':\r\n        this._insertSplit(widget, ref, refNode, 'horizontal', false);\r\n        break;\r\n      case 'split-right':\r\n        this._insertSplit(widget, ref, refNode, 'horizontal', true);\r\n        break;\r\n      case 'split-bottom':\r\n        this._insertSplit(widget, ref, refNode, 'vertical', true);\r\n        break;\r\n    }\r\n\r\n    // Do nothing else if there is no parent widget.\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n\r\n    // Ensure the widget is attached to the parent widget.\r\n    this.attachWidget(widget);\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * Remove a widget from the layout.\r\n   *\r\n   * @param widget - The widget to remove from the layout.\r\n   *\r\n   * #### Notes\r\n   * A widget is automatically removed from the layout when its `parent`\r\n   * is set to `null`. This method should only be invoked directly when\r\n   * removing a widget from a layout which has yet to be installed on a\r\n   * parent widget.\r\n   *\r\n   * This method does *not* modify the widget's `parent`.\r\n   */\r\n  removeWidget(widget: Widget): void {\r\n    // Remove the widget from its current layout location.\r\n    this._removeWidget(widget);\r\n\r\n    // Do nothing else if there is no parent widget.\r\n    if (!this.parent) {\r\n      return;\r\n    }\r\n\r\n    // Detach the widget from the parent widget.\r\n    this.detachWidget(widget);\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent.fit();\r\n  }\r\n\r\n  /**\r\n   * Find the tab area which contains the given client position.\r\n   *\r\n   * @param clientX - The client X position of interest.\r\n   *\r\n   * @param clientY - The client Y position of interest.\r\n   *\r\n   * @returns The geometry of the tab area at the given position, or\r\n   *   `null` if there is no tab area at the given position.\r\n   */\r\n  hitTestTabAreas(\r\n    clientX: number,\r\n    clientY: number\r\n  ): DockLayout.ITabAreaGeometry | null {\r\n    // Bail early if hit testing cannot produce valid results.\r\n    if (!this._root || !this.parent || !this.parent.isVisible) {\r\n      return null;\r\n    }\r\n\r\n    // Ensure the parent box sizing data is computed.\r\n    if (!this._box) {\r\n      this._box = ElementExt.boxSizing(this.parent.node);\r\n    }\r\n\r\n    // Convert from client to local coordinates.\r\n    let rect = this.parent.node.getBoundingClientRect();\r\n    let x = clientX - rect.left - this._box.borderLeft;\r\n    let y = clientY - rect.top - this._box.borderTop;\r\n\r\n    // Find the tab layout node at the local position.\r\n    let tabNode = this._root.hitTestTabNodes(x, y);\r\n\r\n    // Bail if a tab layout node was not found.\r\n    if (!tabNode) {\r\n      return null;\r\n    }\r\n\r\n    // Extract the data from the tab node.\r\n    let { tabBar, top, left, width, height } = tabNode;\r\n\r\n    // Compute the right and bottom edges of the tab area.\r\n    let borderWidth = this._box.borderLeft + this._box.borderRight;\r\n    let borderHeight = this._box.borderTop + this._box.borderBottom;\r\n    let right = rect.width - borderWidth - (left + width);\r\n    let bottom = rect.height - borderHeight - (top + height);\r\n\r\n    // Return the hit test results.\r\n    return { tabBar, x, y, top, left, right, bottom, width, height };\r\n  }\r\n\r\n  /**\r\n   * Perform layout initialization which requires the parent widget.\r\n   */\r\n  protected init(): void {\r\n    // Perform superclass initialization.\r\n    super.init();\r\n\r\n    // Attach each widget to the parent.\r\n    each(this, widget => {\r\n      this.attachWidget(widget);\r\n    });\r\n\r\n    // Attach each handle to the parent.\r\n    each(this.handles(), handle => {\r\n      this.parent!.node.appendChild(handle);\r\n    });\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * Attach the widget to the layout parent widget.\r\n   *\r\n   * @param widget - The widget to attach to the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the widget is already attached.\r\n   */\r\n  protected attachWidget(widget: Widget): void {\r\n    // Do nothing if the widget is already attached.\r\n    if (this.parent!.node === widget.node.parentNode) {\r\n      return;\r\n    }\r\n\r\n    // Create the layout item for the widget.\r\n    this._items.set(widget, new LayoutItem(widget));\r\n\r\n    // Send a `'before-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    }\r\n\r\n    // Add the widget's node to the parent.\r\n    this.parent!.node.appendChild(widget.node);\r\n\r\n    // Send an `'after-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detach the widget from the layout parent widget.\r\n   *\r\n   * @param widget - The widget to detach from the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the widget is not attached.\r\n   */\r\n  protected detachWidget(widget: Widget): void {\r\n    // Do nothing if the widget is not attached.\r\n    if (this.parent!.node !== widget.node.parentNode) {\r\n      return;\r\n    }\r\n\r\n    // Send a `'before-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    }\r\n\r\n    // Remove the widget's node from the parent.\r\n    this.parent!.node.removeChild(widget.node);\r\n\r\n    // Send an `'after-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n    }\r\n\r\n    // Delete the layout item for the widget.\r\n    let item = this._items.get(widget);\r\n    if (item) {\r\n      this._items.delete(widget);\r\n      item.dispose();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-show'` message.\r\n   */\r\n  protected onBeforeShow(msg: Message): void {\r\n    super.onBeforeShow(msg);\r\n    this.parent!.update();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    super.onBeforeAttach(msg);\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-shown'` message.\r\n   */\r\n  protected onChildShown(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-hidden'` message.\r\n   */\r\n  protected onChildHidden(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'resize'` message.\r\n   */\r\n  protected onResize(msg: Widget.ResizeMessage): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(msg.width, msg.height);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(-1, -1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'fit-request'` message.\r\n   */\r\n  protected onFitRequest(msg: Message): void {\r\n    if (this.parent!.isAttached) {\r\n      this._fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove the specified widget from the layout structure.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the widget is not in the layout tree.\r\n   *\r\n   * This does not detach the widget from the parent node.\r\n   */\r\n  private _removeWidget(widget: Widget): void {\r\n    // Bail early if there is no layout root.\r\n    if (!this._root) {\r\n      return;\r\n    }\r\n\r\n    // Find the tab node which contains the given widget.\r\n    let tabNode = this._root.findTabNode(widget);\r\n\r\n    // Bail early if the tab node is not found.\r\n    if (!tabNode) {\r\n      return;\r\n    }\r\n\r\n    Private.removeAria(widget);\r\n\r\n    // If there are multiple tabs, just remove the widget's tab.\r\n    if (tabNode.tabBar.titles.length > 1) {\r\n      tabNode.tabBar.removeTab(widget.title);\r\n      if (\r\n        this._hiddenMode === Widget.HiddenMode.Scale &&\r\n        tabNode.tabBar.titles.length == 1\r\n      ) {\r\n        const existingWidget = tabNode.tabBar.titles[0].owner;\r\n        existingWidget.hiddenMode = Widget.HiddenMode.Display;\r\n      }\r\n      return;\r\n    }\r\n\r\n    // Otherwise, the tab node needs to be removed...\r\n\r\n    // Dispose the tab bar.\r\n    tabNode.tabBar.dispose();\r\n\r\n    // Handle the case where the tab node is the root.\r\n    if (this._root === tabNode) {\r\n      this._root = null;\r\n      return;\r\n    }\r\n\r\n    // Otherwise, remove the tab node from its parent...\r\n\r\n    // Prevent widget resizing unless needed.\r\n    this._root.holdAllSizes();\r\n\r\n    // Clear the parent reference on the tab node.\r\n    let splitNode = tabNode.parent!;\r\n    tabNode.parent = null;\r\n\r\n    // Remove the tab node from its parent split node.\r\n    let i = ArrayExt.removeFirstOf(splitNode.children, tabNode);\r\n    let handle = ArrayExt.removeAt(splitNode.handles, i)!;\r\n    ArrayExt.removeAt(splitNode.sizers, i);\r\n\r\n    // Remove the handle from its parent DOM node.\r\n    if (handle.parentNode) {\r\n      handle.parentNode.removeChild(handle);\r\n    }\r\n\r\n    // If there are multiple children, just update the handles.\r\n    if (splitNode.children.length > 1) {\r\n      splitNode.syncHandles();\r\n      return;\r\n    }\r\n\r\n    // Otherwise, the split node also needs to be removed...\r\n\r\n    // Clear the parent reference on the split node.\r\n    let maybeParent = splitNode.parent;\r\n    splitNode.parent = null;\r\n\r\n    // Lookup the remaining child node and handle.\r\n    let childNode = splitNode.children[0];\r\n    let childHandle = splitNode.handles[0];\r\n\r\n    // Clear the split node data.\r\n    splitNode.children.length = 0;\r\n    splitNode.handles.length = 0;\r\n    splitNode.sizers.length = 0;\r\n\r\n    // Remove the child handle from its parent node.\r\n    if (childHandle.parentNode) {\r\n      childHandle.parentNode.removeChild(childHandle);\r\n    }\r\n\r\n    // Handle the case where the split node is the root.\r\n    if (this._root === splitNode) {\r\n      childNode.parent = null;\r\n      this._root = childNode;\r\n      return;\r\n    }\r\n\r\n    // Otherwise, move the child node to the parent node...\r\n    let parentNode = maybeParent!;\r\n\r\n    // Lookup the index of the split node.\r\n    let j = parentNode.children.indexOf(splitNode);\r\n\r\n    // Handle the case where the child node is a tab node.\r\n    if (childNode instanceof Private.TabLayoutNode) {\r\n      childNode.parent = parentNode;\r\n      parentNode.children[j] = childNode;\r\n      return;\r\n    }\r\n\r\n    // Remove the split data from the parent.\r\n    let splitHandle = ArrayExt.removeAt(parentNode.handles, j)!;\r\n    ArrayExt.removeAt(parentNode.children, j);\r\n    ArrayExt.removeAt(parentNode.sizers, j);\r\n\r\n    // Remove the handle from its parent node.\r\n    if (splitHandle.parentNode) {\r\n      splitHandle.parentNode.removeChild(splitHandle);\r\n    }\r\n\r\n    // The child node and the split parent node will have the same\r\n    // orientation. Merge the grand-children with the parent node.\r\n    for (let i = 0, n = childNode.children.length; i < n; ++i) {\r\n      let gChild = childNode.children[i];\r\n      let gHandle = childNode.handles[i];\r\n      let gSizer = childNode.sizers[i];\r\n      ArrayExt.insert(parentNode.children, j + i, gChild);\r\n      ArrayExt.insert(parentNode.handles, j + i, gHandle);\r\n      ArrayExt.insert(parentNode.sizers, j + i, gSizer);\r\n      gChild.parent = parentNode;\r\n    }\r\n\r\n    // Clear the child node.\r\n    childNode.children.length = 0;\r\n    childNode.handles.length = 0;\r\n    childNode.sizers.length = 0;\r\n    childNode.parent = null;\r\n\r\n    // Sync the handles on the parent node.\r\n    parentNode.syncHandles();\r\n  }\r\n\r\n  /**\r\n   * Insert a widget next to an existing tab.\r\n   *\r\n   * #### Notes\r\n   * This does not attach the widget to the parent widget.\r\n   */\r\n  private _insertTab(\r\n    widget: Widget,\r\n    ref: Widget | null,\r\n    refNode: Private.TabLayoutNode | null,\r\n    after: boolean\r\n  ): void {\r\n    // Do nothing if the tab is inserted next to itself.\r\n    if (widget === ref) {\r\n      return;\r\n    }\r\n\r\n    // Create the root if it does not exist.\r\n    if (!this._root) {\r\n      let tabNode = new Private.TabLayoutNode(this._createTabBar());\r\n      tabNode.tabBar.addTab(widget.title);\r\n      this._root = tabNode;\r\n      Private.addAria(widget, tabNode.tabBar);\r\n      return;\r\n    }\r\n\r\n    // Use the first tab node as the ref node if needed.\r\n    if (!refNode) {\r\n      refNode = this._root.findFirstTabNode()!;\r\n    }\r\n\r\n    // If the widget is not contained in the ref node, ensure it is\r\n    // removed from the layout and hidden before being added again.\r\n    if (refNode.tabBar.titles.indexOf(widget.title) === -1) {\r\n      this._removeWidget(widget);\r\n      widget.hide();\r\n    }\r\n\r\n    // Lookup the target index for inserting the tab.\r\n    let index: number;\r\n    if (ref) {\r\n      index = refNode.tabBar.titles.indexOf(ref.title);\r\n    } else {\r\n      index = refNode.tabBar.currentIndex;\r\n    }\r\n\r\n    // Using transform create an additional layer in the pixel pipeline\r\n    // to limit the number of layer, it is set only if there is more than one widget.\r\n    if (\r\n      this._hiddenMode === Widget.HiddenMode.Scale &&\r\n      refNode.tabBar.titles.length > 0\r\n    ) {\r\n      if (refNode.tabBar.titles.length == 1) {\r\n        const existingWidget = refNode.tabBar.titles[0].owner;\r\n        existingWidget.hiddenMode = Widget.HiddenMode.Scale;\r\n      }\r\n\r\n      widget.hiddenMode = Widget.HiddenMode.Scale;\r\n    } else {\r\n      widget.hiddenMode = Widget.HiddenMode.Display;\r\n    }\r\n\r\n    // Insert the widget's tab relative to the target index.\r\n    refNode.tabBar.insertTab(index + (after ? 1 : 0), widget.title);\r\n    Private.addAria(widget, refNode.tabBar);\r\n  }\r\n\r\n  /**\r\n   * Insert a widget as a new split area.\r\n   *\r\n   * #### Notes\r\n   * This does not attach the widget to the parent widget.\r\n   */\r\n  private _insertSplit(\r\n    widget: Widget,\r\n    ref: Widget | null,\r\n    refNode: Private.TabLayoutNode | null,\r\n    orientation: Private.Orientation,\r\n    after: boolean\r\n  ): void {\r\n    // Do nothing if there is no effective split.\r\n    if (widget === ref && refNode && refNode.tabBar.titles.length === 1) {\r\n      return;\r\n    }\r\n\r\n    // Ensure the widget is removed from the current layout.\r\n    this._removeWidget(widget);\r\n\r\n    // Create the tab layout node to hold the widget.\r\n    let tabNode = new Private.TabLayoutNode(this._createTabBar());\r\n    tabNode.tabBar.addTab(widget.title);\r\n    Private.addAria(widget, tabNode.tabBar);\r\n\r\n    // Set the root if it does not exist.\r\n    if (!this._root) {\r\n      this._root = tabNode;\r\n      return;\r\n    }\r\n\r\n    // If the ref node parent is null, split the root.\r\n    if (!refNode || !refNode.parent) {\r\n      // Ensure the root is split with the correct orientation.\r\n      let root = this._splitRoot(orientation);\r\n\r\n      // Determine the insert index for the new tab node.\r\n      let i = after ? root.children.length : 0;\r\n\r\n      // Normalize the split node.\r\n      root.normalizeSizes();\r\n\r\n      // Create the sizer for new tab node.\r\n      let sizer = Private.createSizer(refNode ? 1 : Private.GOLDEN_RATIO);\r\n\r\n      // Insert the tab node sized to the golden ratio.\r\n      ArrayExt.insert(root.children, i, tabNode);\r\n      ArrayExt.insert(root.sizers, i, sizer);\r\n      ArrayExt.insert(root.handles, i, this._createHandle());\r\n      tabNode.parent = root;\r\n\r\n      // Re-normalize the split node to maintain the ratios.\r\n      root.normalizeSizes();\r\n\r\n      // Finally, synchronize the visibility of the handles.\r\n      root.syncHandles();\r\n      return;\r\n    }\r\n\r\n    // Lookup the split node for the ref widget.\r\n    let splitNode = refNode.parent;\r\n\r\n    // If the split node already had the correct orientation,\r\n    // the widget can be inserted into the split node directly.\r\n    if (splitNode.orientation === orientation) {\r\n      // Find the index of the ref node.\r\n      let i = splitNode.children.indexOf(refNode);\r\n\r\n      // Normalize the split node.\r\n      splitNode.normalizeSizes();\r\n\r\n      // Consume half the space for the insert location.\r\n      let s = (splitNode.sizers[i].sizeHint /= 2);\r\n\r\n      // Insert the tab node sized to the other half.\r\n      let j = i + (after ? 1 : 0);\r\n      ArrayExt.insert(splitNode.children, j, tabNode);\r\n      ArrayExt.insert(splitNode.sizers, j, Private.createSizer(s));\r\n      ArrayExt.insert(splitNode.handles, j, this._createHandle());\r\n      tabNode.parent = splitNode;\r\n\r\n      // Finally, synchronize the visibility of the handles.\r\n      splitNode.syncHandles();\r\n      return;\r\n    }\r\n\r\n    // Remove the ref node from the split node.\r\n    let i = ArrayExt.removeFirstOf(splitNode.children, refNode);\r\n\r\n    // Create a new normalized split node for the children.\r\n    let childNode = new Private.SplitLayoutNode(orientation);\r\n    childNode.normalized = true;\r\n\r\n    // Add the ref node sized to half the space.\r\n    childNode.children.push(refNode);\r\n    childNode.sizers.push(Private.createSizer(0.5));\r\n    childNode.handles.push(this._createHandle());\r\n    refNode.parent = childNode;\r\n\r\n    // Add the tab node sized to the other half.\r\n    let j = after ? 1 : 0;\r\n    ArrayExt.insert(childNode.children, j, tabNode);\r\n    ArrayExt.insert(childNode.sizers, j, Private.createSizer(0.5));\r\n    ArrayExt.insert(childNode.handles, j, this._createHandle());\r\n    tabNode.parent = childNode;\r\n\r\n    // Synchronize the visibility of the handles.\r\n    childNode.syncHandles();\r\n\r\n    // Finally, add the new child node to the original split node.\r\n    ArrayExt.insert(splitNode.children, i, childNode);\r\n    childNode.parent = splitNode;\r\n  }\r\n\r\n  /**\r\n   * Ensure the root is a split node with the given orientation.\r\n   */\r\n  private _splitRoot(\r\n    orientation: Private.Orientation\r\n  ): Private.SplitLayoutNode {\r\n    // Bail early if the root already meets the requirements.\r\n    let oldRoot = this._root;\r\n    if (oldRoot instanceof Private.SplitLayoutNode) {\r\n      if (oldRoot.orientation === orientation) {\r\n        return oldRoot;\r\n      }\r\n    }\r\n\r\n    // Create a new root node with the specified orientation.\r\n    let newRoot = (this._root = new Private.SplitLayoutNode(orientation));\r\n\r\n    // Add the old root to the new root.\r\n    if (oldRoot) {\r\n      newRoot.children.push(oldRoot);\r\n      newRoot.sizers.push(Private.createSizer(0));\r\n      newRoot.handles.push(this._createHandle());\r\n      oldRoot.parent = newRoot;\r\n    }\r\n\r\n    // Return the new root as a convenience.\r\n    return newRoot;\r\n  }\r\n\r\n  /**\r\n   * Fit the layout to the total size required by the widgets.\r\n   */\r\n  private _fit(): void {\r\n    // Set up the computed minimum size.\r\n    let minW = 0;\r\n    let minH = 0;\r\n\r\n    // Update the size limits for the layout tree.\r\n    if (this._root) {\r\n      let limits = this._root.fit(this._spacing, this._items);\r\n      minW = limits.minWidth;\r\n      minH = limits.minHeight;\r\n    }\r\n\r\n    // Update the box sizing and add it to the computed min size.\r\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\r\n    minW += box.horizontalSum;\r\n    minH += box.verticalSum;\r\n\r\n    // Update the parent's min size constraints.\r\n    let style = this.parent!.node.style;\r\n    style.minWidth = `${minW}px`;\r\n    style.minHeight = `${minH}px`;\r\n\r\n    // Set the dirty flag to ensure only a single update occurs.\r\n    this._dirty = true;\r\n\r\n    // Notify the ancestor that it should fit immediately. This may\r\n    // cause a resize of the parent, fulfilling the required update.\r\n    if (this.parent!.parent) {\r\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\r\n    }\r\n\r\n    // If the dirty flag is still set, the parent was not resized.\r\n    // Trigger the required update on the parent widget immediately.\r\n    if (this._dirty) {\r\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the layout position and size of the widgets.\r\n   *\r\n   * The parent offset dimensions should be `-1` if unknown.\r\n   */\r\n  private _update(offsetWidth: number, offsetHeight: number): void {\r\n    // Clear the dirty flag to indicate the update occurred.\r\n    this._dirty = false;\r\n\r\n    // Bail early if there is no root layout node.\r\n    if (!this._root) {\r\n      return;\r\n    }\r\n\r\n    // Measure the parent if the offset dimensions are unknown.\r\n    if (offsetWidth < 0) {\r\n      offsetWidth = this.parent!.node.offsetWidth;\r\n    }\r\n    if (offsetHeight < 0) {\r\n      offsetHeight = this.parent!.node.offsetHeight;\r\n    }\r\n\r\n    // Ensure the parent box sizing data is computed.\r\n    if (!this._box) {\r\n      this._box = ElementExt.boxSizing(this.parent!.node);\r\n    }\r\n\r\n    // Compute the actual layout bounds adjusted for border and padding.\r\n    let x = this._box.paddingTop;\r\n    let y = this._box.paddingLeft;\r\n    let width = offsetWidth - this._box.horizontalSum;\r\n    let height = offsetHeight - this._box.verticalSum;\r\n\r\n    // Update the geometry of the layout tree.\r\n    this._root.update(x, y, width, height, this._spacing, this._items);\r\n  }\r\n\r\n  /**\r\n   * Create a new tab bar for use by the dock layout.\r\n   *\r\n   * #### Notes\r\n   * The tab bar will be attached to the parent if it exists.\r\n   */\r\n  private _createTabBar(): TabBar<Widget> {\r\n    // Create the tab bar using the renderer.\r\n    let tabBar = this.renderer.createTabBar(this._document);\r\n\r\n    // Enforce necessary tab bar behavior.\r\n    tabBar.orientation = 'horizontal';\r\n\r\n    // Reparent and attach the tab bar to the parent if possible.\r\n    if (this.parent) {\r\n      tabBar.parent = this.parent;\r\n      this.attachWidget(tabBar);\r\n    }\r\n\r\n    // Return the initialized tab bar.\r\n    return tabBar;\r\n  }\r\n\r\n  /**\r\n   * Create a new handle for the dock layout.\r\n   *\r\n   * #### Notes\r\n   * The handle will be attached to the parent if it exists.\r\n   */\r\n  private _createHandle(): HTMLDivElement {\r\n    // Create the handle using the renderer.\r\n    let handle = this.renderer.createHandle();\r\n\r\n    // Initialize the handle layout behavior.\r\n    let style = handle.style;\r\n    style.position = 'absolute';\r\n    style.top = '0';\r\n    style.left = '0';\r\n    style.width = '0';\r\n    style.height = '0';\r\n\r\n    // Attach the handle to the parent if it exists.\r\n    if (this.parent) {\r\n      this.parent.node.appendChild(handle);\r\n    }\r\n\r\n    // Return the initialized handle.\r\n    return handle;\r\n  }\r\n\r\n  private _spacing = 4;\r\n  private _dirty = false;\r\n  private _root: Private.LayoutNode | null = null;\r\n  private _box: ElementExt.IBoxSizing | null = null;\r\n  private _document: Document | ShadowRoot;\r\n  private _hiddenMode: Widget.HiddenMode;\r\n  private _items: Private.ItemMap = new Map<Widget, LayoutItem>();\r\n}\r\n\r\n/**\r\n * The namespace for the `DockLayout` class statics.\r\n */\r\nexport namespace DockLayout {\r\n  /**\r\n   * An options object for creating a dock layout.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The document to use with the dock panel.\r\n     *\r\n     * The default is the global `document` instance.\r\n     */\r\n    document?: Document | ShadowRoot;\r\n\r\n    /**\r\n     * The method for hiding widgets.\r\n     *\r\n     * The default is `Widget.HiddenMode.Display`.\r\n     */\r\n    hiddenMode?: Widget.HiddenMode;\r\n\r\n    /**\r\n     * The renderer to use for the dock layout.\r\n     */\r\n    renderer: IRenderer;\r\n\r\n    /**\r\n     * The spacing between items in the layout.\r\n     *\r\n     * The default is `4`.\r\n     */\r\n    spacing?: number;\r\n  }\r\n\r\n  /**\r\n   * A renderer for use with a dock layout.\r\n   */\r\n  export interface IRenderer {\r\n    /**\r\n     * Create a new tab bar for use with a dock layout.\r\n     *\r\n     * @returns A new tab bar for a dock layout.\r\n     */\r\n    createTabBar(document?: Document | ShadowRoot): TabBar<Widget>;\r\n\r\n    /**\r\n     * Create a new handle node for use with a dock layout.\r\n     *\r\n     * @returns A new handle node for a dock layout.\r\n     */\r\n    createHandle(): HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * A type alias for the supported insertion modes.\r\n   *\r\n   * An insert mode is used to specify how a widget should be added\r\n   * to the dock layout relative to a reference widget.\r\n   */\r\n  export type InsertMode =\r\n    | /**\r\n     * The area to the top of the reference widget.\r\n     *\r\n     * The widget will be inserted just above the reference widget.\r\n     *\r\n     * If the reference widget is null or invalid, the widget will be\r\n     * inserted at the top edge of the dock layout.\r\n     */\r\n    'split-top'\r\n\r\n    /**\r\n     * The area to the left of the reference widget.\r\n     *\r\n     * The widget will be inserted just left of the reference widget.\r\n     *\r\n     * If the reference widget is null or invalid, the widget will be\r\n     * inserted at the left edge of the dock layout.\r\n     */\r\n    | 'split-left'\r\n\r\n    /**\r\n     * The area to the right of the reference widget.\r\n     *\r\n     * The widget will be inserted just right of the reference widget.\r\n     *\r\n     * If the reference widget is null or invalid, the widget will be\r\n     * inserted  at the right edge of the dock layout.\r\n     */\r\n    | 'split-right'\r\n\r\n    /**\r\n     * The area to the bottom of the reference widget.\r\n     *\r\n     * The widget will be inserted just below the reference widget.\r\n     *\r\n     * If the reference widget is null or invalid, the widget will be\r\n     * inserted at the bottom edge of the dock layout.\r\n     */\r\n    | 'split-bottom'\r\n\r\n    /**\r\n     * The tab position before the reference widget.\r\n     *\r\n     * The widget will be added as a tab before the reference widget.\r\n     *\r\n     * If the reference widget is null or invalid, a sensible default\r\n     * will be used.\r\n     */\r\n    | 'tab-before'\r\n\r\n    /**\r\n     * The tab position after the reference widget.\r\n     *\r\n     * The widget will be added as a tab after the reference widget.\r\n     *\r\n     * If the reference widget is null or invalid, a sensible default\r\n     * will be used.\r\n     */\r\n    | 'tab-after';\r\n\r\n  /**\r\n   * An options object for adding a widget to the dock layout.\r\n   */\r\n  export interface IAddOptions {\r\n    /**\r\n     * The insertion mode for adding the widget.\r\n     *\r\n     * The default is `'tab-after'`.\r\n     */\r\n    mode?: InsertMode;\r\n\r\n    /**\r\n     * The reference widget for the insert location.\r\n     *\r\n     * The default is `null`.\r\n     */\r\n    ref?: Widget | null;\r\n  }\r\n\r\n  /**\r\n   * A layout config object for a tab area.\r\n   */\r\n  export interface ITabAreaConfig {\r\n    /**\r\n     * The discriminated type of the config object.\r\n     */\r\n    type: 'tab-area';\r\n\r\n    /**\r\n     * The widgets contained in the tab area.\r\n     */\r\n    widgets: Widget[];\r\n\r\n    /**\r\n     * The index of the selected tab.\r\n     */\r\n    currentIndex: number;\r\n  }\r\n\r\n  /**\r\n   * A layout config object for a split area.\r\n   */\r\n  export interface ISplitAreaConfig {\r\n    /**\r\n     * The discriminated type of the config object.\r\n     */\r\n    type: 'split-area';\r\n\r\n    /**\r\n     * The orientation of the split area.\r\n     */\r\n    orientation: 'horizontal' | 'vertical';\r\n\r\n    /**\r\n     * The children in the split area.\r\n     */\r\n    children: AreaConfig[];\r\n\r\n    /**\r\n     * The relative sizes of the children.\r\n     */\r\n    sizes: number[];\r\n  }\r\n\r\n  /**\r\n   * A type alias for a general area config.\r\n   */\r\n  export type AreaConfig = ITabAreaConfig | ISplitAreaConfig;\r\n\r\n  /**\r\n   * A dock layout configuration object.\r\n   */\r\n  export interface ILayoutConfig {\r\n    /**\r\n     * The layout config for the main dock area.\r\n     */\r\n    main: AreaConfig | null;\r\n  }\r\n\r\n  /**\r\n   * An object which represents the geometry of a tab area.\r\n   */\r\n  export interface ITabAreaGeometry {\r\n    /**\r\n     * The tab bar for the tab area.\r\n     */\r\n    tabBar: TabBar<Widget>;\r\n\r\n    /**\r\n     * The local X position of the hit test in the dock area.\r\n     *\r\n     * #### Notes\r\n     * This is the distance from the left edge of the layout parent\r\n     * widget, to the local X coordinate of the hit test query.\r\n     */\r\n    x: number;\r\n\r\n    /**\r\n     * The local Y position of the hit test in the dock area.\r\n     *\r\n     * #### Notes\r\n     * This is the distance from the top edge of the layout parent\r\n     * widget, to the local Y coordinate of the hit test query.\r\n     */\r\n    y: number;\r\n\r\n    /**\r\n     * The local coordinate of the top edge of the tab area.\r\n     *\r\n     * #### Notes\r\n     * This is the distance from the top edge of the layout parent\r\n     * widget, to the top edge of the tab area.\r\n     */\r\n    top: number;\r\n\r\n    /**\r\n     * The local coordinate of the left edge of the tab area.\r\n     *\r\n     * #### Notes\r\n     * This is the distance from the left edge of the layout parent\r\n     * widget, to the left edge of the tab area.\r\n     */\r\n    left: number;\r\n\r\n    /**\r\n     * The local coordinate of the right edge of the tab area.\r\n     *\r\n     * #### Notes\r\n     * This is the distance from the right edge of the layout parent\r\n     * widget, to the right edge of the tab area.\r\n     */\r\n    right: number;\r\n\r\n    /**\r\n     * The local coordinate of the bottom edge of the tab area.\r\n     *\r\n     * #### Notes\r\n     * This is the distance from the bottom edge of the layout parent\r\n     * widget, to the bottom edge of the tab area.\r\n     */\r\n    bottom: number;\r\n\r\n    /**\r\n     * The width of the tab area.\r\n     *\r\n     * #### Notes\r\n     * This is total width allocated for the tab area.\r\n     */\r\n    width: number;\r\n\r\n    /**\r\n     * The height of the tab area.\r\n     *\r\n     * #### Notes\r\n     * This is total height allocated for the tab area.\r\n     */\r\n    height: number;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A fraction used for sizing root panels; ~= `1 / golden_ratio`.\r\n   */\r\n  export const GOLDEN_RATIO = 0.618;\r\n\r\n  /**\r\n   * A type alias for a dock layout node.\r\n   */\r\n  export type LayoutNode = TabLayoutNode | SplitLayoutNode;\r\n\r\n  /**\r\n   * A type alias for the orientation of a split layout node.\r\n   */\r\n  export type Orientation = 'horizontal' | 'vertical';\r\n\r\n  /**\r\n   * A type alias for a layout item map.\r\n   */\r\n  export type ItemMap = Map<Widget, LayoutItem>;\r\n\r\n  /**\r\n   * Create a box sizer with an initial size hint.\r\n   */\r\n  export function createSizer(hint: number): BoxSizer {\r\n    let sizer = new BoxSizer();\r\n    sizer.sizeHint = hint;\r\n    sizer.size = hint;\r\n    return sizer;\r\n  }\r\n\r\n  /**\r\n   * Normalize an area config object and collect the visited widgets.\r\n   */\r\n  export function normalizeAreaConfig(\r\n    config: DockLayout.AreaConfig,\r\n    widgetSet: Set<Widget>\r\n  ): DockLayout.AreaConfig | null {\r\n    let result: DockLayout.AreaConfig | null;\r\n    if (config.type === 'tab-area') {\r\n      result = normalizeTabAreaConfig(config, widgetSet);\r\n    } else {\r\n      result = normalizeSplitAreaConfig(config, widgetSet);\r\n    }\r\n    return result;\r\n  }\r\n\r\n  /**\r\n   * Convert a normalized area config into a layout tree.\r\n   */\r\n  export function realizeAreaConfig(\r\n    config: DockLayout.AreaConfig,\r\n    renderer: DockLayout.IRenderer\r\n  ): LayoutNode {\r\n    let node: LayoutNode;\r\n    if (config.type === 'tab-area') {\r\n      node = realizeTabAreaConfig(config, renderer);\r\n    } else {\r\n      node = realizeSplitAreaConfig(config, renderer);\r\n    }\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * A layout node which holds the data for a tabbed area.\r\n   */\r\n  export class TabLayoutNode {\r\n    /**\r\n     * Construct a new tab layout node.\r\n     *\r\n     * @param tabBar - The tab bar to use for the layout node.\r\n     */\r\n    constructor(tabBar: TabBar<Widget>) {\r\n      let tabSizer = new BoxSizer();\r\n      let widgetSizer = new BoxSizer();\r\n      tabSizer.stretch = 0;\r\n      widgetSizer.stretch = 1;\r\n      this.tabBar = tabBar;\r\n      this.sizers = [tabSizer, widgetSizer];\r\n    }\r\n\r\n    /**\r\n     * The parent of the layout node.\r\n     */\r\n    parent: SplitLayoutNode | null = null;\r\n\r\n    /**\r\n     * The tab bar for the layout node.\r\n     */\r\n    readonly tabBar: TabBar<Widget>;\r\n\r\n    /**\r\n     * The sizers for the layout node.\r\n     */\r\n    readonly sizers: [BoxSizer, BoxSizer];\r\n\r\n    /**\r\n     * The most recent value for the `top` edge of the layout box.\r\n     */\r\n    get top(): number {\r\n      return this._top;\r\n    }\r\n\r\n    /**\r\n     * The most recent value for the `left` edge of the layout box.\r\n     */\r\n    get left(): number {\r\n      return this._left;\r\n    }\r\n\r\n    /**\r\n     * The most recent value for the `width` of the layout box.\r\n     */\r\n    get width(): number {\r\n      return this._width;\r\n    }\r\n\r\n    /**\r\n     * The most recent value for the `height` of the layout box.\r\n     */\r\n    get height(): number {\r\n      return this._height;\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for all widgets in the layout tree.\r\n     */\r\n    iterAllWidgets(): IIterator<Widget> {\r\n      return chain(once(this.tabBar), this.iterUserWidgets());\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for the user widgets in the layout tree.\r\n     */\r\n    iterUserWidgets(): IIterator<Widget> {\r\n      return map(this.tabBar.titles, title => title.owner);\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for the selected widgets in the layout tree.\r\n     */\r\n    iterSelectedWidgets(): IIterator<Widget> {\r\n      let title = this.tabBar.currentTitle;\r\n      return title ? once(title.owner) : empty<Widget>();\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for the tab bars in the layout tree.\r\n     */\r\n    iterTabBars(): IIterator<TabBar<Widget>> {\r\n      return once(this.tabBar);\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for the handles in the layout tree.\r\n     */\r\n    iterHandles(): IIterator<HTMLDivElement> {\r\n      return empty<HTMLDivElement>();\r\n    }\r\n\r\n    /**\r\n     * Find the tab layout node which contains the given widget.\r\n     */\r\n    findTabNode(widget: Widget): TabLayoutNode | null {\r\n      return this.tabBar.titles.indexOf(widget.title) !== -1 ? this : null;\r\n    }\r\n\r\n    /**\r\n     * Find the split layout node which contains the given handle.\r\n     */\r\n    findSplitNode(\r\n      handle: HTMLDivElement\r\n    ): { index: number; node: SplitLayoutNode } | null {\r\n      return null;\r\n    }\r\n\r\n    /**\r\n     * Find the first tab layout node in a layout tree.\r\n     */\r\n    findFirstTabNode(): TabLayoutNode | null {\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Find the tab layout node which contains the local point.\r\n     */\r\n    hitTestTabNodes(x: number, y: number): TabLayoutNode | null {\r\n      if (x < this._left || x >= this._left + this._width) {\r\n        return null;\r\n      }\r\n      if (y < this._top || y >= this._top + this._height) {\r\n        return null;\r\n      }\r\n      return this;\r\n    }\r\n\r\n    /**\r\n     * Create a configuration object for the layout tree.\r\n     */\r\n    createConfig(): DockLayout.ITabAreaConfig {\r\n      let widgets = this.tabBar.titles.map(title => title.owner);\r\n      let currentIndex = this.tabBar.currentIndex;\r\n      return { type: 'tab-area', widgets, currentIndex };\r\n    }\r\n\r\n    /**\r\n     * Recursively hold all of the sizes in the layout tree.\r\n     *\r\n     * This ignores the sizers of tab layout nodes.\r\n     */\r\n    holdAllSizes(): void {\r\n      return;\r\n    }\r\n\r\n    /**\r\n     * Fit the layout tree.\r\n     */\r\n    fit(spacing: number, items: ItemMap): ElementExt.ISizeLimits {\r\n      // Set up the limit variables.\r\n      let minWidth = 0;\r\n      let minHeight = 0;\r\n      let maxWidth = Infinity;\r\n      let maxHeight = Infinity;\r\n\r\n      // Lookup the tab bar layout item.\r\n      let tabBarItem = items.get(this.tabBar);\r\n\r\n      // Lookup the widget layout item.\r\n      let current = this.tabBar.currentTitle;\r\n      let widgetItem = current ? items.get(current.owner) : undefined;\r\n\r\n      // Lookup the tab bar and widget sizers.\r\n      let [tabBarSizer, widgetSizer] = this.sizers;\r\n\r\n      // Update the tab bar limits.\r\n      if (tabBarItem) {\r\n        tabBarItem.fit();\r\n      }\r\n\r\n      // Update the widget limits.\r\n      if (widgetItem) {\r\n        widgetItem.fit();\r\n      }\r\n\r\n      // Update the results and sizer for the tab bar.\r\n      if (tabBarItem && !tabBarItem.isHidden) {\r\n        minWidth = Math.max(minWidth, tabBarItem.minWidth);\r\n        minHeight += tabBarItem.minHeight;\r\n        tabBarSizer.minSize = tabBarItem.minHeight;\r\n        tabBarSizer.maxSize = tabBarItem.maxHeight;\r\n      } else {\r\n        tabBarSizer.minSize = 0;\r\n        tabBarSizer.maxSize = 0;\r\n      }\r\n\r\n      // Update the results and sizer for the current widget.\r\n      if (widgetItem && !widgetItem.isHidden) {\r\n        minWidth = Math.max(minWidth, widgetItem.minWidth);\r\n        minHeight += widgetItem.minHeight;\r\n        widgetSizer.minSize = widgetItem.minHeight;\r\n        widgetSizer.maxSize = Infinity;\r\n      } else {\r\n        widgetSizer.minSize = 0;\r\n        widgetSizer.maxSize = Infinity;\r\n      }\r\n\r\n      // Return the computed size limits for the layout node.\r\n      return { minWidth, minHeight, maxWidth, maxHeight };\r\n    }\r\n\r\n    /**\r\n     * Update the layout tree.\r\n     */\r\n    update(\r\n      left: number,\r\n      top: number,\r\n      width: number,\r\n      height: number,\r\n      spacing: number,\r\n      items: ItemMap\r\n    ): void {\r\n      // Update the layout box values.\r\n      this._top = top;\r\n      this._left = left;\r\n      this._width = width;\r\n      this._height = height;\r\n\r\n      // Lookup the tab bar layout item.\r\n      let tabBarItem = items.get(this.tabBar);\r\n\r\n      // Lookup the widget layout item.\r\n      let current = this.tabBar.currentTitle;\r\n      let widgetItem = current ? items.get(current.owner) : undefined;\r\n\r\n      // Distribute the layout space to the sizers.\r\n      BoxEngine.calc(this.sizers, height);\r\n\r\n      // Update the tab bar item using the computed size.\r\n      if (tabBarItem && !tabBarItem.isHidden) {\r\n        let size = this.sizers[0].size;\r\n        tabBarItem.update(left, top, width, size);\r\n        top += size;\r\n      }\r\n\r\n      // Layout the widget using the computed size.\r\n      if (widgetItem && !widgetItem.isHidden) {\r\n        let size = this.sizers[1].size;\r\n        widgetItem.update(left, top, width, size);\r\n      }\r\n    }\r\n\r\n    private _top = 0;\r\n    private _left = 0;\r\n    private _width = 0;\r\n    private _height = 0;\r\n  }\r\n\r\n  /**\r\n   * A layout node which holds the data for a split area.\r\n   */\r\n  export class SplitLayoutNode {\r\n    /**\r\n     * Construct a new split layout node.\r\n     *\r\n     * @param orientation - The orientation of the node.\r\n     */\r\n    constructor(orientation: Orientation) {\r\n      this.orientation = orientation;\r\n    }\r\n\r\n    /**\r\n     * The parent of the layout node.\r\n     */\r\n    parent: SplitLayoutNode | null = null;\r\n\r\n    /**\r\n     * Whether the sizers have been normalized.\r\n     */\r\n    normalized = false;\r\n\r\n    /**\r\n     * The orientation of the node.\r\n     */\r\n    readonly orientation: Orientation;\r\n\r\n    /**\r\n     * The child nodes for the split node.\r\n     */\r\n    readonly children: LayoutNode[] = [];\r\n\r\n    /**\r\n     * The box sizers for the layout children.\r\n     */\r\n    readonly sizers: BoxSizer[] = [];\r\n\r\n    /**\r\n     * The handles for the layout children.\r\n     */\r\n    readonly handles: HTMLDivElement[] = [];\r\n\r\n    /**\r\n     * Create an iterator for all widgets in the layout tree.\r\n     */\r\n    iterAllWidgets(): IIterator<Widget> {\r\n      let children = map(this.children, child => child.iterAllWidgets());\r\n      return new ChainIterator<Widget>(children);\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for the user widgets in the layout tree.\r\n     */\r\n    iterUserWidgets(): IIterator<Widget> {\r\n      let children = map(this.children, child => child.iterUserWidgets());\r\n      return new ChainIterator<Widget>(children);\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for the selected widgets in the layout tree.\r\n     */\r\n    iterSelectedWidgets(): IIterator<Widget> {\r\n      let children = map(this.children, child => child.iterSelectedWidgets());\r\n      return new ChainIterator<Widget>(children);\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for the tab bars in the layout tree.\r\n     */\r\n    iterTabBars(): IIterator<TabBar<Widget>> {\r\n      let children = map(this.children, child => child.iterTabBars());\r\n      return new ChainIterator<TabBar<Widget>>(children);\r\n    }\r\n\r\n    /**\r\n     * Create an iterator for the handles in the layout tree.\r\n     */\r\n    iterHandles(): IIterator<HTMLDivElement> {\r\n      let children = map(this.children, child => child.iterHandles());\r\n      return chain(this.handles, new ChainIterator<HTMLDivElement>(children));\r\n    }\r\n\r\n    /**\r\n     * Find the tab layout node which contains the given widget.\r\n     */\r\n    findTabNode(widget: Widget): TabLayoutNode | null {\r\n      for (let i = 0, n = this.children.length; i < n; ++i) {\r\n        let result = this.children[i].findTabNode(widget);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    /**\r\n     * Find the split layout node which contains the given handle.\r\n     */\r\n    findSplitNode(\r\n      handle: HTMLDivElement\r\n    ): { index: number; node: SplitLayoutNode } | null {\r\n      let index = this.handles.indexOf(handle);\r\n      if (index !== -1) {\r\n        return { index, node: this };\r\n      }\r\n      for (let i = 0, n = this.children.length; i < n; ++i) {\r\n        let result = this.children[i].findSplitNode(handle);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    /**\r\n     * Find the first tab layout node in a layout tree.\r\n     */\r\n    findFirstTabNode(): TabLayoutNode | null {\r\n      if (this.children.length === 0) {\r\n        return null;\r\n      }\r\n      return this.children[0].findFirstTabNode();\r\n    }\r\n\r\n    /**\r\n     * Find the tab layout node which contains the local point.\r\n     */\r\n    hitTestTabNodes(x: number, y: number): TabLayoutNode | null {\r\n      for (let i = 0, n = this.children.length; i < n; ++i) {\r\n        let result = this.children[i].hitTestTabNodes(x, y);\r\n        if (result) {\r\n          return result;\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    /**\r\n     * Create a configuration object for the layout tree.\r\n     */\r\n    createConfig(): DockLayout.ISplitAreaConfig {\r\n      let orientation = this.orientation;\r\n      let sizes = this.createNormalizedSizes();\r\n      let children = this.children.map(child => child.createConfig());\r\n      return { type: 'split-area', orientation, children, sizes };\r\n    }\r\n\r\n    /**\r\n     * Sync the visibility and orientation of the handles.\r\n     */\r\n    syncHandles(): void {\r\n      each(this.handles, (handle, i) => {\r\n        handle.setAttribute('data-orientation', this.orientation);\r\n        if (i === this.handles.length - 1) {\r\n          handle.classList.add('lm-mod-hidden');\r\n          /* <DEPRECATED> */\r\n          handle.classList.add('p-mod-hidden');\r\n          /* </DEPRECATED> */\r\n        } else {\r\n          handle.classList.remove('lm-mod-hidden');\r\n          /* <DEPRECATED> */\r\n          handle.classList.remove('p-mod-hidden');\r\n          /* </DEPRECATED> */\r\n        }\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Hold the current sizes of the box sizers.\r\n     *\r\n     * This sets the size hint of each sizer to its current size.\r\n     */\r\n    holdSizes(): void {\r\n      each(this.sizers, sizer => {\r\n        sizer.sizeHint = sizer.size;\r\n      });\r\n    }\r\n\r\n    /**\r\n     * Recursively hold all of the sizes in the layout tree.\r\n     *\r\n     * This ignores the sizers of tab layout nodes.\r\n     */\r\n    holdAllSizes(): void {\r\n      each(this.children, child => child.holdAllSizes());\r\n      this.holdSizes();\r\n    }\r\n\r\n    /**\r\n     * Normalize the sizes of the split layout node.\r\n     */\r\n    normalizeSizes(): void {\r\n      // Bail early if the sizers are empty.\r\n      let n = this.sizers.length;\r\n      if (n === 0) {\r\n        return;\r\n      }\r\n\r\n      // Hold the current sizes of the sizers.\r\n      this.holdSizes();\r\n\r\n      // Compute the sum of the sizes.\r\n      let sum = reduce(this.sizers, (v, sizer) => v + sizer.sizeHint, 0);\r\n\r\n      // Normalize the sizes based on the sum.\r\n      if (sum === 0) {\r\n        each(this.sizers, sizer => {\r\n          sizer.size = sizer.sizeHint = 1 / n;\r\n        });\r\n      } else {\r\n        each(this.sizers, sizer => {\r\n          sizer.size = sizer.sizeHint /= sum;\r\n        });\r\n      }\r\n\r\n      // Mark the sizes as normalized.\r\n      this.normalized = true;\r\n    }\r\n\r\n    /**\r\n     * Snap the normalized sizes of the split layout node.\r\n     */\r\n    createNormalizedSizes(): number[] {\r\n      // Bail early if the sizers are empty.\r\n      let n = this.sizers.length;\r\n      if (n === 0) {\r\n        return [];\r\n      }\r\n\r\n      // Grab the current sizes of the sizers.\r\n      let sizes = this.sizers.map(sizer => sizer.size);\r\n\r\n      // Compute the sum of the sizes.\r\n      let sum = reduce(sizes, (v, size) => v + size, 0);\r\n\r\n      // Normalize the sizes based on the sum.\r\n      if (sum === 0) {\r\n        each(sizes, (size, i) => {\r\n          sizes[i] = 1 / n;\r\n        });\r\n      } else {\r\n        each(sizes, (size, i) => {\r\n          sizes[i] = size / sum;\r\n        });\r\n      }\r\n\r\n      // Return the normalized sizes.\r\n      return sizes;\r\n    }\r\n\r\n    /**\r\n     * Fit the layout tree.\r\n     */\r\n    fit(spacing: number, items: ItemMap): ElementExt.ISizeLimits {\r\n      // Compute the required fixed space.\r\n      let horizontal = this.orientation === 'horizontal';\r\n      let fixed = Math.max(0, this.children.length - 1) * spacing;\r\n\r\n      // Set up the limit variables.\r\n      let minWidth = horizontal ? fixed : 0;\r\n      let minHeight = horizontal ? 0 : fixed;\r\n      let maxWidth = Infinity;\r\n      let maxHeight = Infinity;\r\n\r\n      // Fit the children and update the limits.\r\n      for (let i = 0, n = this.children.length; i < n; ++i) {\r\n        let limits = this.children[i].fit(spacing, items);\r\n        if (horizontal) {\r\n          minHeight = Math.max(minHeight, limits.minHeight);\r\n          minWidth += limits.minWidth;\r\n          this.sizers[i].minSize = limits.minWidth;\r\n        } else {\r\n          minWidth = Math.max(minWidth, limits.minWidth);\r\n          minHeight += limits.minHeight;\r\n          this.sizers[i].minSize = limits.minHeight;\r\n        }\r\n      }\r\n\r\n      // Return the computed limits for the layout node.\r\n      return { minWidth, minHeight, maxWidth, maxHeight };\r\n    }\r\n\r\n    /**\r\n     * Update the layout tree.\r\n     */\r\n    update(\r\n      left: number,\r\n      top: number,\r\n      width: number,\r\n      height: number,\r\n      spacing: number,\r\n      items: ItemMap\r\n    ): void {\r\n      // Compute the available layout space.\r\n      let horizontal = this.orientation === 'horizontal';\r\n      let fixed = Math.max(0, this.children.length - 1) * spacing;\r\n      let space = Math.max(0, (horizontal ? width : height) - fixed);\r\n\r\n      // De-normalize the sizes if needed.\r\n      if (this.normalized) {\r\n        each(this.sizers, sizer => {\r\n          sizer.sizeHint *= space;\r\n        });\r\n        this.normalized = false;\r\n      }\r\n\r\n      // Distribute the layout space to the sizers.\r\n      BoxEngine.calc(this.sizers, space);\r\n\r\n      // Update the geometry of the child nodes and handles.\r\n      for (let i = 0, n = this.children.length; i < n; ++i) {\r\n        let child = this.children[i];\r\n        let size = this.sizers[i].size;\r\n        let handleStyle = this.handles[i].style;\r\n        if (horizontal) {\r\n          child.update(left, top, size, height, spacing, items);\r\n          left += size;\r\n          handleStyle.top = `${top}px`;\r\n          handleStyle.left = `${left}px`;\r\n          handleStyle.width = `${spacing}px`;\r\n          handleStyle.height = `${height}px`;\r\n          left += spacing;\r\n        } else {\r\n          child.update(left, top, width, size, spacing, items);\r\n          top += size;\r\n          handleStyle.top = `${top}px`;\r\n          handleStyle.left = `${left}px`;\r\n          handleStyle.width = `${width}px`;\r\n          handleStyle.height = `${spacing}px`;\r\n          top += spacing;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  export function addAria(widget: Widget, tabBar: TabBar<Widget>) {\r\n    widget.node.setAttribute('role', 'tabpanel');\r\n    let renderer = tabBar.renderer;\r\n    if (renderer instanceof TabBar.Renderer) {\r\n      let tabId = renderer.createTabKey({\r\n        title: widget.title,\r\n        current: false,\r\n        zIndex: 0\r\n      });\r\n      widget.node.setAttribute('aria-labelledby', tabId);\r\n    }\r\n  }\r\n\r\n  export function removeAria(widget: Widget) {\r\n    widget.node.removeAttribute('role');\r\n    widget.node.removeAttribute('aria-labelledby');\r\n  }\r\n\r\n  /**\r\n   * Normalize a tab area config and collect the visited widgets.\r\n   */\r\n  function normalizeTabAreaConfig(\r\n    config: DockLayout.ITabAreaConfig,\r\n    widgetSet: Set<Widget>\r\n  ): DockLayout.ITabAreaConfig | null {\r\n    // Bail early if there is no content.\r\n    if (config.widgets.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Setup the filtered widgets array.\r\n    let widgets: Widget[] = [];\r\n\r\n    // Filter the config for unique widgets.\r\n    each(config.widgets, widget => {\r\n      if (!widgetSet.has(widget)) {\r\n        widgetSet.add(widget);\r\n        widgets.push(widget);\r\n      }\r\n    });\r\n\r\n    // Bail if there are no effective widgets.\r\n    if (widgets.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // Normalize the current index.\r\n    let index = config.currentIndex;\r\n    if (index !== -1 && (index < 0 || index >= widgets.length)) {\r\n      index = 0;\r\n    }\r\n\r\n    // Return a normalized config object.\r\n    return { type: 'tab-area', widgets, currentIndex: index };\r\n  }\r\n\r\n  /**\r\n   * Normalize a split area config and collect the visited widgets.\r\n   */\r\n  function normalizeSplitAreaConfig(\r\n    config: DockLayout.ISplitAreaConfig,\r\n    widgetSet: Set<Widget>\r\n  ): DockLayout.AreaConfig | null {\r\n    // Set up the result variables.\r\n    let orientation = config.orientation;\r\n    let children: DockLayout.AreaConfig[] = [];\r\n    let sizes: number[] = [];\r\n\r\n    // Normalize the config children.\r\n    for (let i = 0, n = config.children.length; i < n; ++i) {\r\n      // Normalize the child config.\r\n      let child = normalizeAreaConfig(config.children[i], widgetSet);\r\n\r\n      // Ignore an empty child.\r\n      if (!child) {\r\n        continue;\r\n      }\r\n\r\n      // Add the child or hoist its content as appropriate.\r\n      if (child.type === 'tab-area' || child.orientation !== orientation) {\r\n        children.push(child);\r\n        sizes.push(Math.abs(config.sizes[i] || 0));\r\n      } else {\r\n        children.push(...child.children);\r\n        sizes.push(...child.sizes);\r\n      }\r\n    }\r\n\r\n    // Bail if there are no effective children.\r\n    if (children.length === 0) {\r\n      return null;\r\n    }\r\n\r\n    // If there is only one effective child, return that child.\r\n    if (children.length === 1) {\r\n      return children[0];\r\n    }\r\n\r\n    // Return a normalized config object.\r\n    return { type: 'split-area', orientation, children, sizes };\r\n  }\r\n\r\n  /**\r\n   * Convert a normalized tab area config into a layout tree.\r\n   */\r\n  function realizeTabAreaConfig(\r\n    config: DockLayout.ITabAreaConfig,\r\n    renderer: DockLayout.IRenderer\r\n  ): TabLayoutNode {\r\n    // Create the tab bar for the layout node.\r\n    let tabBar = renderer.createTabBar(this._document);\r\n\r\n    // Hide each widget and add it to the tab bar.\r\n    each(config.widgets, widget => {\r\n      widget.hide();\r\n      tabBar.addTab(widget.title);\r\n      Private.addAria(widget, tabBar);\r\n    });\r\n\r\n    // Set the current index of the tab bar.\r\n    tabBar.currentIndex = config.currentIndex;\r\n\r\n    // Return the new tab layout node.\r\n    return new TabLayoutNode(tabBar);\r\n  }\r\n\r\n  /**\r\n   * Convert a normalized split area config into a layout tree.\r\n   */\r\n  function realizeSplitAreaConfig(\r\n    config: DockLayout.ISplitAreaConfig,\r\n    renderer: DockLayout.IRenderer\r\n  ): SplitLayoutNode {\r\n    // Create the split layout node.\r\n    let node = new SplitLayoutNode(config.orientation);\r\n\r\n    // Add each child to the layout node.\r\n    each(config.children, (child, i) => {\r\n      // Create the child data for the layout node.\r\n      let childNode = realizeAreaConfig(child, renderer);\r\n      let sizer = createSizer(config.sizes[i]);\r\n      let handle = renderer.createHandle();\r\n\r\n      // Add the child data to the layout node.\r\n      node.children.push(childNode);\r\n      node.handles.push(handle);\r\n      node.sizers.push(sizer);\r\n\r\n      // Update the parent for the child node.\r\n      childNode.parent = node;\r\n    });\r\n\r\n    // Synchronize the handle state for the layout node.\r\n    node.syncHandles();\r\n\r\n    // Normalize the sizes for the layout node.\r\n    node.normalizeSizes();\r\n\r\n    // Return the new layout node.\r\n    return node;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { each, find, IIterator, toArray } from '@lumino/algorithm';\r\n\r\nimport { MimeData } from '@lumino/coreutils';\r\n\r\nimport { IDisposable } from '@lumino/disposable';\r\n\r\nimport { ElementExt, Platform } from '@lumino/domutils';\r\n\r\nimport { Drag, IDragEvent } from '@lumino/dragdrop';\r\n\r\nimport { ConflatableMessage, Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { AttachedProperty } from '@lumino/properties';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport { DockLayout } from './docklayout';\r\n\r\nimport { TabBar } from './tabbar';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A widget which provides a flexible docking area for widgets.\r\n */\r\nexport class DockPanel extends Widget {\r\n  /**\r\n   * Construct a new dock panel.\r\n   *\r\n   * @param options - The options for initializing the panel.\r\n   */\r\n  constructor(options: DockPanel.IOptions = {}) {\r\n    super();\r\n    this.addClass('lm-DockPanel');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-DockPanel');\r\n    /* </DEPRECATED> */\r\n    this._document = options.document || document;\r\n    this._mode = options.mode || 'multiple-document';\r\n    this._renderer = options.renderer || DockPanel.defaultRenderer;\r\n    this._edges = options.edges || Private.DEFAULT_EDGES;\r\n    if (options.tabsMovable !== undefined) {\r\n      this._tabsMovable = options.tabsMovable;\r\n    }\r\n    if (options.tabsConstrained !== undefined) {\r\n      this._tabsConstrained = options.tabsConstrained;\r\n    }\r\n    if (options.addButtonEnabled !== undefined) {\r\n      this._addButtonEnabled = options.addButtonEnabled;\r\n    }\r\n\r\n    // Toggle the CSS mode attribute.\r\n    this.dataset['mode'] = this._mode;\r\n\r\n    // Create the delegate renderer for the layout.\r\n    let renderer: DockPanel.IRenderer = {\r\n      createTabBar: () => this._createTabBar(),\r\n      createHandle: () => this._createHandle()\r\n    };\r\n\r\n    // Set up the dock layout for the panel.\r\n    this.layout = new DockLayout({\r\n      document: this._document,\r\n      renderer,\r\n      spacing: options.spacing,\r\n      hiddenMode: options.hiddenMode\r\n    });\r\n\r\n    // Set up the overlay drop indicator.\r\n    this.overlay = options.overlay || new DockPanel.Overlay();\r\n    this.node.appendChild(this.overlay.node);\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the panel.\r\n   */\r\n  dispose(): void {\r\n    // Ensure the mouse is released.\r\n    this._releaseMouse();\r\n\r\n    // Hide the overlay.\r\n    this.overlay.hide(0);\r\n\r\n    // Cancel a drag if one is in progress.\r\n    if (this._drag) {\r\n      this._drag.dispose();\r\n    }\r\n\r\n    // Dispose of the base class.\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * The method for hiding widgets.\r\n   */\r\n  get hiddenMode(): Widget.HiddenMode {\r\n    return (this.layout as DockLayout).hiddenMode;\r\n  }\r\n\r\n  /**\r\n   * Set the method for hiding widgets.\r\n   */\r\n  set hiddenMode(v: Widget.HiddenMode) {\r\n    (this.layout as DockLayout).hiddenMode = v;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the layout configuration is modified.\r\n   *\r\n   * #### Notes\r\n   * This signal is emitted whenever the current layout configuration\r\n   * may have changed.\r\n   *\r\n   * This signal is emitted asynchronously in a collapsed fashion, so\r\n   * that multiple synchronous modifications results in only a single\r\n   * emit of the signal.\r\n   */\r\n  get layoutModified(): ISignal<this, void> {\r\n    return this._layoutModified;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the add button on a tab bar is clicked.\r\n   *\r\n   */\r\n  get addRequested(): ISignal<this, TabBar<Widget>> {\r\n    return this._addRequested;\r\n  }\r\n\r\n  /**\r\n   * The overlay used by the dock panel.\r\n   */\r\n  readonly overlay: DockPanel.IOverlay;\r\n\r\n  /**\r\n   * The renderer used by the dock panel.\r\n   */\r\n  get renderer(): DockPanel.IRenderer {\r\n    return (this.layout as DockLayout).renderer;\r\n  }\r\n\r\n  /**\r\n   * Get the spacing between the widgets.\r\n   */\r\n  get spacing(): number {\r\n    return (this.layout as DockLayout).spacing;\r\n  }\r\n\r\n  /**\r\n   * Set the spacing between the widgets.\r\n   */\r\n  set spacing(value: number) {\r\n    (this.layout as DockLayout).spacing = value;\r\n  }\r\n\r\n  /**\r\n   * Get the mode for the dock panel.\r\n   */\r\n  get mode(): DockPanel.Mode {\r\n    return this._mode;\r\n  }\r\n\r\n  /**\r\n   * Set the mode for the dock panel.\r\n   *\r\n   * #### Notes\r\n   * Changing the mode is a destructive operation with respect to the\r\n   * panel's layout configuration. If layout state must be preserved,\r\n   * save the current layout config before changing the mode.\r\n   */\r\n  set mode(value: DockPanel.Mode) {\r\n    // Bail early if the mode does not change.\r\n    if (this._mode === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal mode.\r\n    this._mode = value;\r\n\r\n    // Toggle the CSS mode attribute.\r\n    this.dataset['mode'] = value;\r\n\r\n    // Get the layout for the panel.\r\n    let layout = this.layout as DockLayout;\r\n\r\n    // Configure the layout for the specified mode.\r\n    switch (value) {\r\n      case 'multiple-document':\r\n        each(layout.tabBars(), tabBar => {\r\n          tabBar.show();\r\n        });\r\n        break;\r\n      case 'single-document':\r\n        layout.restoreLayout(Private.createSingleDocumentConfig(this));\r\n        break;\r\n      default:\r\n        throw 'unreachable';\r\n    }\r\n\r\n    // Schedule an emit of the layout modified signal.\r\n    MessageLoop.postMessage(this, Private.LayoutModified);\r\n  }\r\n\r\n  /**\r\n   * Whether the tabs can be dragged / moved at runtime.\r\n   */\r\n  get tabsMovable(): boolean {\r\n    return this._tabsMovable;\r\n  }\r\n\r\n  /**\r\n   * Enable / Disable draggable / movable tabs.\r\n   */\r\n  set tabsMovable(value: boolean) {\r\n    this._tabsMovable = value;\r\n    each(this.tabBars(), tabbar => {\r\n      tabbar.tabsMovable = value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Whether the tabs are constrained to their source dock panel\r\n   */\r\n  get tabsConstrained(): boolean {\r\n    return this._tabsConstrained;\r\n  }\r\n\r\n  /**\r\n   * Constrain/Allow tabs to be dragged outside of this dock panel\r\n   */\r\n  set tabsConstrained(value: boolean) {\r\n    this._tabsConstrained = value;\r\n  }\r\n\r\n  /**\r\n   * Whether the add buttons for each tab bar are enabled.\r\n   */\r\n  get addButtonEnabled(): boolean {\r\n    return this._addButtonEnabled;\r\n  }\r\n\r\n  /**\r\n   * Set whether the add buttons for each tab bar are enabled.\r\n   */\r\n  set addButtonEnabled(value: boolean) {\r\n    this._addButtonEnabled = value;\r\n    each(this.tabBars(), tabbar => {\r\n      tabbar.addButtonEnabled = value;\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Whether the dock panel is empty.\r\n   */\r\n  get isEmpty(): boolean {\r\n    return (this.layout as DockLayout).isEmpty;\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the user widgets in the panel.\r\n   *\r\n   * @returns A new iterator over the user widgets in the panel.\r\n   *\r\n   * #### Notes\r\n   * This iterator does not include the generated tab bars.\r\n   */\r\n  widgets(): IIterator<Widget> {\r\n    return (this.layout as DockLayout).widgets();\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the selected widgets in the panel.\r\n   *\r\n   * @returns A new iterator over the selected user widgets.\r\n   *\r\n   * #### Notes\r\n   * This iterator yields the widgets corresponding to the current tab\r\n   * of each tab bar in the panel.\r\n   */\r\n  selectedWidgets(): IIterator<Widget> {\r\n    return (this.layout as DockLayout).selectedWidgets();\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the tab bars in the panel.\r\n   *\r\n   * @returns A new iterator over the tab bars in the panel.\r\n   *\r\n   * #### Notes\r\n   * This iterator does not include the user widgets.\r\n   */\r\n  tabBars(): IIterator<TabBar<Widget>> {\r\n    return (this.layout as DockLayout).tabBars();\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the handles in the panel.\r\n   *\r\n   * @returns A new iterator over the handles in the panel.\r\n   */\r\n  handles(): IIterator<HTMLDivElement> {\r\n    return (this.layout as DockLayout).handles();\r\n  }\r\n\r\n  /**\r\n   * Select a specific widget in the dock panel.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * #### Notes\r\n   * This will make the widget the current widget in its tab area.\r\n   */\r\n  selectWidget(widget: Widget): void {\r\n    // Find the tab bar which contains the widget.\r\n    let tabBar = find(this.tabBars(), bar => {\r\n      return bar.titles.indexOf(widget.title) !== -1;\r\n    });\r\n\r\n    // Throw an error if no tab bar is found.\r\n    if (!tabBar) {\r\n      throw new Error('Widget is not contained in the dock panel.');\r\n    }\r\n\r\n    // Ensure the widget is the current widget.\r\n    tabBar.currentTitle = widget.title;\r\n  }\r\n\r\n  /**\r\n   * Activate a specified widget in the dock panel.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * #### Notes\r\n   * This will select and activate the given widget.\r\n   */\r\n  activateWidget(widget: Widget): void {\r\n    this.selectWidget(widget);\r\n    widget.activate();\r\n  }\r\n\r\n  /**\r\n   * Save the current layout configuration of the dock panel.\r\n   *\r\n   * @returns A new config object for the current layout state.\r\n   *\r\n   * #### Notes\r\n   * The return value can be provided to the `restoreLayout` method\r\n   * in order to restore the layout to its current configuration.\r\n   */\r\n  saveLayout(): DockPanel.ILayoutConfig {\r\n    return (this.layout as DockLayout).saveLayout();\r\n  }\r\n\r\n  /**\r\n   * Restore the layout to a previously saved configuration.\r\n   *\r\n   * @param config - The layout configuration to restore.\r\n   *\r\n   * #### Notes\r\n   * Widgets which currently belong to the layout but which are not\r\n   * contained in the config will be unparented.\r\n   *\r\n   * The dock panel automatically reverts to `'multiple-document'`\r\n   * mode when a layout config is restored.\r\n   */\r\n  restoreLayout(config: DockPanel.ILayoutConfig): void {\r\n    // Reset the mode.\r\n    this._mode = 'multiple-document';\r\n\r\n    // Restore the layout.\r\n    (this.layout as DockLayout).restoreLayout(config);\r\n\r\n    // Flush the message loop on IE and Edge to prevent flicker.\r\n    if (Platform.IS_EDGE || Platform.IS_IE) {\r\n      MessageLoop.flush();\r\n    }\r\n\r\n    // Schedule an emit of the layout modified signal.\r\n    MessageLoop.postMessage(this, Private.LayoutModified);\r\n  }\r\n\r\n  /**\r\n   * Add a widget to the dock panel.\r\n   *\r\n   * @param widget - The widget to add to the dock panel.\r\n   *\r\n   * @param options - The additional options for adding the widget.\r\n   *\r\n   * #### Notes\r\n   * If the panel is in single document mode, the options are ignored\r\n   * and the widget is always added as tab in the hidden tab bar.\r\n   */\r\n  addWidget(widget: Widget, options: DockPanel.IAddOptions = {}): void {\r\n    // Add the widget to the layout.\r\n    if (this._mode === 'single-document') {\r\n      (this.layout as DockLayout).addWidget(widget);\r\n    } else {\r\n      (this.layout as DockLayout).addWidget(widget, options);\r\n    }\r\n\r\n    // Schedule an emit of the layout modified signal.\r\n    MessageLoop.postMessage(this, Private.LayoutModified);\r\n  }\r\n\r\n  /**\r\n   * Process a message sent to the widget.\r\n   *\r\n   * @param msg - The message sent to the widget.\r\n   */\r\n  processMessage(msg: Message): void {\r\n    if (msg.type === 'layout-modified') {\r\n      this._layoutModified.emit(undefined);\r\n    } else {\r\n      super.processMessage(msg);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the dock panel.\r\n   *\r\n   * @param event - The DOM event sent to the panel.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the panel's DOM node. It should\r\n   * not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'lm-dragenter':\r\n        this._evtDragEnter(event as IDragEvent);\r\n        break;\r\n      case 'lm-dragleave':\r\n        this._evtDragLeave(event as IDragEvent);\r\n        break;\r\n      case 'lm-dragover':\r\n        this._evtDragOver(event as IDragEvent);\r\n        break;\r\n      case 'lm-drop':\r\n        this._evtDrop(event as IDragEvent);\r\n        break;\r\n      case 'mousedown': // <DEPRECATED>\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'mousemove': // <DEPRECATED>\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'mouseup': // <DEPRECATED>\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'pointerdown':\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'pointermove':\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'pointerup':\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'keydown':\r\n        this._evtKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'contextmenu':\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('lm-dragenter', this);\r\n    this.node.addEventListener('lm-dragleave', this);\r\n    this.node.addEventListener('lm-dragover', this);\r\n    this.node.addEventListener('lm-drop', this);\r\n    this.node.addEventListener('mousedown', this); // <DEPRECATED>\r\n    this.node.addEventListener('pointerdown', this);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    this.node.removeEventListener('lm-dragenter', this);\r\n    this.node.removeEventListener('lm-dragleave', this);\r\n    this.node.removeEventListener('lm-dragover', this);\r\n    this.node.removeEventListener('lm-drop', this);\r\n    this.node.removeEventListener('mousedown', this); // <DEPRECATED>\r\n    this.node.removeEventListener('pointerdown', this);\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-added'` message.\r\n   */\r\n  protected onChildAdded(msg: Widget.ChildMessage): void {\r\n    // Ignore the generated tab bars.\r\n    if (Private.isGeneratedTabBarProperty.get(msg.child)) {\r\n      return;\r\n    }\r\n\r\n    // Add the widget class to the child.\r\n    msg.child.addClass('lm-DockPanel-widget');\r\n    /* <DEPRECATED> */\r\n    msg.child.addClass('p-DockPanel-widget');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-removed'` message.\r\n   */\r\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\r\n    // Ignore the generated tab bars.\r\n    if (Private.isGeneratedTabBarProperty.get(msg.child)) {\r\n      return;\r\n    }\r\n\r\n    // Remove the widget class from the child.\r\n    msg.child.removeClass('lm-DockPanel-widget');\r\n    /* <DEPRECATED> */\r\n    msg.child.removeClass('p-DockPanel-widget');\r\n    /* </DEPRECATED> */\r\n\r\n    // Schedule an emit of the layout modified signal.\r\n    MessageLoop.postMessage(this, Private.LayoutModified);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'lm-dragenter'` event for the dock panel.\r\n   */\r\n  private _evtDragEnter(event: IDragEvent): void {\r\n    // If the factory mime type is present, mark the event as\r\n    // handled in order to get the rest of the drag events.\r\n    if (event.mimeData.hasData('application/vnd.lumino.widget-factory')) {\r\n      event.preventDefault();\r\n      event.stopPropagation();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'lm-dragleave'` event for the dock panel.\r\n   */\r\n  private _evtDragLeave(event: IDragEvent): void {\r\n    // Mark the event as handled.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // The new target might be a descendant, so we might still handle the drop.\r\n    // Hide asynchronously so that if a lm-dragover event bubbles up to us, the\r\n    // hide is cancelled by the lm-dragover handler's show overlay logic.\r\n    this.overlay.hide(1);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'lm-dragover'` event for the dock panel.\r\n   */\r\n  private _evtDragOver(event: IDragEvent): void {\r\n    // Mark the event as handled.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Show the drop indicator overlay and update the drop\r\n    // action based on the drop target zone under the mouse.\r\n    if (\r\n      (this._tabsConstrained && event.source !== this) ||\r\n      this._showOverlay(event.clientX, event.clientY) === 'invalid'\r\n    ) {\r\n      event.dropAction = 'none';\r\n    } else {\r\n      event.dropAction = event.proposedAction;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'lm-drop'` event for the dock panel.\r\n   */\r\n  private _evtDrop(event: IDragEvent): void {\r\n    // Mark the event as handled.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Hide the drop indicator overlay.\r\n    this.overlay.hide(0);\r\n\r\n    // Bail if the proposed action is to do nothing.\r\n    if (event.proposedAction === 'none') {\r\n      event.dropAction = 'none';\r\n      return;\r\n    }\r\n\r\n    // Find the drop target under the mouse.\r\n    let { clientX, clientY } = event;\r\n    let { zone, target } = Private.findDropTarget(\r\n      this,\r\n      clientX,\r\n      clientY,\r\n      this._edges\r\n    );\r\n\r\n    // Bail if the drop zone is invalid.\r\n    if (zone === 'invalid') {\r\n      event.dropAction = 'none';\r\n      return;\r\n    }\r\n\r\n    // Bail if the factory mime type has invalid data.\r\n    let mimeData = event.mimeData;\r\n    let factory = mimeData.getData('application/vnd.lumino.widget-factory');\r\n    if (typeof factory !== 'function') {\r\n      event.dropAction = 'none';\r\n      return;\r\n    }\r\n\r\n    // Bail if the factory does not produce a widget.\r\n    let widget = factory();\r\n    if (!(widget instanceof Widget)) {\r\n      event.dropAction = 'none';\r\n      return;\r\n    }\r\n\r\n    // Bail if the widget is an ancestor of the dock panel.\r\n    if (widget.contains(this)) {\r\n      event.dropAction = 'none';\r\n      return;\r\n    }\r\n\r\n    // Find the reference widget for the drop target.\r\n    let ref = target ? Private.getDropRef(target.tabBar) : null;\r\n\r\n    // Add the widget according to the indicated drop zone.\r\n    switch (zone) {\r\n      case 'root-all':\r\n        this.addWidget(widget);\r\n        break;\r\n      case 'root-top':\r\n        this.addWidget(widget, { mode: 'split-top' });\r\n        break;\r\n      case 'root-left':\r\n        this.addWidget(widget, { mode: 'split-left' });\r\n        break;\r\n      case 'root-right':\r\n        this.addWidget(widget, { mode: 'split-right' });\r\n        break;\r\n      case 'root-bottom':\r\n        this.addWidget(widget, { mode: 'split-bottom' });\r\n        break;\r\n      case 'widget-all':\r\n        this.addWidget(widget, { mode: 'tab-after', ref });\r\n        break;\r\n      case 'widget-top':\r\n        this.addWidget(widget, { mode: 'split-top', ref });\r\n        break;\r\n      case 'widget-left':\r\n        this.addWidget(widget, { mode: 'split-left', ref });\r\n        break;\r\n      case 'widget-right':\r\n        this.addWidget(widget, { mode: 'split-right', ref });\r\n        break;\r\n      case 'widget-bottom':\r\n        this.addWidget(widget, { mode: 'split-bottom', ref });\r\n        break;\r\n      case 'widget-tab':\r\n        this.addWidget(widget, { mode: 'tab-after', ref });\r\n        break;\r\n      default:\r\n        throw 'unreachable';\r\n    }\r\n\r\n    // Accept the proposed drop action.\r\n    event.dropAction = event.proposedAction;\r\n\r\n    // Activate the dropped widget.\r\n    this.activateWidget(widget);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the dock panel.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    // Stop input events during drag.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Release the mouse if `Escape` is pressed.\r\n    if (event.keyCode === 27) {\r\n      // Finalize the mouse release.\r\n      this._releaseMouse();\r\n\r\n      // Schedule an emit of the layout modified signal.\r\n      MessageLoop.postMessage(this, Private.LayoutModified);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousedown'` event for the dock panel.\r\n   */\r\n  private _evtMouseDown(event: MouseEvent): void {\r\n    // Do nothing if the left mouse button is not pressed.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Find the handle which contains the mouse target, if any.\r\n    let layout = this.layout as DockLayout;\r\n    let target = event.target as HTMLElement;\r\n    let handle = find(layout.handles(), handle => handle.contains(target));\r\n    if (!handle) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event when a handle is pressed.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Add the extra document listeners.\r\n    this._document.addEventListener('keydown', this, true);\r\n    this._document.addEventListener('mouseup', this, true); // <DEPRECATED>\r\n    this._document.addEventListener('mousemove', this, true); // <DEPRECATED>\r\n    this._document.addEventListener('pointerup', this, true);\r\n    this._document.addEventListener('pointermove', this, true);\r\n    this._document.addEventListener('contextmenu', this, true);\r\n\r\n    // Compute the offset deltas for the handle press.\r\n    let rect = handle.getBoundingClientRect();\r\n    let deltaX = event.clientX - rect.left;\r\n    let deltaY = event.clientY - rect.top;\r\n\r\n    // Override the cursor and store the press data.\r\n    let style = window.getComputedStyle(handle);\r\n    let override = Drag.overrideCursor(style.cursor!, this._document);\r\n    this._pressData = { handle, deltaX, deltaY, override };\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousemove'` event for the dock panel.\r\n   */\r\n  private _evtMouseMove(event: MouseEvent): void {\r\n    // Bail early if no drag is in progress.\r\n    if (!this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event when dragging a handle.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Compute the desired offset position for the handle.\r\n    let rect = this.node.getBoundingClientRect();\r\n    let xPos = event.clientX - rect.left - this._pressData.deltaX;\r\n    let yPos = event.clientY - rect.top - this._pressData.deltaY;\r\n\r\n    // Set the handle as close to the desired position as possible.\r\n    let layout = this.layout as DockLayout;\r\n    layout.moveHandle(this._pressData.handle, xPos, yPos);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseup'` event for the dock panel.\r\n   */\r\n  private _evtMouseUp(event: MouseEvent): void {\r\n    // Do nothing if the left mouse button is not released.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event when releasing a handle.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Finalize the mouse release.\r\n    this._releaseMouse();\r\n\r\n    // Schedule an emit of the layout modified signal.\r\n    MessageLoop.postMessage(this, Private.LayoutModified);\r\n  }\r\n\r\n  /**\r\n   * Release the mouse grab for the dock panel.\r\n   */\r\n  private _releaseMouse(): void {\r\n    // Bail early if no drag is in progress.\r\n    if (!this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Clear the override cursor.\r\n    this._pressData.override.dispose();\r\n    this._pressData = null;\r\n\r\n    // Remove the extra document listeners.\r\n    this._document.removeEventListener('keydown', this, true);\r\n    this._document.removeEventListener('mouseup', this, true); // <DEPRECATED>\r\n    this._document.removeEventListener('mousemove', this, true); // <DEPRECATED>\r\n    this._document.removeEventListener('pointerup', this, true);\r\n    this._document.removeEventListener('pointermove', this, true);\r\n    this._document.removeEventListener('contextmenu', this, true);\r\n  }\r\n\r\n  /**\r\n   * Show the overlay indicator at the given client position.\r\n   *\r\n   * Returns the drop zone at the specified client position.\r\n   *\r\n   * #### Notes\r\n   * If the position is not over a valid zone, the overlay is hidden.\r\n   */\r\n  private _showOverlay(clientX: number, clientY: number): Private.DropZone {\r\n    // Find the dock target for the given client position.\r\n    let { zone, target } = Private.findDropTarget(\r\n      this,\r\n      clientX,\r\n      clientY,\r\n      this._edges\r\n    );\r\n\r\n    // If the drop zone is invalid, hide the overlay and bail.\r\n    if (zone === 'invalid') {\r\n      this.overlay.hide(100);\r\n      return zone;\r\n    }\r\n\r\n    // Setup the variables needed to compute the overlay geometry.\r\n    let top: number;\r\n    let left: number;\r\n    let right: number;\r\n    let bottom: number;\r\n    let box = ElementExt.boxSizing(this.node); // TODO cache this?\r\n    let rect = this.node.getBoundingClientRect();\r\n\r\n    // Compute the overlay geometry based on the dock zone.\r\n    switch (zone) {\r\n      case 'root-all':\r\n        top = box.paddingTop;\r\n        left = box.paddingLeft;\r\n        right = box.paddingRight;\r\n        bottom = box.paddingBottom;\r\n        break;\r\n      case 'root-top':\r\n        top = box.paddingTop;\r\n        left = box.paddingLeft;\r\n        right = box.paddingRight;\r\n        bottom = rect.height * Private.GOLDEN_RATIO;\r\n        break;\r\n      case 'root-left':\r\n        top = box.paddingTop;\r\n        left = box.paddingLeft;\r\n        right = rect.width * Private.GOLDEN_RATIO;\r\n        bottom = box.paddingBottom;\r\n        break;\r\n      case 'root-right':\r\n        top = box.paddingTop;\r\n        left = rect.width * Private.GOLDEN_RATIO;\r\n        right = box.paddingRight;\r\n        bottom = box.paddingBottom;\r\n        break;\r\n      case 'root-bottom':\r\n        top = rect.height * Private.GOLDEN_RATIO;\r\n        left = box.paddingLeft;\r\n        right = box.paddingRight;\r\n        bottom = box.paddingBottom;\r\n        break;\r\n      case 'widget-all':\r\n        top = target!.top;\r\n        left = target!.left;\r\n        right = target!.right;\r\n        bottom = target!.bottom;\r\n        break;\r\n      case 'widget-top':\r\n        top = target!.top;\r\n        left = target!.left;\r\n        right = target!.right;\r\n        bottom = target!.bottom + target!.height / 2;\r\n        break;\r\n      case 'widget-left':\r\n        top = target!.top;\r\n        left = target!.left;\r\n        right = target!.right + target!.width / 2;\r\n        bottom = target!.bottom;\r\n        break;\r\n      case 'widget-right':\r\n        top = target!.top;\r\n        left = target!.left + target!.width / 2;\r\n        right = target!.right;\r\n        bottom = target!.bottom;\r\n        break;\r\n      case 'widget-bottom':\r\n        top = target!.top + target!.height / 2;\r\n        left = target!.left;\r\n        right = target!.right;\r\n        bottom = target!.bottom;\r\n        break;\r\n      case 'widget-tab':\r\n        const tabHeight = target!.tabBar.node.getBoundingClientRect().height;\r\n        top = target!.top;\r\n        left = target!.left;\r\n        right = target!.right;\r\n        bottom = target!.bottom + target!.height - tabHeight;\r\n        break;\r\n      default:\r\n        throw 'unreachable';\r\n    }\r\n\r\n    // Show the overlay with the computed geometry.\r\n    this.overlay.show({ top, left, right, bottom });\r\n\r\n    // Finally, return the computed drop zone.\r\n    return zone;\r\n  }\r\n\r\n  /**\r\n   * Create a new tab bar for use by the panel.\r\n   */\r\n  private _createTabBar(): TabBar<Widget> {\r\n    // Create the tab bar.\r\n    let tabBar = this._renderer.createTabBar(this._document);\r\n\r\n    // Set the generated tab bar property for the tab bar.\r\n    Private.isGeneratedTabBarProperty.set(tabBar, true);\r\n\r\n    // Hide the tab bar when in single document mode.\r\n    if (this._mode === 'single-document') {\r\n      tabBar.hide();\r\n    }\r\n\r\n    // Enforce necessary tab bar behavior.\r\n    // TODO do we really want to enforce *all* of these?\r\n    tabBar.tabsMovable = this._tabsMovable;\r\n    tabBar.allowDeselect = false;\r\n    tabBar.addButtonEnabled = this._addButtonEnabled;\r\n    tabBar.removeBehavior = 'select-previous-tab';\r\n    tabBar.insertBehavior = 'select-tab-if-needed';\r\n\r\n    // Connect the signal handlers for the tab bar.\r\n    tabBar.tabMoved.connect(this._onTabMoved, this);\r\n    tabBar.currentChanged.connect(this._onCurrentChanged, this);\r\n    tabBar.tabCloseRequested.connect(this._onTabCloseRequested, this);\r\n    tabBar.tabDetachRequested.connect(this._onTabDetachRequested, this);\r\n    tabBar.tabActivateRequested.connect(this._onTabActivateRequested, this);\r\n    tabBar.addRequested.connect(this._onTabAddRequested, this);\r\n\r\n    // Return the initialized tab bar.\r\n    return tabBar;\r\n  }\r\n\r\n  /**\r\n   * Create a new handle for use by the panel.\r\n   */\r\n  private _createHandle(): HTMLDivElement {\r\n    return this._renderer.createHandle();\r\n  }\r\n\r\n  /**\r\n   * Handle the `tabMoved` signal from a tab bar.\r\n   */\r\n  private _onTabMoved(): void {\r\n    MessageLoop.postMessage(this, Private.LayoutModified);\r\n  }\r\n\r\n  /**\r\n   * Handle the `currentChanged` signal from a tab bar.\r\n   */\r\n  private _onCurrentChanged(\r\n    sender: TabBar<Widget>,\r\n    args: TabBar.ICurrentChangedArgs<Widget>\r\n  ): void {\r\n    // Extract the previous and current title from the args.\r\n    let { previousTitle, currentTitle } = args;\r\n\r\n    // Hide the previous widget.\r\n    if (previousTitle) {\r\n      previousTitle.owner.hide();\r\n    }\r\n\r\n    // Show the current widget.\r\n    if (currentTitle) {\r\n      currentTitle.owner.show();\r\n    }\r\n\r\n    // Flush the message loop on IE and Edge to prevent flicker.\r\n    if (Platform.IS_EDGE || Platform.IS_IE) {\r\n      MessageLoop.flush();\r\n    }\r\n\r\n    // Schedule an emit of the layout modified signal.\r\n    MessageLoop.postMessage(this, Private.LayoutModified);\r\n  }\r\n\r\n  /**\r\n   * Handle the `addRequested` signal from a tab bar.\r\n   */\r\n  private _onTabAddRequested(sender: TabBar<Widget>): void {\r\n    this._addRequested.emit(sender);\r\n  }\r\n\r\n  /**\r\n   * Handle the `tabActivateRequested` signal from a tab bar.\r\n   */\r\n  private _onTabActivateRequested(\r\n    sender: TabBar<Widget>,\r\n    args: TabBar.ITabActivateRequestedArgs<Widget>\r\n  ): void {\r\n    args.title.owner.activate();\r\n  }\r\n\r\n  /**\r\n   * Handle the `tabCloseRequested` signal from a tab bar.\r\n   */\r\n  private _onTabCloseRequested(\r\n    sender: TabBar<Widget>,\r\n    args: TabBar.ITabCloseRequestedArgs<Widget>\r\n  ): void {\r\n    args.title.owner.close();\r\n  }\r\n\r\n  /**\r\n   * Handle the `tabDetachRequested` signal from a tab bar.\r\n   */\r\n  private _onTabDetachRequested(\r\n    sender: TabBar<Widget>,\r\n    args: TabBar.ITabDetachRequestedArgs<Widget>\r\n  ): void {\r\n    // Do nothing if a drag is already in progress.\r\n    if (this._drag) {\r\n      return;\r\n    }\r\n\r\n    // Release the tab bar's hold on the mouse.\r\n    sender.releaseMouse();\r\n\r\n    // Extract the data from the args.\r\n    let { title, tab, clientX, clientY } = args;\r\n\r\n    // Setup the mime data for the drag operation.\r\n    let mimeData = new MimeData();\r\n    let factory = () => title.owner;\r\n    mimeData.setData('application/vnd.lumino.widget-factory', factory);\r\n\r\n    // Create the drag image for the drag operation.\r\n    let dragImage = tab.cloneNode(true) as HTMLElement;\r\n\r\n    // Create the drag object to manage the drag-drop operation.\r\n    this._drag = new Drag({\r\n      document: this._document,\r\n      mimeData,\r\n      dragImage,\r\n      proposedAction: 'move',\r\n      supportedActions: 'move',\r\n      source: this\r\n    });\r\n\r\n    // Hide the tab node in the original tab.\r\n    tab.classList.add('lm-mod-hidden');\r\n    /* <DEPRECATED> */\r\n    tab.classList.add('p-mod-hidden'); // Create the cleanup callback.\r\n    /* </DEPRECATED> */ let cleanup = () => {\r\n      this._drag = null;\r\n      tab.classList.remove('lm-mod-hidden');\r\n      /* <DEPRECATED> */\r\n      tab.classList.remove('p-mod-hidden');\r\n      /* </DEPRECATED> */\r\n    };\r\n\r\n    // Start the drag operation and cleanup when done.\r\n    this._drag.start(clientX, clientY).then(cleanup);\r\n  }\r\n\r\n  private _edges: DockPanel.IEdges;\r\n  private _document: Document | ShadowRoot;\r\n  private _mode: DockPanel.Mode;\r\n  private _drag: Drag | null = null;\r\n  private _renderer: DockPanel.IRenderer;\r\n  private _tabsMovable: boolean = true;\r\n  private _tabsConstrained: boolean = false;\r\n  private _addButtonEnabled: boolean = false;\r\n  private _pressData: Private.IPressData | null = null;\r\n  private _layoutModified = new Signal<this, void>(this);\r\n\r\n  private _addRequested = new Signal<this, TabBar<Widget>>(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `DockPanel` class statics.\r\n */\r\nexport namespace DockPanel {\r\n  /**\r\n   * An options object for creating a dock panel.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The document to use with the dock panel.\r\n     *\r\n     * The default is the global `document` instance.\r\n     */\r\n\r\n    document?: Document | ShadowRoot;\r\n    /**\r\n     * The overlay to use with the dock panel.\r\n     *\r\n     * The default is a new `Overlay` instance.\r\n     */\r\n    overlay?: IOverlay;\r\n\r\n    /**\r\n     * The renderer to use for the dock panel.\r\n     *\r\n     * The default is a shared renderer instance.\r\n     */\r\n    renderer?: IRenderer;\r\n\r\n    /**\r\n     * The spacing between the items in the panel.\r\n     *\r\n     * The default is `4`.\r\n     */\r\n    spacing?: number;\r\n\r\n    /**\r\n     * The mode for the dock panel.\r\n     *\r\n     * The default is `'multiple-document'`.\r\n     */\r\n    mode?: DockPanel.Mode;\r\n\r\n    /**\r\n     * The sizes of the edge drop zones, in pixels.\r\n     * If not given, default values will be used.\r\n     */\r\n    edges?: IEdges;\r\n\r\n    /**\r\n     * The method for hiding widgets.\r\n     *\r\n     * The default is `Widget.HiddenMode.Display`.\r\n     */\r\n    hiddenMode?: Widget.HiddenMode;\r\n\r\n    /**\r\n     * Allow tabs to be draggable / movable by user.\r\n     *\r\n     * The default is `'true'`.\r\n     */\r\n    tabsMovable?: boolean;\r\n\r\n    /**\r\n     * Constrain tabs to this dock panel\r\n     *\r\n     * The default is `'false'`.\r\n     */\r\n    tabsConstrained?: boolean;\r\n\r\n    /**\r\n     * Enable add buttons in each of the dock panel's tab bars.\r\n     *\r\n     * The default is `'false'`.\r\n     */\r\n    addButtonEnabled?: boolean;\r\n  }\r\n\r\n  /**\r\n   * The sizes of the edge drop zones, in pixels.\r\n   */\r\n  export interface IEdges {\r\n    /**\r\n     * The size of the top edge drop zone.\r\n     */\r\n    top: number;\r\n\r\n    /**\r\n     * The size of the right edge drop zone.\r\n     */\r\n    right: number;\r\n\r\n    /**\r\n     * The size of the bottom edge drop zone.\r\n     */\r\n    bottom: number;\r\n\r\n    /**\r\n     * The size of the left edge drop zone.\r\n     */\r\n    left: number;\r\n  }\r\n\r\n  /**\r\n   * A type alias for the supported dock panel modes.\r\n   */\r\n  export type Mode =\r\n    | /**\r\n     * The single document mode.\r\n     *\r\n     * In this mode, only a single widget is visible at a time, and that\r\n     * widget fills the available layout space. No tab bars are visible.\r\n     */\r\n    'single-document'\r\n\r\n    /**\r\n     * The multiple document mode.\r\n     *\r\n     * In this mode, multiple documents are displayed in separate tab\r\n     * areas, and those areas can be individually resized by the user.\r\n     */\r\n    | 'multiple-document';\r\n\r\n  /**\r\n   * A type alias for a layout configuration object.\r\n   */\r\n  export type ILayoutConfig = DockLayout.ILayoutConfig;\r\n\r\n  /**\r\n   * A type alias for the supported insertion modes.\r\n   */\r\n  export type InsertMode = DockLayout.InsertMode;\r\n\r\n  /**\r\n   * A type alias for the add widget options.\r\n   */\r\n  export type IAddOptions = DockLayout.IAddOptions;\r\n\r\n  /**\r\n   * An object which holds the geometry for overlay positioning.\r\n   */\r\n  export interface IOverlayGeometry {\r\n    /**\r\n     * The distance between the overlay and parent top edges.\r\n     */\r\n    top: number;\r\n\r\n    /**\r\n     * The distance between the overlay and parent left edges.\r\n     */\r\n    left: number;\r\n\r\n    /**\r\n     * The distance between the overlay and parent right edges.\r\n     */\r\n    right: number;\r\n\r\n    /**\r\n     * The distance between the overlay and parent bottom edges.\r\n     */\r\n    bottom: number;\r\n  }\r\n\r\n  /**\r\n   * An object which manages the overlay node for a dock panel.\r\n   */\r\n  export interface IOverlay {\r\n    /**\r\n     * The DOM node for the overlay.\r\n     */\r\n    readonly node: HTMLDivElement;\r\n\r\n    /**\r\n     * Show the overlay using the given overlay geometry.\r\n     *\r\n     * @param geo - The desired geometry for the overlay.\r\n     *\r\n     * #### Notes\r\n     * The given geometry values assume the node will use absolute\r\n     * positioning.\r\n     *\r\n     * This is called on every mouse move event during a drag in order\r\n     * to update the position of the overlay. It should be efficient.\r\n     */\r\n    show(geo: IOverlayGeometry): void;\r\n\r\n    /**\r\n     * Hide the overlay node.\r\n     *\r\n     * @param delay - The delay (in ms) before hiding the overlay.\r\n     *   A delay value <= 0 should hide the overlay immediately.\r\n     *\r\n     * #### Notes\r\n     * This is called whenever the overlay node should been hidden.\r\n     */\r\n    hide(delay: number): void;\r\n  }\r\n\r\n  /**\r\n   * A concrete implementation of `IOverlay`.\r\n   *\r\n   * This is the default overlay implementation for a dock panel.\r\n   */\r\n  export class Overlay implements IOverlay {\r\n    /**\r\n     * Construct a new overlay.\r\n     */\r\n    constructor() {\r\n      this.node = document.createElement('div');\r\n      this.node.classList.add('lm-DockPanel-overlay');\r\n      this.node.classList.add('lm-mod-hidden');\r\n      /* <DEPRECATED> */\r\n      this.node.classList.add('p-DockPanel-overlay');\r\n      this.node.classList.add('p-mod-hidden');\r\n      /* </DEPRECATED> */ this.node.style.position = 'absolute';\r\n    }\r\n\r\n    /**\r\n     * The DOM node for the overlay.\r\n     */\r\n    readonly node: HTMLDivElement;\r\n\r\n    /**\r\n     * Show the overlay using the given overlay geometry.\r\n     *\r\n     * @param geo - The desired geometry for the overlay.\r\n     */\r\n    show(geo: IOverlayGeometry): void {\r\n      // Update the position of the overlay.\r\n      let style = this.node.style;\r\n      style.top = `${geo.top}px`;\r\n      style.left = `${geo.left}px`;\r\n      style.right = `${geo.right}px`;\r\n      style.bottom = `${geo.bottom}px`;\r\n\r\n      // Clear any pending hide timer.\r\n      clearTimeout(this._timer);\r\n      this._timer = -1;\r\n\r\n      // If the overlay is already visible, we're done.\r\n      if (!this._hidden) {\r\n        return;\r\n      }\r\n\r\n      // Clear the hidden flag.\r\n      this._hidden = false;\r\n\r\n      // Finally, show the overlay.\r\n      this.node.classList.remove('lm-mod-hidden');\r\n      /* <DEPRECATED> */\r\n      this.node.classList.remove('p-mod-hidden');\r\n      /* </DEPRECATED> */\r\n    }\r\n\r\n    /**\r\n     * Hide the overlay node.\r\n     *\r\n     * @param delay - The delay (in ms) before hiding the overlay.\r\n     *   A delay value <= 0 will hide the overlay immediately.\r\n     */\r\n    hide(delay: number): void {\r\n      // Do nothing if the overlay is already hidden.\r\n      if (this._hidden) {\r\n        return;\r\n      }\r\n\r\n      // Hide immediately if the delay is <= 0.\r\n      if (delay <= 0) {\r\n        clearTimeout(this._timer);\r\n        this._timer = -1;\r\n        this._hidden = true;\r\n        this.node.classList.add('lm-mod-hidden');\r\n        /* <DEPRECATED> */\r\n        this.node.classList.add('p-mod-hidden');\r\n        /* </DEPRECATED> */ return;\r\n      }\r\n\r\n      // Do nothing if a hide is already pending.\r\n      if (this._timer !== -1) {\r\n        return;\r\n      }\r\n\r\n      // Otherwise setup the hide timer.\r\n      this._timer = window.setTimeout(() => {\r\n        this._timer = -1;\r\n        this._hidden = true;\r\n        this.node.classList.add('lm-mod-hidden');\r\n        /* <DEPRECATED> */\r\n        this.node.classList.add('p-mod-hidden');\r\n        /* </DEPRECATED> */\r\n      }, delay);\r\n    }\r\n\r\n    private _timer = -1;\r\n    private _hidden = true;\r\n  }\r\n\r\n  /**\r\n   * A type alias for a dock panel renderer;\r\n   */\r\n  export type IRenderer = DockLayout.IRenderer;\r\n\r\n  /**\r\n   * The default implementation of `IRenderer`.\r\n   */\r\n  export class Renderer implements IRenderer {\r\n    /**\r\n     * Create a new tab bar for use with a dock panel.\r\n     *\r\n     * @returns A new tab bar for a dock panel.\r\n     */\r\n    createTabBar(document?: Document | ShadowRoot): TabBar<Widget> {\r\n      let bar = new TabBar<Widget>({ document });\r\n      bar.addClass('lm-DockPanel-tabBar');\r\n      /* <DEPRECATED> */\r\n      bar.addClass('p-DockPanel-tabBar');\r\n      /* </DEPRECATED> */\r\n      return bar;\r\n    }\r\n\r\n    /**\r\n     * Create a new handle node for use with a dock panel.\r\n     *\r\n     * @returns A new handle node for a dock panel.\r\n     */\r\n    createHandle(): HTMLDivElement {\r\n      let handle = document.createElement('div');\r\n      handle.className = 'lm-DockPanel-handle';\r\n      /* <DEPRECATED> */\r\n      handle.classList.add('p-DockPanel-handle');\r\n      /* </DEPRECATED> */ return handle;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The default `Renderer` instance.\r\n   */\r\n  export const defaultRenderer = new Renderer();\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A fraction used for sizing root panels; ~= `1 / golden_ratio`.\r\n   */\r\n  export const GOLDEN_RATIO = 0.618;\r\n\r\n  /**\r\n   * The default sizes for the edge drop zones, in pixels.\r\n   */\r\n  export const DEFAULT_EDGES = {\r\n    /**\r\n     * The size of the top edge dock zone for the root panel, in pixels.\r\n     * This is different from the others to distinguish between the top\r\n     * tab bar and the top root zone.\r\n     */\r\n    top: 12,\r\n\r\n    /**\r\n     * The size of the edge dock zone for the root panel, in pixels.\r\n     */\r\n    right: 40,\r\n\r\n    /**\r\n     * The size of the edge dock zone for the root panel, in pixels.\r\n     */\r\n    bottom: 40,\r\n\r\n    /**\r\n     * The size of the edge dock zone for the root panel, in pixels.\r\n     */\r\n    left: 40\r\n  };\r\n\r\n  /**\r\n   * A singleton `'layout-modified'` conflatable message.\r\n   */\r\n  export const LayoutModified = new ConflatableMessage('layout-modified');\r\n\r\n  /**\r\n   * An object which holds mouse press data.\r\n   */\r\n  export interface IPressData {\r\n    /**\r\n     * The handle which was pressed.\r\n     */\r\n    handle: HTMLDivElement;\r\n\r\n    /**\r\n     * The X offset of the press in handle coordinates.\r\n     */\r\n    deltaX: number;\r\n\r\n    /**\r\n     * The Y offset of the press in handle coordinates.\r\n     */\r\n    deltaY: number;\r\n\r\n    /**\r\n     * The disposable which will clear the override cursor.\r\n     */\r\n    override: IDisposable;\r\n  }\r\n\r\n  /**\r\n   * A type alias for a drop zone.\r\n   */\r\n  export type DropZone =\r\n    | /**\r\n     * An invalid drop zone.\r\n     */\r\n    'invalid'\r\n\r\n    /**\r\n     * The entirety of the root dock area.\r\n     */\r\n    | 'root-all'\r\n\r\n    /**\r\n     * The top portion of the root dock area.\r\n     */\r\n    | 'root-top'\r\n\r\n    /**\r\n     * The left portion of the root dock area.\r\n     */\r\n    | 'root-left'\r\n\r\n    /**\r\n     * The right portion of the root dock area.\r\n     */\r\n    | 'root-right'\r\n\r\n    /**\r\n     * The bottom portion of the root dock area.\r\n     */\r\n    | 'root-bottom'\r\n\r\n    /**\r\n     * The entirety of a tabbed widget area.\r\n     */\r\n    | 'widget-all'\r\n\r\n    /**\r\n     * The top portion of tabbed widget area.\r\n     */\r\n    | 'widget-top'\r\n\r\n    /**\r\n     * The left portion of tabbed widget area.\r\n     */\r\n    | 'widget-left'\r\n\r\n    /**\r\n     * The right portion of tabbed widget area.\r\n     */\r\n    | 'widget-right'\r\n\r\n    /**\r\n     * The bottom portion of tabbed widget area.\r\n     */\r\n    | 'widget-bottom'\r\n\r\n    /**\r\n     * The the bar of a tabbed widget area.\r\n     */\r\n    | 'widget-tab';\r\n\r\n  /**\r\n   * An object which holds the drop target zone and widget.\r\n   */\r\n  export interface IDropTarget {\r\n    /**\r\n     * The semantic zone for the mouse position.\r\n     */\r\n    zone: DropZone;\r\n\r\n    /**\r\n     * The tab area geometry for the drop zone, or `null`.\r\n     */\r\n    target: DockLayout.ITabAreaGeometry | null;\r\n  }\r\n\r\n  /**\r\n   * An attached property used to track generated tab bars.\r\n   */\r\n  export const isGeneratedTabBarProperty = new AttachedProperty<\r\n    Widget,\r\n    boolean\r\n  >({\r\n    name: 'isGeneratedTabBar',\r\n    create: () => false\r\n  });\r\n\r\n  /**\r\n   * Create a single document config for the widgets in a dock panel.\r\n   */\r\n  export function createSingleDocumentConfig(\r\n    panel: DockPanel\r\n  ): DockPanel.ILayoutConfig {\r\n    // Return an empty config if the panel is empty.\r\n    if (panel.isEmpty) {\r\n      return { main: null };\r\n    }\r\n\r\n    // Get a flat array of the widgets in the panel.\r\n    let widgets = toArray(panel.widgets());\r\n\r\n    // Get the first selected widget in the panel.\r\n    let selected = panel.selectedWidgets().next();\r\n\r\n    // Compute the current index for the new config.\r\n    let currentIndex = selected ? widgets.indexOf(selected) : -1;\r\n\r\n    // Return the single document config.\r\n    return { main: { type: 'tab-area', widgets, currentIndex } };\r\n  }\r\n\r\n  /**\r\n   * Find the drop target at the given client position.\r\n   */\r\n  export function findDropTarget(\r\n    panel: DockPanel,\r\n    clientX: number,\r\n    clientY: number,\r\n    edges: DockPanel.IEdges\r\n  ): IDropTarget {\r\n    // Bail if the mouse is not over the dock panel.\r\n    if (!ElementExt.hitTest(panel.node, clientX, clientY)) {\r\n      return { zone: 'invalid', target: null };\r\n    }\r\n\r\n    // Look up the layout for the panel.\r\n    let layout = panel.layout as DockLayout;\r\n\r\n    // If the layout is empty, indicate the entire root drop zone.\r\n    if (layout.isEmpty) {\r\n      return { zone: 'root-all', target: null };\r\n    }\r\n\r\n    // Test the edge zones when in multiple document mode.\r\n    if (panel.mode === 'multiple-document') {\r\n      // Get the client rect for the dock panel.\r\n      let panelRect = panel.node.getBoundingClientRect();\r\n\r\n      // Compute the distance to each edge of the panel.\r\n      let pl = clientX - panelRect.left + 1;\r\n      let pt = clientY - panelRect.top + 1;\r\n      let pr = panelRect.right - clientX;\r\n      let pb = panelRect.bottom - clientY;\r\n\r\n      // Find the minimum distance to an edge.\r\n      let pd = Math.min(pt, pr, pb, pl);\r\n\r\n      // Return a root zone if the mouse is within an edge.\r\n      switch (pd) {\r\n        case pt:\r\n          if (pt < edges.top) {\r\n            return { zone: 'root-top', target: null };\r\n          }\r\n          break;\r\n        case pr:\r\n          if (pr < edges.right) {\r\n            return { zone: 'root-right', target: null };\r\n          }\r\n          break;\r\n        case pb:\r\n          if (pb < edges.bottom) {\r\n            return { zone: 'root-bottom', target: null };\r\n          }\r\n          break;\r\n        case pl:\r\n          if (pl < edges.left) {\r\n            return { zone: 'root-left', target: null };\r\n          }\r\n          break;\r\n        default:\r\n          throw 'unreachable';\r\n      }\r\n    }\r\n\r\n    // Hit test the dock layout at the given client position.\r\n    let target = layout.hitTestTabAreas(clientX, clientY);\r\n\r\n    // Bail if no target area was found.\r\n    if (!target) {\r\n      return { zone: 'invalid', target: null };\r\n    }\r\n\r\n    // Return the whole tab area when in single document mode.\r\n    if (panel.mode === 'single-document') {\r\n      return { zone: 'widget-all', target };\r\n    }\r\n\r\n    // Compute the distance to each edge of the tab area.\r\n    let al = target.x - target.left + 1;\r\n    let at = target.y - target.top + 1;\r\n    let ar = target.left + target.width - target.x;\r\n    let ab = target.top + target.height - target.y;\r\n\r\n    const tabHeight = target.tabBar.node.getBoundingClientRect().height;\r\n    if (at < tabHeight) {\r\n      return { zone: 'widget-tab', target };\r\n    }\r\n\r\n    // Get the X and Y edge sizes for the area.\r\n    let rx = Math.round(target.width / 3);\r\n    let ry = Math.round(target.height / 3);\r\n\r\n    // If the mouse is not within an edge, indicate the entire area.\r\n    if (al > rx && ar > rx && at > ry && ab > ry) {\r\n      return { zone: 'widget-all', target };\r\n    }\r\n\r\n    // Scale the distances by the slenderness ratio.\r\n    al /= rx;\r\n    at /= ry;\r\n    ar /= rx;\r\n    ab /= ry;\r\n\r\n    // Find the minimum distance to the area edge.\r\n    let ad = Math.min(al, at, ar, ab);\r\n\r\n    // Find the widget zone for the area edge.\r\n    let zone: DropZone;\r\n    switch (ad) {\r\n      case al:\r\n        zone = 'widget-left';\r\n        break;\r\n      case at:\r\n        zone = 'widget-top';\r\n        break;\r\n      case ar:\r\n        zone = 'widget-right';\r\n        break;\r\n      case ab:\r\n        zone = 'widget-bottom';\r\n        break;\r\n      default:\r\n        throw 'unreachable';\r\n    }\r\n\r\n    // Return the final drop target.\r\n    return { zone, target };\r\n  }\r\n\r\n  /**\r\n   * Get the drop reference widget for a tab bar.\r\n   */\r\n  export function getDropRef(tabBar: TabBar<Widget>): Widget | null {\r\n    if (tabBar.titles.length === 0) {\r\n      return null;\r\n    }\r\n    if (tabBar.currentTitle) {\r\n      return tabBar.currentTitle.owner;\r\n    }\r\n    return tabBar.titles[tabBar.titles.length - 1].owner;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each, filter, find, max } from '@lumino/algorithm';\r\n\r\nimport { IDisposable } from '@lumino/disposable';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A class which tracks focus among a set of widgets.\r\n *\r\n * This class is useful when code needs to keep track of the most\r\n * recently focused widget(s) among a set of related widgets.\r\n */\r\nexport class FocusTracker<T extends Widget> implements IDisposable {\r\n  /**\r\n   * Dispose of the resources held by the tracker.\r\n   */\r\n  dispose(): void {\r\n    // Do nothing if the tracker is already disposed.\r\n    if (this._counter < 0) {\r\n      return;\r\n    }\r\n\r\n    // Mark the tracker as disposed.\r\n    this._counter = -1;\r\n\r\n    // Clear the connections for the tracker.\r\n    Signal.clearData(this);\r\n\r\n    // Remove all event listeners.\r\n    each(this._widgets, w => {\r\n      w.node.removeEventListener('focus', this, true);\r\n      w.node.removeEventListener('blur', this, true);\r\n    });\r\n\r\n    // Clear the internal data structures.\r\n    this._activeWidget = null;\r\n    this._currentWidget = null;\r\n    this._nodes.clear();\r\n    this._numbers.clear();\r\n    this._widgets.length = 0;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the current widget has changed.\r\n   */\r\n  get currentChanged(): ISignal<this, FocusTracker.IChangedArgs<T>> {\r\n    return this._currentChanged;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the active widget has changed.\r\n   */\r\n  get activeChanged(): ISignal<this, FocusTracker.IChangedArgs<T>> {\r\n    return this._activeChanged;\r\n  }\r\n\r\n  /**\r\n   * A flag indicating whether the tracker is disposed.\r\n   */\r\n  get isDisposed(): boolean {\r\n    return this._counter < 0;\r\n  }\r\n\r\n  /**\r\n   * The current widget in the tracker.\r\n   *\r\n   * #### Notes\r\n   * The current widget is the widget among the tracked widgets which\r\n   * has the *descendant node* which has most recently been focused.\r\n   *\r\n   * The current widget will not be updated if the node loses focus. It\r\n   * will only be updated when a different tracked widget gains focus.\r\n   *\r\n   * If the current widget is removed from the tracker, the previous\r\n   * current widget will be restored.\r\n   *\r\n   * This behavior is intended to follow a user's conceptual model of\r\n   * a semantically \"current\" widget, where the \"last thing of type X\"\r\n   * to be interacted with is the \"current instance of X\", regardless\r\n   * of whether that instance still has focus.\r\n   */\r\n  get currentWidget(): T | null {\r\n    return this._currentWidget;\r\n  }\r\n\r\n  /**\r\n   * The active widget in the tracker.\r\n   *\r\n   * #### Notes\r\n   * The active widget is the widget among the tracked widgets which\r\n   * has the *descendant node* which is currently focused.\r\n   */\r\n  get activeWidget(): T | null {\r\n    return this._activeWidget;\r\n  }\r\n\r\n  /**\r\n   * A read only array of the widgets being tracked.\r\n   */\r\n  get widgets(): ReadonlyArray<T> {\r\n    return this._widgets;\r\n  }\r\n\r\n  /**\r\n   * Get the focus number for a particular widget in the tracker.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The focus number for the given widget, or `-1` if the\r\n   *   widget has not had focus since being added to the tracker, or\r\n   *   is not contained by the tracker.\r\n   *\r\n   * #### Notes\r\n   * The focus number indicates the relative order in which the widgets\r\n   * have gained focus. A widget with a larger number has gained focus\r\n   * more recently than a widget with a smaller number.\r\n   *\r\n   * The `currentWidget` will always have the largest focus number.\r\n   *\r\n   * All widgets start with a focus number of `-1`, which indicates that\r\n   * the widget has not been focused since being added to the tracker.\r\n   */\r\n  focusNumber(widget: T): number {\r\n    let n = this._numbers.get(widget);\r\n    return n === undefined ? -1 : n;\r\n  }\r\n\r\n  /**\r\n   * Test whether the focus tracker contains a given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns `true` if the widget is tracked, `false` otherwise.\r\n   */\r\n  has(widget: T): boolean {\r\n    return this._numbers.has(widget);\r\n  }\r\n\r\n  /**\r\n   * Add a widget to the focus tracker.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * #### Notes\r\n   * A widget will be automatically removed from the tracker if it\r\n   * is disposed after being added.\r\n   *\r\n   * If the widget is already tracked, this is a no-op.\r\n   */\r\n  add(widget: T): void {\r\n    // Do nothing if the widget is already tracked.\r\n    if (this._numbers.has(widget)) {\r\n      return;\r\n    }\r\n\r\n    // Test whether the widget has focus.\r\n    let focused = widget.node.contains(document.activeElement);\r\n\r\n    // Set up the initial focus number.\r\n    let n = focused ? this._counter++ : -1;\r\n\r\n    // Add the widget to the internal data structures.\r\n    this._widgets.push(widget);\r\n    this._numbers.set(widget, n);\r\n    this._nodes.set(widget.node, widget);\r\n\r\n    // Set up the event listeners. The capturing phase must be used\r\n    // since the 'focus' and 'blur' events don't bubble and Firefox\r\n    // doesn't support the 'focusin' or 'focusout' events.\r\n    widget.node.addEventListener('focus', this, true);\r\n    widget.node.addEventListener('blur', this, true);\r\n\r\n    // Connect the disposed signal handler.\r\n    widget.disposed.connect(this._onWidgetDisposed, this);\r\n\r\n    // Set the current and active widgets if needed.\r\n    if (focused) {\r\n      this._setWidgets(widget, widget);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a widget from the focus tracker.\r\n   *\r\n   * #### Notes\r\n   * If the widget is the `currentWidget`, the previous current widget\r\n   * will become the new `currentWidget`.\r\n   *\r\n   * A widget will be automatically removed from the tracker if it\r\n   * is disposed after being added.\r\n   *\r\n   * If the widget is not tracked, this is a no-op.\r\n   */\r\n  remove(widget: T): void {\r\n    // Bail early if the widget is not tracked.\r\n    if (!this._numbers.has(widget)) {\r\n      return;\r\n    }\r\n\r\n    // Disconnect the disposed signal handler.\r\n    widget.disposed.disconnect(this._onWidgetDisposed, this);\r\n\r\n    // Remove the event listeners.\r\n    widget.node.removeEventListener('focus', this, true);\r\n    widget.node.removeEventListener('blur', this, true);\r\n\r\n    // Remove the widget from the internal data structures.\r\n    ArrayExt.removeFirstOf(this._widgets, widget);\r\n    this._nodes.delete(widget.node);\r\n    this._numbers.delete(widget);\r\n\r\n    // Bail early if the widget is not the current widget.\r\n    if (this._currentWidget !== widget) {\r\n      return;\r\n    }\r\n\r\n    // Filter the widgets for those which have had focus.\r\n    let valid = filter(this._widgets, w => this._numbers.get(w) !== -1);\r\n\r\n    // Get the valid widget with the max focus number.\r\n    let previous =\r\n      max(valid, (first, second) => {\r\n        let a = this._numbers.get(first)!;\r\n        let b = this._numbers.get(second)!;\r\n        return a - b;\r\n      }) || null;\r\n\r\n    // Set the current and active widgets.\r\n    this._setWidgets(previous, null);\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the focus tracker.\r\n   *\r\n   * @param event - The DOM event sent to the panel.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the tracked nodes. It should\r\n   * not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'focus':\r\n        this._evtFocus(event as FocusEvent);\r\n        break;\r\n      case 'blur':\r\n        this._evtBlur(event as FocusEvent);\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Set the current and active widgets for the tracker.\r\n   */\r\n  private _setWidgets(current: T | null, active: T | null): void {\r\n    // Swap the current widget.\r\n    let oldCurrent = this._currentWidget;\r\n    this._currentWidget = current;\r\n\r\n    // Swap the active widget.\r\n    let oldActive = this._activeWidget;\r\n    this._activeWidget = active;\r\n\r\n    // Emit the `currentChanged` signal if needed.\r\n    if (oldCurrent !== current) {\r\n      this._currentChanged.emit({ oldValue: oldCurrent, newValue: current });\r\n    }\r\n\r\n    // Emit the `activeChanged` signal if needed.\r\n    if (oldActive !== active) {\r\n      this._activeChanged.emit({ oldValue: oldActive, newValue: active });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'focus'` event for a tracked widget.\r\n   */\r\n  private _evtFocus(event: FocusEvent): void {\r\n    // Find the widget which gained focus, which is known to exist.\r\n    let widget = this._nodes.get(event.currentTarget as HTMLElement)!;\r\n\r\n    // Update the focus number if necessary.\r\n    if (widget !== this._currentWidget) {\r\n      this._numbers.set(widget, this._counter++);\r\n    }\r\n\r\n    // Set the current and active widgets.\r\n    this._setWidgets(widget, widget);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'blur'` event for a tracked widget.\r\n   */\r\n  private _evtBlur(event: FocusEvent): void {\r\n    // Find the widget which lost focus, which is known to exist.\r\n    let widget = this._nodes.get(event.currentTarget as HTMLElement)!;\r\n\r\n    // Get the node which being focused after this blur.\r\n    let focusTarget = event.relatedTarget as HTMLElement;\r\n\r\n    // If no other node is being focused, clear the active widget.\r\n    if (!focusTarget) {\r\n      this._setWidgets(this._currentWidget, null);\r\n      return;\r\n    }\r\n\r\n    // Bail if the focus widget is not changing.\r\n    if (widget.node.contains(focusTarget)) {\r\n      return;\r\n    }\r\n\r\n    // If no tracked widget is being focused, clear the active widget.\r\n    if (!find(this._widgets, w => w.node.contains(focusTarget))) {\r\n      this._setWidgets(this._currentWidget, null);\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `disposed` signal for a tracked widget.\r\n   */\r\n  private _onWidgetDisposed(sender: T): void {\r\n    this.remove(sender);\r\n  }\r\n\r\n  private _counter = 0;\r\n  private _widgets: T[] = [];\r\n  private _activeWidget: T | null = null;\r\n  private _currentWidget: T | null = null;\r\n  private _numbers = new Map<T, number>();\r\n  private _nodes = new Map<HTMLElement, T>();\r\n  private _activeChanged = new Signal<this, FocusTracker.IChangedArgs<T>>(this);\r\n  private _currentChanged = new Signal<this, FocusTracker.IChangedArgs<T>>(\r\n    this\r\n  );\r\n}\r\n\r\n/**\r\n * The namespace for the `FocusTracker` class statics.\r\n */\r\nexport namespace FocusTracker {\r\n  /**\r\n   * An arguments object for the changed signals.\r\n   */\r\n  export interface IChangedArgs<T extends Widget> {\r\n    /**\r\n     * The old value for the widget.\r\n     */\r\n    oldValue: T | null;\r\n\r\n    /**\r\n     * The new value for the widget.\r\n     */\r\n    newValue: T | null;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each, IIterator, map } from '@lumino/algorithm';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { AttachedProperty } from '@lumino/properties';\r\n\r\nimport { BoxEngine, BoxSizer } from './boxengine';\r\n\r\nimport { Layout, LayoutItem } from './layout';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A layout which arranges its widgets in a grid.\r\n */\r\nexport class GridLayout extends Layout {\r\n  /**\r\n   * Construct a new grid layout.\r\n   *\r\n   * @param options - The options for initializing the layout.\r\n   */\r\n  constructor(options: GridLayout.IOptions = {}) {\r\n    super(options);\r\n    if (options.rowCount !== undefined) {\r\n      Private.reallocSizers(this._rowSizers, options.rowCount);\r\n    }\r\n    if (options.columnCount !== undefined) {\r\n      Private.reallocSizers(this._columnSizers, options.columnCount);\r\n    }\r\n    if (options.rowSpacing !== undefined) {\r\n      this._rowSpacing = Private.clampValue(options.rowSpacing);\r\n    }\r\n    if (options.columnSpacing !== undefined) {\r\n      this._columnSpacing = Private.clampValue(options.columnSpacing);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   */\r\n  dispose(): void {\r\n    // Dispose of the widgets and layout items.\r\n    each(this._items, item => {\r\n      let widget = item.widget;\r\n      item.dispose();\r\n      widget.dispose();\r\n    });\r\n\r\n    // Clear the layout state.\r\n    this._box = null;\r\n    this._items.length = 0;\r\n    this._rowStarts.length = 0;\r\n    this._rowSizers.length = 0;\r\n    this._columnStarts.length = 0;\r\n    this._columnSizers.length = 0;\r\n\r\n    // Dispose of the rest of the layout.\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Get the number of rows in the layout.\r\n   */\r\n  get rowCount(): number {\r\n    return this._rowSizers.length;\r\n  }\r\n\r\n  /**\r\n   * Set the number of rows in the layout.\r\n   *\r\n   * #### Notes\r\n   * The minimum row count is `1`.\r\n   */\r\n  set rowCount(value: number) {\r\n    // Do nothing if the row count does not change.\r\n    if (value === this.rowCount) {\r\n      return;\r\n    }\r\n\r\n    // Reallocate the row sizers.\r\n    Private.reallocSizers(this._rowSizers, value);\r\n\r\n    // Schedule a fit of the parent.\r\n    if (this.parent) {\r\n      this.parent.fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the number of columns in the layout.\r\n   */\r\n  get columnCount(): number {\r\n    return this._columnSizers.length;\r\n  }\r\n\r\n  /**\r\n   * Set the number of columns in the layout.\r\n   *\r\n   * #### Notes\r\n   * The minimum column count is `1`.\r\n   */\r\n  set columnCount(value: number) {\r\n    // Do nothing if the column count does not change.\r\n    if (value === this.columnCount) {\r\n      return;\r\n    }\r\n\r\n    // Reallocate the column sizers.\r\n    Private.reallocSizers(this._columnSizers, value);\r\n\r\n    // Schedule a fit of the parent.\r\n    if (this.parent) {\r\n      this.parent.fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the row spacing for the layout.\r\n   */\r\n  get rowSpacing(): number {\r\n    return this._rowSpacing;\r\n  }\r\n\r\n  /**\r\n   * Set the row spacing for the layout.\r\n   */\r\n  set rowSpacing(value: number) {\r\n    // Clamp the spacing to the allowed range.\r\n    value = Private.clampValue(value);\r\n\r\n    // Bail if the spacing does not change\r\n    if (this._rowSpacing === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal spacing.\r\n    this._rowSpacing = value;\r\n\r\n    // Schedule a fit of the parent.\r\n    if (this.parent) {\r\n      this.parent.fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the column spacing for the layout.\r\n   */\r\n  get columnSpacing(): number {\r\n    return this._columnSpacing;\r\n  }\r\n\r\n  /**\r\n   * Set the col spacing for the layout.\r\n   */\r\n  set columnSpacing(value: number) {\r\n    // Clamp the spacing to the allowed range.\r\n    value = Private.clampValue(value);\r\n\r\n    // Bail if the spacing does not change\r\n    if (this._columnSpacing === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal spacing.\r\n    this._columnSpacing = value;\r\n\r\n    // Schedule a fit of the parent.\r\n    if (this.parent) {\r\n      this.parent.fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the stretch factor for a specific row.\r\n   *\r\n   * @param index - The row index of interest.\r\n   *\r\n   * @returns The stretch factor for the row.\r\n   *\r\n   * #### Notes\r\n   * This returns `-1` if the index is out of range.\r\n   */\r\n  rowStretch(index: number): number {\r\n    let sizer = this._rowSizers[index];\r\n    return sizer ? sizer.stretch : -1;\r\n  }\r\n\r\n  /**\r\n   * Set the stretch factor for a specific row.\r\n   *\r\n   * @param index - The row index of interest.\r\n   *\r\n   * @param value - The stretch factor for the row.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the index is out of range.\r\n   */\r\n  setRowStretch(index: number, value: number): void {\r\n    // Look up the row sizer.\r\n    let sizer = this._rowSizers[index];\r\n\r\n    // Bail if the index is out of range.\r\n    if (!sizer) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the value to the allowed range.\r\n    value = Private.clampValue(value);\r\n\r\n    // Bail if the stretch does not change.\r\n    if (sizer.stretch === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the sizer stretch.\r\n    sizer.stretch = value;\r\n\r\n    // Schedule an update of the parent.\r\n    if (this.parent) {\r\n      this.parent.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get the stretch factor for a specific column.\r\n   *\r\n   * @param index - The column index of interest.\r\n   *\r\n   * @returns The stretch factor for the column.\r\n   *\r\n   * #### Notes\r\n   * This returns `-1` if the index is out of range.\r\n   */\r\n  columnStretch(index: number): number {\r\n    let sizer = this._columnSizers[index];\r\n    return sizer ? sizer.stretch : -1;\r\n  }\r\n\r\n  /**\r\n   * Set the stretch factor for a specific column.\r\n   *\r\n   * @param index - The column index of interest.\r\n   *\r\n   * @param value - The stretch factor for the column.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the index is out of range.\r\n   */\r\n  setColumnStretch(index: number, value: number): void {\r\n    // Look up the column sizer.\r\n    let sizer = this._columnSizers[index];\r\n\r\n    // Bail if the index is out of range.\r\n    if (!sizer) {\r\n      return;\r\n    }\r\n\r\n    // Clamp the value to the allowed range.\r\n    value = Private.clampValue(value);\r\n\r\n    // Bail if the stretch does not change.\r\n    if (sizer.stretch === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the sizer stretch.\r\n    sizer.stretch = value;\r\n\r\n    // Schedule an update of the parent.\r\n    if (this.parent) {\r\n      this.parent.update();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the widgets in the layout.\r\n   *\r\n   * @returns A new iterator over the widgets in the layout.\r\n   */\r\n  iter(): IIterator<Widget> {\r\n    return map(this._items, item => item.widget);\r\n  }\r\n\r\n  /**\r\n   * Add a widget to the grid layout.\r\n   *\r\n   * @param widget - The widget to add to the layout.\r\n   *\r\n   * #### Notes\r\n   * If the widget is already contained in the layout, this is no-op.\r\n   */\r\n  addWidget(widget: Widget): void {\r\n    // Look up the index for the widget.\r\n    let i = ArrayExt.findFirstIndex(this._items, it => it.widget === widget);\r\n\r\n    // Bail if the widget is already in the layout.\r\n    if (i !== -1) {\r\n      return;\r\n    }\r\n\r\n    // Add the widget to the layout.\r\n    this._items.push(new LayoutItem(widget));\r\n\r\n    // Attach the widget to the parent.\r\n    if (this.parent) {\r\n      this.attachWidget(widget);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Remove a widget from the grid layout.\r\n   *\r\n   * @param widget - The widget to remove from the layout.\r\n   *\r\n   * #### Notes\r\n   * A widget is automatically removed from the layout when its `parent`\r\n   * is set to `null`. This method should only be invoked directly when\r\n   * removing a widget from a layout which has yet to be installed on a\r\n   * parent widget.\r\n   *\r\n   * This method does *not* modify the widget's `parent`.\r\n   */\r\n  removeWidget(widget: Widget): void {\r\n    // Look up the index for the widget.\r\n    let i = ArrayExt.findFirstIndex(this._items, it => it.widget === widget);\r\n\r\n    // Bail if the widget is not in the layout.\r\n    if (i === -1) {\r\n      return;\r\n    }\r\n\r\n    // Remove the widget from the layout.\r\n    let item = ArrayExt.removeAt(this._items, i)!;\r\n\r\n    // Detach the widget from the parent.\r\n    if (this.parent) {\r\n      this.detachWidget(widget);\r\n    }\r\n\r\n    // Dispose the layout item.\r\n    item.dispose();\r\n  }\r\n\r\n  /**\r\n   * Perform layout initialization which requires the parent widget.\r\n   */\r\n  protected init(): void {\r\n    super.init();\r\n    each(this, widget => {\r\n      this.attachWidget(widget);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach a widget to the parent's DOM node.\r\n   *\r\n   * @param widget - The widget to attach to the parent.\r\n   */\r\n  protected attachWidget(widget: Widget): void {\r\n    // Send a `'before-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    }\r\n\r\n    // Add the widget's node to the parent.\r\n    this.parent!.node.appendChild(widget.node);\r\n\r\n    // Send an `'after-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n    }\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * Detach a widget from the parent's DOM node.\r\n   *\r\n   * @param widget - The widget to detach from the parent.\r\n   */\r\n  protected detachWidget(widget: Widget): void {\r\n    // Send a `'before-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    }\r\n\r\n    // Remove the widget's node from the parent.\r\n    this.parent!.node.removeChild(widget.node);\r\n\r\n    // Send an `'after-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n    }\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-show'` message.\r\n   */\r\n  protected onBeforeShow(msg: Message): void {\r\n    super.onBeforeShow(msg);\r\n    this.parent!.update();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    super.onBeforeAttach(msg);\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-shown'` message.\r\n   */\r\n  protected onChildShown(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-hidden'` message.\r\n   */\r\n  protected onChildHidden(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'resize'` message.\r\n   */\r\n  protected onResize(msg: Widget.ResizeMessage): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(msg.width, msg.height);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(-1, -1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'fit-request'` message.\r\n   */\r\n  protected onFitRequest(msg: Message): void {\r\n    if (this.parent!.isAttached) {\r\n      this._fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fit the layout to the total size required by the widgets.\r\n   */\r\n  private _fit(): void {\r\n    // Reset the min sizes of the sizers.\r\n    for (let i = 0, n = this.rowCount; i < n; ++i) {\r\n      this._rowSizers[i].minSize = 0;\r\n    }\r\n    for (let i = 0, n = this.columnCount; i < n; ++i) {\r\n      this._columnSizers[i].minSize = 0;\r\n    }\r\n\r\n    // Filter for the visible layout items.\r\n    let items = this._items.filter(it => !it.isHidden);\r\n\r\n    // Fit the layout items.\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      items[i].fit();\r\n    }\r\n\r\n    // Get the max row and column index.\r\n    let maxRow = this.rowCount - 1;\r\n    let maxCol = this.columnCount - 1;\r\n\r\n    // Sort the items by row span.\r\n    items.sort(Private.rowSpanCmp);\r\n\r\n    // Update the min sizes of the row sizers.\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      // Fetch the item.\r\n      let item = items[i];\r\n\r\n      // Get the row bounds for the item.\r\n      let config = GridLayout.getCellConfig(item.widget);\r\n      let r1 = Math.min(config.row, maxRow);\r\n      let r2 = Math.min(config.row + config.rowSpan - 1, maxRow);\r\n\r\n      // Distribute the minimum height to the sizers as needed.\r\n      Private.distributeMin(this._rowSizers, r1, r2, item.minHeight);\r\n    }\r\n\r\n    // Sort the items by column span.\r\n    items.sort(Private.columnSpanCmp);\r\n\r\n    // Update the min sizes of the column sizers.\r\n    for (let i = 0, n = items.length; i < n; ++i) {\r\n      // Fetch the item.\r\n      let item = items[i];\r\n\r\n      // Get the column bounds for the item.\r\n      let config = GridLayout.getCellConfig(item.widget);\r\n      let c1 = Math.min(config.column, maxCol);\r\n      let c2 = Math.min(config.column + config.columnSpan - 1, maxCol);\r\n\r\n      // Distribute the minimum width to the sizers as needed.\r\n      Private.distributeMin(this._columnSizers, c1, c2, item.minWidth);\r\n    }\r\n\r\n    // If no size constraint is needed, just update the parent.\r\n    if (this.fitPolicy === 'set-no-constraint') {\r\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\r\n      return;\r\n    }\r\n\r\n    // Set up the computed min size.\r\n    let minH = maxRow * this._rowSpacing;\r\n    let minW = maxCol * this._columnSpacing;\r\n\r\n    // Add the sizer minimums to the computed min size.\r\n    for (let i = 0, n = this.rowCount; i < n; ++i) {\r\n      minH += this._rowSizers[i].minSize;\r\n    }\r\n    for (let i = 0, n = this.columnCount; i < n; ++i) {\r\n      minW += this._columnSizers[i].minSize;\r\n    }\r\n\r\n    // Update the box sizing and add it to the computed min size.\r\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\r\n    minW += box.horizontalSum;\r\n    minH += box.verticalSum;\r\n\r\n    // Update the parent's min size constraints.\r\n    let style = this.parent!.node.style;\r\n    style.minWidth = `${minW}px`;\r\n    style.minHeight = `${minH}px`;\r\n\r\n    // Set the dirty flag to ensure only a single update occurs.\r\n    this._dirty = true;\r\n\r\n    // Notify the ancestor that it should fit immediately. This may\r\n    // cause a resize of the parent, fulfilling the required update.\r\n    if (this.parent!.parent) {\r\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\r\n    }\r\n\r\n    // If the dirty flag is still set, the parent was not resized.\r\n    // Trigger the required update on the parent widget immediately.\r\n    if (this._dirty) {\r\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the layout position and size of the widgets.\r\n   *\r\n   * The parent offset dimensions should be `-1` if unknown.\r\n   */\r\n  private _update(offsetWidth: number, offsetHeight: number): void {\r\n    // Clear the dirty flag to indicate the update occurred.\r\n    this._dirty = false;\r\n\r\n    // Measure the parent if the offset dimensions are unknown.\r\n    if (offsetWidth < 0) {\r\n      offsetWidth = this.parent!.node.offsetWidth;\r\n    }\r\n    if (offsetHeight < 0) {\r\n      offsetHeight = this.parent!.node.offsetHeight;\r\n    }\r\n\r\n    // Ensure the parent box sizing data is computed.\r\n    if (!this._box) {\r\n      this._box = ElementExt.boxSizing(this.parent!.node);\r\n    }\r\n\r\n    // Compute the layout area adjusted for border and padding.\r\n    let top = this._box.paddingTop;\r\n    let left = this._box.paddingLeft;\r\n    let width = offsetWidth - this._box.horizontalSum;\r\n    let height = offsetHeight - this._box.verticalSum;\r\n\r\n    // Get the max row and column index.\r\n    let maxRow = this.rowCount - 1;\r\n    let maxCol = this.columnCount - 1;\r\n\r\n    // Compute the total fixed row and column space.\r\n    let fixedRowSpace = maxRow * this._rowSpacing;\r\n    let fixedColSpace = maxCol * this._columnSpacing;\r\n\r\n    // Distribute the available space to the box sizers.\r\n    BoxEngine.calc(this._rowSizers, Math.max(0, height - fixedRowSpace));\r\n    BoxEngine.calc(this._columnSizers, Math.max(0, width - fixedColSpace));\r\n\r\n    // Update the row start positions.\r\n    for (let i = 0, pos = top, n = this.rowCount; i < n; ++i) {\r\n      this._rowStarts[i] = pos;\r\n      pos += this._rowSizers[i].size + this._rowSpacing;\r\n    }\r\n\r\n    // Update the column start positions.\r\n    for (let i = 0, pos = left, n = this.columnCount; i < n; ++i) {\r\n      this._columnStarts[i] = pos;\r\n      pos += this._columnSizers[i].size + this._columnSpacing;\r\n    }\r\n\r\n    // Update the geometry of the layout items.\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      // Fetch the item.\r\n      let item = this._items[i];\r\n\r\n      // Ignore hidden items.\r\n      if (item.isHidden) {\r\n        continue;\r\n      }\r\n\r\n      // Fetch the cell bounds for the widget.\r\n      let config = GridLayout.getCellConfig(item.widget);\r\n      let r1 = Math.min(config.row, maxRow);\r\n      let c1 = Math.min(config.column, maxCol);\r\n      let r2 = Math.min(config.row + config.rowSpan - 1, maxRow);\r\n      let c2 = Math.min(config.column + config.columnSpan - 1, maxCol);\r\n\r\n      // Compute the cell geometry.\r\n      let x = this._columnStarts[c1];\r\n      let y = this._rowStarts[r1];\r\n      let w = this._columnStarts[c2] + this._columnSizers[c2].size - x;\r\n      let h = this._rowStarts[r2] + this._rowSizers[r2].size - y;\r\n\r\n      // Update the geometry of the layout item.\r\n      item.update(x, y, w, h);\r\n    }\r\n  }\r\n\r\n  private _dirty = false;\r\n  private _rowSpacing = 4;\r\n  private _columnSpacing = 4;\r\n  private _items: LayoutItem[] = [];\r\n  private _rowStarts: number[] = [];\r\n  private _columnStarts: number[] = [];\r\n  private _rowSizers: BoxSizer[] = [new BoxSizer()];\r\n  private _columnSizers: BoxSizer[] = [new BoxSizer()];\r\n  private _box: ElementExt.IBoxSizing | null = null;\r\n}\r\n\r\n/**\r\n * The namespace for the `GridLayout` class statics.\r\n */\r\nexport namespace GridLayout {\r\n  /**\r\n   * An options object for initializing a grid layout.\r\n   */\r\n  export interface IOptions extends Layout.IOptions {\r\n    /**\r\n     * The initial row count for the layout.\r\n     *\r\n     * The default is `1`.\r\n     */\r\n    rowCount?: number;\r\n\r\n    /**\r\n     * The initial column count for the layout.\r\n     *\r\n     * The default is `1`.\r\n     */\r\n    columnCount?: number;\r\n\r\n    /**\r\n     * The spacing between rows in the layout.\r\n     *\r\n     * The default is `4`.\r\n     */\r\n    rowSpacing?: number;\r\n\r\n    /**\r\n     * The spacing between columns in the layout.\r\n     *\r\n     * The default is `4`.\r\n     */\r\n    columnSpacing?: number;\r\n  }\r\n\r\n  /**\r\n   * An object which holds the cell configuration for a widget.\r\n   */\r\n  export interface ICellConfig {\r\n    /**\r\n     * The row index for the widget.\r\n     */\r\n    readonly row: number;\r\n\r\n    /**\r\n     * The column index for the widget.\r\n     */\r\n    readonly column: number;\r\n\r\n    /**\r\n     * The row span for the widget.\r\n     */\r\n    readonly rowSpan: number;\r\n\r\n    /**\r\n     * The column span for the widget.\r\n     */\r\n    readonly columnSpan: number;\r\n  }\r\n\r\n  /**\r\n   * Get the cell config for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @returns The cell config for the widget.\r\n   */\r\n  export function getCellConfig(widget: Widget): ICellConfig {\r\n    return Private.cellConfigProperty.get(widget);\r\n  }\r\n\r\n  /**\r\n   * Set the cell config for the given widget.\r\n   *\r\n   * @param widget - The widget of interest.\r\n   *\r\n   * @param value - The value for the cell config.\r\n   */\r\n  export function setCellConfig(\r\n    widget: Widget,\r\n    value: Partial<ICellConfig>\r\n  ): void {\r\n    Private.cellConfigProperty.set(widget, Private.normalizeConfig(value));\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * The property descriptor for the widget cell config.\r\n   */\r\n  export const cellConfigProperty = new AttachedProperty<\r\n    Widget,\r\n    GridLayout.ICellConfig\r\n  >({\r\n    name: 'cellConfig',\r\n    create: () => ({ row: 0, column: 0, rowSpan: 1, columnSpan: 1 }),\r\n    changed: onChildCellConfigChanged\r\n  });\r\n\r\n  /**\r\n   * Normalize a partial cell config object.\r\n   */\r\n  export function normalizeConfig(\r\n    config: Partial<GridLayout.ICellConfig>\r\n  ): GridLayout.ICellConfig {\r\n    let row = Math.max(0, Math.floor(config.row || 0));\r\n    let column = Math.max(0, Math.floor(config.column || 0));\r\n    let rowSpan = Math.max(1, Math.floor(config.rowSpan || 0));\r\n    let columnSpan = Math.max(1, Math.floor(config.columnSpan || 0));\r\n    return { row, column, rowSpan, columnSpan };\r\n  }\r\n\r\n  /**\r\n   * Clamp a value to an integer >= 0.\r\n   */\r\n  export function clampValue(value: number): number {\r\n    return Math.max(0, Math.floor(value));\r\n  }\r\n\r\n  /**\r\n   * A sort comparison function for row spans.\r\n   */\r\n  export function rowSpanCmp(a: LayoutItem, b: LayoutItem): number {\r\n    let c1 = cellConfigProperty.get(a.widget);\r\n    let c2 = cellConfigProperty.get(b.widget);\r\n    return c1.rowSpan - c2.rowSpan;\r\n  }\r\n\r\n  /**\r\n   * A sort comparison function for column spans.\r\n   */\r\n  export function columnSpanCmp(a: LayoutItem, b: LayoutItem): number {\r\n    let c1 = cellConfigProperty.get(a.widget);\r\n    let c2 = cellConfigProperty.get(b.widget);\r\n    return c1.columnSpan - c2.columnSpan;\r\n  }\r\n\r\n  /**\r\n   * Reallocate the box sizers for the given grid dimensions.\r\n   */\r\n  export function reallocSizers(sizers: BoxSizer[], count: number): void {\r\n    // Coerce the count to the valid range.\r\n    count = Math.max(1, Math.floor(count));\r\n\r\n    // Add the missing sizers.\r\n    while (sizers.length < count) {\r\n      sizers.push(new BoxSizer());\r\n    }\r\n\r\n    // Remove the extra sizers.\r\n    if (sizers.length > count) {\r\n      sizers.length = count;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Distribute a min size constraint across a range of sizers.\r\n   */\r\n  export function distributeMin(\r\n    sizers: BoxSizer[],\r\n    i1: number,\r\n    i2: number,\r\n    minSize: number\r\n  ): void {\r\n    // Sanity check the indices.\r\n    if (i2 < i1) {\r\n      return;\r\n    }\r\n\r\n    // Handle the simple case of no cell span.\r\n    if (i1 === i2) {\r\n      let sizer = sizers[i1];\r\n      sizer.minSize = Math.max(sizer.minSize, minSize);\r\n      return;\r\n    }\r\n\r\n    // Compute the total current min size of the span.\r\n    let totalMin = 0;\r\n    for (let i = i1; i <= i2; ++i) {\r\n      totalMin += sizers[i].minSize;\r\n    }\r\n\r\n    // Do nothing if the total is greater than the required.\r\n    if (totalMin >= minSize) {\r\n      return;\r\n    }\r\n\r\n    // Compute the portion of the space to allocate to each sizer.\r\n    let portion = (minSize - totalMin) / (i2 - i1 + 1);\r\n\r\n    // Add the portion to each sizer.\r\n    for (let i = i1; i <= i2; ++i) {\r\n      sizers[i].minSize += portion;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The change handler for the child cell config property.\r\n   */\r\n  function onChildCellConfigChanged(child: Widget): void {\r\n    if (child.parent && child.parent.layout instanceof GridLayout) {\r\n      child.parent.fit();\r\n    }\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt } from '@lumino/algorithm';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { getKeyboardLayout } from '@lumino/keyboard';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport {\r\n  ElementARIAAttrs,\r\n  ElementDataset,\r\n  h,\r\n  VirtualDOM,\r\n  VirtualElement\r\n} from '@lumino/virtualdom';\r\n\r\nimport { Menu } from './menu';\r\n\r\nimport { Title } from './title';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A widget which displays menus as a canonical menu bar.\r\n */\r\nexport class MenuBar extends Widget {\r\n  /**\r\n   * Construct a new menu bar.\r\n   *\r\n   * @param options - The options for initializing the menu bar.\r\n   */\r\n  constructor(options: MenuBar.IOptions = {}) {\r\n    super({ node: Private.createNode() });\r\n    this.addClass('lm-MenuBar');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-MenuBar');\r\n    /* </DEPRECATED> */\r\n    this.setFlag(Widget.Flag.DisallowLayout);\r\n    this.renderer = options.renderer || MenuBar.defaultRenderer;\r\n    this._forceItemsPosition = options.forceItemsPosition || {\r\n      forceX: true,\r\n      forceY: true\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the widget.\r\n   */\r\n  dispose(): void {\r\n    this._closeChildMenu();\r\n    this._menus.length = 0;\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * The renderer used by the menu bar.\r\n   */\r\n  readonly renderer: MenuBar.IRenderer;\r\n\r\n  /**\r\n   * The child menu of the menu bar.\r\n   *\r\n   * #### Notes\r\n   * This will be `null` if the menu bar does not have an open menu.\r\n   */\r\n  get childMenu(): Menu | null {\r\n    return this._childMenu;\r\n  }\r\n\r\n  /**\r\n   * Get the menu bar content node.\r\n   *\r\n   * #### Notes\r\n   * This is the node which holds the menu title nodes.\r\n   *\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get contentNode(): HTMLUListElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-MenuBar-content'\r\n    )[0] as HTMLUListElement;\r\n  }\r\n\r\n  /**\r\n   * Get the currently active menu.\r\n   */\r\n  get activeMenu(): Menu | null {\r\n    return this._menus[this._activeIndex] || null;\r\n  }\r\n\r\n  /**\r\n   * Set the currently active menu.\r\n   *\r\n   * #### Notes\r\n   * If the menu does not exist, the menu will be set to `null`.\r\n   */\r\n  set activeMenu(value: Menu | null) {\r\n    this.activeIndex = value ? this._menus.indexOf(value) : -1;\r\n  }\r\n\r\n  /**\r\n   * Get the index of the currently active menu.\r\n   *\r\n   * #### Notes\r\n   * This will be `-1` if no menu is active.\r\n   */\r\n  get activeIndex(): number {\r\n    return this._activeIndex;\r\n  }\r\n\r\n  /**\r\n   * Set the index of the currently active menu.\r\n   *\r\n   * #### Notes\r\n   * If the menu cannot be activated, the index will be set to `-1`.\r\n   */\r\n  set activeIndex(value: number) {\r\n    // Adjust the value for an out of range index.\r\n    if (value < 0 || value >= this._menus.length) {\r\n      value = -1;\r\n    }\r\n\r\n    // Bail early if the index will not change.\r\n    if (this._activeIndex === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the active index.\r\n    this._activeIndex = value;\r\n\r\n    // Update focus to new active index\r\n    if (\r\n      this._activeIndex >= 0 &&\r\n      this.contentNode.childNodes[this._activeIndex]\r\n    ) {\r\n      (this.contentNode.childNodes[this._activeIndex] as HTMLElement).focus();\r\n    }\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * A read-only array of the menus in the menu bar.\r\n   */\r\n  get menus(): ReadonlyArray<Menu> {\r\n    return this._menus;\r\n  }\r\n\r\n  /**\r\n   * Open the active menu and activate its first menu item.\r\n   *\r\n   * #### Notes\r\n   * If there is no active menu, this is a no-op.\r\n   */\r\n  openActiveMenu(): void {\r\n    // Bail early if there is no active item.\r\n    if (this._activeIndex === -1) {\r\n      return;\r\n    }\r\n\r\n    // Open the child menu.\r\n    this._openChildMenu();\r\n\r\n    // Activate the first item in the child menu.\r\n    if (this._childMenu) {\r\n      this._childMenu.activeIndex = -1;\r\n      this._childMenu.activateNextItem();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Add a menu to the end of the menu bar.\r\n   *\r\n   * @param menu - The menu to add to the menu bar.\r\n   *\r\n   * #### Notes\r\n   * If the menu is already added to the menu bar, it will be moved.\r\n   */\r\n  addMenu(menu: Menu): void {\r\n    this.insertMenu(this._menus.length, menu);\r\n  }\r\n\r\n  /**\r\n   * Insert a menu into the menu bar at the specified index.\r\n   *\r\n   * @param index - The index at which to insert the menu.\r\n   *\r\n   * @param menu - The menu to insert into the menu bar.\r\n   *\r\n   * #### Notes\r\n   * The index will be clamped to the bounds of the menus.\r\n   *\r\n   * If the menu is already added to the menu bar, it will be moved.\r\n   */\r\n  insertMenu(index: number, menu: Menu): void {\r\n    // Close the child menu before making changes.\r\n    this._closeChildMenu();\r\n\r\n    // Look up the index of the menu.\r\n    let i = this._menus.indexOf(menu);\r\n\r\n    // Clamp the insert index to the array bounds.\r\n    let j = Math.max(0, Math.min(index, this._menus.length));\r\n\r\n    // If the menu is not in the array, insert it.\r\n    if (i === -1) {\r\n      // Insert the menu into the array.\r\n      ArrayExt.insert(this._menus, j, menu);\r\n\r\n      // Add the styling class to the menu.\r\n      menu.addClass('lm-MenuBar-menu');\r\n      /* <DEPRECATED> */\r\n      menu.addClass('p-MenuBar-menu');\r\n      /* </DEPRECATED> */\r\n\r\n      // Connect to the menu signals.\r\n      menu.aboutToClose.connect(this._onMenuAboutToClose, this);\r\n      menu.menuRequested.connect(this._onMenuMenuRequested, this);\r\n      menu.title.changed.connect(this._onTitleChanged, this);\r\n\r\n      // Schedule an update of the items.\r\n      this.update();\r\n\r\n      // There is nothing more to do.\r\n      return;\r\n    }\r\n\r\n    // Otherwise, the menu exists in the array and should be moved.\r\n\r\n    // Adjust the index if the location is at the end of the array.\r\n    if (j === this._menus.length) {\r\n      j--;\r\n    }\r\n\r\n    // Bail if there is no effective move.\r\n    if (i === j) {\r\n      return;\r\n    }\r\n\r\n    // Move the menu to the new locations.\r\n    ArrayExt.move(this._menus, i, j);\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Remove a menu from the menu bar.\r\n   *\r\n   * @param menu - The menu to remove from the menu bar.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the menu is not in the menu bar.\r\n   */\r\n  removeMenu(menu: Menu): void {\r\n    this.removeMenuAt(this._menus.indexOf(menu));\r\n  }\r\n\r\n  /**\r\n   * Remove the menu at a given index from the menu bar.\r\n   *\r\n   * @param index - The index of the menu to remove.\r\n   *\r\n   * #### Notes\r\n   * This is a no-op if the index is out of range.\r\n   */\r\n  removeMenuAt(index: number): void {\r\n    // Close the child menu before making changes.\r\n    this._closeChildMenu();\r\n\r\n    // Remove the menu from the array.\r\n    let menu = ArrayExt.removeAt(this._menus, index);\r\n\r\n    // Bail if the index is out of range.\r\n    if (!menu) {\r\n      return;\r\n    }\r\n\r\n    // Disconnect from the menu signals.\r\n    menu.aboutToClose.disconnect(this._onMenuAboutToClose, this);\r\n    menu.menuRequested.disconnect(this._onMenuMenuRequested, this);\r\n    menu.title.changed.disconnect(this._onTitleChanged, this);\r\n\r\n    // Remove the styling class from the menu.\r\n    menu.removeClass('lm-MenuBar-menu');\r\n    /* <DEPRECATED> */\r\n    menu.removeClass('p-MenuBar-menu');\r\n    /* </DEPRECATED> */\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Remove all menus from the menu bar.\r\n   */\r\n  clearMenus(): void {\r\n    // Bail if there is nothing to remove.\r\n    if (this._menus.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Close the child menu before making changes.\r\n    this._closeChildMenu();\r\n\r\n    // Disconnect from the menu signals and remove the styling class.\r\n    for (let menu of this._menus) {\r\n      menu.aboutToClose.disconnect(this._onMenuAboutToClose, this);\r\n      menu.menuRequested.disconnect(this._onMenuMenuRequested, this);\r\n      menu.title.changed.disconnect(this._onTitleChanged, this);\r\n      menu.removeClass('lm-MenuBar-menu');\r\n      /* <DEPRECATED> */\r\n      menu.removeClass('p-MenuBar-menu');\r\n      /* </DEPRECATED> */\r\n    }\r\n\r\n    // Clear the menus array.\r\n    this._menus.length = 0;\r\n\r\n    // Schedule an update of the items.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the menu bar.\r\n   *\r\n   * @param event - The DOM event sent to the menu bar.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the menu bar's DOM nodes. It\r\n   * should not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'keydown':\r\n        this._evtKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'mousedown':\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'mousemove':\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'mouseleave':\r\n        this._evtMouseLeave(event as MouseEvent);\r\n        break;\r\n      case 'contextmenu':\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('keydown', this);\r\n    this.node.addEventListener('mousedown', this);\r\n    this.node.addEventListener('mousemove', this);\r\n    this.node.addEventListener('mouseleave', this);\r\n    this.node.addEventListener('contextmenu', this);\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'after-detach'` message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    this.node.removeEventListener('keydown', this);\r\n    this.node.removeEventListener('mousedown', this);\r\n    this.node.removeEventListener('mousemove', this);\r\n    this.node.removeEventListener('mouseleave', this);\r\n    this.node.removeEventListener('contextmenu', this);\r\n    this._closeChildMenu();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'activate-request'` message.\r\n   */\r\n  protected onActivateRequest(msg: Message): void {\r\n    if (this.isAttached) {\r\n      this.node.focus();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    let menus = this._menus;\r\n    let renderer = this.renderer;\r\n    let activeIndex = this._activeIndex;\r\n    let content = new Array<VirtualElement>(menus.length);\r\n    for (let i = 0, n = menus.length; i < n; ++i) {\r\n      let title = menus[i].title;\r\n      let active = i === activeIndex;\r\n      if (active && menus[i].items.length == 0) {\r\n        active = false;\r\n      }\r\n      content[i] = renderer.renderItem({\r\n        title,\r\n        active,\r\n        onfocus: () => {\r\n          this.activeIndex = i;\r\n        }\r\n      });\r\n    }\r\n    VirtualDOM.render(content, this.contentNode);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the menu bar.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    // A menu bar handles all keydown events.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Fetch the key code for the event.\r\n    let kc = event.keyCode;\r\n\r\n    // Enter, Up Arrow, Down Arrow\r\n    if (kc === 13 || kc === 38 || kc === 40) {\r\n      this.openActiveMenu();\r\n      return;\r\n    }\r\n\r\n    // Escape\r\n    if (kc === 27) {\r\n      this._closeChildMenu();\r\n      this.activeIndex = -1;\r\n      this.node.blur();\r\n      return;\r\n    }\r\n\r\n    // Left Arrow\r\n    if (kc === 37) {\r\n      let i = this._activeIndex;\r\n      let n = this._menus.length;\r\n      this.activeIndex = i === 0 ? n - 1 : i - 1;\r\n      return;\r\n    }\r\n\r\n    // Right Arrow\r\n    if (kc === 39) {\r\n      let i = this._activeIndex;\r\n      let n = this._menus.length;\r\n      this.activeIndex = i === n - 1 ? 0 : i + 1;\r\n      return;\r\n    }\r\n\r\n    // Get the pressed key character.\r\n    let key = getKeyboardLayout().keyForKeydownEvent(event);\r\n\r\n    // Bail if the key is not valid.\r\n    if (!key) {\r\n      return;\r\n    }\r\n\r\n    // Search for the next best matching mnemonic item.\r\n    let start = this._activeIndex + 1;\r\n    let result = Private.findMnemonic(this._menus, key, start);\r\n\r\n    // Handle the requested mnemonic based on the search results.\r\n    // If exactly one mnemonic is matched, that menu is opened.\r\n    // Otherwise, the next mnemonic is activated if available,\r\n    // followed by the auto mnemonic if available.\r\n    if (result.index !== -1 && !result.multiple) {\r\n      this.activeIndex = result.index;\r\n      this.openActiveMenu();\r\n    } else if (result.index !== -1) {\r\n      this.activeIndex = result.index;\r\n    } else if (result.auto !== -1) {\r\n      this.activeIndex = result.auto;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousedown'` event for the menu bar.\r\n   */\r\n  private _evtMouseDown(event: MouseEvent): void {\r\n    // Bail if the mouse press was not on the menu bar. This can occur\r\n    // when the document listener is installed for an active menu bar.\r\n    if (!ElementExt.hitTest(this.node, event.clientX, event.clientY)) {\r\n      return;\r\n    }\r\n\r\n    // Stop the propagation of the event. Immediate propagation is\r\n    // also stopped so that an open menu does not handle the event.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    event.stopImmediatePropagation();\r\n\r\n    // Check if the mouse is over one of the menu items.\r\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\r\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\r\n    });\r\n\r\n    // If the press was not on an item, close the child menu.\r\n    if (index === -1) {\r\n      this._closeChildMenu();\r\n      return;\r\n    }\r\n\r\n    // If the press was not the left mouse button, do nothing further.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Otherwise, toggle the open state of the child menu.\r\n    if (this._childMenu) {\r\n      this._closeChildMenu();\r\n      this.activeIndex = index;\r\n    } else {\r\n      this.activeIndex = index;\r\n      this._openChildMenu();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousemove'` event for the menu bar.\r\n   */\r\n  private _evtMouseMove(event: MouseEvent): void {\r\n    // Check if the mouse is over one of the menu items.\r\n    let index = ArrayExt.findFirstIndex(this.contentNode.children, node => {\r\n      return ElementExt.hitTest(node, event.clientX, event.clientY);\r\n    });\r\n\r\n    // Bail early if the active index will not change.\r\n    if (index === this._activeIndex) {\r\n      return;\r\n    }\r\n\r\n    // Bail early if a child menu is open and the mouse is not over\r\n    // an item. This allows the child menu to be kept open when the\r\n    // mouse is over the empty part of the menu bar.\r\n    if (index === -1 && this._childMenu) {\r\n      return;\r\n    }\r\n\r\n    // Update the active index to the hovered item.\r\n    this.activeIndex = index;\r\n\r\n    // Open the new menu if a menu is already open.\r\n    if (this._childMenu) {\r\n      this._openChildMenu();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseleave'` event for the menu bar.\r\n   */\r\n  private _evtMouseLeave(event: MouseEvent): void {\r\n    // Reset the active index if there is no open menu.\r\n    if (!this._childMenu) {\r\n      this.activeIndex = -1;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Open the child menu at the active index immediately.\r\n   *\r\n   * If a different child menu is already open, it will be closed,\r\n   * even if there is no active menu.\r\n   */\r\n  private _openChildMenu(): void {\r\n    // If there is no active menu, close the current menu.\r\n    let newMenu = this.activeMenu;\r\n    if (!newMenu) {\r\n      this._closeChildMenu();\r\n      return;\r\n    }\r\n\r\n    // Bail if there is no effective menu change.\r\n    let oldMenu = this._childMenu;\r\n    if (oldMenu === newMenu) {\r\n      return;\r\n    }\r\n\r\n    // Swap the internal menu reference.\r\n    this._childMenu = newMenu;\r\n\r\n    // Close the current menu, or setup for the new menu.\r\n    if (oldMenu) {\r\n      oldMenu.close();\r\n    } else {\r\n      this.addClass('lm-mod-active');\r\n      /* <DEPRECATED> */\r\n      this.addClass('p-mod-active');\r\n      /* </DEPRECATED> */\r\n      document.addEventListener('mousedown', this, true);\r\n    }\r\n\r\n    // Ensure the menu bar is updated and look up the item node.\r\n    MessageLoop.sendMessage(this, Widget.Msg.UpdateRequest);\r\n    let itemNode = this.contentNode.children[this._activeIndex];\r\n\r\n    // Get the positioning data for the new menu.\r\n    let { left, bottom } = (itemNode as HTMLElement).getBoundingClientRect();\r\n\r\n    // Open the new menu at the computed location.\r\n    if (newMenu.items.length > 0) {\r\n      newMenu.open(left, bottom, this._forceItemsPosition);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Close the child menu immediately.\r\n   *\r\n   * This is a no-op if a child menu is not open.\r\n   */\r\n  private _closeChildMenu(): void {\r\n    // Bail if no child menu is open.\r\n    if (!this._childMenu) {\r\n      return;\r\n    }\r\n\r\n    // Remove the active class from the menu bar.\r\n    this.removeClass('lm-mod-active');\r\n    /* <DEPRECATED> */\r\n    this.removeClass('p-mod-active');\r\n    /* </DEPRECATED> */\r\n\r\n    // Remove the document listeners.\r\n    document.removeEventListener('mousedown', this, true);\r\n\r\n    // Clear the internal menu reference.\r\n    let menu = this._childMenu;\r\n    this._childMenu = null;\r\n\r\n    // Close the menu.\r\n    menu.close();\r\n\r\n    // Reset the active index.\r\n    this.activeIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Handle the `aboutToClose` signal of a menu.\r\n   */\r\n  private _onMenuAboutToClose(sender: Menu): void {\r\n    // Bail if the sender is not the child menu.\r\n    if (sender !== this._childMenu) {\r\n      return;\r\n    }\r\n\r\n    // Remove the active class from the menu bar.\r\n    this.removeClass('lm-mod-active');\r\n    /* <DEPRECATED> */\r\n    this.removeClass('p-mod-active');\r\n    /* </DEPRECATED> */\r\n\r\n    // Remove the document listeners.\r\n    document.removeEventListener('mousedown', this, true);\r\n\r\n    // Clear the internal menu reference.\r\n    this._childMenu = null;\r\n\r\n    // Reset the active index.\r\n    this.activeIndex = -1;\r\n  }\r\n\r\n  /**\r\n   * Handle the `menuRequested` signal of a child menu.\r\n   */\r\n  private _onMenuMenuRequested(sender: Menu, args: 'next' | 'previous'): void {\r\n    // Bail if the sender is not the child menu.\r\n    if (sender !== this._childMenu) {\r\n      return;\r\n    }\r\n\r\n    // Look up the active index and menu count.\r\n    let i = this._activeIndex;\r\n    let n = this._menus.length;\r\n\r\n    // Active the next requested index.\r\n    switch (args) {\r\n      case 'next':\r\n        this.activeIndex = i === n - 1 ? 0 : i + 1;\r\n        break;\r\n      case 'previous':\r\n        this.activeIndex = i === 0 ? n - 1 : i - 1;\r\n        break;\r\n    }\r\n\r\n    // Open the active menu.\r\n    this.openActiveMenu();\r\n  }\r\n\r\n  /**\r\n   * Handle the `changed` signal of a title object.\r\n   */\r\n  private _onTitleChanged(): void {\r\n    this.update();\r\n  }\r\n\r\n  private _activeIndex = -1;\r\n  private _forceItemsPosition: Menu.IOpenOptions;\r\n  private _menus: Menu[] = [];\r\n  private _childMenu: Menu | null = null;\r\n}\r\n\r\n/**\r\n * The namespace for the `MenuBar` class statics.\r\n */\r\nexport namespace MenuBar {\r\n  /**\r\n   * An options object for creating a menu bar.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * A custom renderer for creating menu bar content.\r\n     *\r\n     * The default is a shared renderer instance.\r\n     */\r\n    renderer?: IRenderer;\r\n    /**\r\n     * Whether to force the position of the menu. The MenuBar forces the\r\n     * coordinates of its menus by default. With this option you can disable it.\r\n     *\r\n     * Setting to `false` will enable the logic which repositions the\r\n     * coordinates of the menu if it will not fit entirely on screen.\r\n     *\r\n     * The default is `true`.\r\n     */\r\n    forceItemsPosition?: Menu.IOpenOptions;\r\n  }\r\n\r\n  /**\r\n   * An object which holds the data to render a menu bar item.\r\n   */\r\n  export interface IRenderData {\r\n    /**\r\n     * The title to be rendered.\r\n     */\r\n    readonly title: Title<Widget>;\r\n\r\n    /**\r\n     * Whether the item is the active item.\r\n     */\r\n    readonly active: boolean;\r\n\r\n    readonly onfocus?: (event: FocusEvent) => void;\r\n  }\r\n\r\n  /**\r\n   * A renderer for use with a menu bar.\r\n   */\r\n  export interface IRenderer {\r\n    /**\r\n     * Render the virtual element for a menu bar item.\r\n     *\r\n     * @param data - The data to use for rendering the item.\r\n     *\r\n     * @returns A virtual element representing the item.\r\n     */\r\n    renderItem(data: IRenderData): VirtualElement;\r\n  }\r\n\r\n  /**\r\n   * The default implementation of `IRenderer`.\r\n   *\r\n   * #### Notes\r\n   * Subclasses are free to reimplement rendering methods as needed.\r\n   */\r\n  export class Renderer implements IRenderer {\r\n    /**\r\n     * Render the virtual element for a menu bar item.\r\n     *\r\n     * @param data - The data to use for rendering the item.\r\n     *\r\n     * @returns A virtual element representing the item.\r\n     */\r\n    renderItem(data: IRenderData): VirtualElement {\r\n      let className = this.createItemClass(data);\r\n      let dataset = this.createItemDataset(data);\r\n      let aria = this.createItemARIA(data);\r\n      return h.li(\r\n        { className, dataset, tabindex: '0', onfocus: data.onfocus, ...aria },\r\n        this.renderIcon(data),\r\n        this.renderLabel(data)\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Render the icon element for a menu bar item.\r\n     *\r\n     * @param data - The data to use for rendering the icon.\r\n     *\r\n     * @returns A virtual element representing the item icon.\r\n     */\r\n    renderIcon(data: IRenderData): VirtualElement {\r\n      let className = this.createIconClass(data);\r\n\r\n      /* <DEPRECATED> */\r\n      if (typeof data.title.icon === 'string') {\r\n        return h.div({ className }, data.title.iconLabel);\r\n      }\r\n      /* </DEPRECATED> */\r\n\r\n      // if data.title.icon is undefined, it will be ignored\r\n      return h.div({ className }, data.title.icon!, data.title.iconLabel);\r\n    }\r\n\r\n    /**\r\n     * Render the label element for a menu item.\r\n     *\r\n     * @param data - The data to use for rendering the label.\r\n     *\r\n     * @returns A virtual element representing the item label.\r\n     */\r\n    renderLabel(data: IRenderData): VirtualElement {\r\n      let content = this.formatLabel(data);\r\n      return h.div(\r\n        {\r\n          className:\r\n            'lm-MenuBar-itemLabel' +\r\n            /* <DEPRECATED> */\r\n            ' p-MenuBar-itemLabel'\r\n          /* </DEPRECATED> */\r\n        },\r\n        content\r\n      );\r\n    }\r\n\r\n    /**\r\n     * Create the class name for the menu bar item.\r\n     *\r\n     * @param data - The data to use for the class name.\r\n     *\r\n     * @returns The full class name for the menu item.\r\n     */\r\n    createItemClass(data: IRenderData): string {\r\n      let name = 'lm-MenuBar-item';\r\n      /* <DEPRECATED> */\r\n      name += ' p-MenuBar-item';\r\n      /* </DEPRECATED> */\r\n      if (data.title.className) {\r\n        name += ` ${data.title.className}`;\r\n      }\r\n      if (data.active) {\r\n        name += ' lm-mod-active';\r\n        /* <DEPRECATED> */\r\n        name += ' p-mod-active';\r\n        /* </DEPRECATED> */\r\n      }\r\n      return name;\r\n    }\r\n\r\n    /**\r\n     * Create the dataset for a menu bar item.\r\n     *\r\n     * @param data - The data to use for the item.\r\n     *\r\n     * @returns The dataset for the menu bar item.\r\n     */\r\n    createItemDataset(data: IRenderData): ElementDataset {\r\n      return data.title.dataset;\r\n    }\r\n\r\n    /**\r\n     * Create the aria attributes for menu bar item.\r\n     *\r\n     * @param data - The data to use for the aria attributes.\r\n     *\r\n     * @returns The aria attributes object for the item.\r\n     */\r\n    createItemARIA(data: IRenderData): ElementARIAAttrs {\r\n      return { role: 'menuitem', 'aria-haspopup': 'true' };\r\n    }\r\n\r\n    /**\r\n     * Create the class name for the menu bar item icon.\r\n     *\r\n     * @param data - The data to use for the class name.\r\n     *\r\n     * @returns The full class name for the item icon.\r\n     */\r\n    createIconClass(data: IRenderData): string {\r\n      let name = 'lm-MenuBar-itemIcon';\r\n      /* <DEPRECATED> */\r\n      name += ' p-MenuBar-itemIcon';\r\n      /* </DEPRECATED> */\r\n      let extra = data.title.iconClass;\r\n      return extra ? `${name} ${extra}` : name;\r\n    }\r\n\r\n    /**\r\n     * Create the render content for the label node.\r\n     *\r\n     * @param data - The data to use for the label content.\r\n     *\r\n     * @returns The content to add to the label node.\r\n     */\r\n    formatLabel(data: IRenderData): h.Child {\r\n      // Fetch the label text and mnemonic index.\r\n      let { label, mnemonic } = data.title;\r\n\r\n      // If the index is out of range, do not modify the label.\r\n      if (mnemonic < 0 || mnemonic >= label.length) {\r\n        return label;\r\n      }\r\n\r\n      // Split the label into parts.\r\n      let prefix = label.slice(0, mnemonic);\r\n      let suffix = label.slice(mnemonic + 1);\r\n      let char = label[mnemonic];\r\n\r\n      // Wrap the mnemonic character in a span.\r\n      let span = h.span(\r\n        {\r\n          className:\r\n            'lm-MenuBar-itemMnemonic' +\r\n            /* <DEPRECATED> */\r\n            ' p-MenuBar-itemMnemonic'\r\n          /* </DEPRECATED> */\r\n        },\r\n        char\r\n      );\r\n\r\n      // Return the content parts.\r\n      return [prefix, span, suffix];\r\n    }\r\n  }\r\n\r\n  /**\r\n   * The default `Renderer` instance.\r\n   */\r\n  export const defaultRenderer = new Renderer();\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Create the DOM node for a menu bar.\r\n   */\r\n  export function createNode(): HTMLDivElement {\r\n    let node = document.createElement('div');\r\n    let content = document.createElement('ul');\r\n    content.className = 'lm-MenuBar-content';\r\n    /* <DEPRECATED> */\r\n    content.classList.add('p-MenuBar-content');\r\n    /* </DEPRECATED> */\r\n    node.appendChild(content);\r\n    content.setAttribute('role', 'menubar');\r\n    node.tabIndex = 0;\r\n    content.tabIndex = 0;\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * The results of a mnemonic search.\r\n   */\r\n  export interface IMnemonicResult {\r\n    /**\r\n     * The index of the first matching mnemonic item, or `-1`.\r\n     */\r\n    index: number;\r\n\r\n    /**\r\n     * Whether multiple mnemonic items matched.\r\n     */\r\n    multiple: boolean;\r\n\r\n    /**\r\n     * The index of the first auto matched non-mnemonic item.\r\n     */\r\n    auto: number;\r\n  }\r\n\r\n  /**\r\n   * Find the best matching mnemonic item.\r\n   *\r\n   * The search starts at the given index and wraps around.\r\n   */\r\n  export function findMnemonic(\r\n    menus: ReadonlyArray<Menu>,\r\n    key: string,\r\n    start: number\r\n  ): IMnemonicResult {\r\n    // Setup the result variables.\r\n    let index = -1;\r\n    let auto = -1;\r\n    let multiple = false;\r\n\r\n    // Normalize the key to upper case.\r\n    let upperKey = key.toUpperCase();\r\n\r\n    // Search the items from the given start index.\r\n    for (let i = 0, n = menus.length; i < n; ++i) {\r\n      // Compute the wrapped index.\r\n      let k = (i + start) % n;\r\n\r\n      // Look up the menu title.\r\n      let title = menus[k].title;\r\n\r\n      // Ignore titles with an empty label.\r\n      if (title.label.length === 0) {\r\n        continue;\r\n      }\r\n\r\n      // Look up the mnemonic index for the label.\r\n      let mn = title.mnemonic;\r\n\r\n      // Handle a valid mnemonic index.\r\n      if (mn >= 0 && mn < title.label.length) {\r\n        if (title.label[mn].toUpperCase() === upperKey) {\r\n          if (index === -1) {\r\n            index = k;\r\n          } else {\r\n            multiple = true;\r\n          }\r\n        }\r\n        continue;\r\n      }\r\n\r\n      // Finally, handle the auto index if possible.\r\n      if (auto === -1 && title.label[0].toUpperCase() === upperKey) {\r\n        auto = k;\r\n      }\r\n    }\r\n\r\n    // Return the search results.\r\n    return { index, multiple, auto };\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { IDisposable } from '@lumino/disposable';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Drag } from '@lumino/dragdrop';\r\n\r\nimport { Message } from '@lumino/messaging';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A widget which implements a canonical scroll bar.\r\n */\r\nexport class ScrollBar extends Widget {\r\n  /**\r\n   * Construct a new scroll bar.\r\n   *\r\n   * @param options - The options for initializing the scroll bar.\r\n   */\r\n  constructor(options: ScrollBar.IOptions = {}) {\r\n    super({ node: Private.createNode() });\r\n    this.addClass('lm-ScrollBar');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-ScrollBar');\r\n    /* </DEPRECATED> */\r\n    this.setFlag(Widget.Flag.DisallowLayout);\r\n\r\n    // Set the orientation.\r\n    this._orientation = options.orientation || 'vertical';\r\n    this.dataset['orientation'] = this._orientation;\r\n\r\n    // Parse the rest of the options.\r\n    if (options.maximum !== undefined) {\r\n      this._maximum = Math.max(0, options.maximum);\r\n    }\r\n    if (options.page !== undefined) {\r\n      this._page = Math.max(0, options.page);\r\n    }\r\n    if (options.value !== undefined) {\r\n      this._value = Math.max(0, Math.min(options.value, this._maximum));\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the user moves the scroll thumb.\r\n   *\r\n   * #### Notes\r\n   * The payload is the current value of the scroll bar.\r\n   */\r\n  get thumbMoved(): ISignal<this, number> {\r\n    return this._thumbMoved;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the user clicks a step button.\r\n   *\r\n   * #### Notes\r\n   * The payload is whether a decrease or increase is requested.\r\n   */\r\n  get stepRequested(): ISignal<this, 'decrement' | 'increment'> {\r\n    return this._stepRequested;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the user clicks the scroll track.\r\n   *\r\n   * #### Notes\r\n   * The payload is whether a decrease or increase is requested.\r\n   */\r\n  get pageRequested(): ISignal<this, 'decrement' | 'increment'> {\r\n    return this._pageRequested;\r\n  }\r\n\r\n  /**\r\n   * Get the orientation of the scroll bar.\r\n   */\r\n  get orientation(): ScrollBar.Orientation {\r\n    return this._orientation;\r\n  }\r\n\r\n  /**\r\n   * Set the orientation of the scroll bar.\r\n   */\r\n  set orientation(value: ScrollBar.Orientation) {\r\n    // Do nothing if the orientation does not change.\r\n    if (this._orientation === value) {\r\n      return;\r\n    }\r\n\r\n    // Release the mouse before making changes.\r\n    this._releaseMouse();\r\n\r\n    // Update the internal orientation.\r\n    this._orientation = value;\r\n    this.dataset['orientation'] = value;\r\n\r\n    // Schedule an update the scroll bar.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Get the current value of the scroll bar.\r\n   */\r\n  get value(): number {\r\n    return this._value;\r\n  }\r\n\r\n  /**\r\n   * Set the current value of the scroll bar.\r\n   *\r\n   * #### Notes\r\n   * The value will be clamped to the range `[0, maximum]`.\r\n   */\r\n  set value(value: number) {\r\n    // Clamp the value to the allowable range.\r\n    value = Math.max(0, Math.min(value, this._maximum));\r\n\r\n    // Do nothing if the value does not change.\r\n    if (this._value === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal value.\r\n    this._value = value;\r\n\r\n    // Schedule an update the scroll bar.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Get the page size of the scroll bar.\r\n   *\r\n   * #### Notes\r\n   * The page size is the amount of visible content in the scrolled\r\n   * region, expressed in data units. It determines the size of the\r\n   * scroll bar thumb.\r\n   */\r\n  get page(): number {\r\n    return this._page;\r\n  }\r\n\r\n  /**\r\n   * Set the page size of the scroll bar.\r\n   *\r\n   * #### Notes\r\n   * The page size will be clamped to the range `[0, Infinity]`.\r\n   */\r\n  set page(value: number) {\r\n    // Clamp the page size to the allowable range.\r\n    value = Math.max(0, value);\r\n\r\n    // Do nothing if the value does not change.\r\n    if (this._page === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal page size.\r\n    this._page = value;\r\n\r\n    // Schedule an update the scroll bar.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * Get the maximum value of the scroll bar.\r\n   */\r\n  get maximum(): number {\r\n    return this._maximum;\r\n  }\r\n\r\n  /**\r\n   * Set the maximum value of the scroll bar.\r\n   *\r\n   * #### Notes\r\n   * The max size will be clamped to the range `[0, Infinity]`.\r\n   */\r\n  set maximum(value: number) {\r\n    // Clamp the value to the allowable range.\r\n    value = Math.max(0, value);\r\n\r\n    // Do nothing if the value does not change.\r\n    if (this._maximum === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal values.\r\n    this._maximum = value;\r\n\r\n    // Clamp the current value to the new range.\r\n    this._value = Math.min(this._value, value);\r\n\r\n    // Schedule an update the scroll bar.\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * The scroll bar decrement button node.\r\n   *\r\n   * #### Notes\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get decrementNode(): HTMLDivElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-ScrollBar-button'\r\n    )[0] as HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * The scroll bar increment button node.\r\n   *\r\n   * #### Notes\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get incrementNode(): HTMLDivElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-ScrollBar-button'\r\n    )[1] as HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * The scroll bar track node.\r\n   *\r\n   * #### Notes\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get trackNode(): HTMLDivElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-ScrollBar-track'\r\n    )[0] as HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * The scroll bar thumb node.\r\n   *\r\n   * #### Notes\r\n   * Modifying this node directly can lead to undefined behavior.\r\n   */\r\n  get thumbNode(): HTMLDivElement {\r\n    return this.node.getElementsByClassName(\r\n      'lm-ScrollBar-thumb'\r\n    )[0] as HTMLDivElement;\r\n  }\r\n\r\n  /**\r\n   * Handle the DOM events for the scroll bar.\r\n   *\r\n   * @param event - The DOM event sent to the scroll bar.\r\n   *\r\n   * #### Notes\r\n   * This method implements the DOM `EventListener` interface and is\r\n   * called in response to events on the scroll bar's DOM node.\r\n   *\r\n   * This should not be called directly by user code.\r\n   */\r\n  handleEvent(event: Event): void {\r\n    switch (event.type) {\r\n      case 'mousedown':\r\n        this._evtMouseDown(event as MouseEvent);\r\n        break;\r\n      case 'mousemove':\r\n        this._evtMouseMove(event as MouseEvent);\r\n        break;\r\n      case 'mouseup':\r\n        this._evtMouseUp(event as MouseEvent);\r\n        break;\r\n      case 'keydown':\r\n        this._evtKeyDown(event as KeyboardEvent);\r\n        break;\r\n      case 'contextmenu':\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A method invoked on a 'before-attach' message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    this.node.addEventListener('mousedown', this);\r\n    this.update();\r\n  }\r\n\r\n  /**\r\n   * A method invoked on an 'after-detach' message.\r\n   */\r\n  protected onAfterDetach(msg: Message): void {\r\n    this.node.removeEventListener('mousedown', this);\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * A method invoked on an 'update-request' message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    // Convert the value and page into percentages.\r\n    let value = (this._value * 100) / this._maximum;\r\n    let page = (this._page * 100) / (this._page + this._maximum);\r\n\r\n    // Clamp the value and page to the relevant range.\r\n    value = Math.max(0, Math.min(value, 100));\r\n    page = Math.max(0, Math.min(page, 100));\r\n\r\n    // Fetch the thumb style.\r\n    let thumbStyle = this.thumbNode.style;\r\n\r\n    // Update the thumb style for the current orientation.\r\n    if (this._orientation === 'horizontal') {\r\n      thumbStyle.top = '';\r\n      thumbStyle.height = '';\r\n      thumbStyle.left = `${value}%`;\r\n      thumbStyle.width = `${page}%`;\r\n      thumbStyle.transform = `translate(${-value}%, 0%)`;\r\n    } else {\r\n      thumbStyle.left = '';\r\n      thumbStyle.width = '';\r\n      thumbStyle.top = `${value}%`;\r\n      thumbStyle.height = `${page}%`;\r\n      thumbStyle.transform = `translate(0%, ${-value}%)`;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'keydown'` event for the scroll bar.\r\n   */\r\n  private _evtKeyDown(event: KeyboardEvent): void {\r\n    // Stop all input events during drag.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Ignore anything except the `Escape` key.\r\n    if (event.keyCode !== 27) {\r\n      return;\r\n    }\r\n\r\n    // Fetch the previous scroll value.\r\n    let value = this._pressData ? this._pressData.value : -1;\r\n\r\n    // Release the mouse.\r\n    this._releaseMouse();\r\n\r\n    // Restore the old scroll value if possible.\r\n    if (value !== -1) {\r\n      this._moveThumb(value);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousedown'` event for the scroll bar.\r\n   */\r\n  private _evtMouseDown(event: MouseEvent): void {\r\n    // Do nothing if it's not a left mouse press.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Send an activate request to the scroll bar. This can be\r\n    // used by message hooks to activate something relevant.\r\n    this.activate();\r\n\r\n    // Do nothing if the mouse is already captured.\r\n    if (this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Find the pressed scroll bar part.\r\n    let part = Private.findPart(this, event.target as HTMLElement);\r\n\r\n    // Do nothing if the part is not of interest.\r\n    if (!part) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Override the mouse cursor.\r\n    let override = Drag.overrideCursor('default');\r\n\r\n    // Set up the press data.\r\n    this._pressData = {\r\n      part,\r\n      override,\r\n      delta: -1,\r\n      value: -1,\r\n      mouseX: event.clientX,\r\n      mouseY: event.clientY\r\n    };\r\n\r\n    // Add the extra event listeners.\r\n    document.addEventListener('mousemove', this, true);\r\n    document.addEventListener('mouseup', this, true);\r\n    document.addEventListener('keydown', this, true);\r\n    document.addEventListener('contextmenu', this, true);\r\n\r\n    // Handle a thumb press.\r\n    if (part === 'thumb') {\r\n      // Fetch the thumb node.\r\n      let thumbNode = this.thumbNode;\r\n\r\n      // Fetch the client rect for the thumb.\r\n      let thumbRect = thumbNode.getBoundingClientRect();\r\n\r\n      // Update the press data delta for the current orientation.\r\n      if (this._orientation === 'horizontal') {\r\n        this._pressData.delta = event.clientX - thumbRect.left;\r\n      } else {\r\n        this._pressData.delta = event.clientY - thumbRect.top;\r\n      }\r\n\r\n      // Add the active class to the thumb node.\r\n      thumbNode.classList.add('lm-mod-active');\r\n      /* <DEPRECATED> */\r\n      thumbNode.classList.add('p-mod-active');\r\n      /* </DEPRECATED> */\r\n\r\n      // Store the current value in the press data.\r\n      this._pressData.value = this._value;\r\n\r\n      // Finished.\r\n      return;\r\n    }\r\n\r\n    // Handle a track press.\r\n    if (part === 'track') {\r\n      // Fetch the client rect for the thumb.\r\n      let thumbRect = this.thumbNode.getBoundingClientRect();\r\n\r\n      // Determine the direction for the page request.\r\n      let dir: 'decrement' | 'increment';\r\n      if (this._orientation === 'horizontal') {\r\n        dir = event.clientX < thumbRect.left ? 'decrement' : 'increment';\r\n      } else {\r\n        dir = event.clientY < thumbRect.top ? 'decrement' : 'increment';\r\n      }\r\n\r\n      // Start the repeat timer.\r\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\r\n\r\n      // Emit the page requested signal.\r\n      this._pageRequested.emit(dir);\r\n\r\n      // Finished.\r\n      return;\r\n    }\r\n\r\n    // Handle a decrement button press.\r\n    if (part === 'decrement') {\r\n      // Add the active class to the decrement node.\r\n      this.decrementNode.classList.add('lm-mod-active');\r\n      /* <DEPRECATED> */\r\n      this.decrementNode.classList.add('p-mod-active');\r\n      /* </DEPRECATED> */\r\n\r\n      // Start the repeat timer.\r\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\r\n\r\n      // Emit the step requested signal.\r\n      this._stepRequested.emit('decrement');\r\n\r\n      // Finished.\r\n      return;\r\n    }\r\n\r\n    // Handle an increment button press.\r\n    if (part === 'increment') {\r\n      // Add the active class to the increment node.\r\n      this.incrementNode.classList.add('lm-mod-active');\r\n      /* <DEPRECATED> */\r\n      this.incrementNode.classList.add('p-mod-active');\r\n      /* </DEPRECATED> */\r\n\r\n      // Start the repeat timer.\r\n      this._repeatTimer = window.setTimeout(this._onRepeat, 350);\r\n\r\n      // Emit the step requested signal.\r\n      this._stepRequested.emit('increment');\r\n\r\n      // Finished.\r\n      return;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mousemove'` event for the scroll bar.\r\n   */\r\n  private _evtMouseMove(event: MouseEvent): void {\r\n    // Do nothing if no drag is in progress.\r\n    if (!this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Update the mouse position.\r\n    this._pressData.mouseX = event.clientX;\r\n    this._pressData.mouseY = event.clientY;\r\n\r\n    // Bail if the thumb is not being dragged.\r\n    if (this._pressData.part !== 'thumb') {\r\n      return;\r\n    }\r\n\r\n    // Get the client rect for the thumb and track.\r\n    let thumbRect = this.thumbNode.getBoundingClientRect();\r\n    let trackRect = this.trackNode.getBoundingClientRect();\r\n\r\n    // Fetch the scroll geometry based on the orientation.\r\n    let trackPos: number;\r\n    let trackSpan: number;\r\n    if (this._orientation === 'horizontal') {\r\n      trackPos = event.clientX - trackRect.left - this._pressData.delta;\r\n      trackSpan = trackRect.width - thumbRect.width;\r\n    } else {\r\n      trackPos = event.clientY - trackRect.top - this._pressData.delta;\r\n      trackSpan = trackRect.height - thumbRect.height;\r\n    }\r\n\r\n    // Compute the desired value from the scroll geometry.\r\n    let value = trackSpan === 0 ? 0 : (trackPos * this._maximum) / trackSpan;\r\n\r\n    // Move the thumb to the computed value.\r\n    this._moveThumb(value);\r\n  }\r\n\r\n  /**\r\n   * Handle the `'mouseup'` event for the scroll bar.\r\n   */\r\n  private _evtMouseUp(event: MouseEvent): void {\r\n    // Do nothing if it's not a left mouse release.\r\n    if (event.button !== 0) {\r\n      return;\r\n    }\r\n\r\n    // Stop the event propagation.\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    // Release the mouse.\r\n    this._releaseMouse();\r\n  }\r\n\r\n  /**\r\n   * Release the mouse and restore the node states.\r\n   */\r\n  private _releaseMouse(): void {\r\n    // Bail if there is no press data.\r\n    if (!this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Clear the repeat timer.\r\n    clearTimeout(this._repeatTimer);\r\n    this._repeatTimer = -1;\r\n\r\n    // Clear the press data.\r\n    this._pressData.override.dispose();\r\n    this._pressData = null;\r\n\r\n    // Remove the extra event listeners.\r\n    document.removeEventListener('mousemove', this, true);\r\n    document.removeEventListener('mouseup', this, true);\r\n    document.removeEventListener('keydown', this, true);\r\n    document.removeEventListener('contextmenu', this, true);\r\n\r\n    // Remove the active classes from the nodes.\r\n    this.thumbNode.classList.remove('lm-mod-active');\r\n    this.decrementNode.classList.remove('lm-mod-active');\r\n    this.incrementNode.classList.remove('lm-mod-active');\r\n    /* <DEPRECATED> */\r\n    this.thumbNode.classList.remove('p-mod-active');\r\n    this.decrementNode.classList.remove('p-mod-active');\r\n    this.incrementNode.classList.remove('p-mod-active');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * Move the thumb to the specified position.\r\n   */\r\n  private _moveThumb(value: number): void {\r\n    // Clamp the value to the allowed range.\r\n    value = Math.max(0, Math.min(value, this._maximum));\r\n\r\n    // Bail if the value does not change.\r\n    if (this._value === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal value.\r\n    this._value = value;\r\n\r\n    // Schedule an update of the scroll bar.\r\n    this.update();\r\n\r\n    // Emit the thumb moved signal.\r\n    this._thumbMoved.emit(value);\r\n  }\r\n\r\n  /**\r\n   * A timeout callback for repeating the mouse press.\r\n   */\r\n  private _onRepeat = () => {\r\n    // Clear the repeat timer id.\r\n    this._repeatTimer = -1;\r\n\r\n    // Bail if the mouse has been released.\r\n    if (!this._pressData) {\r\n      return;\r\n    }\r\n\r\n    // Look up the part that was pressed.\r\n    let part = this._pressData.part;\r\n\r\n    // Bail if the thumb was pressed.\r\n    if (part === 'thumb') {\r\n      return;\r\n    }\r\n\r\n    // Schedule the timer for another repeat.\r\n    this._repeatTimer = window.setTimeout(this._onRepeat, 20);\r\n\r\n    // Get the current mouse position.\r\n    let mouseX = this._pressData.mouseX;\r\n    let mouseY = this._pressData.mouseY;\r\n\r\n    // Handle a decrement button repeat.\r\n    if (part === 'decrement') {\r\n      // Bail if the mouse is not over the button.\r\n      if (!ElementExt.hitTest(this.decrementNode, mouseX, mouseY)) {\r\n        return;\r\n      }\r\n\r\n      // Emit the step requested signal.\r\n      this._stepRequested.emit('decrement');\r\n\r\n      // Finished.\r\n      return;\r\n    }\r\n\r\n    // Handle an increment button repeat.\r\n    if (part === 'increment') {\r\n      // Bail if the mouse is not over the button.\r\n      if (!ElementExt.hitTest(this.incrementNode, mouseX, mouseY)) {\r\n        return;\r\n      }\r\n\r\n      // Emit the step requested signal.\r\n      this._stepRequested.emit('increment');\r\n\r\n      // Finished.\r\n      return;\r\n    }\r\n\r\n    // Handle a track repeat.\r\n    if (part === 'track') {\r\n      // Bail if the mouse is not over the track.\r\n      if (!ElementExt.hitTest(this.trackNode, mouseX, mouseY)) {\r\n        return;\r\n      }\r\n\r\n      // Fetch the thumb node.\r\n      let thumbNode = this.thumbNode;\r\n\r\n      // Bail if the mouse is over the thumb.\r\n      if (ElementExt.hitTest(thumbNode, mouseX, mouseY)) {\r\n        return;\r\n      }\r\n\r\n      // Fetch the client rect for the thumb.\r\n      let thumbRect = thumbNode.getBoundingClientRect();\r\n\r\n      // Determine the direction for the page request.\r\n      let dir: 'decrement' | 'increment';\r\n      if (this._orientation === 'horizontal') {\r\n        dir = mouseX < thumbRect.left ? 'decrement' : 'increment';\r\n      } else {\r\n        dir = mouseY < thumbRect.top ? 'decrement' : 'increment';\r\n      }\r\n\r\n      // Emit the page requested signal.\r\n      this._pageRequested.emit(dir);\r\n\r\n      // Finished.\r\n      return;\r\n    }\r\n  };\r\n\r\n  private _value = 0;\r\n  private _page = 10;\r\n  private _maximum = 100;\r\n  private _repeatTimer = -1;\r\n  private _orientation: ScrollBar.Orientation;\r\n  private _pressData: Private.IPressData | null = null;\r\n  private _thumbMoved = new Signal<this, number>(this);\r\n  private _stepRequested = new Signal<this, 'decrement' | 'increment'>(this);\r\n  private _pageRequested = new Signal<this, 'decrement' | 'increment'>(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `ScrollBar` class statics.\r\n */\r\nexport namespace ScrollBar {\r\n  /**\r\n   * A type alias for a scroll bar orientation.\r\n   */\r\n  export type Orientation = 'horizontal' | 'vertical';\r\n\r\n  /**\r\n   * An options object for creating a scroll bar.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The orientation of the scroll bar.\r\n     *\r\n     * The default is `'vertical'`.\r\n     */\r\n    orientation?: Orientation;\r\n\r\n    /**\r\n     * The value for the scroll bar.\r\n     *\r\n     * The default is `0`.\r\n     */\r\n    value?: number;\r\n\r\n    /**\r\n     * The page size for the scroll bar.\r\n     *\r\n     * The default is `10`.\r\n     */\r\n    page?: number;\r\n\r\n    /**\r\n     * The maximum value for the scroll bar.\r\n     *\r\n     * The default is `100`.\r\n     */\r\n    maximum?: number;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * A type alias for the parts of a scroll bar.\r\n   */\r\n  export type ScrollBarPart = 'thumb' | 'track' | 'decrement' | 'increment';\r\n\r\n  /**\r\n   * An object which holds mouse press data.\r\n   */\r\n  export interface IPressData {\r\n    /**\r\n     * The scroll bar part which was pressed.\r\n     */\r\n    part: ScrollBarPart;\r\n\r\n    /**\r\n     * The offset of the press in thumb coordinates, or -1.\r\n     */\r\n    delta: number;\r\n\r\n    /**\r\n     * The scroll value at the time the thumb was pressed, or -1.\r\n     */\r\n    value: number;\r\n\r\n    /**\r\n     * The disposable which will clear the override cursor.\r\n     */\r\n    override: IDisposable;\r\n\r\n    /**\r\n     * The current X position of the mouse.\r\n     */\r\n    mouseX: number;\r\n\r\n    /**\r\n     * The current Y position of the mouse.\r\n     */\r\n    mouseY: number;\r\n  }\r\n\r\n  /**\r\n   * Create the DOM node for a scroll bar.\r\n   */\r\n  export function createNode(): HTMLElement {\r\n    let node = document.createElement('div');\r\n    let decrement = document.createElement('div');\r\n    let increment = document.createElement('div');\r\n    let track = document.createElement('div');\r\n    let thumb = document.createElement('div');\r\n    decrement.className = 'lm-ScrollBar-button';\r\n    increment.className = 'lm-ScrollBar-button';\r\n    decrement.dataset['action'] = 'decrement';\r\n    increment.dataset['action'] = 'increment';\r\n    track.className = 'lm-ScrollBar-track';\r\n    thumb.className = 'lm-ScrollBar-thumb';\r\n    /* <DEPRECATED> */\r\n    decrement.classList.add('p-ScrollBar-button');\r\n    increment.classList.add('p-ScrollBar-button');\r\n    track.classList.add('p-ScrollBar-track');\r\n    thumb.classList.add('p-ScrollBar-thumb');\r\n    /* </DEPRECATED> */\r\n    track.appendChild(thumb);\r\n    node.appendChild(decrement);\r\n    node.appendChild(track);\r\n    node.appendChild(increment);\r\n    return node;\r\n  }\r\n\r\n  /**\r\n   * Find the scroll bar part which contains the given target.\r\n   */\r\n  export function findPart(\r\n    scrollBar: ScrollBar,\r\n    target: HTMLElement\r\n  ): ScrollBarPart | null {\r\n    // Test the thumb.\r\n    if (scrollBar.thumbNode.contains(target)) {\r\n      return 'thumb';\r\n    }\r\n\r\n    // Test the track.\r\n    if (scrollBar.trackNode.contains(target)) {\r\n      return 'track';\r\n    }\r\n\r\n    // Test the decrement button.\r\n    if (scrollBar.decrementNode.contains(target)) {\r\n      return 'decrement';\r\n    }\r\n\r\n    // Test the increment button.\r\n    if (scrollBar.incrementNode.contains(target)) {\r\n      return 'increment';\r\n    }\r\n\r\n    // Indicate no match.\r\n    return null;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { each, empty, IIterator, once } from '@lumino/algorithm';\r\n\r\nimport { MessageLoop } from '@lumino/messaging';\r\n\r\nimport { Layout } from './layout';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A concrete layout implementation which holds a single widget.\r\n *\r\n * #### Notes\r\n * This class is useful for creating simple container widgets which\r\n * hold a single child. The child should be positioned with CSS.\r\n */\r\nexport class SingletonLayout extends Layout {\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   */\r\n  dispose(): void {\r\n    if (this._widget) {\r\n      let widget = this._widget;\r\n      this._widget = null;\r\n      widget.dispose();\r\n    }\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Get the child widget for the layout.\r\n   */\r\n  get widget(): Widget | null {\r\n    return this._widget;\r\n  }\r\n\r\n  /**\r\n   * Set the child widget for the layout.\r\n   *\r\n   * #### Notes\r\n   * Setting the child widget will cause the old child widget to be\r\n   * automatically disposed. If that is not desired, set the parent\r\n   * of the old child to `null` before assigning a new child.\r\n   */\r\n  set widget(widget: Widget | null) {\r\n    // Remove the widget from its current parent. This is a no-op\r\n    // if the widget's parent is already the layout parent widget.\r\n    if (widget) {\r\n      widget.parent = this.parent;\r\n    }\r\n\r\n    // Bail early if the widget does not change.\r\n    if (this._widget === widget) {\r\n      return;\r\n    }\r\n\r\n    // Dispose of the old child widget.\r\n    if (this._widget) {\r\n      this._widget.dispose();\r\n    }\r\n\r\n    // Update the internal widget.\r\n    this._widget = widget;\r\n\r\n    // Attach the new child widget if needed.\r\n    if (this.parent && widget) {\r\n      this.attachWidget(widget);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create an iterator over the widgets in the layout.\r\n   *\r\n   * @returns A new iterator over the widgets in the layout.\r\n   */\r\n  iter(): IIterator<Widget> {\r\n    return this._widget ? once(this._widget) : empty<Widget>();\r\n  }\r\n\r\n  /**\r\n   * Remove a widget from the layout.\r\n   *\r\n   * @param widget - The widget to remove from the layout.\r\n   *\r\n   * #### Notes\r\n   * A widget is automatically removed from the layout when its `parent`\r\n   * is set to `null`. This method should only be invoked directly when\r\n   * removing a widget from a layout which has yet to be installed on a\r\n   * parent widget.\r\n   *\r\n   * This method does *not* modify the widget's `parent`.\r\n   */\r\n  removeWidget(widget: Widget): void {\r\n    // Bail early if the widget does not exist in the layout.\r\n    if (this._widget !== widget) {\r\n      return;\r\n    }\r\n\r\n    // Clear the internal widget.\r\n    this._widget = null;\r\n\r\n    // If the layout is parented, detach the widget from the DOM.\r\n    if (this.parent) {\r\n      this.detachWidget(widget);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Perform layout initialization which requires the parent widget.\r\n   */\r\n  protected init(): void {\r\n    super.init();\r\n    each(this, widget => {\r\n      this.attachWidget(widget);\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Attach a widget to the parent's DOM node.\r\n   *\r\n   * @param index - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to attach to the parent.\r\n   *\r\n   * #### Notes\r\n   * This method is called automatically by the single layout at the\r\n   * appropriate time. It should not be called directly by user code.\r\n   *\r\n   * The default implementation adds the widgets's node to the parent's\r\n   * node at the proper location, and sends the appropriate attach\r\n   * messages to the widget if the parent is attached to the DOM.\r\n   *\r\n   * Subclasses may reimplement this method to control how the widget's\r\n   * node is added to the parent's node.\r\n   */\r\n  protected attachWidget(widget: Widget): void {\r\n    // Send a `'before-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    }\r\n\r\n    // Add the widget's node to the parent.\r\n    this.parent!.node.appendChild(widget.node);\r\n\r\n    // Send an `'after-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Detach a widget from the parent's DOM node.\r\n   *\r\n   * @param widget - The widget to detach from the parent.\r\n   *\r\n   * #### Notes\r\n   * This method is called automatically by the single layout at the\r\n   * appropriate time. It should not be called directly by user code.\r\n   *\r\n   * The default implementation removes the widget's node from the\r\n   * parent's node, and sends the appropriate detach messages to the\r\n   * widget if the parent is attached to the DOM.\r\n   *\r\n   * Subclasses may reimplement this method to control how the widget's\r\n   * node is removed from the parent's node.\r\n   */\r\n  protected detachWidget(widget: Widget): void {\r\n    // Send a `'before-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    }\r\n\r\n    // Remove the widget's node from the parent.\r\n    this.parent!.node.removeChild(widget.node);\r\n\r\n    // Send an `'after-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n    }\r\n  }\r\n\r\n  private _widget: Widget | null = null;\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ArrayExt, each } from '@lumino/algorithm';\r\n\r\nimport { ElementExt } from '@lumino/domutils';\r\n\r\nimport { Message, MessageLoop } from '@lumino/messaging';\r\n\r\nimport { Layout, LayoutItem } from './layout';\r\n\r\nimport { PanelLayout } from './panellayout';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A layout where visible widgets are stacked atop one another.\r\n *\r\n * #### Notes\r\n * The Z-order of the visible widgets follows their layout order.\r\n */\r\nexport class StackedLayout extends PanelLayout {\r\n  constructor(options: StackedLayout.IOptions = {}) {\r\n    super(options);\r\n    this._hiddenMode =\r\n      options.hiddenMode !== undefined\r\n        ? options.hiddenMode\r\n        : Widget.HiddenMode.Display;\r\n  }\r\n\r\n  /**\r\n   * The method for hiding widgets.\r\n   *\r\n   * #### Notes\r\n   * If there is only one child widget, `Display` hiding mode will be used\r\n   * regardless of this setting.\r\n   */\r\n  get hiddenMode(): Widget.HiddenMode {\r\n    return this._hiddenMode;\r\n  }\r\n\r\n  /**\r\n   * Set the method for hiding widgets.\r\n   *\r\n   * #### Notes\r\n   * If there is only one child widget, `Display` hiding mode will be used\r\n   * regardless of this setting.\r\n   */\r\n  set hiddenMode(v: Widget.HiddenMode) {\r\n    if (this._hiddenMode === v) {\r\n      return;\r\n    }\r\n    this._hiddenMode = v;\r\n    if (this.widgets.length > 1) {\r\n      this.widgets.forEach(w => {\r\n        w.hiddenMode = this._hiddenMode;\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Dispose of the resources held by the layout.\r\n   */\r\n  dispose(): void {\r\n    // Dispose of the layout items.\r\n    each(this._items, item => {\r\n      item.dispose();\r\n    });\r\n\r\n    // Clear the layout state.\r\n    this._box = null;\r\n    this._items.length = 0;\r\n\r\n    // Dispose of the rest of the layout.\r\n    super.dispose();\r\n  }\r\n\r\n  /**\r\n   * Attach a widget to the parent's DOM node.\r\n   *\r\n   * @param index - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to attach to the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected attachWidget(index: number, widget: Widget): void {\r\n    // Using transform create an additional layer in the pixel pipeline\r\n    // to limit the number of layer, it is set only if there is more than one widget.\r\n    if (\r\n      this._hiddenMode === Widget.HiddenMode.Scale &&\r\n      this._items.length > 0\r\n    ) {\r\n      if (this._items.length === 1) {\r\n        this.widgets[0].hiddenMode = Widget.HiddenMode.Scale;\r\n      }\r\n      widget.hiddenMode = Widget.HiddenMode.Scale;\r\n    } else {\r\n      widget.hiddenMode = Widget.HiddenMode.Display;\r\n    }\r\n\r\n    // Create and add a new layout item for the widget.\r\n    ArrayExt.insert(this._items, index, new LayoutItem(widget));\r\n\r\n    // Send a `'before-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeAttach);\r\n    }\r\n\r\n    // Add the widget's node to the parent.\r\n    this.parent!.node.appendChild(widget.node);\r\n\r\n    // Send an `'after-attach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterAttach);\r\n    }\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * Move a widget in the parent's DOM node.\r\n   *\r\n   * @param fromIndex - The previous index of the widget in the layout.\r\n   *\r\n   * @param toIndex - The current index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to move in the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected moveWidget(\r\n    fromIndex: number,\r\n    toIndex: number,\r\n    widget: Widget\r\n  ): void {\r\n    // Move the layout item for the widget.\r\n    ArrayExt.move(this._items, fromIndex, toIndex);\r\n\r\n    // Post an update request for the parent widget.\r\n    this.parent!.update();\r\n  }\r\n\r\n  /**\r\n   * Detach a widget from the parent's DOM node.\r\n   *\r\n   * @param index - The previous index of the widget in the layout.\r\n   *\r\n   * @param widget - The widget to detach from the parent.\r\n   *\r\n   * #### Notes\r\n   * This is a reimplementation of the superclass method.\r\n   */\r\n  protected detachWidget(index: number, widget: Widget): void {\r\n    // Remove the layout item for the widget.\r\n    let item = ArrayExt.removeAt(this._items, index);\r\n\r\n    // Send a `'before-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.BeforeDetach);\r\n    }\r\n\r\n    // Remove the widget's node from the parent.\r\n    this.parent!.node.removeChild(widget.node);\r\n\r\n    // Send an `'after-detach'` message if the parent is attached.\r\n    if (this.parent!.isAttached) {\r\n      MessageLoop.sendMessage(widget, Widget.Msg.AfterDetach);\r\n    }\r\n\r\n    // Reset the z-index for the widget.\r\n    item!.widget.node.style.zIndex = '';\r\n\r\n    // Reset the hidden mode for the widget.\r\n    if (this._hiddenMode === Widget.HiddenMode.Scale) {\r\n      widget.hiddenMode = Widget.HiddenMode.Display;\r\n\r\n      // Reset the hidden mode for the first widget if necessary.\r\n      if (this._items.length === 1) {\r\n        this._items[0].widget.hiddenMode = Widget.HiddenMode.Display;\r\n      }\r\n    }\r\n\r\n    // Dispose of the layout item.\r\n    item!.dispose();\r\n\r\n    // Post a fit request for the parent widget.\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-show'` message.\r\n   */\r\n  protected onBeforeShow(msg: Message): void {\r\n    super.onBeforeShow(msg);\r\n    this.parent!.update();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'before-attach'` message.\r\n   */\r\n  protected onBeforeAttach(msg: Message): void {\r\n    super.onBeforeAttach(msg);\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-shown'` message.\r\n   */\r\n  protected onChildShown(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-hidden'` message.\r\n   */\r\n  protected onChildHidden(msg: Widget.ChildMessage): void {\r\n    this.parent!.fit();\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'resize'` message.\r\n   */\r\n  protected onResize(msg: Widget.ResizeMessage): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(msg.width, msg.height);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on an `'update-request'` message.\r\n   */\r\n  protected onUpdateRequest(msg: Message): void {\r\n    if (this.parent!.isVisible) {\r\n      this._update(-1, -1);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'fit-request'` message.\r\n   */\r\n  protected onFitRequest(msg: Message): void {\r\n    if (this.parent!.isAttached) {\r\n      this._fit();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Fit the layout to the total size required by the widgets.\r\n   */\r\n  private _fit(): void {\r\n    // Set up the computed minimum size.\r\n    let minW = 0;\r\n    let minH = 0;\r\n\r\n    // Update the computed minimum size.\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      // Fetch the item.\r\n      let item = this._items[i];\r\n\r\n      // Ignore hidden items.\r\n      if (item.isHidden) {\r\n        continue;\r\n      }\r\n\r\n      // Update the size limits for the item.\r\n      item.fit();\r\n\r\n      // Update the computed minimum size.\r\n      minW = Math.max(minW, item.minWidth);\r\n      minH = Math.max(minH, item.minHeight);\r\n    }\r\n\r\n    // Update the box sizing and add it to the computed min size.\r\n    let box = (this._box = ElementExt.boxSizing(this.parent!.node));\r\n    minW += box.horizontalSum;\r\n    minH += box.verticalSum;\r\n\r\n    // Update the parent's min size constraints.\r\n    let style = this.parent!.node.style;\r\n    style.minWidth = `${minW}px`;\r\n    style.minHeight = `${minH}px`;\r\n\r\n    // Set the dirty flag to ensure only a single update occurs.\r\n    this._dirty = true;\r\n\r\n    // Notify the ancestor that it should fit immediately. This may\r\n    // cause a resize of the parent, fulfilling the required update.\r\n    if (this.parent!.parent) {\r\n      MessageLoop.sendMessage(this.parent!.parent!, Widget.Msg.FitRequest);\r\n    }\r\n\r\n    // If the dirty flag is still set, the parent was not resized.\r\n    // Trigger the required update on the parent widget immediately.\r\n    if (this._dirty) {\r\n      MessageLoop.sendMessage(this.parent!, Widget.Msg.UpdateRequest);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Update the layout position and size of the widgets.\r\n   *\r\n   * The parent offset dimensions should be `-1` if unknown.\r\n   */\r\n  private _update(offsetWidth: number, offsetHeight: number): void {\r\n    // Clear the dirty flag to indicate the update occurred.\r\n    this._dirty = false;\r\n\r\n    // Compute the visible item count.\r\n    let nVisible = 0;\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      nVisible += +!this._items[i].isHidden;\r\n    }\r\n\r\n    // Bail early if there are no visible items to layout.\r\n    if (nVisible === 0) {\r\n      return;\r\n    }\r\n\r\n    // Measure the parent if the offset dimensions are unknown.\r\n    if (offsetWidth < 0) {\r\n      offsetWidth = this.parent!.node.offsetWidth;\r\n    }\r\n    if (offsetHeight < 0) {\r\n      offsetHeight = this.parent!.node.offsetHeight;\r\n    }\r\n\r\n    // Ensure the parent box sizing data is computed.\r\n    if (!this._box) {\r\n      this._box = ElementExt.boxSizing(this.parent!.node);\r\n    }\r\n\r\n    // Compute the actual layout bounds adjusted for border and padding.\r\n    let top = this._box.paddingTop;\r\n    let left = this._box.paddingLeft;\r\n    let width = offsetWidth - this._box.horizontalSum;\r\n    let height = offsetHeight - this._box.verticalSum;\r\n\r\n    // Update the widget stacking order and layout geometry.\r\n    for (let i = 0, n = this._items.length; i < n; ++i) {\r\n      // Fetch the item.\r\n      let item = this._items[i];\r\n\r\n      // Ignore hidden items.\r\n      if (item.isHidden) {\r\n        continue;\r\n      }\r\n\r\n      // Set the z-index for the widget.\r\n      item.widget.node.style.zIndex = `${i}`;\r\n\r\n      // Update the item geometry.\r\n      item.update(left, top, width, height);\r\n    }\r\n  }\r\n\r\n  private _dirty = false;\r\n  private _items: LayoutItem[] = [];\r\n  private _box: ElementExt.IBoxSizing | null = null;\r\n  private _hiddenMode: Widget.HiddenMode;\r\n}\r\n\r\n/**\r\n * The namespace for the `StackedLayout` class statics.\r\n */\r\nexport namespace StackedLayout {\r\n  /**\r\n   * An options object for initializing a stacked layout.\r\n   */\r\n  export interface IOptions extends Layout.IOptions {\r\n    /**\r\n     * The method for hiding widgets.\r\n     *\r\n     * The default is `Widget.HiddenMode.Display`.\r\n     */\r\n    hiddenMode?: Widget.HiddenMode;\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport { Panel } from './panel';\r\n\r\nimport { StackedLayout } from './stackedlayout';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A panel where visible widgets are stacked atop one another.\r\n *\r\n * #### Notes\r\n * This class provides a convenience wrapper around a [[StackedLayout]].\r\n */\r\nexport class StackedPanel extends Panel {\r\n  /**\r\n   * Construct a new stacked panel.\r\n   *\r\n   * @param options - The options for initializing the panel.\r\n   */\r\n  constructor(options: StackedPanel.IOptions = {}) {\r\n    super({ layout: Private.createLayout(options) });\r\n    this.addClass('lm-StackedPanel');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-StackedPanel');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * The method for hiding widgets.\r\n   *\r\n   * #### Notes\r\n   * If there is only one child widget, `Display` hiding mode will be used\r\n   * regardless of this setting.\r\n   */\r\n  get hiddenMode(): Widget.HiddenMode {\r\n    return (this.layout as StackedLayout).hiddenMode;\r\n  }\r\n\r\n  /**\r\n   * Set the method for hiding widgets.\r\n   *\r\n   * #### Notes\r\n   * If there is only one child widget, `Display` hiding mode will be used\r\n   * regardless of this setting.\r\n   */\r\n  set hiddenMode(v: Widget.HiddenMode) {\r\n    (this.layout as StackedLayout).hiddenMode = v;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when a widget is removed from a stacked panel.\r\n   */\r\n  get widgetRemoved(): ISignal<this, Widget> {\r\n    return this._widgetRemoved;\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-added'` message.\r\n   */\r\n  protected onChildAdded(msg: Widget.ChildMessage): void {\r\n    msg.child.addClass('lm-StackedPanel-child');\r\n    /* <DEPRECATED> */\r\n    msg.child.addClass('p-StackedPanel-child');\r\n    /* </DEPRECATED> */\r\n  }\r\n\r\n  /**\r\n   * A message handler invoked on a `'child-removed'` message.\r\n   */\r\n  protected onChildRemoved(msg: Widget.ChildMessage): void {\r\n    msg.child.removeClass('lm-StackedPanel-child');\r\n    /* <DEPRECATED> */\r\n    msg.child.removeClass('p-StackedPanel-child');\r\n    /* </DEPRECATED> */\r\n    this._widgetRemoved.emit(msg.child);\r\n  }\r\n\r\n  private _widgetRemoved = new Signal<this, Widget>(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `StackedPanel` class statics.\r\n */\r\nexport namespace StackedPanel {\r\n  /**\r\n   * An options object for creating a stacked panel.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The stacked layout to use for the stacked panel.\r\n     *\r\n     * The default is a new `StackedLayout`.\r\n     */\r\n    layout?: StackedLayout;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Create a stacked layout for the given panel options.\r\n   */\r\n  export function createLayout(options: StackedPanel.IOptions): StackedLayout {\r\n    return options.layout || new StackedLayout();\r\n  }\r\n}\r\n","// Copyright (c) Jupyter Development Team.\r\n// Distributed under the terms of the Modified BSD License.\r\n/*-----------------------------------------------------------------------------\r\n| Copyright (c) 2014-2017, PhosphorJS Contributors\r\n|\r\n| Distributed under the terms of the BSD 3-Clause License.\r\n|\r\n| The full license is in the file LICENSE, distributed with this software.\r\n|----------------------------------------------------------------------------*/\r\nimport { Platform } from '@lumino/domutils';\r\n\r\nimport { MessageLoop } from '@lumino/messaging';\r\n\r\nimport { ISignal, Signal } from '@lumino/signaling';\r\n\r\nimport { BoxLayout } from './boxlayout';\r\n\r\nimport { StackedPanel } from './stackedpanel';\r\n\r\nimport { TabBar } from './tabbar';\r\n\r\nimport { Widget } from './widget';\r\n\r\n/**\r\n * A widget which combines a `TabBar` and a `StackedPanel`.\r\n *\r\n * #### Notes\r\n * This is a simple panel which handles the common case of a tab bar\r\n * placed next to a content area. The selected tab controls the widget\r\n * which is shown in the content area.\r\n *\r\n * For use cases which require more control than is provided by this\r\n * panel, the `TabBar` widget may be used independently.\r\n */\r\nexport class TabPanel extends Widget {\r\n  /**\r\n   * Construct a new tab panel.\r\n   *\r\n   * @param options - The options for initializing the tab panel.\r\n   */\r\n  constructor(options: TabPanel.IOptions = {}) {\r\n    super();\r\n    this.addClass('lm-TabPanel');\r\n    /* <DEPRECATED> */\r\n    this.addClass('p-TabPanel');\r\n    /* </DEPRECATED> */\r\n\r\n    // Create the tab bar and stacked panel.\r\n    this.tabBar = new TabBar<Widget>(options);\r\n    this.tabBar.addClass('lm-TabPanel-tabBar');\r\n    this.stackedPanel = new StackedPanel();\r\n    this.stackedPanel.addClass('lm-TabPanel-stackedPanel');\r\n    /* <DEPRECATED> */\r\n    this.tabBar.addClass('p-TabPanel-tabBar');\r\n    this.stackedPanel.addClass('p-TabPanel-stackedPanel');\r\n    /* </DEPRECATED> */\r\n\r\n    // Connect the tab bar signal handlers.\r\n    this.tabBar.tabMoved.connect(this._onTabMoved, this);\r\n    this.tabBar.currentChanged.connect(this._onCurrentChanged, this);\r\n    this.tabBar.tabCloseRequested.connect(this._onTabCloseRequested, this);\r\n    this.tabBar.tabActivateRequested.connect(\r\n      this._onTabActivateRequested,\r\n      this\r\n    );\r\n    this.tabBar.addRequested.connect(this._onTabAddRequested, this);\r\n\r\n    // Connect the stacked panel signal handlers.\r\n    this.stackedPanel.widgetRemoved.connect(this._onWidgetRemoved, this);\r\n\r\n    // Get the data related to the placement.\r\n    this._tabPlacement = options.tabPlacement || 'top';\r\n    let direction = Private.directionFromPlacement(this._tabPlacement);\r\n    let orientation = Private.orientationFromPlacement(this._tabPlacement);\r\n\r\n    // Configure the tab bar for the placement.\r\n    this.tabBar.orientation = orientation;\r\n    this.tabBar.dataset['placement'] = this._tabPlacement;\r\n\r\n    // Create the box layout.\r\n    let layout = new BoxLayout({ direction, spacing: 0 });\r\n\r\n    // Set the stretch factors for the child widgets.\r\n    BoxLayout.setStretch(this.tabBar, 0);\r\n    BoxLayout.setStretch(this.stackedPanel, 1);\r\n\r\n    // Add the child widgets to the layout.\r\n    layout.addWidget(this.tabBar);\r\n    layout.addWidget(this.stackedPanel);\r\n\r\n    // Install the layout on the tab panel.\r\n    this.layout = layout;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the current tab is changed.\r\n   *\r\n   * #### Notes\r\n   * This signal is emitted when the currently selected tab is changed\r\n   * either through user or programmatic interaction.\r\n   *\r\n   * Notably, this signal is not emitted when the index of the current\r\n   * tab changes due to tabs being inserted, removed, or moved. It is\r\n   * only emitted when the actual current tab node is changed.\r\n   */\r\n  get currentChanged(): ISignal<this, TabPanel.ICurrentChangedArgs> {\r\n    return this._currentChanged;\r\n  }\r\n\r\n  /**\r\n   * Get the index of the currently selected tab.\r\n   *\r\n   * #### Notes\r\n   * This will be `-1` if no tab is selected.\r\n   */\r\n  get currentIndex(): number {\r\n    return this.tabBar.currentIndex;\r\n  }\r\n\r\n  /**\r\n   * Set the index of the currently selected tab.\r\n   *\r\n   * #### Notes\r\n   * If the index is out of range, it will be set to `-1`.\r\n   */\r\n  set currentIndex(value: number) {\r\n    this.tabBar.currentIndex = value;\r\n  }\r\n\r\n  /**\r\n   * Get the currently selected widget.\r\n   *\r\n   * #### Notes\r\n   * This will be `null` if there is no selected tab.\r\n   */\r\n  get currentWidget(): Widget | null {\r\n    let title = this.tabBar.currentTitle;\r\n    return title ? title.owner : null;\r\n  }\r\n\r\n  /**\r\n   * Set the currently selected widget.\r\n   *\r\n   * #### Notes\r\n   * If the widget is not in the panel, it will be set to `null`.\r\n   */\r\n  set currentWidget(value: Widget | null) {\r\n    this.tabBar.currentTitle = value ? value.title : null;\r\n  }\r\n\r\n  /**\r\n   * Get the whether the tabs are movable by the user.\r\n   *\r\n   * #### Notes\r\n   * Tabs can always be moved programmatically.\r\n   */\r\n  get tabsMovable(): boolean {\r\n    return this.tabBar.tabsMovable;\r\n  }\r\n\r\n  /**\r\n   * Set the whether the tabs are movable by the user.\r\n   *\r\n   * #### Notes\r\n   * Tabs can always be moved programmatically.\r\n   */\r\n  set tabsMovable(value: boolean) {\r\n    this.tabBar.tabsMovable = value;\r\n  }\r\n\r\n  /**\r\n   * Get the whether the add button is enabled.\r\n   *\r\n   */\r\n  get addButtonEnabled(): boolean {\r\n    return this.tabBar.addButtonEnabled;\r\n  }\r\n\r\n  /**\r\n   * Set the whether the add button is enabled.\r\n   *\r\n   */\r\n  set addButtonEnabled(value: boolean) {\r\n    this.tabBar.addButtonEnabled = value;\r\n  }\r\n\r\n  /**\r\n   * Get the tab placement for the tab panel.\r\n   *\r\n   * #### Notes\r\n   * This controls the position of the tab bar relative to the content.\r\n   */\r\n  get tabPlacement(): TabPanel.TabPlacement {\r\n    return this._tabPlacement;\r\n  }\r\n\r\n  /**\r\n   * Set the tab placement for the tab panel.\r\n   *\r\n   * #### Notes\r\n   * This controls the position of the tab bar relative to the content.\r\n   */\r\n  set tabPlacement(value: TabPanel.TabPlacement) {\r\n    // Bail if the placement does not change.\r\n    if (this._tabPlacement === value) {\r\n      return;\r\n    }\r\n\r\n    // Update the internal value.\r\n    this._tabPlacement = value;\r\n\r\n    // Get the values related to the placement.\r\n    let direction = Private.directionFromPlacement(value);\r\n    let orientation = Private.orientationFromPlacement(value);\r\n\r\n    // Configure the tab bar for the placement.\r\n    this.tabBar.orientation = orientation;\r\n    this.tabBar.dataset['placement'] = value;\r\n\r\n    // Update the layout direction.\r\n    (this.layout as BoxLayout).direction = direction;\r\n  }\r\n\r\n  /**\r\n   * A signal emitted when the add button on a tab bar is clicked.\r\n   *\r\n   */\r\n  get addRequested(): ISignal<this, TabBar<Widget>> {\r\n    return this._addRequested;\r\n  }\r\n\r\n  /**\r\n   * The tab bar used by the tab panel.\r\n   *\r\n   * #### Notes\r\n   * Modifying the tab bar directly can lead to undefined behavior.\r\n   */\r\n  readonly tabBar: TabBar<Widget>;\r\n\r\n  /**\r\n   * The stacked panel used by the tab panel.\r\n   *\r\n   * #### Notes\r\n   * Modifying the panel directly can lead to undefined behavior.\r\n   */\r\n  readonly stackedPanel: StackedPanel;\r\n\r\n  /**\r\n   * A read-only array of the widgets in the panel.\r\n   */\r\n  get widgets(): ReadonlyArray<Widget> {\r\n    return this.stackedPanel.widgets;\r\n  }\r\n\r\n  /**\r\n   * Add a widget to the end of the tab panel.\r\n   *\r\n   * @param widget - The widget to add to the tab panel.\r\n   *\r\n   * #### Notes\r\n   * If the widget is already contained in the panel, it will be moved.\r\n   *\r\n   * The widget's `title` is used to populate the tab.\r\n   */\r\n  addWidget(widget: Widget): void {\r\n    this.insertWidget(this.widgets.length, widget);\r\n  }\r\n\r\n  /**\r\n   * Insert a widget into the tab panel at a specified index.\r\n   *\r\n   * @param index - The index at which to insert the widget.\r\n   *\r\n   * @param widget - The widget to insert into to the tab panel.\r\n   *\r\n   * #### Notes\r\n   * If the widget is already contained in the panel, it will be moved.\r\n   *\r\n   * The widget's `title` is used to populate the tab.\r\n   */\r\n  insertWidget(index: number, widget: Widget): void {\r\n    if (widget !== this.currentWidget) {\r\n      widget.hide();\r\n    }\r\n    this.stackedPanel.insertWidget(index, widget);\r\n    this.tabBar.insertTab(index, widget.title);\r\n\r\n    widget.node.setAttribute('role', 'tabpanel');\r\n\r\n    let renderer = this.tabBar.renderer;\r\n    if (renderer instanceof TabBar.Renderer) {\r\n      let tabId = renderer.createTabKey({\r\n        title: widget.title,\r\n        current: false,\r\n        zIndex: 0\r\n      });\r\n      widget.node.setAttribute('aria-labelledby', tabId);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `currentChanged` signal from the tab bar.\r\n   */\r\n  private _onCurrentChanged(\r\n    sender: TabBar<Widget>,\r\n    args: TabBar.ICurrentChangedArgs<Widget>\r\n  ): void {\r\n    // Extract the previous and current title from the args.\r\n    let { previousIndex, previousTitle, currentIndex, currentTitle } = args;\r\n\r\n    // Extract the widgets from the titles.\r\n    let previousWidget = previousTitle ? previousTitle.owner : null;\r\n    let currentWidget = currentTitle ? currentTitle.owner : null;\r\n\r\n    // Hide the previous widget.\r\n    if (previousWidget) {\r\n      previousWidget.hide();\r\n    }\r\n\r\n    // Show the current widget.\r\n    if (currentWidget) {\r\n      currentWidget.show();\r\n    }\r\n\r\n    // Emit the `currentChanged` signal for the tab panel.\r\n    this._currentChanged.emit({\r\n      previousIndex,\r\n      previousWidget,\r\n      currentIndex,\r\n      currentWidget\r\n    });\r\n\r\n    // Flush the message loop on IE and Edge to prevent flicker.\r\n    if (Platform.IS_EDGE || Platform.IS_IE) {\r\n      MessageLoop.flush();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle the `tabAddRequested` signal from the tab bar.\r\n   */\r\n  private _onTabAddRequested(sender: TabBar<Widget>, args: void): void {\r\n    this._addRequested.emit(sender);\r\n  }\r\n\r\n  /**\r\n   * Handle the `tabActivateRequested` signal from the tab bar.\r\n   */\r\n  private _onTabActivateRequested(\r\n    sender: TabBar<Widget>,\r\n    args: TabBar.ITabActivateRequestedArgs<Widget>\r\n  ): void {\r\n    args.title.owner.activate();\r\n  }\r\n\r\n  /**\r\n   * Handle the `tabCloseRequested` signal from the tab bar.\r\n   */\r\n  private _onTabCloseRequested(\r\n    sender: TabBar<Widget>,\r\n    args: TabBar.ITabCloseRequestedArgs<Widget>\r\n  ): void {\r\n    args.title.owner.close();\r\n  }\r\n\r\n  /**\r\n   * Handle the `tabMoved` signal from the tab bar.\r\n   */\r\n  private _onTabMoved(\r\n    sender: TabBar<Widget>,\r\n    args: TabBar.ITabMovedArgs<Widget>\r\n  ): void {\r\n    this.stackedPanel.insertWidget(args.toIndex, args.title.owner);\r\n  }\r\n\r\n  /**\r\n   * Handle the `widgetRemoved` signal from the stacked panel.\r\n   */\r\n  private _onWidgetRemoved(sender: StackedPanel, widget: Widget): void {\r\n    widget.node.removeAttribute('role');\r\n    widget.node.removeAttribute('aria-labelledby');\r\n    this.tabBar.removeTab(widget.title);\r\n  }\r\n\r\n  private _tabPlacement: TabPanel.TabPlacement;\r\n  private _currentChanged = new Signal<this, TabPanel.ICurrentChangedArgs>(\r\n    this\r\n  );\r\n\r\n  private _addRequested = new Signal<this, TabBar<Widget>>(this);\r\n}\r\n\r\n/**\r\n * The namespace for the `TabPanel` class statics.\r\n */\r\nexport namespace TabPanel {\r\n  /**\r\n   * A type alias for tab placement in a tab bar.\r\n   */\r\n  export type TabPlacement =\r\n    | /**\r\n     * The tabs are placed as a row above the content.\r\n     */\r\n    'top'\r\n\r\n    /**\r\n     * The tabs are placed as a column to the left of the content.\r\n     */\r\n    | 'left'\r\n\r\n    /**\r\n     * The tabs are placed as a column to the right of the content.\r\n     */\r\n    | 'right'\r\n\r\n    /**\r\n     * The tabs are placed as a row below the content.\r\n     */\r\n    | 'bottom';\r\n\r\n  /**\r\n   * An options object for initializing a tab panel.\r\n   */\r\n  export interface IOptions {\r\n    /**\r\n     * The document to use with the tab panel.\r\n     *\r\n     * The default is the global `document` instance.\r\n     */\r\n    document?: Document | ShadowRoot;\r\n\r\n    /**\r\n     * Whether the tabs are movable by the user.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    tabsMovable?: boolean;\r\n\r\n    /**\r\n     * Whether the button to add new tabs is enabled.\r\n     *\r\n     * The default is `false`.\r\n     */\r\n    addButtonEnabled?: boolean;\r\n\r\n    /**\r\n     * The placement of the tab bar relative to the content.\r\n     *\r\n     * The default is `'top'`.\r\n     */\r\n    tabPlacement?: TabPlacement;\r\n\r\n    /**\r\n     * The renderer for the panel's tab bar.\r\n     *\r\n     * The default is a shared renderer instance.\r\n     */\r\n    renderer?: TabBar.IRenderer<Widget>;\r\n  }\r\n\r\n  /**\r\n   * The arguments object for the `currentChanged` signal.\r\n   */\r\n  export interface ICurrentChangedArgs {\r\n    /**\r\n     * The previously selected index.\r\n     */\r\n    previousIndex: number;\r\n\r\n    /**\r\n     * The previously selected widget.\r\n     */\r\n    previousWidget: Widget | null;\r\n\r\n    /**\r\n     * The currently selected index.\r\n     */\r\n    currentIndex: number;\r\n\r\n    /**\r\n     * The currently selected widget.\r\n     */\r\n    currentWidget: Widget | null;\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for the module implementation details.\r\n */\r\nnamespace Private {\r\n  /**\r\n   * Convert a tab placement to tab bar orientation.\r\n   */\r\n  export function orientationFromPlacement(\r\n    plc: TabPanel.TabPlacement\r\n  ): TabBar.Orientation {\r\n    return placementToOrientationMap[plc];\r\n  }\r\n\r\n  /**\r\n   * Convert a tab placement to a box layout direction.\r\n   */\r\n  export function directionFromPlacement(\r\n    plc: TabPanel.TabPlacement\r\n  ): BoxLayout.Direction {\r\n    return placementToDirectionMap[plc];\r\n  }\r\n\r\n  /**\r\n   * A mapping of tab placement to tab bar orientation.\r\n   */\r\n  const placementToOrientationMap: { [key: string]: TabBar.Orientation } = {\r\n    top: 'horizontal',\r\n    left: 'vertical',\r\n    right: 'vertical',\r\n    bottom: 'horizontal'\r\n  };\r\n\r\n  /**\r\n   * A mapping of tab placement to box layout direction.\r\n   */\r\n  const placementToDirectionMap: { [key: string]: BoxLayout.Direction } = {\r\n    top: 'top-to-bottom',\r\n    left: 'left-to-right',\r\n    right: 'right-to-left',\r\n    bottom: 'bottom-to-top'\r\n  };\r\n}\r\n","import { Widget } from \"@lumino/widgets\";\r\nimport { Message } from \"@lumino/messaging\";\r\nimport { HPCCElement } from \"../../common\";\r\n\r\nexport class WidgetAdapter extends Widget {\r\n\r\n    constructor(protected _host: HPCCElement, node: HTMLElement) {\r\n        super({ node });\r\n        this.addClass(\"hpcc-LuminoAdapter\");\r\n    }\r\n\r\n    protected onCloseRequest(msg: Message): void {\r\n        const cancelled = !this._host.$emit(\"closeRequest\", this.node);\r\n        if (!cancelled) {\r\n            super.onCloseRequest(msg);\r\n        }\r\n    }\r\n}\r\n","import { css } from \"../../common\";\r\n\r\nexport const widget = /*#__PURE__*/ css`\r\n.lm-Widget {\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  overflow: hidden;\r\n  cursor: default;\r\n}\r\n\r\n.lm-Widget.lm-mod-hidden {\r\n  display: none !important;\r\n}\r\n`;\r\n\r\nexport const accordionpanel = /*#__PURE__*/ css`\r\n.lm-AccordionPanel[data-orientation='horizontal'] > .lm-AccordionPanel-title {\r\n    display: block;\r\n    transform-origin: top left;\r\n    transform: rotate(-90deg) translate(-100%);\r\n  }\r\n`;\r\n\r\nexport const commandpalette = /*#__PURE__*/ css`\r\n.lm-CommandPalette {\r\n  display: flex;\r\n  flex-direction: column;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.lm-CommandPalette-search {\r\n  flex: 0 0 auto;\r\n}\r\n\r\n.lm-CommandPalette-content {\r\n  flex: 1 1 auto;\r\n  margin: 0;\r\n  padding: 0;\r\n  min-height: 0;\r\n  overflow: auto;\r\n  list-style-type: none;\r\n}\r\n\r\n.lm-CommandPalette-header {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.lm-CommandPalette-item {\r\n  display: flex;\r\n  flex-direction: row;\r\n}\r\n\r\n.lm-CommandPalette-itemIcon {\r\n  flex: 0 0 auto;\r\n}\r\n\r\n.lm-CommandPalette-itemContent {\r\n  flex: 1 1 auto;\r\n  overflow: hidden;\r\n}\r\n\r\n.lm-CommandPalette-itemShortcut {\r\n  flex: 0 0 auto;\r\n}\r\n\r\n.lm-CommandPalette-itemLabel {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.lm-close-icon {\r\n  border: 1px solid transparent;\r\n  background-color: transparent;\r\n  position: absolute;\r\n  z-index: 1;\r\n  right: 3%;\r\n  top: 0;\r\n  bottom: 0;\r\n  margin: auto;\r\n  padding: 7px 0;\r\n  display: none;\r\n  vertical-align: middle;\r\n  outline: 0;\r\n  cursor: pointer;\r\n}\r\n.lm-close-icon:after {\r\n  content: 'X';\r\n  display: block;\r\n  width: 15px;\r\n  height: 15px;\r\n  text-align: center;\r\n  color: #000;\r\n  font-weight: normal;\r\n  font-size: 12px;\r\n  cursor: pointer;\r\n}\r\n`;\r\n\r\nexport const dockpanel = /*#__PURE__*/ css`\r\n.lm-DockPanel {\r\n  z-index: 0;\r\n}\r\n\r\n.lm-DockPanel-widget {\r\n  z-index: 0;\r\n}\r\n\r\n.lm-DockPanel-tabBar {\r\n  z-index: 1;\r\n}\r\n\r\n.lm-DockPanel-handle {\r\n  z-index: 2;\r\n}\r\n\r\n.lm-DockPanel-handle.lm-mod-hidden {\r\n  display: none !important;\r\n}\r\n\r\n.lm-DockPanel-handle:after {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  content: '';\r\n}\r\n\r\n.lm-DockPanel-handle[data-orientation='horizontal'] {\r\n  cursor: ew-resize;\r\n}\r\n\r\n.lm-DockPanel-handle[data-orientation='vertical'] {\r\n  cursor: ns-resize;\r\n}\r\n\r\n.lm-DockPanel-handle[data-orientation='horizontal']:after {\r\n  left: 50%;\r\n  min-width: 8px;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.lm-DockPanel-handle[data-orientation='vertical']:after {\r\n  top: 50%;\r\n  min-height: 8px;\r\n  transform: translateY(-50%);\r\n}\r\n\r\n.lm-DockPanel-overlay {\r\n  z-index: 3;\r\n  box-sizing: border-box;\r\n  pointer-events: none;\r\n}\r\n\r\n.lm-DockPanel-overlay.lm-mod-hidden {\r\n  display: none !important;\r\n}\r\n`;\r\n\r\nexport const menu = /*#__PURE__*/ css`\r\n.lm-Menu {\r\n  z-index: 10000;\r\n  position: absolute;\r\n  white-space: nowrap;\r\n  overflow-x: hidden;\r\n  overflow-y: auto;\r\n  outline: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.lm-Menu-content {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: table;\r\n  list-style-type: none;\r\n}\r\n\r\n.lm-Menu-item {\r\n  display: table-row;\r\n}\r\n\r\n.lm-Menu-item.lm-mod-hidden,\r\n.lm-Menu-item.lm-mod-collapsed {\r\n  display: none !important;\r\n}\r\n\r\n.lm-Menu-itemIcon,\r\n.lm-Menu-itemSubmenuIcon {\r\n  display: table-cell;\r\n  text-align: center;\r\n}\r\n\r\n.lm-Menu-itemLabel {\r\n  display: table-cell;\r\n  text-align: left;\r\n}\r\n\r\n.lm-Menu-itemShortcut {\r\n  display: table-cell;\r\n  text-align: right;\r\n}\r\n`;\r\n\r\nexport const menubar = /*#__PURE__*/ css`\r\n.lm-MenuBar {\r\n  outline: none;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.lm-MenuBar-content {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex-direction: row;\r\n  list-style-type: none;\r\n}\r\n\r\n.lm-MenuBar-item {\r\n  box-sizing: border-box;\r\n}\r\n\r\n.lm-MenuBar-itemIcon,\r\n.lm-MenuBar-itemLabel {\r\n  display: inline-block;\r\n}\r\n`;\r\n\r\nexport const scrollbar = /*#__PURE__*/ css`\r\n.lm-ScrollBar {\r\n  display: flex;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='horizontal'] {\r\n  flex-direction: row;\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='vertical'] {\r\n  flex-direction: column;\r\n}\r\n\r\n.lm-ScrollBar-button {\r\n  box-sizing: border-box;\r\n  flex: 0 0 auto;\r\n}\r\n\r\n.lm-ScrollBar-track {\r\n  box-sizing: border-box;\r\n  position: relative;\r\n  overflow: hidden;\r\n  flex: 1 1 auto;\r\n}\r\n\r\n.lm-ScrollBar-thumb {\r\n  box-sizing: border-box;\r\n  position: absolute;\r\n}\r\n`;\r\n\r\nexport const splitpanel = /*#__PURE__*/ css`\r\n.lm-SplitPanel-child {\r\n  z-index: 0;\r\n}\r\n\r\n.lm-SplitPanel-handle {\r\n  z-index: 1;\r\n}\r\n\r\n.lm-SplitPanel-handle.lm-mod-hidden {\r\n  display: none !important;\r\n}\r\n\r\n.lm-SplitPanel-handle:after {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  content: '';\r\n}\r\n\r\n.lm-SplitPanel[data-orientation='horizontal'] > .lm-SplitPanel-handle {\r\n  cursor: ew-resize;\r\n}\r\n\r\n.lm-SplitPanel[data-orientation='vertical'] > .lm-SplitPanel-handle {\r\n  cursor: ns-resize;\r\n}\r\n\r\n.lm-SplitPanel[data-orientation='horizontal'] > .lm-SplitPanel-handle:after {\r\n  left: 50%;\r\n  min-width: 8px;\r\n  transform: translateX(-50%);\r\n}\r\n\r\n.lm-SplitPanel[data-orientation='vertical'] > .lm-SplitPanel-handle:after {\r\n  top: 50%;\r\n  min-height: 8px;\r\n  transform: translateY(-50%);\r\n}\r\n`;\r\n\r\nexport const tabbar = /*#__PURE__*/ css`\r\n.lm-TabBar {\r\n  display: flex;\r\n  -webkit-user-select: none;\r\n  -moz-user-select: none;\r\n  -ms-user-select: none;\r\n  user-select: none;\r\n}\r\n\r\n.lm-TabBar[data-orientation='horizontal'] {\r\n  flex-direction: row;\r\n  align-items: flex-end;\r\n}\r\n\r\n.lm-TabBar[data-orientation='vertical'] {\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n}\r\n\r\n.lm-TabBar-content {\r\n  margin: 0;\r\n  padding: 0;\r\n  display: flex;\r\n  flex: 1 1 auto;\r\n  list-style-type: none;\r\n}\r\n\r\n.lm-TabBar[data-orientation='horizontal'] > .lm-TabBar-content {\r\n  flex-direction: row;\r\n}\r\n\r\n.lm-TabBar[data-orientation='vertical'] > .lm-TabBar-content {\r\n  flex-direction: column;\r\n}\r\n\r\n.lm-TabBar-tab {\r\n  display: flex;\r\n  flex-direction: row;\r\n  box-sizing: border-box;\r\n  overflow: hidden;\r\n  touch-action: none;\r\n}\r\n\r\n.lm-TabBar-tabIcon,\r\n.lm-TabBar-tabCloseIcon {\r\n  flex: 0 0 auto;\r\n}\r\n\r\n.lm-TabBar-tabLabel {\r\n  flex: 1 1 auto;\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n}\r\n\r\n.lm-TabBar-tabInput {\r\n  user-select: all;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.lm-TabBar-tab.lm-mod-hidden {\r\n  display: none !important;\r\n}\r\n\r\n.lm-TabBar-addButton.lm-mod-hidden {\r\n  display: none !important;\r\n}\r\n\r\n.lm-TabBar.lm-mod-dragging .lm-TabBar-tab {\r\n  position: relative;\r\n}\r\n\r\n.lm-TabBar.lm-mod-dragging[data-orientation='horizontal'] .lm-TabBar-tab {\r\n  left: 0;\r\n  transition: left 150ms ease;\r\n}\r\n\r\n.lm-TabBar.lm-mod-dragging[data-orientation='vertical'] .lm-TabBar-tab {\r\n  top: 0;\r\n  transition: top 150ms ease;\r\n}\r\n\r\n.lm-TabBar.lm-mod-dragging .lm-TabBar-tab.lm-mod-dragging {\r\n  transition: none;\r\n}\r\n\r\n.lm-TabBar-tabLabel .lm-TabBar-tabInput {\r\n  user-select: all;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  background: inherit;\r\n}\r\n`;\r\n\r\nexport const tabpanel = /*#__PURE__*/ css`\r\n.lm-TabPanel-tabBar {\r\n  z-index: 1;\r\n}\r\n\r\n.lm-TabPanel-stackedPanel {\r\n  z-index: 0;\r\n}\r\n`;\r\n\r\nexport const dragdrop = /*#__PURE__*/ css`\r\nbody.lm-mod-override-cursor * {\r\n  cursor: inherit !important;\r\n}\r\n\r\nhost:.lm-mod-override-cursor * {\r\n  cursor: inherit !important;\r\n}\r\n\r\nhost: > div.lm-mod-override-cursor * {\r\n  cursor: inherit !important;\r\n}\r\n`;\r\n\r\n// export const all = /*#__PURE__*/ css`\r\n// ${dragdrop}\r\n// ${widget}\r\n// ${accordionpanel}\r\n// ${commandpalette}\r\n// ${dockpanel}\r\n// ${menu}\r\n// ${menubar}\r\n// ${scrollbar}\r\n// ${splitpanel}\r\n// ${tabbar}\r\n// ${tabpanel}\r\n// `;\r\n","import { css } from \"../../common\";\r\n\r\nexport const accordionpanel = /*#__PURE__*/ css`\r\n.lm-AccordionPanel .lm-AccordionPanel-title {\r\n    box-sizing: border-box;\r\n    padding: 0px 10px;\r\n    background: #e5e5e5;\r\n    border: 1px solid #c0c0c0;\r\n    border-bottom: none;\r\n    font: 12px Helvetica, Arial, sans-serif;\r\n    min-height: 22px;\r\n    max-height: 22px;\r\n    min-width: 35px;\r\n    line-height: 20px;\r\n    margin: 0px;\r\n  }\r\n  \r\n  .lm-AccordionPanel .lm-AccordionPanel-title:focus,\r\n  .lm-AccordionPanel .lm-AccordionPanel-title:hover {\r\n    background: #dbdbdb;\r\n  }\r\n  \r\n  .lm-AccordionPanel .lm-AccordionPanel-title:focus,\r\n  .lm-AccordionPanel\r\n    .lm-AccordionPanel-title:last-of-type:focus:not(.lm-mod-expanded) {\r\n    border: 1px solid lightskyblue;\r\n  }\r\n  \r\n  .lm-AccordionPanel .lm-AccordionPanel-title:last-of-type:not(.lm-mod-expanded) {\r\n    border-bottom: 1px solid #c0c0c0;\r\n  }\r\n  \r\n  .lm-AccordionPanel\r\n    .lm-AccordionPanel-title.lm-mod-expanded\r\n    .lm-AccordionPanel-titleCollapser:before {\r\n    content: '\\f0d8';\r\n    font-family: FontAwesome;\r\n  }\r\n  \r\n  .lm-AccordionPanel\r\n    .lm-AccordionPanel-title\r\n    .lm-AccordionPanel-titleCollapser:before {\r\n    content: '\\f0d7';\r\n    font-family: FontAwesome;\r\n    position: absolute;\r\n    right: 10px;\r\n  }\r\n  \r\n  .lm-AccordionPanel .lm-AccordionPanel-titleLabel {\r\n    padding: 0px 5px;\r\n  }\r\n  `;\r\n\r\nexport const commandpalette = /*#__PURE__*/ css`\r\n.lm-CommandPalette {\r\n  font-family: sans-serif;\r\n  background: #f5f5f5;\r\n}\r\n\r\n.lm-CommandPalette-search {\r\n  padding: 8px;\r\n}\r\n\r\n.lm-CommandPalette-wrapper {\r\n  padding: 4px 6px;\r\n  background: white;\r\n  border: 1px solid #e0e0e0;\r\n  position: relative;\r\n}\r\n\r\n.lm-CommandPalette-input {\r\n  width: 92%;\r\n  border: none;\r\n  outline: none;\r\n  font-size: 16px;\r\n}\r\n\r\n.lm-CommandPalette-header {\r\n  padding: 4px;\r\n  color: #757575;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  background: #e1e1e1;\r\n  cursor: pointer;\r\n}\r\n\r\n.lm-CommandPalette-header:hover::before {\r\n  content: '\\2026';\r\n  float: right;\r\n  margin-right: 4px;\r\n}\r\n\r\n.lm-CommandPalette-header > mark {\r\n  background-color: transparent;\r\n  font-weight: bold;\r\n}\r\n\r\n.lm-CommandPalette-item {\r\n  padding: 4px 8px;\r\n  color: #757575;\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n}\r\n\r\n.lm-CommandPalette-emptyMessage {\r\n  padding: 4px;\r\n  color: #757575;\r\n  font-size: 12px;\r\n  font-weight: 600;\r\n  text-align: center;\r\n}\r\n\r\n.lm-CommandPalette-item.lm-mod-disabled {\r\n  color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.lm-CommandPalette-item.lm-mod-active {\r\n  background: #7fdbff;\r\n}\r\n\r\n.lm-CommandPalette-item:hover:not(.lm-mod-active):not(.lm-mod-disabled) {\r\n  background: #e5e5e5;\r\n}\r\n\r\n.lm-CommandPalette-itemIcon {\r\n  display: none;\r\n}\r\n\r\n.lm-CommandPalette-itemLabel > mark {\r\n  background-color: transparent;\r\n  font-weight: bold;\r\n}\r\n\r\n.lm-CommandPalette-item.lm-mod-disabled mark {\r\n  color: rgba(0, 0, 0, 0.4);\r\n}\r\n\r\n.lm-CommandPalette-itemCaption {\r\n  color: #9e9e9e;\r\n  font-size: 11px;\r\n  font-weight: 400;\r\n}\r\n`;\r\n\r\nexport const datagrid = /*#__PURE__*/ css`\r\n.lm-DataGrid {\r\n  min-width: 64px;\r\n  min-height: 64px;\r\n  border: 1px solid #a0a0a0;\r\n}\r\n\r\n.lm-DataGrid-scrollCorner {\r\n  background-color: #f0f0f0;\r\n}\r\n\r\n.lm-DataGrid-scrollCorner::after {\r\n  content: '';\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: 1px;\r\n  height: 1px;\r\n  background-color: #a0a0a0;\r\n}\r\n\r\n.lm-DataGrid-cellEditorOccluder {\r\n  pointer-events: none;\r\n  position: absolute;\r\n  overflow: hidden;\r\n}\r\n\r\n.lm-DataGrid-cellEditorContainer {\r\n  pointer-events: auto;\r\n  position: absolute;\r\n  background-color: #ffffff;\r\n  box-sizing: border-box;\r\n  box-shadow: 0px 0px 6px #006bf7;\r\n  border: 2px solid #006bf7;\r\n}\r\n\r\n.lm-DataGrid-cellEditorContainer.lm-mod-invalid {\r\n  box-shadow: 0px 0px 6px red;\r\n  border: 2px solid red;\r\n}\r\n\r\n.lm-DataGrid-cellEditorContainer > form {\r\n  width: 100%;\r\n  height: 100%;\r\n  overflow: hidden;\r\n}\r\n\r\n.lm-DataGrid-cellEditorWidget {\r\n  width: 100%;\r\n  height: 100%;\r\n  outline: none;\r\n  box-sizing: border-box;\r\n}\r\n\r\n.lm-DataGrid-cellEditorInput {\r\n  background-color: #ffffff;\r\n  border: 0;\r\n}\r\n\r\n.lm-DataGrid-cellEditorCheckbox {\r\n  margin: 0;\r\n}\r\n\r\n.lm-DataGrid-notification {\r\n  position: absolute;\r\n  display: flex;\r\n  overflow: visible;\r\n  animation: fade-in 300ms ease-out;\r\n}\r\n\r\n.lm-DataGrid-notificationContainer {\r\n  box-shadow: 0px 2px 5px #999999;\r\n  border-radius: 3px;\r\n  background-color: white;\r\n  color: black;\r\n  border: 1px solid black;\r\n  font-family: sans-serif;\r\n  font-size: 13px;\r\n  padding: 4px;\r\n}\r\n\r\n@keyframes fade-in {\r\n  0% {\r\n    opacity: 0;\r\n  }\r\n  50% {\r\n    opacity: 0.7;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n`;\r\n\r\nexport const dockpanel = /*#__PURE__*/ css`\r\n.lm-DockPanel-overlay {\r\n  background: rgba(255, 255, 255, 0.6);\r\n  border: 1px dashed black;\r\n  transition-property: top, left, right, bottom;\r\n  transition-duration: 150ms;\r\n  transition-timing-function: ease;\r\n}\r\n`;\r\n\r\nexport const menu = /*#__PURE__*/ css`\r\n.lm-Menu {\r\n  padding: 3px 0px;\r\n  background: white;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  border: 1px solid #c0c0c0;\r\n  font: 12px Helvetica, Arial, sans-serif;\r\n  box-shadow: 0px 1px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\n.lm-Menu-item.lm-mod-active {\r\n  background: #e5e5e5;\r\n}\r\n\r\n.lm-Menu-item.lm-mod-disabled {\r\n  color: rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.lm-Menu-itemIcon {\r\n  width: 21px;\r\n  padding: 4px 2px;\r\n}\r\n\r\n.lm-Menu-itemLabel {\r\n  padding: 4px 35px 4px 2px;\r\n}\r\n\r\n.lm-Menu-itemMnemonic {\r\n  text-decoration: underline;\r\n}\r\n\r\n.lm-Menu-itemShortcut {\r\n  padding: 4px 0px;\r\n}\r\n\r\n.lm-Menu-itemSubmenuIcon {\r\n  width: 16px;\r\n  padding: 4px 0px;\r\n}\r\n\r\n.lm-Menu-item[data-type='separator'] > div {\r\n  padding: 0;\r\n  height: 9px;\r\n}\r\n\r\n.lm-Menu-item[data-type='separator'] > div::after {\r\n  content: '';\r\n  display: block;\r\n  position: relative;\r\n  top: 4px;\r\n  border-top: 1px solid #dddddd;\r\n}\r\n\r\n.lm-Menu-itemIcon::before,\r\n.lm-Menu-itemSubmenuIcon::before {\r\n  font-family: FontAwesome;\r\n}\r\n\r\n.lm-Menu-item.lm-mod-toggled > .lm-Menu-itemIcon::before {\r\n  content: '\\f00c';\r\n}\r\n\r\n.lm-Menu-item[data-type='submenu'] > .lm-Menu-itemSubmenuIcon::before {\r\n  content: '\\f0da';\r\n}\r\n`;\r\n\r\nexport const menubar = /*#__PURE__*/ css`\r\n.lm-MenuBar {\r\n  padding-left: 5px;\r\n  background: #fafafa;\r\n  color: rgba(0, 0, 0, 0.87);\r\n  border-bottom: 1px solid #dddddd;\r\n  font: 13px Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.lm-MenuBar-menu {\r\n  transform: translateY(-1px);\r\n}\r\n\r\n.lm-MenuBar-item {\r\n  padding: 4px 8px;\r\n  border-left: 1px solid transparent;\r\n  border-right: 1px solid transparent;\r\n}\r\n\r\n.lm-MenuBar-item.lm-mod-active {\r\n  background: #e5e5e5;\r\n}\r\n\r\n.lm-MenuBar.lm-mod-active .lm-MenuBar-item.lm-mod-active {\r\n  z-index: 10001;\r\n  background: white;\r\n  border-left: 1px solid #c0c0c0;\r\n  border-right: 1px solid #c0c0c0;\r\n  box-shadow: 0px 0px 6px rgba(0, 0, 0, 0.2);\r\n}\r\n`;\r\n\r\nexport const scrollbar = /*#__PURE__*/ css`\r\n.lm-ScrollBar[data-orientation='horizontal'] {\r\n  min-height: 16px;\r\n  max-height: 16px;\r\n  min-width: 45px;\r\n  border-top: 1px solid #a0a0a0;\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='vertical'] {\r\n  min-width: 16px;\r\n  max-width: 16px;\r\n  min-height: 45px;\r\n  border-left: 1px solid #a0a0a0;\r\n}\r\n\r\n.lm-ScrollBar-button {\r\n  background-color: #f0f0f0;\r\n  background-position: center center;\r\n  min-height: 15px;\r\n  max-height: 15px;\r\n  min-width: 15px;\r\n  max-width: 15px;\r\n}\r\n\r\n.lm-ScrollBar-button:hover {\r\n  background-color: #dadada;\r\n}\r\n\r\n.lm-ScrollBar-button.lm-mod-active {\r\n  background-color: #cdcdcd;\r\n}\r\n\r\n.lm-ScrollBar-track {\r\n  background: #f0f0f0;\r\n}\r\n\r\n.lm-ScrollBar-thumb {\r\n  background: #cdcdcd;\r\n}\r\n\r\n.lm-ScrollBar-thumb:hover {\r\n  background: #bababa;\r\n}\r\n\r\n.lm-ScrollBar-thumb.lm-mod-active {\r\n  background: #a0a0a0;\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='horizontal'] .lm-ScrollBar-thumb {\r\n  height: 100%;\r\n  min-width: 15px;\r\n  border-left: 1px solid #a0a0a0;\r\n  border-right: 1px solid #a0a0a0;\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='vertical'] .lm-ScrollBar-thumb {\r\n  width: 100%;\r\n  min-height: 15px;\r\n  border-top: 1px solid #a0a0a0;\r\n  border-bottom: 1px solid #a0a0a0;\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='horizontal'] .lm-ScrollBar-button[data-action='decrement'] {\r\n  background-image: url(../images/caretleft.png);\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='horizontal'] .lm-ScrollBar-button[data-action='increment'] {\r\n  background-image: url(../images/caretright.png);\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='vertical'] .lm-ScrollBar-button[data-action='decrement'] {\r\n  background-image: url(../images/caretup.png);\r\n}\r\n\r\n.lm-ScrollBar[data-orientation='vertical'] .lm-ScrollBar-button[data-action='increment'] {\r\n  background-image: url(../images/caretdown.png);\r\n}\r\n`;\r\n\r\nexport const tabbar = /*#__PURE__*/ css`\r\n.lm-TabBar {\r\n  min-height: 24px;\r\n  max-height: 24px;\r\n}\r\n\r\n.lm-TabBar-content {\r\n  min-width: 0;\r\n  min-height: 0;\r\n  align-items: flex-end;\r\n  border-bottom: 1px solid #c0c0c0;\r\n}\r\n\r\n.lm-TabBar-tab {\r\n  padding: 0px 10px;\r\n  background: #e5e5e5;\r\n  border: 1px solid #c0c0c0;\r\n  border-bottom: none;\r\n  font: 12px Helvetica, Arial, sans-serif;\r\n  flex: 0 1 125px;\r\n  min-height: 20px;\r\n  max-height: 20px;\r\n  min-width: 35px;\r\n  margin-left: -1px;\r\n  line-height: 20px;\r\n}\r\n\r\n.lm-TabBar-tabLabel .lm-TabBar-tabInput {\r\n  padding: 0px;\r\n  border: 0px;\r\n  font: 12px Helvetica, Arial, sans-serif;\r\n}\r\n\r\n.lm-TabBar-tab.lm-mod-current {\r\n  background: white;\r\n}\r\n\r\n.lm-TabBar-tab:hover:not(.lm-mod-current) {\r\n  background: #f0f0f0;\r\n}\r\n\r\n.lm-TabBar-tab:first-child {\r\n  margin-left: 0;\r\n}\r\n\r\n.lm-TabBar-tab.lm-mod-current {\r\n  min-height: 23px;\r\n  max-height: 23px;\r\n  transform: translateY(1px);\r\n}\r\n\r\n.lm-TabBar-tabIcon,\r\n.lm-TabBar-tabLabel,\r\n.lm-TabBar-tabCloseIcon {\r\n  display: inline-block;\r\n}\r\n\r\n.lm-TabBar-tab.lm-mod-closable > .lm-TabBar-tabCloseIcon {\r\n  margin-left: 4px;\r\n}\r\n\r\n.lm-TabBar .lm-TabBar-addButton {\r\n  padding: 0px 6px;\r\n  border-bottom: 1px solid #c0c0c0;\r\n}\r\n\r\n.lm-TabBar-tab.lm-mod-closable > .lm-TabBar-tabCloseIcon:before {\r\n  // content: '\\f00d';\r\n  // font-family: FontAwesome;\r\n  content: 'x';\r\n  font-weight: bold\r\n}\r\n\r\n.lm-TabBar .lm-TabBar-addButton:before {\r\n  content: '\\f067';\r\n  font-family: FontAwesome;\r\n}\r\n\r\n.lm-TabBar-tab.lm-mod-drag-image {\r\n  min-height: 23px;\r\n  max-height: 23px;\r\n  min-width: 125px;\r\n  border: none;\r\n  box-shadow: 1px 1px 2px rgba(0, 0, 0, 0.3);\r\n  transform: translateX(-40%) translateY(-58%);\r\n}\r\n`;\r\n\r\n//   export const all = /*#__PURE__*/ css`\r\n// ${accordionpanel}\r\n// ${commandpalette}\r\n// ${datagrid}\r\n// ${dockpanel}\r\n// ${menu}\r\n// ${menubar}\r\n// ${scrollbar}\r\n// ${tabbar}\r\n// `;\r\n","export const isTrue = (value?: string | number | boolean | null): boolean => value === true || value === 1 || value === \"true\" || value === \"1\";\r\n","function parse(string, type: DOMParserSupportedType = \"text/xml\") {\n    return new DOMParser().parseFromString(string, type);\n}\n\nfunction stringify(DOM) {\n    return new XMLSerializer().serializeToString(DOM);\n}\n\nfunction transform(xml, xsl) {\n    const proc = new XSLTProcessor();\n    proc.importStylesheet(typeof xsl == \"string\" ? parse(xsl) : xsl);\n    const output = proc.transformToFragment(typeof xml == \"string\" ? parse(xml) : xml, document);\n    return typeof xml == \"string\" ? stringify(output) : output;\n}\n\nfunction toString(node, pretty, level = 0, singleton = false) {\n    if (typeof node == \"string\") node = parse(node);\n    const tabs = pretty\n        ? Array(level + 1)\n              .fill(\"\")\n              .join(\"\\t\")\n        : \"\";\n    const newLine = pretty ? \"\\n\" : \"\";\n    if (node.nodeType == 3) return (singleton ? \"\" : tabs) + node.textContent.trim() + (singleton ? \"\" : newLine);\n    if (!node.tagName) return toString(node.firstChild, pretty);\n    let output = tabs + `<${node.tagName}`; // >\\n\n    for (let i = 0; i < node.attributes.length; i++) output += ` ${node.attributes[i].name}=\"${node.attributes[i].value}\"`;\n    if (node.childNodes.length == 0) return output + \" />\" + newLine;\n    else output += \">\";\n    const onlyOneTextChild = node.childNodes.length == 1 && node.childNodes[0].nodeType == 3;\n    if (!onlyOneTextChild) output += newLine;\n    for (let i = 0; i < node.childNodes.length; i++) output += toString(node.childNodes[i], pretty, level + 1, onlyOneTextChild);\n    return output + (onlyOneTextChild ? \"\" : tabs) + `</${node.tagName}>` + newLine;\n}\n\nexport function minify(node) {\n    return toString(node, false);\n}\n\nexport function prettify(node) {\n    return toString(node, true);\n}\n","import { HPCCResizeElement, customElement, ChangeMap, css, display, html, ref } from \"../../common\";\r\nimport { DockPanel, Widget } from \"@lumino/widgets\";\r\nimport { IMessageHandler, Message, MessageLoop } from \"@lumino/messaging\";\r\nimport { WidgetAdapter } from \"./widgetAdapter\";\r\nimport * as luminoStyles from \"./styles\";\r\nimport * as luminoTheme from \"./theme\";\r\nimport { isTrue } from \"../../util\";\r\n\r\nconst template = html<HPCCDockPanelElement>`\\\r\n<div ${ref(\"_div\")}>\r\n</div>\r\n<slot ${ref(\"_slot\")}></slot>`;\r\n\r\nconst styles = css`\r\n${display(\"inline-block\")} \r\n\r\n:host {\r\n}\r\n\r\n:host > div {\r\n}\r\n\r\n${luminoStyles.dragdrop}\r\n${luminoStyles.widget}\r\n${luminoStyles.dockpanel}\r\n${luminoStyles.splitpanel}\r\n${luminoStyles.tabbar}\r\n${luminoStyles.tabpanel}\r\n\r\n${luminoTheme.dockpanel}\r\n${luminoTheme.tabbar}\r\n\r\n.hpcc-LuminoAdapter {\r\n    padding: 8px;\r\n    border: 1px solid #c0c0c0;\r\n    border-top: none;\r\n}\r\n`;\r\n\r\n@customElement(\"hpcc-dockpanel\", { template, styles })\r\nexport class HPCCDockPanelElement extends HPCCResizeElement {\r\n\r\n    protected _dockPanel?: DockPanel;\r\n\r\n    _div: HTMLDivElement;\r\n    protected _slot: HTMLSlotElement;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private _constructed = false;\r\n    construct() {\r\n        if (this._constructed) return;\r\n        const codeElements = this._slot.assignedElements();\r\n        this._constructed = codeElements.length > 0;\r\n        const widgetIdx: { [id: string]: WidgetAdapter } = {};\r\n        for (let i = 0; i < codeElements.length; ++i) {\r\n            const e = codeElements[i] as HTMLElement;\r\n            const w = new WidgetAdapter(this, e);\r\n            widgetIdx[w.id] = w;\r\n            w.title.label = e.dataset.label || (e.id && `#${e.id}`) || `${e.tagName} ${i} `;\r\n            w.title.closable = isTrue(e.dataset.closable);\r\n            w.title.caption = e.dataset.caption || w.title.label;\r\n            w.title.className = e.dataset.className || \"\";\r\n            w.title.iconClass = e.dataset.iconClass || \"\";\r\n            w.title.iconLabel = e.dataset.iconLabel || \"\";\r\n            this._dockPanel!.addWidget(w, {\r\n                mode: e.dataset.mode as DockPanel.InsertMode,\r\n                ref: e.dataset.ref ? widgetIdx[e.dataset.ref] : undefined\r\n            });\r\n        }\r\n    }\r\n\r\n    enter() {\r\n        super.enter();\r\n        this._dockPanel = new DockPanel({ document: this.shadowRoot! });\r\n        Widget.attach(this._dockPanel, this._div);\r\n        MessageLoop.installMessageHook(this._dockPanel, this);\r\n        this.construct();\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        this.construct();\r\n        this._dockPanel!.node.style.width = `${this.clientWidth}px`;\r\n        this._dockPanel!.node.style.height = `${this.clientHeight}px`;\r\n        this._dockPanel!.update();\r\n    }\r\n\r\n    exit() {\r\n        Widget.detach(this._dockPanel!);\r\n        delete this._dockPanel;\r\n        super.exit();\r\n    }\r\n\r\n    //  Lumino Messaging  ---\r\n    messageHook(handler: IMessageHandler, msg: Message): boolean {\r\n        if (handler === this._dockPanel) {\r\n            switch (msg.type) {\r\n                case \"layout-modified\":\r\n                    this.$emit(\"layoutChanged\", this);\r\n                    break;\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n}\r\n","import { HPCCResizeElement, customElement, css, display, html, ref, ChangeMap, attribute } from \"../../common\";\r\nimport { SplitPanel, Widget } from \"@lumino/widgets\";\r\nimport { MessageLoop } from \"@lumino/messaging\";\r\nimport { WidgetAdapter } from \"./widgetAdapter\";\r\nimport { splitpanel, widget } from \"./styles\";\r\n\r\nconst template = html<HPCCSplitterElement>`\\\r\n<div ${ref(\"_div\")}>\r\n</div>\r\n<slot ${ref(\"_slot\")}></slot>`;\r\n\r\nconst styles = css`\r\n${display(\"inline-block\")} \r\n\r\n:host {\r\n}\r\n\r\n:host > div {\r\n}\r\n\r\n${widget}\r\n${splitpanel}\r\n\r\n.hpcc-LuminoAdapter {\r\n    padding: 8px;\r\n    border: 1px solid #c0c0c0;\r\n}`;\r\n\r\n@customElement(\"hpcc-splitter\", { template, styles })\r\nexport class HPCCSplitterElement extends HPCCResizeElement {\r\n\r\n    /**\r\n     * The orientation of the splitter\r\n     * \r\n     * @typeParam horizontal - Horizontal orientation\r\n     * @typeParam vertical - Vertical orientation\r\n     * \r\n     * @defaultValue \"horizontal\"\r\n     */\r\n    @attribute orientation: \"horizontal\" | \"vertical\" = \"horizontal\";\r\n\r\n    /**\r\n     * The spacing between the panels in the splitter\r\n     * \r\n     * @defaultValue 4\r\n     */\r\n    @attribute spacing: number = 4;\r\n\r\n    protected _splitPanel = new SplitPanel({ orientation: this.orientation, spacing: this.spacing });\r\n    protected _div: HTMLDivElement;\r\n    protected _slot: HTMLSlotElement;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    private _constructed = false;\r\n    construct() {\r\n        if (this._constructed) return;\r\n        const codeElements = this._slot.assignedElements();\r\n        this._constructed = codeElements.length > 0;\r\n        for (let i = 0; i < codeElements.length; ++i) {\r\n            const e = codeElements[i] as HTMLElement;\r\n            const w = new WidgetAdapter(this, e);\r\n            this._splitPanel.addWidget(w);\r\n        }\r\n    }\r\n\r\n    enter() {\r\n        super.enter();\r\n        Widget.attach(this._splitPanel, this._div);\r\n        this.construct();\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        this.construct();\r\n        this._splitPanel.orientation = this.orientation;\r\n        this._splitPanel.spacing = this.spacing;\r\n        this._splitPanel.node.style.width = `${this.clientWidth}px`;\r\n        this._splitPanel.node.style.height = `${this.clientHeight}px`;\r\n        this._splitPanel.update();\r\n    }\r\n\r\n    exit() {\r\n        Widget.detach(this._splitPanel);\r\n        super.exit();\r\n    }\r\n}\r\n","export class InternMap extends Map {\n  constructor(entries, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (entries != null) for (const [key, value] of entries) this.set(key, value);\n  }\n  get(key) {\n    return super.get(intern_get(this, key));\n  }\n  has(key) {\n    return super.has(intern_get(this, key));\n  }\n  set(key, value) {\n    return super.set(intern_set(this, key), value);\n  }\n  delete(key) {\n    return super.delete(intern_delete(this, key));\n  }\n}\n\nexport class InternSet extends Set {\n  constructor(values, key = keyof) {\n    super();\n    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});\n    if (values != null) for (const value of values) this.add(value);\n  }\n  has(value) {\n    return super.has(intern_get(this, value));\n  }\n  add(value) {\n    return super.add(intern_set(this, value));\n  }\n  delete(value) {\n    return super.delete(intern_delete(this, value));\n  }\n}\n\nfunction intern_get({_intern, _key}, value) {\n  const key = _key(value);\n  return _intern.has(key) ? _intern.get(key) : value;\n}\n\nfunction intern_set({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) return _intern.get(key);\n  _intern.set(key, value);\n  return value;\n}\n\nfunction intern_delete({_intern, _key}, value) {\n  const key = _key(value);\n  if (_intern.has(key)) {\n    value = _intern.get(key);\n    _intern.delete(key);\n  }\n  return value;\n}\n\nfunction keyof(value) {\n  return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n","export default function map(values, mapper) {\n  if (typeof values[Symbol.iterator] !== \"function\") throw new TypeError(\"values is not iterable\");\n  if (typeof mapper !== \"function\") throw new TypeError(\"mapper is not a function\");\n  return Array.from(values, (value, index) => mapper(value, index, values));\n}\n","var noop = {value: () => {}};\n\nfunction dispatch() {\n  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {\n    if (!(t = arguments[i] + \"\") || (t in _) || /[\\s.]/.test(t)) throw new Error(\"illegal type: \" + t);\n    _[t] = [];\n  }\n  return new Dispatch(_);\n}\n\nfunction Dispatch(_) {\n  this._ = _;\n}\n\nfunction parseTypenames(typenames, types) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    if (t && !types.hasOwnProperty(t)) throw new Error(\"unknown type: \" + t);\n    return {type: t, name: name};\n  });\n}\n\nDispatch.prototype = dispatch.prototype = {\n  constructor: Dispatch,\n  on: function(typename, callback) {\n    var _ = this._,\n        T = parseTypenames(typename + \"\", _),\n        t,\n        i = -1,\n        n = T.length;\n\n    // If no callback was specified, return the callback of the given type and name.\n    if (arguments.length < 2) {\n      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;\n      return;\n    }\n\n    // If a type was specified, set the callback for the given type and name.\n    // Otherwise, if a null callback was specified, remove callbacks of the given name.\n    if (callback != null && typeof callback !== \"function\") throw new Error(\"invalid callback: \" + callback);\n    while (++i < n) {\n      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);\n      else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);\n    }\n\n    return this;\n  },\n  copy: function() {\n    var copy = {}, _ = this._;\n    for (var t in _) copy[t] = _[t].slice();\n    return new Dispatch(copy);\n  },\n  call: function(type, that) {\n    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  },\n  apply: function(type, that, args) {\n    if (!this._.hasOwnProperty(type)) throw new Error(\"unknown type: \" + type);\n    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);\n  }\n};\n\nfunction get(type, name) {\n  for (var i = 0, n = type.length, c; i < n; ++i) {\n    if ((c = type[i]).name === name) {\n      return c.value;\n    }\n  }\n}\n\nfunction set(type, name, callback) {\n  for (var i = 0, n = type.length; i < n; ++i) {\n    if (type[i].name === name) {\n      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));\n      break;\n    }\n  }\n  if (callback != null) type.push({name: name, value: callback});\n  return type;\n}\n\nexport default dispatch;\n","export var xhtml = \"http://www.w3.org/1999/xhtml\";\n\nexport default {\n  svg: \"http://www.w3.org/2000/svg\",\n  xhtml: xhtml,\n  xlink: \"http://www.w3.org/1999/xlink\",\n  xml: \"http://www.w3.org/XML/1998/namespace\",\n  xmlns: \"http://www.w3.org/2000/xmlns/\"\n};\n","import namespaces from \"./namespaces.js\";\n\nexport default function(name) {\n  var prefix = name += \"\", i = prefix.indexOf(\":\");\n  if (i >= 0 && (prefix = name.slice(0, i)) !== \"xmlns\") name = name.slice(i + 1);\n  return namespaces.hasOwnProperty(prefix) ? {space: namespaces[prefix], local: name} : name; // eslint-disable-line no-prototype-builtins\n}\n","import namespace from \"./namespace.js\";\nimport {xhtml} from \"./namespaces.js\";\n\nfunction creatorInherit(name) {\n  return function() {\n    var document = this.ownerDocument,\n        uri = this.namespaceURI;\n    return uri === xhtml && document.documentElement.namespaceURI === xhtml\n        ? document.createElement(name)\n        : document.createElementNS(uri, name);\n  };\n}\n\nfunction creatorFixed(fullname) {\n  return function() {\n    return this.ownerDocument.createElementNS(fullname.space, fullname.local);\n  };\n}\n\nexport default function(name) {\n  var fullname = namespace(name);\n  return (fullname.local\n      ? creatorFixed\n      : creatorInherit)(fullname);\n}\n","function none() {}\n\nexport default function(selector) {\n  return selector == null ? none : function() {\n    return this.querySelector(selector);\n  };\n}\n","// Given something array like (or null), returns something that is strictly an\n// array. This is used to ensure that array-like objects passed to d3.selectAll\n// or selection.selectAll are converted into proper arrays when creating a\n// selection; we don’t ever want to create a selection backed by a live\n// HTMLCollection or NodeList. However, note that selection.selectAll will use a\n// static NodeList as a group, since it safely derived from querySelectorAll.\nexport default function array(x) {\n  return x == null ? [] : Array.isArray(x) ? x : Array.from(x);\n}\n","function empty() {\n  return [];\n}\n\nexport default function(selector) {\n  return selector == null ? empty : function() {\n    return this.querySelectorAll(selector);\n  };\n}\n","export default function(selector) {\n  return function() {\n    return this.matches(selector);\n  };\n}\n\nexport function childMatcher(selector) {\n  return function(node) {\n    return node.matches(selector);\n  };\n}\n\n","import {childMatcher} from \"../matcher.js\";\n\nvar find = Array.prototype.find;\n\nfunction childFind(match) {\n  return function() {\n    return find.call(this.children, match);\n  };\n}\n\nfunction childFirst() {\n  return this.firstElementChild;\n}\n\nexport default function(match) {\n  return this.select(match == null ? childFirst\n      : childFind(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","import {childMatcher} from \"../matcher.js\";\n\nvar filter = Array.prototype.filter;\n\nfunction children() {\n  return Array.from(this.children);\n}\n\nfunction childrenFilter(match) {\n  return function() {\n    return filter.call(this.children, match);\n  };\n}\n\nexport default function(match) {\n  return this.selectAll(match == null ? children\n      : childrenFilter(typeof match === \"function\" ? match : childMatcher(match)));\n}\n","export default function(update) {\n  return new Array(update.length);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._enter || this._groups.map(sparse), this._parents);\n}\n\nexport function EnterNode(parent, datum) {\n  this.ownerDocument = parent.ownerDocument;\n  this.namespaceURI = parent.namespaceURI;\n  this._next = null;\n  this._parent = parent;\n  this.__data__ = datum;\n}\n\nEnterNode.prototype = {\n  constructor: EnterNode,\n  appendChild: function(child) { return this._parent.insertBefore(child, this._next); },\n  insertBefore: function(child, next) { return this._parent.insertBefore(child, next); },\n  querySelector: function(selector) { return this._parent.querySelector(selector); },\n  querySelectorAll: function(selector) { return this._parent.querySelectorAll(selector); }\n};\n","export default function(x) {\n  return function() {\n    return x;\n  };\n}\n","import {Selection} from \"./index.js\";\nimport {EnterNode} from \"./enter.js\";\nimport constant from \"../constant.js\";\n\nfunction bindIndex(parent, group, enter, update, exit, data) {\n  var i = 0,\n      node,\n      groupLength = group.length,\n      dataLength = data.length;\n\n  // Put any non-null nodes that fit into update.\n  // Put any null nodes into enter.\n  // Put any remaining data into enter.\n  for (; i < dataLength; ++i) {\n    if (node = group[i]) {\n      node.__data__ = data[i];\n      update[i] = node;\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Put any non-null nodes that don’t fit into exit.\n  for (; i < groupLength; ++i) {\n    if (node = group[i]) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction bindKey(parent, group, enter, update, exit, data, key) {\n  var i,\n      node,\n      nodeByKeyValue = new Map,\n      groupLength = group.length,\n      dataLength = data.length,\n      keyValues = new Array(groupLength),\n      keyValue;\n\n  // Compute the key for each node.\n  // If multiple nodes have the same key, the duplicates are added to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if (node = group[i]) {\n      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + \"\";\n      if (nodeByKeyValue.has(keyValue)) {\n        exit[i] = node;\n      } else {\n        nodeByKeyValue.set(keyValue, node);\n      }\n    }\n  }\n\n  // Compute the key for each datum.\n  // If there a node associated with this key, join and add it to update.\n  // If there is not (or the key is a duplicate), add it to enter.\n  for (i = 0; i < dataLength; ++i) {\n    keyValue = key.call(parent, data[i], i, data) + \"\";\n    if (node = nodeByKeyValue.get(keyValue)) {\n      update[i] = node;\n      node.__data__ = data[i];\n      nodeByKeyValue.delete(keyValue);\n    } else {\n      enter[i] = new EnterNode(parent, data[i]);\n    }\n  }\n\n  // Add any remaining nodes that were not bound to data to exit.\n  for (i = 0; i < groupLength; ++i) {\n    if ((node = group[i]) && (nodeByKeyValue.get(keyValues[i]) === node)) {\n      exit[i] = node;\n    }\n  }\n}\n\nfunction datum(node) {\n  return node.__data__;\n}\n\nexport default function(value, key) {\n  if (!arguments.length) return Array.from(this, datum);\n\n  var bind = key ? bindKey : bindIndex,\n      parents = this._parents,\n      groups = this._groups;\n\n  if (typeof value !== \"function\") value = constant(value);\n\n  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {\n    var parent = parents[j],\n        group = groups[j],\n        groupLength = group.length,\n        data = arraylike(value.call(parent, parent && parent.__data__, j, parents)),\n        dataLength = data.length,\n        enterGroup = enter[j] = new Array(dataLength),\n        updateGroup = update[j] = new Array(dataLength),\n        exitGroup = exit[j] = new Array(groupLength);\n\n    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key);\n\n    // Now connect the enter nodes to their following update node, such that\n    // appendChild can insert the materialized enter node before this node,\n    // rather than at the end of the parent node.\n    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {\n      if (previous = enterGroup[i0]) {\n        if (i0 >= i1) i1 = i0 + 1;\n        while (!(next = updateGroup[i1]) && ++i1 < dataLength);\n        previous._next = next || null;\n      }\n    }\n  }\n\n  update = new Selection(update, parents);\n  update._enter = enter;\n  update._exit = exit;\n  return update;\n}\n\n// Given some data, this returns an array-like view of it: an object that\n// exposes a length property and allows numeric indexing. Note that unlike\n// selectAll, this isn’t worried about “live” collections because the resulting\n// array will only be used briefly while data is being bound. (It is possible to\n// cause the data to change while iterating by using a key function, but please\n// don’t; we’d rather avoid a gratuitous copy.)\nfunction arraylike(data) {\n  return typeof data === \"object\" && \"length\" in data\n    ? data // Array, TypedArray, NodeList, array-like\n    : Array.from(data); // Map, Set, iterable, string, or anything else\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(compare) {\n  if (!compare) compare = ascending;\n\n  function compareNode(a, b) {\n    return a && b ? compare(a.__data__, b.__data__) : !a - !b;\n  }\n\n  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        sortgroup[i] = node;\n      }\n    }\n    sortgroup.sort(compareNode);\n  }\n\n  return new Selection(sortgroups, this._parents).order();\n}\n\nfunction ascending(a, b) {\n  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;\n}\n","import namespace from \"../namespace.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, value) {\n  return function() {\n    this.setAttribute(name, value);\n  };\n}\n\nfunction attrConstantNS(fullname, value) {\n  return function() {\n    this.setAttributeNS(fullname.space, fullname.local, value);\n  };\n}\n\nfunction attrFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttribute(name);\n    else this.setAttribute(name, v);\n  };\n}\n\nfunction attrFunctionNS(fullname, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);\n    else this.setAttributeNS(fullname.space, fullname.local, v);\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name);\n\n  if (arguments.length < 2) {\n    var node = this.node();\n    return fullname.local\n        ? node.getAttributeNS(fullname.space, fullname.local)\n        : node.getAttribute(fullname);\n  }\n\n  return this.each((value == null\n      ? (fullname.local ? attrRemoveNS : attrRemove) : (typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)\n      : (fullname.local ? attrConstantNS : attrConstant)))(fullname, value));\n}\n","export default function(node) {\n  return (node.ownerDocument && node.ownerDocument.defaultView) // node is a Node\n      || (node.document && node) // node is a Window\n      || node.defaultView; // node is a Document\n}\n","import defaultView from \"../window.js\";\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, value, priority) {\n  return function() {\n    this.style.setProperty(name, value, priority);\n  };\n}\n\nfunction styleFunction(name, value, priority) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) this.style.removeProperty(name);\n    else this.style.setProperty(name, v, priority);\n  };\n}\n\nexport default function(name, value, priority) {\n  return arguments.length > 1\n      ? this.each((value == null\n            ? styleRemove : typeof value === \"function\"\n            ? styleFunction\n            : styleConstant)(name, value, priority == null ? \"\" : priority))\n      : styleValue(this.node(), name);\n}\n\nexport function styleValue(node, name) {\n  return node.style.getPropertyValue(name)\n      || defaultView(node).getComputedStyle(node, null).getPropertyValue(name);\n}\n","function propertyRemove(name) {\n  return function() {\n    delete this[name];\n  };\n}\n\nfunction propertyConstant(name, value) {\n  return function() {\n    this[name] = value;\n  };\n}\n\nfunction propertyFunction(name, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (v == null) delete this[name];\n    else this[name] = v;\n  };\n}\n\nexport default function(name, value) {\n  return arguments.length > 1\n      ? this.each((value == null\n          ? propertyRemove : typeof value === \"function\"\n          ? propertyFunction\n          : propertyConstant)(name, value))\n      : this.node()[name];\n}\n","function classArray(string) {\n  return string.trim().split(/^|\\s+/);\n}\n\nfunction classList(node) {\n  return node.classList || new ClassList(node);\n}\n\nfunction ClassList(node) {\n  this._node = node;\n  this._names = classArray(node.getAttribute(\"class\") || \"\");\n}\n\nClassList.prototype = {\n  add: function(name) {\n    var i = this._names.indexOf(name);\n    if (i < 0) {\n      this._names.push(name);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  remove: function(name) {\n    var i = this._names.indexOf(name);\n    if (i >= 0) {\n      this._names.splice(i, 1);\n      this._node.setAttribute(\"class\", this._names.join(\" \"));\n    }\n  },\n  contains: function(name) {\n    return this._names.indexOf(name) >= 0;\n  }\n};\n\nfunction classedAdd(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.add(names[i]);\n}\n\nfunction classedRemove(node, names) {\n  var list = classList(node), i = -1, n = names.length;\n  while (++i < n) list.remove(names[i]);\n}\n\nfunction classedTrue(names) {\n  return function() {\n    classedAdd(this, names);\n  };\n}\n\nfunction classedFalse(names) {\n  return function() {\n    classedRemove(this, names);\n  };\n}\n\nfunction classedFunction(names, value) {\n  return function() {\n    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);\n  };\n}\n\nexport default function(name, value) {\n  var names = classArray(name + \"\");\n\n  if (arguments.length < 2) {\n    var list = classList(this.node()), i = -1, n = names.length;\n    while (++i < n) if (!list.contains(names[i])) return false;\n    return true;\n  }\n\n  return this.each((typeof value === \"function\"\n      ? classedFunction : value\n      ? classedTrue\n      : classedFalse)(names, value));\n}\n","function textRemove() {\n  this.textContent = \"\";\n}\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.textContent = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? textRemove : (typeof value === \"function\"\n          ? textFunction\n          : textConstant)(value))\n      : this.node().textContent;\n}\n","function htmlRemove() {\n  this.innerHTML = \"\";\n}\n\nfunction htmlConstant(value) {\n  return function() {\n    this.innerHTML = value;\n  };\n}\n\nfunction htmlFunction(value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    this.innerHTML = v == null ? \"\" : v;\n  };\n}\n\nexport default function(value) {\n  return arguments.length\n      ? this.each(value == null\n          ? htmlRemove : (typeof value === \"function\"\n          ? htmlFunction\n          : htmlConstant)(value))\n      : this.node().innerHTML;\n}\n","function raise() {\n  if (this.nextSibling) this.parentNode.appendChild(this);\n}\n\nexport default function() {\n  return this.each(raise);\n}\n","function lower() {\n  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);\n}\n\nexport default function() {\n  return this.each(lower);\n}\n","import creator from \"../creator.js\";\nimport selector from \"../selector.js\";\n\nfunction constantNull() {\n  return null;\n}\n\nexport default function(name, before) {\n  var create = typeof name === \"function\" ? name : creator(name),\n      select = before == null ? constantNull : typeof before === \"function\" ? before : selector(before);\n  return this.select(function() {\n    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);\n  });\n}\n","function remove() {\n  var parent = this.parentNode;\n  if (parent) parent.removeChild(this);\n}\n\nexport default function() {\n  return this.each(remove);\n}\n","function selection_cloneShallow() {\n  var clone = this.cloneNode(false), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nfunction selection_cloneDeep() {\n  var clone = this.cloneNode(true), parent = this.parentNode;\n  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;\n}\n\nexport default function(deep) {\n  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);\n}\n","function contextListener(listener) {\n  return function(event) {\n    listener.call(this, event, this.__data__);\n  };\n}\n\nfunction parseTypenames(typenames) {\n  return typenames.trim().split(/^|\\s+/).map(function(t) {\n    var name = \"\", i = t.indexOf(\".\");\n    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);\n    return {type: t, name: name};\n  });\n}\n\nfunction onRemove(typename) {\n  return function() {\n    var on = this.__on;\n    if (!on) return;\n    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {\n      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n      } else {\n        on[++i] = o;\n      }\n    }\n    if (++i) on.length = i;\n    else delete this.__on;\n  };\n}\n\nfunction onAdd(typename, value, options) {\n  return function() {\n    var on = this.__on, o, listener = contextListener(value);\n    if (on) for (var j = 0, m = on.length; j < m; ++j) {\n      if ((o = on[j]).type === typename.type && o.name === typename.name) {\n        this.removeEventListener(o.type, o.listener, o.options);\n        this.addEventListener(o.type, o.listener = listener, o.options = options);\n        o.value = value;\n        return;\n      }\n    }\n    this.addEventListener(typename.type, listener, options);\n    o = {type: typename.type, name: typename.name, value: value, listener: listener, options: options};\n    if (!on) this.__on = [o];\n    else on.push(o);\n  };\n}\n\nexport default function(typename, value, options) {\n  var typenames = parseTypenames(typename + \"\"), i, n = typenames.length, t;\n\n  if (arguments.length < 2) {\n    var on = this.node().__on;\n    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {\n      for (i = 0, o = on[j]; i < n; ++i) {\n        if ((t = typenames[i]).type === o.type && t.name === o.name) {\n          return o.value;\n        }\n      }\n    }\n    return;\n  }\n\n  on = value ? onAdd : onRemove;\n  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));\n  return this;\n}\n","import defaultView from \"../window.js\";\n\nfunction dispatchEvent(node, type, params) {\n  var window = defaultView(node),\n      event = window.CustomEvent;\n\n  if (typeof event === \"function\") {\n    event = new event(type, params);\n  } else {\n    event = window.document.createEvent(\"Event\");\n    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;\n    else event.initEvent(type, false, false);\n  }\n\n  node.dispatchEvent(event);\n}\n\nfunction dispatchConstant(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params);\n  };\n}\n\nfunction dispatchFunction(type, params) {\n  return function() {\n    return dispatchEvent(this, type, params.apply(this, arguments));\n  };\n}\n\nexport default function(type, params) {\n  return this.each((typeof params === \"function\"\n      ? dispatchFunction\n      : dispatchConstant)(type, params));\n}\n","import selection_select from \"./select.js\";\nimport selection_selectAll from \"./selectAll.js\";\nimport selection_selectChild from \"./selectChild.js\";\nimport selection_selectChildren from \"./selectChildren.js\";\nimport selection_filter from \"./filter.js\";\nimport selection_data from \"./data.js\";\nimport selection_enter from \"./enter.js\";\nimport selection_exit from \"./exit.js\";\nimport selection_join from \"./join.js\";\nimport selection_merge from \"./merge.js\";\nimport selection_order from \"./order.js\";\nimport selection_sort from \"./sort.js\";\nimport selection_call from \"./call.js\";\nimport selection_nodes from \"./nodes.js\";\nimport selection_node from \"./node.js\";\nimport selection_size from \"./size.js\";\nimport selection_empty from \"./empty.js\";\nimport selection_each from \"./each.js\";\nimport selection_attr from \"./attr.js\";\nimport selection_style from \"./style.js\";\nimport selection_property from \"./property.js\";\nimport selection_classed from \"./classed.js\";\nimport selection_text from \"./text.js\";\nimport selection_html from \"./html.js\";\nimport selection_raise from \"./raise.js\";\nimport selection_lower from \"./lower.js\";\nimport selection_append from \"./append.js\";\nimport selection_insert from \"./insert.js\";\nimport selection_remove from \"./remove.js\";\nimport selection_clone from \"./clone.js\";\nimport selection_datum from \"./datum.js\";\nimport selection_on from \"./on.js\";\nimport selection_dispatch from \"./dispatch.js\";\nimport selection_iterator from \"./iterator.js\";\n\nexport var root = [null];\n\nexport function Selection(groups, parents) {\n  this._groups = groups;\n  this._parents = parents;\n}\n\nfunction selection() {\n  return new Selection([[document.documentElement]], root);\n}\n\nfunction selection_selection() {\n  return this;\n}\n\nSelection.prototype = selection.prototype = {\n  constructor: Selection,\n  select: selection_select,\n  selectAll: selection_selectAll,\n  selectChild: selection_selectChild,\n  selectChildren: selection_selectChildren,\n  filter: selection_filter,\n  data: selection_data,\n  enter: selection_enter,\n  exit: selection_exit,\n  join: selection_join,\n  merge: selection_merge,\n  selection: selection_selection,\n  order: selection_order,\n  sort: selection_sort,\n  call: selection_call,\n  nodes: selection_nodes,\n  node: selection_node,\n  size: selection_size,\n  empty: selection_empty,\n  each: selection_each,\n  attr: selection_attr,\n  style: selection_style,\n  property: selection_property,\n  classed: selection_classed,\n  text: selection_text,\n  html: selection_html,\n  raise: selection_raise,\n  lower: selection_lower,\n  append: selection_append,\n  insert: selection_insert,\n  remove: selection_remove,\n  clone: selection_clone,\n  datum: selection_datum,\n  on: selection_on,\n  dispatch: selection_dispatch,\n  [Symbol.iterator]: selection_iterator\n};\n\nexport default selection;\n","import {Selection, root} from \"./selection/index.js\";\n\nexport default function(selector) {\n  return typeof selector === \"string\"\n      ? new Selection([[document.querySelector(selector)]], [document.documentElement])\n      : new Selection([[selector]], root);\n}\n","import sourceEvent from \"./sourceEvent.js\";\n\nexport default function(event, node) {\n  event = sourceEvent(event);\n  if (node === undefined) node = event.currentTarget;\n  if (node) {\n    var svg = node.ownerSVGElement || node;\n    if (svg.createSVGPoint) {\n      var point = svg.createSVGPoint();\n      point.x = event.clientX, point.y = event.clientY;\n      point = point.matrixTransform(node.getScreenCTM().inverse());\n      return [point.x, point.y];\n    }\n    if (node.getBoundingClientRect) {\n      var rect = node.getBoundingClientRect();\n      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];\n    }\n  }\n  return [event.pageX, event.pageY];\n}\n","export default function(event) {\n  let sourceEvent;\n  while (sourceEvent = event.sourceEvent) event = sourceEvent;\n  return event;\n}\n","import {Selection} from \"./index.js\";\nimport selector from \"../selector.js\";\n\nexport default function(select) {\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import {Selection} from \"./index.js\";\nimport array from \"../array.js\";\nimport selectorAll from \"../selectorAll.js\";\n\nfunction arrayAll(select) {\n  return function() {\n    return array(select.apply(this, arguments));\n  };\n}\n\nexport default function(select) {\n  if (typeof select === \"function\") select = arrayAll(select);\n  else select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        subgroups.push(select.call(node, node.__data__, i, group));\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, parents);\n}\n","import {Selection} from \"./index.js\";\nimport matcher from \"../matcher.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Selection(subgroups, this._parents);\n}\n","import sparse from \"./sparse.js\";\nimport {Selection} from \"./index.js\";\n\nexport default function() {\n  return new Selection(this._exit || this._groups.map(sparse), this._parents);\n}\n","export default function(onenter, onupdate, onexit) {\n  var enter = this.enter(), update = this, exit = this.exit();\n  if (typeof onenter === \"function\") {\n    enter = onenter(enter);\n    if (enter) enter = enter.selection();\n  } else {\n    enter = enter.append(onenter + \"\");\n  }\n  if (onupdate != null) {\n    update = onupdate(update);\n    if (update) update = update.selection();\n  }\n  if (onexit == null) exit.remove(); else onexit(exit);\n  return enter && update ? enter.merge(update).order() : update;\n}\n","import {Selection} from \"./index.js\";\n\nexport default function(context) {\n  var selection = context.selection ? context.selection() : context;\n\n  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Selection(merges, this._parents);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {\n    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {\n      if (node = group[i]) {\n        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);\n        next = node;\n      }\n    }\n  }\n\n  return this;\n}\n","export default function() {\n  var callback = arguments[0];\n  arguments[0] = this;\n  callback.apply(null, arguments);\n  return this;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {\n      var node = group[i];\n      if (node) return node;\n    }\n  }\n\n  return null;\n}\n","export default function() {\n  let size = 0;\n  for (const node of this) ++size; // eslint-disable-line no-unused-vars\n  return size;\n}\n","export default function() {\n  return !this.node();\n}\n","export default function(callback) {\n\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) callback.call(node, node.__data__, i, group);\n    }\n  }\n\n  return this;\n}\n","import creator from \"../creator.js\";\n\nexport default function(name) {\n  var create = typeof name === \"function\" ? name : creator(name);\n  return this.select(function() {\n    return this.appendChild(create.apply(this, arguments));\n  });\n}\n","export default function(value) {\n  return arguments.length\n      ? this.property(\"__data__\", value)\n      : this.node().__data__;\n}\n","export default function*() {\n  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {\n    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {\n      if (node = group[i]) yield node;\n    }\n  }\n}\n","// These are typically used in conjunction with noevent to ensure that we can\n// preventDefault on the event.\nexport const nonpassive = {passive: false};\nexport const nonpassivecapture = {capture: true, passive: false};\n\nexport function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {select} from \"d3-selection\";\nimport noevent, {nonpassivecapture} from \"./noevent.js\";\n\nexport default function(view) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", noevent, nonpassivecapture);\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", noevent, nonpassivecapture);\n  } else {\n    root.__noselect = root.style.MozUserSelect;\n    root.style.MozUserSelect = \"none\";\n  }\n}\n\nexport function yesdrag(view, noclick) {\n  var root = view.document.documentElement,\n      selection = select(view).on(\"dragstart.drag\", null);\n  if (noclick) {\n    selection.on(\"click.drag\", noevent, nonpassivecapture);\n    setTimeout(function() { selection.on(\"click.drag\", null); }, 0);\n  }\n  if (\"onselectstart\" in root) {\n    selection.on(\"selectstart.drag\", null);\n  } else {\n    root.style.MozUserSelect = root.__noselect;\n    delete root.__noselect;\n  }\n}\n","export default function(constructor, factory, prototype) {\n  constructor.prototype = factory.prototype = prototype;\n  prototype.constructor = constructor;\n}\n\nexport function extend(parent, definition) {\n  var prototype = Object.create(parent.prototype);\n  for (var key in definition) prototype[key] = definition[key];\n  return prototype;\n}\n","import define, {extend} from \"./define.js\";\n\nexport function Color() {}\n\nexport var darker = 0.7;\nexport var brighter = 1 / darker;\n\nvar reI = \"\\\\s*([+-]?\\\\d+)\\\\s*\",\n    reN = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)\\\\s*\",\n    reP = \"\\\\s*([+-]?\\\\d*\\\\.?\\\\d+(?:[eE][+-]?\\\\d+)?)%\\\\s*\",\n    reHex = /^#([0-9a-f]{3,8})$/,\n    reRgbInteger = new RegExp(\"^rgb\\\\(\" + [reI, reI, reI] + \"\\\\)$\"),\n    reRgbPercent = new RegExp(\"^rgb\\\\(\" + [reP, reP, reP] + \"\\\\)$\"),\n    reRgbaInteger = new RegExp(\"^rgba\\\\(\" + [reI, reI, reI, reN] + \"\\\\)$\"),\n    reRgbaPercent = new RegExp(\"^rgba\\\\(\" + [reP, reP, reP, reN] + \"\\\\)$\"),\n    reHslPercent = new RegExp(\"^hsl\\\\(\" + [reN, reP, reP] + \"\\\\)$\"),\n    reHslaPercent = new RegExp(\"^hsla\\\\(\" + [reN, reP, reP, reN] + \"\\\\)$\");\n\nvar named = {\n  aliceblue: 0xf0f8ff,\n  antiquewhite: 0xfaebd7,\n  aqua: 0x00ffff,\n  aquamarine: 0x7fffd4,\n  azure: 0xf0ffff,\n  beige: 0xf5f5dc,\n  bisque: 0xffe4c4,\n  black: 0x000000,\n  blanchedalmond: 0xffebcd,\n  blue: 0x0000ff,\n  blueviolet: 0x8a2be2,\n  brown: 0xa52a2a,\n  burlywood: 0xdeb887,\n  cadetblue: 0x5f9ea0,\n  chartreuse: 0x7fff00,\n  chocolate: 0xd2691e,\n  coral: 0xff7f50,\n  cornflowerblue: 0x6495ed,\n  cornsilk: 0xfff8dc,\n  crimson: 0xdc143c,\n  cyan: 0x00ffff,\n  darkblue: 0x00008b,\n  darkcyan: 0x008b8b,\n  darkgoldenrod: 0xb8860b,\n  darkgray: 0xa9a9a9,\n  darkgreen: 0x006400,\n  darkgrey: 0xa9a9a9,\n  darkkhaki: 0xbdb76b,\n  darkmagenta: 0x8b008b,\n  darkolivegreen: 0x556b2f,\n  darkorange: 0xff8c00,\n  darkorchid: 0x9932cc,\n  darkred: 0x8b0000,\n  darksalmon: 0xe9967a,\n  darkseagreen: 0x8fbc8f,\n  darkslateblue: 0x483d8b,\n  darkslategray: 0x2f4f4f,\n  darkslategrey: 0x2f4f4f,\n  darkturquoise: 0x00ced1,\n  darkviolet: 0x9400d3,\n  deeppink: 0xff1493,\n  deepskyblue: 0x00bfff,\n  dimgray: 0x696969,\n  dimgrey: 0x696969,\n  dodgerblue: 0x1e90ff,\n  firebrick: 0xb22222,\n  floralwhite: 0xfffaf0,\n  forestgreen: 0x228b22,\n  fuchsia: 0xff00ff,\n  gainsboro: 0xdcdcdc,\n  ghostwhite: 0xf8f8ff,\n  gold: 0xffd700,\n  goldenrod: 0xdaa520,\n  gray: 0x808080,\n  green: 0x008000,\n  greenyellow: 0xadff2f,\n  grey: 0x808080,\n  honeydew: 0xf0fff0,\n  hotpink: 0xff69b4,\n  indianred: 0xcd5c5c,\n  indigo: 0x4b0082,\n  ivory: 0xfffff0,\n  khaki: 0xf0e68c,\n  lavender: 0xe6e6fa,\n  lavenderblush: 0xfff0f5,\n  lawngreen: 0x7cfc00,\n  lemonchiffon: 0xfffacd,\n  lightblue: 0xadd8e6,\n  lightcoral: 0xf08080,\n  lightcyan: 0xe0ffff,\n  lightgoldenrodyellow: 0xfafad2,\n  lightgray: 0xd3d3d3,\n  lightgreen: 0x90ee90,\n  lightgrey: 0xd3d3d3,\n  lightpink: 0xffb6c1,\n  lightsalmon: 0xffa07a,\n  lightseagreen: 0x20b2aa,\n  lightskyblue: 0x87cefa,\n  lightslategray: 0x778899,\n  lightslategrey: 0x778899,\n  lightsteelblue: 0xb0c4de,\n  lightyellow: 0xffffe0,\n  lime: 0x00ff00,\n  limegreen: 0x32cd32,\n  linen: 0xfaf0e6,\n  magenta: 0xff00ff,\n  maroon: 0x800000,\n  mediumaquamarine: 0x66cdaa,\n  mediumblue: 0x0000cd,\n  mediumorchid: 0xba55d3,\n  mediumpurple: 0x9370db,\n  mediumseagreen: 0x3cb371,\n  mediumslateblue: 0x7b68ee,\n  mediumspringgreen: 0x00fa9a,\n  mediumturquoise: 0x48d1cc,\n  mediumvioletred: 0xc71585,\n  midnightblue: 0x191970,\n  mintcream: 0xf5fffa,\n  mistyrose: 0xffe4e1,\n  moccasin: 0xffe4b5,\n  navajowhite: 0xffdead,\n  navy: 0x000080,\n  oldlace: 0xfdf5e6,\n  olive: 0x808000,\n  olivedrab: 0x6b8e23,\n  orange: 0xffa500,\n  orangered: 0xff4500,\n  orchid: 0xda70d6,\n  palegoldenrod: 0xeee8aa,\n  palegreen: 0x98fb98,\n  paleturquoise: 0xafeeee,\n  palevioletred: 0xdb7093,\n  papayawhip: 0xffefd5,\n  peachpuff: 0xffdab9,\n  peru: 0xcd853f,\n  pink: 0xffc0cb,\n  plum: 0xdda0dd,\n  powderblue: 0xb0e0e6,\n  purple: 0x800080,\n  rebeccapurple: 0x663399,\n  red: 0xff0000,\n  rosybrown: 0xbc8f8f,\n  royalblue: 0x4169e1,\n  saddlebrown: 0x8b4513,\n  salmon: 0xfa8072,\n  sandybrown: 0xf4a460,\n  seagreen: 0x2e8b57,\n  seashell: 0xfff5ee,\n  sienna: 0xa0522d,\n  silver: 0xc0c0c0,\n  skyblue: 0x87ceeb,\n  slateblue: 0x6a5acd,\n  slategray: 0x708090,\n  slategrey: 0x708090,\n  snow: 0xfffafa,\n  springgreen: 0x00ff7f,\n  steelblue: 0x4682b4,\n  tan: 0xd2b48c,\n  teal: 0x008080,\n  thistle: 0xd8bfd8,\n  tomato: 0xff6347,\n  turquoise: 0x40e0d0,\n  violet: 0xee82ee,\n  wheat: 0xf5deb3,\n  white: 0xffffff,\n  whitesmoke: 0xf5f5f5,\n  yellow: 0xffff00,\n  yellowgreen: 0x9acd32\n};\n\ndefine(Color, color, {\n  copy: function(channels) {\n    return Object.assign(new this.constructor, this, channels);\n  },\n  displayable: function() {\n    return this.rgb().displayable();\n  },\n  hex: color_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: color_formatHex,\n  formatHsl: color_formatHsl,\n  formatRgb: color_formatRgb,\n  toString: color_formatRgb\n});\n\nfunction color_formatHex() {\n  return this.rgb().formatHex();\n}\n\nfunction color_formatHsl() {\n  return hslConvert(this).formatHsl();\n}\n\nfunction color_formatRgb() {\n  return this.rgb().formatRgb();\n}\n\nexport default function color(format) {\n  var m, l;\n  format = (format + \"\").trim().toLowerCase();\n  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000\n      : l === 3 ? new Rgb((m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), ((m & 0xf) << 4) | (m & 0xf), 1) // #f00\n      : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000\n      : l === 4 ? rgba((m >> 12 & 0xf) | (m >> 8 & 0xf0), (m >> 8 & 0xf) | (m >> 4 & 0xf0), (m >> 4 & 0xf) | (m & 0xf0), (((m & 0xf) << 4) | (m & 0xf)) / 0xff) // #f000\n      : null) // invalid hex\n      : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)\n      : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)\n      : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)\n      : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)\n      : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)\n      : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)\n      : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins\n      : format === \"transparent\" ? new Rgb(NaN, NaN, NaN, 0)\n      : null;\n}\n\nfunction rgbn(n) {\n  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);\n}\n\nfunction rgba(r, g, b, a) {\n  if (a <= 0) r = g = b = NaN;\n  return new Rgb(r, g, b, a);\n}\n\nexport function rgbConvert(o) {\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Rgb;\n  o = o.rgb();\n  return new Rgb(o.r, o.g, o.b, o.opacity);\n}\n\nexport function rgb(r, g, b, opacity) {\n  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);\n}\n\nexport function Rgb(r, g, b, opacity) {\n  this.r = +r;\n  this.g = +g;\n  this.b = +b;\n  this.opacity = +opacity;\n}\n\ndefine(Rgb, rgb, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);\n  },\n  rgb: function() {\n    return this;\n  },\n  displayable: function() {\n    return (-0.5 <= this.r && this.r < 255.5)\n        && (-0.5 <= this.g && this.g < 255.5)\n        && (-0.5 <= this.b && this.b < 255.5)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  hex: rgb_formatHex, // Deprecated! Use color.formatHex.\n  formatHex: rgb_formatHex,\n  formatRgb: rgb_formatRgb,\n  toString: rgb_formatRgb\n}));\n\nfunction rgb_formatHex() {\n  return \"#\" + hex(this.r) + hex(this.g) + hex(this.b);\n}\n\nfunction rgb_formatRgb() {\n  var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n  return (a === 1 ? \"rgb(\" : \"rgba(\")\n      + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + \", \"\n      + Math.max(0, Math.min(255, Math.round(this.b) || 0))\n      + (a === 1 ? \")\" : \", \" + a + \")\");\n}\n\nfunction hex(value) {\n  value = Math.max(0, Math.min(255, Math.round(value) || 0));\n  return (value < 16 ? \"0\" : \"\") + value.toString(16);\n}\n\nfunction hsla(h, s, l, a) {\n  if (a <= 0) h = s = l = NaN;\n  else if (l <= 0 || l >= 1) h = s = NaN;\n  else if (s <= 0) h = NaN;\n  return new Hsl(h, s, l, a);\n}\n\nexport function hslConvert(o) {\n  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);\n  if (!(o instanceof Color)) o = color(o);\n  if (!o) return new Hsl;\n  if (o instanceof Hsl) return o;\n  o = o.rgb();\n  var r = o.r / 255,\n      g = o.g / 255,\n      b = o.b / 255,\n      min = Math.min(r, g, b),\n      max = Math.max(r, g, b),\n      h = NaN,\n      s = max - min,\n      l = (max + min) / 2;\n  if (s) {\n    if (r === max) h = (g - b) / s + (g < b) * 6;\n    else if (g === max) h = (b - r) / s + 2;\n    else h = (r - g) / s + 4;\n    s /= l < 0.5 ? max + min : 2 - max - min;\n    h *= 60;\n  } else {\n    s = l > 0 && l < 1 ? 0 : h;\n  }\n  return new Hsl(h, s, l, o.opacity);\n}\n\nexport function hsl(h, s, l, opacity) {\n  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);\n}\n\nfunction Hsl(h, s, l, opacity) {\n  this.h = +h;\n  this.s = +s;\n  this.l = +l;\n  this.opacity = +opacity;\n}\n\ndefine(Hsl, hsl, extend(Color, {\n  brighter: function(k) {\n    k = k == null ? brighter : Math.pow(brighter, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  darker: function(k) {\n    k = k == null ? darker : Math.pow(darker, k);\n    return new Hsl(this.h, this.s, this.l * k, this.opacity);\n  },\n  rgb: function() {\n    var h = this.h % 360 + (this.h < 0) * 360,\n        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,\n        l = this.l,\n        m2 = l + (l < 0.5 ? l : 1 - l) * s,\n        m1 = 2 * l - m2;\n    return new Rgb(\n      hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2),\n      hsl2rgb(h, m1, m2),\n      hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2),\n      this.opacity\n    );\n  },\n  displayable: function() {\n    return (0 <= this.s && this.s <= 1 || isNaN(this.s))\n        && (0 <= this.l && this.l <= 1)\n        && (0 <= this.opacity && this.opacity <= 1);\n  },\n  formatHsl: function() {\n    var a = this.opacity; a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));\n    return (a === 1 ? \"hsl(\" : \"hsla(\")\n        + (this.h || 0) + \", \"\n        + (this.s || 0) * 100 + \"%, \"\n        + (this.l || 0) * 100 + \"%\"\n        + (a === 1 ? \")\" : \", \" + a + \")\");\n  }\n}));\n\n/* From FvD 13.37, CSS Color Module Level 3 */\nfunction hsl2rgb(h, m1, m2) {\n  return (h < 60 ? m1 + (m2 - m1) * h / 60\n      : h < 180 ? m2\n      : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60\n      : m1) * 255;\n}\n","export default x => () => x;\n","import constant from \"./constant.js\";\n\nfunction linear(a, d) {\n  return function(t) {\n    return a + t * d;\n  };\n}\n\nfunction exponential(a, b, y) {\n  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function(t) {\n    return Math.pow(a + t * b, y);\n  };\n}\n\nexport function hue(a, b) {\n  var d = b - a;\n  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : constant(isNaN(a) ? b : a);\n}\n\nexport function gamma(y) {\n  return (y = +y) === 1 ? nogamma : function(a, b) {\n    return b - a ? exponential(a, b, y) : constant(isNaN(a) ? b : a);\n  };\n}\n\nexport default function nogamma(a, b) {\n  var d = b - a;\n  return d ? linear(a, d) : constant(isNaN(a) ? b : a);\n}\n","import {rgb as colorRgb} from \"d3-color\";\nimport basis from \"./basis.js\";\nimport basisClosed from \"./basisClosed.js\";\nimport nogamma, {gamma} from \"./color.js\";\n\nexport default (function rgbGamma(y) {\n  var color = gamma(y);\n\n  function rgb(start, end) {\n    var r = color((start = colorRgb(start)).r, (end = colorRgb(end)).r),\n        g = color(start.g, end.g),\n        b = color(start.b, end.b),\n        opacity = nogamma(start.opacity, end.opacity);\n    return function(t) {\n      start.r = r(t);\n      start.g = g(t);\n      start.b = b(t);\n      start.opacity = opacity(t);\n      return start + \"\";\n    };\n  }\n\n  rgb.gamma = rgbGamma;\n\n  return rgb;\n})(1);\n\nfunction rgbSpline(spline) {\n  return function(colors) {\n    var n = colors.length,\n        r = new Array(n),\n        g = new Array(n),\n        b = new Array(n),\n        i, color;\n    for (i = 0; i < n; ++i) {\n      color = colorRgb(colors[i]);\n      r[i] = color.r || 0;\n      g[i] = color.g || 0;\n      b[i] = color.b || 0;\n    }\n    r = spline(r);\n    g = spline(g);\n    b = spline(b);\n    color.opacity = 1;\n    return function(t) {\n      color.r = r(t);\n      color.g = g(t);\n      color.b = b(t);\n      return color + \"\";\n    };\n  };\n}\n\nexport var rgbBasis = rgbSpline(basis);\nexport var rgbBasisClosed = rgbSpline(basisClosed);\n","export default function(a, b) {\n  if (!b) b = [];\n  var n = a ? Math.min(b.length, a.length) : 0,\n      c = b.slice(),\n      i;\n  return function(t) {\n    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;\n    return c;\n  };\n}\n\nexport function isNumberArray(x) {\n  return ArrayBuffer.isView(x) && !(x instanceof DataView);\n}\n","import value from \"./value.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  return (isNumberArray(b) ? numberArray : genericArray)(a, b);\n}\n\nexport function genericArray(a, b) {\n  var nb = b ? b.length : 0,\n      na = a ? Math.min(nb, a.length) : 0,\n      x = new Array(na),\n      c = new Array(nb),\n      i;\n\n  for (i = 0; i < na; ++i) x[i] = value(a[i], b[i]);\n  for (; i < nb; ++i) c[i] = b[i];\n\n  return function(t) {\n    for (i = 0; i < na; ++i) c[i] = x[i](t);\n    return c;\n  };\n}\n","export default function(a, b) {\n  var d = new Date;\n  return a = +a, b = +b, function(t) {\n    return d.setTime(a * (1 - t) + b * t), d;\n  };\n}\n","export default function(a, b) {\n  return a = +a, b = +b, function(t) {\n    return a * (1 - t) + b * t;\n  };\n}\n","import value from \"./value.js\";\n\nexport default function(a, b) {\n  var i = {},\n      c = {},\n      k;\n\n  if (a === null || typeof a !== \"object\") a = {};\n  if (b === null || typeof b !== \"object\") b = {};\n\n  for (k in b) {\n    if (k in a) {\n      i[k] = value(a[k], b[k]);\n    } else {\n      c[k] = b[k];\n    }\n  }\n\n  return function(t) {\n    for (k in i) c[k] = i[k](t);\n    return c;\n  };\n}\n","import number from \"./number.js\";\n\nvar reA = /[-+]?(?:\\d+\\.?\\d*|\\.?\\d+)(?:[eE][-+]?\\d+)?/g,\n    reB = new RegExp(reA.source, \"g\");\n\nfunction zero(b) {\n  return function() {\n    return b;\n  };\n}\n\nfunction one(b) {\n  return function(t) {\n    return b(t) + \"\";\n  };\n}\n\nexport default function(a, b) {\n  var bi = reA.lastIndex = reB.lastIndex = 0, // scan index for next number in b\n      am, // current match in a\n      bm, // current match in b\n      bs, // string preceding current number in b, if any\n      i = -1, // index in s\n      s = [], // string constants and placeholders\n      q = []; // number interpolators\n\n  // Coerce inputs to strings.\n  a = a + \"\", b = b + \"\";\n\n  // Interpolate pairs of numbers in a & b.\n  while ((am = reA.exec(a))\n      && (bm = reB.exec(b))) {\n    if ((bs = bm.index) > bi) { // a string precedes the next number in b\n      bs = b.slice(bi, bs);\n      if (s[i]) s[i] += bs; // coalesce with previous string\n      else s[++i] = bs;\n    }\n    if ((am = am[0]) === (bm = bm[0])) { // numbers in a & b match\n      if (s[i]) s[i] += bm; // coalesce with previous string\n      else s[++i] = bm;\n    } else { // interpolate non-matching numbers\n      s[++i] = null;\n      q.push({i: i, x: number(am, bm)});\n    }\n    bi = reB.lastIndex;\n  }\n\n  // Add remains of b.\n  if (bi < b.length) {\n    bs = b.slice(bi);\n    if (s[i]) s[i] += bs; // coalesce with previous string\n    else s[++i] = bs;\n  }\n\n  // Special optimization for only a single match.\n  // Otherwise, interpolate each of the numbers and rejoin the string.\n  return s.length < 2 ? (q[0]\n      ? one(q[0].x)\n      : zero(b))\n      : (b = q.length, function(t) {\n          for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);\n          return s.join(\"\");\n        });\n}\n","import {color} from \"d3-color\";\nimport rgb from \"./rgb.js\";\nimport {genericArray} from \"./array.js\";\nimport date from \"./date.js\";\nimport number from \"./number.js\";\nimport object from \"./object.js\";\nimport string from \"./string.js\";\nimport constant from \"./constant.js\";\nimport numberArray, {isNumberArray} from \"./numberArray.js\";\n\nexport default function(a, b) {\n  var t = typeof b, c;\n  return b == null || t === \"boolean\" ? constant(b)\n      : (t === \"number\" ? number\n      : t === \"string\" ? ((c = color(b)) ? (b = c, rgb) : string)\n      : b instanceof color ? rgb\n      : b instanceof Date ? date\n      : isNumberArray(b) ? numberArray\n      : Array.isArray(b) ? genericArray\n      : typeof b.valueOf !== \"function\" && typeof b.toString !== \"function\" || isNaN(b) ? object\n      : number)(a, b);\n}\n","var degrees = 180 / Math.PI;\n\nexport var identity = {\n  translateX: 0,\n  translateY: 0,\n  rotate: 0,\n  skewX: 0,\n  scaleX: 1,\n  scaleY: 1\n};\n\nexport default function(a, b, c, d, e, f) {\n  var scaleX, scaleY, skewX;\n  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;\n  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;\n  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;\n  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;\n  return {\n    translateX: e,\n    translateY: f,\n    rotate: Math.atan2(b, a) * degrees,\n    skewX: Math.atan(skewX) * degrees,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n","import decompose, {identity} from \"./decompose.js\";\n\nvar svgNode;\n\n/* eslint-disable no-undef */\nexport function parseCss(value) {\n  const m = new (typeof DOMMatrix === \"function\" ? DOMMatrix : WebKitCSSMatrix)(value + \"\");\n  return m.isIdentity ? identity : decompose(m.a, m.b, m.c, m.d, m.e, m.f);\n}\n\nexport function parseSvg(value) {\n  if (value == null) return identity;\n  if (!svgNode) svgNode = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\");\n  svgNode.setAttribute(\"transform\", value);\n  if (!(value = svgNode.transform.baseVal.consolidate())) return identity;\n  value = value.matrix;\n  return decompose(value.a, value.b, value.c, value.d, value.e, value.f);\n}\n","import number from \"../number.js\";\nimport {parseCss, parseSvg} from \"./parse.js\";\n\nfunction interpolateTransform(parse, pxComma, pxParen, degParen) {\n\n  function pop(s) {\n    return s.length ? s.pop() + \" \" : \"\";\n  }\n\n  function translate(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(\"translate(\", null, pxComma, null, pxParen);\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb || yb) {\n      s.push(\"translate(\" + xb + pxComma + yb + pxParen);\n    }\n  }\n\n  function rotate(a, b, s, q) {\n    if (a !== b) {\n      if (a - b > 180) b += 360; else if (b - a > 180) a += 360; // shortest path\n      q.push({i: s.push(pop(s) + \"rotate(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"rotate(\" + b + degParen);\n    }\n  }\n\n  function skewX(a, b, s, q) {\n    if (a !== b) {\n      q.push({i: s.push(pop(s) + \"skewX(\", null, degParen) - 2, x: number(a, b)});\n    } else if (b) {\n      s.push(pop(s) + \"skewX(\" + b + degParen);\n    }\n  }\n\n  function scale(xa, ya, xb, yb, s, q) {\n    if (xa !== xb || ya !== yb) {\n      var i = s.push(pop(s) + \"scale(\", null, \",\", null, \")\");\n      q.push({i: i - 4, x: number(xa, xb)}, {i: i - 2, x: number(ya, yb)});\n    } else if (xb !== 1 || yb !== 1) {\n      s.push(pop(s) + \"scale(\" + xb + \",\" + yb + \")\");\n    }\n  }\n\n  return function(a, b) {\n    var s = [], // string constants and placeholders\n        q = []; // number interpolators\n    a = parse(a), b = parse(b);\n    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);\n    rotate(a.rotate, b.rotate, s, q);\n    skewX(a.skewX, b.skewX, s, q);\n    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);\n    a = b = null; // gc\n    return function(t) {\n      var i = -1, n = q.length, o;\n      while (++i < n) s[(o = q[i]).i] = o.x(t);\n      return s.join(\"\");\n    };\n  };\n}\n\nexport var interpolateTransformCss = interpolateTransform(parseCss, \"px, \", \"px)\", \"deg)\");\nexport var interpolateTransformSvg = interpolateTransform(parseSvg, \", \", \")\", \")\");\n","var epsilon2 = 1e-12;\n\nfunction cosh(x) {\n  return ((x = Math.exp(x)) + 1 / x) / 2;\n}\n\nfunction sinh(x) {\n  return ((x = Math.exp(x)) - 1 / x) / 2;\n}\n\nfunction tanh(x) {\n  return ((x = Math.exp(2 * x)) - 1) / (x + 1);\n}\n\nexport default (function zoomRho(rho, rho2, rho4) {\n\n  // p0 = [ux0, uy0, w0]\n  // p1 = [ux1, uy1, w1]\n  function zoom(p0, p1) {\n    var ux0 = p0[0], uy0 = p0[1], w0 = p0[2],\n        ux1 = p1[0], uy1 = p1[1], w1 = p1[2],\n        dx = ux1 - ux0,\n        dy = uy1 - uy0,\n        d2 = dx * dx + dy * dy,\n        i,\n        S;\n\n    // Special case for u0 ≅ u1.\n    if (d2 < epsilon2) {\n      S = Math.log(w1 / w0) / rho;\n      i = function(t) {\n        return [\n          ux0 + t * dx,\n          uy0 + t * dy,\n          w0 * Math.exp(rho * t * S)\n        ];\n      }\n    }\n\n    // General case.\n    else {\n      var d1 = Math.sqrt(d2),\n          b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),\n          b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),\n          r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),\n          r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);\n      S = (r1 - r0) / rho;\n      i = function(t) {\n        var s = t * S,\n            coshr0 = cosh(r0),\n            u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));\n        return [\n          ux0 + u * dx,\n          uy0 + u * dy,\n          w0 * coshr0 / cosh(rho * s + r0)\n        ];\n      }\n    }\n\n    i.duration = S * 1000 * rho / Math.SQRT2;\n\n    return i;\n  }\n\n  zoom.rho = function(_) {\n    var _1 = Math.max(1e-3, +_), _2 = _1 * _1, _4 = _2 * _2;\n    return zoomRho(_1, _2, _4);\n  };\n\n  return zoom;\n})(Math.SQRT2, 2, 4);\n","var frame = 0, // is an animation frame pending?\n    timeout = 0, // is a timeout pending?\n    interval = 0, // are any timers active?\n    pokeDelay = 1000, // how frequently we check for clock skew\n    taskHead,\n    taskTail,\n    clockLast = 0,\n    clockNow = 0,\n    clockSkew = 0,\n    clock = typeof performance === \"object\" && performance.now ? performance : Date,\n    setFrame = typeof window === \"object\" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function(f) { setTimeout(f, 17); };\n\nexport function now() {\n  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);\n}\n\nfunction clearNow() {\n  clockNow = 0;\n}\n\nexport function Timer() {\n  this._call =\n  this._time =\n  this._next = null;\n}\n\nTimer.prototype = timer.prototype = {\n  constructor: Timer,\n  restart: function(callback, delay, time) {\n    if (typeof callback !== \"function\") throw new TypeError(\"callback is not a function\");\n    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);\n    if (!this._next && taskTail !== this) {\n      if (taskTail) taskTail._next = this;\n      else taskHead = this;\n      taskTail = this;\n    }\n    this._call = callback;\n    this._time = time;\n    sleep();\n  },\n  stop: function() {\n    if (this._call) {\n      this._call = null;\n      this._time = Infinity;\n      sleep();\n    }\n  }\n};\n\nexport function timer(callback, delay, time) {\n  var t = new Timer;\n  t.restart(callback, delay, time);\n  return t;\n}\n\nexport function timerFlush() {\n  now(); // Get the current time, if not already set.\n  ++frame; // Pretend we’ve set an alarm, if we haven’t already.\n  var t = taskHead, e;\n  while (t) {\n    if ((e = clockNow - t._time) >= 0) t._call.call(undefined, e);\n    t = t._next;\n  }\n  --frame;\n}\n\nfunction wake() {\n  clockNow = (clockLast = clock.now()) + clockSkew;\n  frame = timeout = 0;\n  try {\n    timerFlush();\n  } finally {\n    frame = 0;\n    nap();\n    clockNow = 0;\n  }\n}\n\nfunction poke() {\n  var now = clock.now(), delay = now - clockLast;\n  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;\n}\n\nfunction nap() {\n  var t0, t1 = taskHead, t2, time = Infinity;\n  while (t1) {\n    if (t1._call) {\n      if (time > t1._time) time = t1._time;\n      t0 = t1, t1 = t1._next;\n    } else {\n      t2 = t1._next, t1._next = null;\n      t1 = t0 ? t0._next = t2 : taskHead = t2;\n    }\n  }\n  taskTail = t0;\n  sleep(time);\n}\n\nfunction sleep(time) {\n  if (frame) return; // Soonest alarm already set, or will be.\n  if (timeout) timeout = clearTimeout(timeout);\n  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.\n  if (delay > 24) {\n    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);\n    if (interval) interval = clearInterval(interval);\n  } else {\n    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);\n    frame = 1, setFrame(wake);\n  }\n}\n","import {Timer} from \"./timer.js\";\n\nexport default function(callback, delay, time) {\n  var t = new Timer;\n  delay = delay == null ? 0 : +delay;\n  t.restart(elapsed => {\n    t.stop();\n    callback(elapsed + delay);\n  }, delay, time);\n  return t;\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {timer, timeout} from \"d3-timer\";\n\nvar emptyOn = dispatch(\"start\", \"end\", \"cancel\", \"interrupt\");\nvar emptyTween = [];\n\nexport var CREATED = 0;\nexport var SCHEDULED = 1;\nexport var STARTING = 2;\nexport var STARTED = 3;\nexport var RUNNING = 4;\nexport var ENDING = 5;\nexport var ENDED = 6;\n\nexport default function(node, name, id, index, group, timing) {\n  var schedules = node.__transition;\n  if (!schedules) node.__transition = {};\n  else if (id in schedules) return;\n  create(node, id, {\n    name: name,\n    index: index, // For context during callback.\n    group: group, // For context during callback.\n    on: emptyOn,\n    tween: emptyTween,\n    time: timing.time,\n    delay: timing.delay,\n    duration: timing.duration,\n    ease: timing.ease,\n    timer: null,\n    state: CREATED\n  });\n}\n\nexport function init(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > CREATED) throw new Error(\"too late; already scheduled\");\n  return schedule;\n}\n\nexport function set(node, id) {\n  var schedule = get(node, id);\n  if (schedule.state > STARTED) throw new Error(\"too late; already running\");\n  return schedule;\n}\n\nexport function get(node, id) {\n  var schedule = node.__transition;\n  if (!schedule || !(schedule = schedule[id])) throw new Error(\"transition not found\");\n  return schedule;\n}\n\nfunction create(node, id, self) {\n  var schedules = node.__transition,\n      tween;\n\n  // Initialize the self timer when the transition is created.\n  // Note the actual delay is not known until the first callback!\n  schedules[id] = self;\n  self.timer = timer(schedule, 0, self.time);\n\n  function schedule(elapsed) {\n    self.state = SCHEDULED;\n    self.timer.restart(start, self.delay, self.time);\n\n    // If the elapsed delay is less than our first sleep, start immediately.\n    if (self.delay <= elapsed) start(elapsed - self.delay);\n  }\n\n  function start(elapsed) {\n    var i, j, n, o;\n\n    // If the state is not SCHEDULED, then we previously errored on start.\n    if (self.state !== SCHEDULED) return stop();\n\n    for (i in schedules) {\n      o = schedules[i];\n      if (o.name !== self.name) continue;\n\n      // While this element already has a starting transition during this frame,\n      // defer starting an interrupting transition until that transition has a\n      // chance to tick (and possibly end); see d3/d3-transition#54!\n      if (o.state === STARTED) return timeout(start);\n\n      // Interrupt the active transition, if any.\n      if (o.state === RUNNING) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"interrupt\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n\n      // Cancel any pre-empted transitions.\n      else if (+i < id) {\n        o.state = ENDED;\n        o.timer.stop();\n        o.on.call(\"cancel\", node, node.__data__, o.index, o.group);\n        delete schedules[i];\n      }\n    }\n\n    // Defer the first tick to end of the current frame; see d3/d3#1576.\n    // Note the transition may be canceled after start and before the first tick!\n    // Note this must be scheduled before the start event; see d3/d3-transition#16!\n    // Assuming this is successful, subsequent callbacks go straight to tick.\n    timeout(function() {\n      if (self.state === STARTED) {\n        self.state = RUNNING;\n        self.timer.restart(tick, self.delay, self.time);\n        tick(elapsed);\n      }\n    });\n\n    // Dispatch the start event.\n    // Note this must be done before the tween are initialized.\n    self.state = STARTING;\n    self.on.call(\"start\", node, node.__data__, self.index, self.group);\n    if (self.state !== STARTING) return; // interrupted\n    self.state = STARTED;\n\n    // Initialize the tween, deleting null tween.\n    tween = new Array(n = self.tween.length);\n    for (i = 0, j = -1; i < n; ++i) {\n      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {\n        tween[++j] = o;\n      }\n    }\n    tween.length = j + 1;\n  }\n\n  function tick(elapsed) {\n    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),\n        i = -1,\n        n = tween.length;\n\n    while (++i < n) {\n      tween[i].call(node, t);\n    }\n\n    // Dispatch the end event.\n    if (self.state === ENDING) {\n      self.on.call(\"end\", node, node.__data__, self.index, self.group);\n      stop();\n    }\n  }\n\n  function stop() {\n    self.state = ENDED;\n    self.timer.stop();\n    delete schedules[id];\n    for (var i in schedules) return; // eslint-disable-line no-unused-vars\n    delete node.__transition;\n  }\n}\n","import {STARTING, ENDING, ENDED} from \"./transition/schedule.js\";\n\nexport default function(node, name) {\n  var schedules = node.__transition,\n      schedule,\n      active,\n      empty = true,\n      i;\n\n  if (!schedules) return;\n\n  name = name == null ? null : name + \"\";\n\n  for (i in schedules) {\n    if ((schedule = schedules[i]).name !== name) { empty = false; continue; }\n    active = schedule.state > STARTING && schedule.state < ENDING;\n    schedule.state = ENDED;\n    schedule.timer.stop();\n    schedule.on.call(active ? \"interrupt\" : \"cancel\", node, node.__data__, schedule.index, schedule.group);\n    delete schedules[i];\n  }\n\n  if (empty) delete node.__transition;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction tweenRemove(id, name) {\n  var tween0, tween1;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = tween0 = tween;\n      for (var i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1 = tween1.slice();\n          tween1.splice(i, 1);\n          break;\n        }\n      }\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nfunction tweenFunction(id, name, value) {\n  var tween0, tween1;\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    var schedule = set(this, id),\n        tween = schedule.tween;\n\n    // If this node shared tween with the previous node,\n    // just assign the updated shared tween and we’re done!\n    // Otherwise, copy-on-write.\n    if (tween !== tween0) {\n      tween1 = (tween0 = tween).slice();\n      for (var t = {name: name, value: value}, i = 0, n = tween1.length; i < n; ++i) {\n        if (tween1[i].name === name) {\n          tween1[i] = t;\n          break;\n        }\n      }\n      if (i === n) tween1.push(t);\n    }\n\n    schedule.tween = tween1;\n  };\n}\n\nexport default function(name, value) {\n  var id = this._id;\n\n  name += \"\";\n\n  if (arguments.length < 2) {\n    var tween = get(this.node(), id).tween;\n    for (var i = 0, n = tween.length, t; i < n; ++i) {\n      if ((t = tween[i]).name === name) {\n        return t.value;\n      }\n    }\n    return null;\n  }\n\n  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));\n}\n\nexport function tweenValue(transition, name, value) {\n  var id = transition._id;\n\n  transition.each(function() {\n    var schedule = set(this, id);\n    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);\n  });\n\n  return function(node) {\n    return get(node, id).value[name];\n  };\n}\n","import {color} from \"d3-color\";\nimport {interpolateNumber, interpolateRgb, interpolateString} from \"d3-interpolate\";\n\nexport default function(a, b) {\n  var c;\n  return (typeof b === \"number\" ? interpolateNumber\n      : b instanceof color ? interpolateRgb\n      : (c = color(b)) ? (b = c, interpolateRgb)\n      : interpolateString)(a, b);\n}\n","import {interpolateTransformSvg as interpolateTransform} from \"d3-interpolate\";\nimport {namespace} from \"d3-selection\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction attrRemove(name) {\n  return function() {\n    this.removeAttribute(name);\n  };\n}\n\nfunction attrRemoveNS(fullname) {\n  return function() {\n    this.removeAttributeNS(fullname.space, fullname.local);\n  };\n}\n\nfunction attrConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttribute(name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrConstantNS(fullname, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = this.getAttributeNS(fullname.space, fullname.local);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction attrFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttribute(name);\n    string0 = this.getAttribute(name);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction attrFunctionNS(fullname, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0, value1 = value(this), string1;\n    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);\n    string0 = this.getAttributeNS(fullname.space, fullname.local);\n    string1 = value1 + \"\";\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nexport default function(name, value) {\n  var fullname = namespace(name), i = fullname === \"transform\" ? interpolateTransform : interpolate;\n  return this.attrTween(name, typeof value === \"function\"\n      ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, tweenValue(this, \"attr.\" + name, value))\n      : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname)\n      : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));\n}\n","import {namespace} from \"d3-selection\";\n\nfunction attrInterpolate(name, i) {\n  return function(t) {\n    this.setAttribute(name, i.call(this, t));\n  };\n}\n\nfunction attrInterpolateNS(fullname, i) {\n  return function(t) {\n    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));\n  };\n}\n\nfunction attrTweenNS(fullname, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nfunction attrTween(name, value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value) {\n  var key = \"attr.\" + name;\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  var fullname = namespace(name);\n  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));\n}\n","import {get, init} from \"./schedule.js\";\n\nfunction delayFunction(id, value) {\n  return function() {\n    init(this, id).delay = +value.apply(this, arguments);\n  };\n}\n\nfunction delayConstant(id, value) {\n  return value = +value, function() {\n    init(this, id).delay = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? delayFunction\n          : delayConstant)(id, value))\n      : get(this.node(), id).delay;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction durationFunction(id, value) {\n  return function() {\n    set(this, id).duration = +value.apply(this, arguments);\n  };\n}\n\nfunction durationConstant(id, value) {\n  return value = +value, function() {\n    set(this, id).duration = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each((typeof value === \"function\"\n          ? durationFunction\n          : durationConstant)(id, value))\n      : get(this.node(), id).duration;\n}\n","import {get, set} from \"./schedule.js\";\n\nfunction easeConstant(id, value) {\n  if (typeof value !== \"function\") throw new Error;\n  return function() {\n    set(this, id).ease = value;\n  };\n}\n\nexport default function(value) {\n  var id = this._id;\n\n  return arguments.length\n      ? this.each(easeConstant(id, value))\n      : get(this.node(), id).ease;\n}\n","import {get, set, init} from \"./schedule.js\";\n\nfunction start(name) {\n  return (name + \"\").trim().split(/^|\\s+/).every(function(t) {\n    var i = t.indexOf(\".\");\n    if (i >= 0) t = t.slice(0, i);\n    return !t || t === \"start\";\n  });\n}\n\nfunction onFunction(id, name, listener) {\n  var on0, on1, sit = start(name) ? init : set;\n  return function() {\n    var schedule = sit(this, id),\n        on = schedule.on;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, listener) {\n  var id = this._id;\n\n  return arguments.length < 2\n      ? get(this.node(), id).on.on(name)\n      : this.each(onFunction(id, name, listener));\n}\n","import {selection} from \"d3-selection\";\n\nvar Selection = selection.prototype.constructor;\n\nexport default function() {\n  return new Selection(this._groups, this._parents);\n}\n","import {interpolateTransformCss as interpolateTransform} from \"d3-interpolate\";\nimport {style} from \"d3-selection\";\nimport {set} from \"./schedule.js\";\nimport {tweenValue} from \"./tween.js\";\nimport interpolate from \"./interpolate.js\";\n\nfunction styleNull(name, interpolate) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        string1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, string10 = string1);\n  };\n}\n\nfunction styleRemove(name) {\n  return function() {\n    this.style.removeProperty(name);\n  };\n}\n\nfunction styleConstant(name, interpolate, value1) {\n  var string00,\n      string1 = value1 + \"\",\n      interpolate0;\n  return function() {\n    var string0 = style(this, name);\n    return string0 === string1 ? null\n        : string0 === string00 ? interpolate0\n        : interpolate0 = interpolate(string00 = string0, value1);\n  };\n}\n\nfunction styleFunction(name, interpolate, value) {\n  var string00,\n      string10,\n      interpolate0;\n  return function() {\n    var string0 = style(this, name),\n        value1 = value(this),\n        string1 = value1 + \"\";\n    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), style(this, name));\n    return string0 === string1 ? null\n        : string0 === string00 && string1 === string10 ? interpolate0\n        : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));\n  };\n}\n\nfunction styleMaybeRemove(id, name) {\n  var on0, on1, listener0, key = \"style.\" + name, event = \"end.\" + key, remove;\n  return function() {\n    var schedule = set(this, id),\n        on = schedule.on,\n        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined;\n\n    // If this node shared a dispatch with the previous node,\n    // just assign the updated shared dispatch and we’re done!\n    // Otherwise, copy-on-write.\n    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);\n\n    schedule.on = on1;\n  };\n}\n\nexport default function(name, value, priority) {\n  var i = (name += \"\") === \"transform\" ? interpolateTransform : interpolate;\n  return value == null ? this\n      .styleTween(name, styleNull(name, i))\n      .on(\"end.style.\" + name, styleRemove(name))\n    : typeof value === \"function\" ? this\n      .styleTween(name, styleFunction(name, i, tweenValue(this, \"style.\" + name, value)))\n      .each(styleMaybeRemove(this._id, name))\n    : this\n      .styleTween(name, styleConstant(name, i, value), priority)\n      .on(\"end.style.\" + name, null);\n}\n","function styleInterpolate(name, i, priority) {\n  return function(t) {\n    this.style.setProperty(name, i.call(this, t), priority);\n  };\n}\n\nfunction styleTween(name, value, priority) {\n  var t, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);\n    return t;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(name, value, priority) {\n  var key = \"style.\" + (name += \"\");\n  if (arguments.length < 2) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, styleTween(name, value, priority == null ? \"\" : priority));\n}\n","function textInterpolate(i) {\n  return function(t) {\n    this.textContent = i.call(this, t);\n  };\n}\n\nfunction textTween(value) {\n  var t0, i0;\n  function tween() {\n    var i = value.apply(this, arguments);\n    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);\n    return t0;\n  }\n  tween._value = value;\n  return tween;\n}\n\nexport default function(value) {\n  var key = \"text\";\n  if (arguments.length < 1) return (key = this.tween(key)) && key._value;\n  if (value == null) return this.tween(key, null);\n  if (typeof value !== \"function\") throw new Error;\n  return this.tween(key, textTween(value));\n}\n","import {selection} from \"d3-selection\";\nimport transition_attr from \"./attr.js\";\nimport transition_attrTween from \"./attrTween.js\";\nimport transition_delay from \"./delay.js\";\nimport transition_duration from \"./duration.js\";\nimport transition_ease from \"./ease.js\";\nimport transition_easeVarying from \"./easeVarying.js\";\nimport transition_filter from \"./filter.js\";\nimport transition_merge from \"./merge.js\";\nimport transition_on from \"./on.js\";\nimport transition_remove from \"./remove.js\";\nimport transition_select from \"./select.js\";\nimport transition_selectAll from \"./selectAll.js\";\nimport transition_selection from \"./selection.js\";\nimport transition_style from \"./style.js\";\nimport transition_styleTween from \"./styleTween.js\";\nimport transition_text from \"./text.js\";\nimport transition_textTween from \"./textTween.js\";\nimport transition_transition from \"./transition.js\";\nimport transition_tween from \"./tween.js\";\nimport transition_end from \"./end.js\";\n\nvar id = 0;\n\nexport function Transition(groups, parents, name, id) {\n  this._groups = groups;\n  this._parents = parents;\n  this._name = name;\n  this._id = id;\n}\n\nexport default function transition(name) {\n  return selection().transition(name);\n}\n\nexport function newId() {\n  return ++id;\n}\n\nvar selection_prototype = selection.prototype;\n\nTransition.prototype = transition.prototype = {\n  constructor: Transition,\n  select: transition_select,\n  selectAll: transition_selectAll,\n  selectChild: selection_prototype.selectChild,\n  selectChildren: selection_prototype.selectChildren,\n  filter: transition_filter,\n  merge: transition_merge,\n  selection: transition_selection,\n  transition: transition_transition,\n  call: selection_prototype.call,\n  nodes: selection_prototype.nodes,\n  node: selection_prototype.node,\n  size: selection_prototype.size,\n  empty: selection_prototype.empty,\n  each: selection_prototype.each,\n  on: transition_on,\n  attr: transition_attr,\n  attrTween: transition_attrTween,\n  style: transition_style,\n  styleTween: transition_styleTween,\n  text: transition_text,\n  textTween: transition_textTween,\n  remove: transition_remove,\n  tween: transition_tween,\n  delay: transition_delay,\n  duration: transition_duration,\n  ease: transition_ease,\n  easeVarying: transition_easeVarying,\n  end: transition_end,\n  [Symbol.iterator]: selection_prototype[Symbol.iterator]\n};\n","import {selector} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selector(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {\n      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {\n        if (\"__data__\" in node) subnode.__data__ = node.__data__;\n        subgroup[i] = subnode;\n        schedule(subgroup[i], name, id, i, subgroup, get(node, id));\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, name, id);\n}\n","import {selectorAll} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function(select) {\n  var name = this._name,\n      id = this._id;\n\n  if (typeof select !== \"function\") select = selectorAll(select);\n\n  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        for (var children = select.call(node, node.__data__, i, group), child, inherit = get(node, id), k = 0, l = children.length; k < l; ++k) {\n          if (child = children[k]) {\n            schedule(child, name, id, k, children, inherit);\n          }\n        }\n        subgroups.push(children);\n        parents.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, parents, name, id);\n}\n","import {matcher} from \"d3-selection\";\nimport {Transition} from \"./index.js\";\n\nexport default function(match) {\n  if (typeof match !== \"function\") match = matcher(match);\n\n  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {\n      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {\n        subgroup.push(node);\n      }\n    }\n  }\n\n  return new Transition(subgroups, this._parents, this._name, this._id);\n}\n","import {Transition} from \"./index.js\";\n\nexport default function(transition) {\n  if (transition._id !== this._id) throw new Error;\n\n  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {\n    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {\n      if (node = group0[i] || group1[i]) {\n        merge[i] = node;\n      }\n    }\n  }\n\n  for (; j < m0; ++j) {\n    merges[j] = groups0[j];\n  }\n\n  return new Transition(merges, this._parents, this._name, this._id);\n}\n","import {Transition, newId} from \"./index.js\";\nimport schedule, {get} from \"./schedule.js\";\n\nexport default function() {\n  var name = this._name,\n      id0 = this._id,\n      id1 = newId();\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        var inherit = get(node, id0);\n        schedule(node, name, id1, i, group, {\n          time: inherit.time + inherit.delay + inherit.duration,\n          delay: 0,\n          duration: inherit.duration,\n          ease: inherit.ease\n        });\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id1);\n}\n","import {tweenValue} from \"./tween.js\";\n\nfunction textConstant(value) {\n  return function() {\n    this.textContent = value;\n  };\n}\n\nfunction textFunction(value) {\n  return function() {\n    var value1 = value(this);\n    this.textContent = value1 == null ? \"\" : value1;\n  };\n}\n\nexport default function(value) {\n  return this.tween(\"text\", typeof value === \"function\"\n      ? textFunction(tweenValue(this, \"text\", value))\n      : textConstant(value == null ? \"\" : value + \"\"));\n}\n","function removeFunction(id) {\n  return function() {\n    var parent = this.parentNode;\n    for (var i in this.__transition) if (+i !== id) return;\n    if (parent) parent.removeChild(this);\n  };\n}\n\nexport default function() {\n  return this.on(\"end.remove\", removeFunction(this._id));\n}\n","import {set} from \"./schedule.js\";\n\nfunction easeVarying(id, value) {\n  return function() {\n    var v = value.apply(this, arguments);\n    if (typeof v !== \"function\") throw new Error;\n    set(this, id).ease = v;\n  };\n}\n\nexport default function(value) {\n  if (typeof value !== \"function\") throw new Error;\n  return this.each(easeVarying(this._id, value));\n}\n","import {set} from \"./schedule.js\";\n\nexport default function() {\n  var on0, on1, that = this, id = that._id, size = that.size();\n  return new Promise(function(resolve, reject) {\n    var cancel = {value: reject},\n        end = {value: function() { if (--size === 0) resolve(); }};\n\n    that.each(function() {\n      var schedule = set(this, id),\n          on = schedule.on;\n\n      // If this node shared a dispatch with the previous node,\n      // just assign the updated shared dispatch and we’re done!\n      // Otherwise, copy-on-write.\n      if (on !== on0) {\n        on1 = (on0 = on).copy();\n        on1._.cancel.push(cancel);\n        on1._.interrupt.push(cancel);\n        on1._.end.push(end);\n      }\n\n      schedule.on = on1;\n    });\n\n    // The selection was empty, resolve end immediately\n    if (size === 0) resolve();\n  });\n}\n","import {Transition, newId} from \"../transition/index.js\";\nimport schedule from \"../transition/schedule.js\";\nimport {easeCubicInOut} from \"d3-ease\";\nimport {now} from \"d3-timer\";\n\nvar defaultTiming = {\n  time: null, // Set on use.\n  delay: 0,\n  duration: 250,\n  ease: easeCubicInOut\n};\n\nfunction inherit(node, id) {\n  var timing;\n  while (!(timing = node.__transition) || !(timing = timing[id])) {\n    if (!(node = node.parentNode)) {\n      throw new Error(`transition ${id} not found`);\n    }\n  }\n  return timing;\n}\n\nexport default function(name) {\n  var id,\n      timing;\n\n  if (name instanceof Transition) {\n    id = name._id, name = name._name;\n  } else {\n    id = newId(), (timing = defaultTiming).time = now(), name = name == null ? null : name + \"\";\n  }\n\n  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {\n    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {\n      if (node = group[i]) {\n        schedule(node, name, id, i, group, timing || inherit(node, id));\n      }\n    }\n  }\n\n  return new Transition(groups, this._parents, name, id);\n}\n","export function cubicIn(t) {\n  return t * t * t;\n}\n\nexport function cubicOut(t) {\n  return --t * t * t + 1;\n}\n\nexport function cubicInOut(t) {\n  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;\n}\n","import {selection} from \"d3-selection\";\nimport selection_interrupt from \"./interrupt.js\";\nimport selection_transition from \"./transition.js\";\n\nselection.prototype.interrupt = selection_interrupt;\nselection.prototype.transition = selection_transition;\n","import interrupt from \"../interrupt.js\";\n\nexport default function(name) {\n  return this.each(function() {\n    interrupt(this, name);\n  });\n}\n","const pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return Math.abs(x = Math.round(x)) >= 1e21\n      ? x.toLocaleString(\"en\").replace(/,/g, \"\")\n      : x.toString(10);\n}\n\n// Computes the decimal coefficient and exponent of the specified number x with\n// significant digits p, where x is positive and p is in [1, 21] or undefined.\n// For example, formatDecimalParts(1.23) returns [\"123\", 0].\nexport function formatDecimalParts(x, p) {\n  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf(\"e\")) < 0) return null; // NaN, ±Infinity\n  var i, coefficient = x.slice(0, i);\n\n  // The string returned by toExponential either has the form \\d\\.\\d+e[-+]\\d+\n  // (e.g., 1.2e+3) or the form \\de[-+]\\d+ (e.g., 1e+3).\n  return [\n    coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient,\n    +x.slice(i + 1)\n  ];\n}\n","// [[fill]align][sign][symbol][0][width][,][.precision][~][type]\nvar re = /^(?:(.)?([<>=^]))?([+\\-( ])?([$#])?(0)?(\\d+)?(,)?(\\.\\d+)?(~)?([a-z%])?$/i;\n\nexport default function formatSpecifier(specifier) {\n  if (!(match = re.exec(specifier))) throw new Error(\"invalid format: \" + specifier);\n  var match;\n  return new FormatSpecifier({\n    fill: match[1],\n    align: match[2],\n    sign: match[3],\n    symbol: match[4],\n    zero: match[5],\n    width: match[6],\n    comma: match[7],\n    precision: match[8] && match[8].slice(1),\n    trim: match[9],\n    type: match[10]\n  });\n}\n\nformatSpecifier.prototype = FormatSpecifier.prototype; // instanceof\n\nexport function FormatSpecifier(specifier) {\n  this.fill = specifier.fill === undefined ? \" \" : specifier.fill + \"\";\n  this.align = specifier.align === undefined ? \">\" : specifier.align + \"\";\n  this.sign = specifier.sign === undefined ? \"-\" : specifier.sign + \"\";\n  this.symbol = specifier.symbol === undefined ? \"\" : specifier.symbol + \"\";\n  this.zero = !!specifier.zero;\n  this.width = specifier.width === undefined ? undefined : +specifier.width;\n  this.comma = !!specifier.comma;\n  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;\n  this.trim = !!specifier.trim;\n  this.type = specifier.type === undefined ? \"\" : specifier.type + \"\";\n}\n\nFormatSpecifier.prototype.toString = function() {\n  return this.fill\n      + this.align\n      + this.sign\n      + this.symbol\n      + (this.zero ? \"0\" : \"\")\n      + (this.width === undefined ? \"\" : Math.max(1, this.width | 0))\n      + (this.comma ? \",\" : \"\")\n      + (this.precision === undefined ? \"\" : \".\" + Math.max(0, this.precision | 0))\n      + (this.trim ? \"~\" : \"\")\n      + this.type;\n};\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport var prefixExponent;\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1],\n      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,\n      n = coefficient.length;\n  return i === n ? coefficient\n      : i > n ? coefficient + new Array(i - n + 1).join(\"0\")\n      : i > 0 ? coefficient.slice(0, i) + \".\" + coefficient.slice(i)\n      : \"0.\" + new Array(1 - i).join(\"0\") + formatDecimalParts(x, Math.max(0, p + i - 1))[0]; // less than 1y!\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x, p) {\n  var d = formatDecimalParts(x, p);\n  if (!d) return x + \"\";\n  var coefficient = d[0],\n      exponent = d[1];\n  return exponent < 0 ? \"0.\" + new Array(-exponent).join(\"0\") + coefficient\n      : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + \".\" + coefficient.slice(exponent + 1)\n      : coefficient + new Array(exponent - coefficient.length + 2).join(\"0\");\n}\n","import formatDecimal from \"./formatDecimal.js\";\nimport formatPrefixAuto from \"./formatPrefixAuto.js\";\nimport formatRounded from \"./formatRounded.js\";\n\nexport default {\n  \"%\": (x, p) => (x * 100).toFixed(p),\n  \"b\": (x) => Math.round(x).toString(2),\n  \"c\": (x) => x + \"\",\n  \"d\": formatDecimal,\n  \"e\": (x, p) => x.toExponential(p),\n  \"f\": (x, p) => x.toFixed(p),\n  \"g\": (x, p) => x.toPrecision(p),\n  \"o\": (x) => Math.round(x).toString(8),\n  \"p\": (x, p) => formatRounded(x * 100, p),\n  \"r\": formatRounded,\n  \"s\": formatPrefixAuto,\n  \"X\": (x) => Math.round(x).toString(16).toUpperCase(),\n  \"x\": (x) => Math.round(x).toString(16)\n};\n","export default function(x) {\n  return x;\n}\n","import exponent from \"./exponent.js\";\nimport formatGroup from \"./formatGroup.js\";\nimport formatNumerals from \"./formatNumerals.js\";\nimport formatSpecifier from \"./formatSpecifier.js\";\nimport formatTrim from \"./formatTrim.js\";\nimport formatTypes from \"./formatTypes.js\";\nimport {prefixExponent} from \"./formatPrefixAuto.js\";\nimport identity from \"./identity.js\";\n\nvar map = Array.prototype.map,\n    prefixes = [\"y\",\"z\",\"a\",\"f\",\"p\",\"n\",\"µ\",\"m\",\"\",\"k\",\"M\",\"G\",\"T\",\"P\",\"E\",\"Z\",\"Y\"];\n\nexport default function(locale) {\n  var group = locale.grouping === undefined || locale.thousands === undefined ? identity : formatGroup(map.call(locale.grouping, Number), locale.thousands + \"\"),\n      currencyPrefix = locale.currency === undefined ? \"\" : locale.currency[0] + \"\",\n      currencySuffix = locale.currency === undefined ? \"\" : locale.currency[1] + \"\",\n      decimal = locale.decimal === undefined ? \".\" : locale.decimal + \"\",\n      numerals = locale.numerals === undefined ? identity : formatNumerals(map.call(locale.numerals, String)),\n      percent = locale.percent === undefined ? \"%\" : locale.percent + \"\",\n      minus = locale.minus === undefined ? \"−\" : locale.minus + \"\",\n      nan = locale.nan === undefined ? \"NaN\" : locale.nan + \"\";\n\n  function newFormat(specifier) {\n    specifier = formatSpecifier(specifier);\n\n    var fill = specifier.fill,\n        align = specifier.align,\n        sign = specifier.sign,\n        symbol = specifier.symbol,\n        zero = specifier.zero,\n        width = specifier.width,\n        comma = specifier.comma,\n        precision = specifier.precision,\n        trim = specifier.trim,\n        type = specifier.type;\n\n    // The \"n\" type is an alias for \",g\".\n    if (type === \"n\") comma = true, type = \"g\";\n\n    // The \"\" type, and any invalid type, is an alias for \".12~g\".\n    else if (!formatTypes[type]) precision === undefined && (precision = 12), trim = true, type = \"g\";\n\n    // If zero fill is specified, padding goes after sign and before digits.\n    if (zero || (fill === \"0\" && align === \"=\")) zero = true, fill = \"0\", align = \"=\";\n\n    // Compute the prefix and suffix.\n    // For SI-prefix, the suffix is lazily computed.\n    var prefix = symbol === \"$\" ? currencyPrefix : symbol === \"#\" && /[boxX]/.test(type) ? \"0\" + type.toLowerCase() : \"\",\n        suffix = symbol === \"$\" ? currencySuffix : /[%p]/.test(type) ? percent : \"\";\n\n    // What format function should we use?\n    // Is this an integer type?\n    // Can this type generate exponential notation?\n    var formatType = formatTypes[type],\n        maybeSuffix = /[defgprs%]/.test(type);\n\n    // Set the default precision if not specified,\n    // or clamp the specified precision to the supported range.\n    // For significant precision, it must be in [1, 21].\n    // For fixed precision, it must be in [0, 20].\n    precision = precision === undefined ? 6\n        : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision))\n        : Math.max(0, Math.min(20, precision));\n\n    function format(value) {\n      var valuePrefix = prefix,\n          valueSuffix = suffix,\n          i, n, c;\n\n      if (type === \"c\") {\n        valueSuffix = formatType(value) + valueSuffix;\n        value = \"\";\n      } else {\n        value = +value;\n\n        // Determine the sign. -0 is not less than 0, but 1 / -0 is!\n        var valueNegative = value < 0 || 1 / value < 0;\n\n        // Perform the initial formatting.\n        value = isNaN(value) ? nan : formatType(Math.abs(value), precision);\n\n        // Trim insignificant zeros.\n        if (trim) value = formatTrim(value);\n\n        // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.\n        if (valueNegative && +value === 0 && sign !== \"+\") valueNegative = false;\n\n        // Compute the prefix and suffix.\n        valuePrefix = (valueNegative ? (sign === \"(\" ? sign : minus) : sign === \"-\" || sign === \"(\" ? \"\" : sign) + valuePrefix;\n        valueSuffix = (type === \"s\" ? prefixes[8 + prefixExponent / 3] : \"\") + valueSuffix + (valueNegative && sign === \"(\" ? \")\" : \"\");\n\n        // Break the formatted value into the integer “value” part that can be\n        // grouped, and fractional or exponential “suffix” part that is not.\n        if (maybeSuffix) {\n          i = -1, n = value.length;\n          while (++i < n) {\n            if (c = value.charCodeAt(i), 48 > c || c > 57) {\n              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;\n              value = value.slice(0, i);\n              break;\n            }\n          }\n        }\n      }\n\n      // If the fill character is not \"0\", grouping is applied before padding.\n      if (comma && !zero) value = group(value, Infinity);\n\n      // Compute the padding.\n      var length = valuePrefix.length + value.length + valueSuffix.length,\n          padding = length < width ? new Array(width - length + 1).join(fill) : \"\";\n\n      // If the fill character is \"0\", grouping is applied after padding.\n      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = \"\";\n\n      // Reconstruct the final output based on the desired alignment.\n      switch (align) {\n        case \"<\": value = valuePrefix + value + valueSuffix + padding; break;\n        case \"=\": value = valuePrefix + padding + value + valueSuffix; break;\n        case \"^\": value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length); break;\n        default: value = padding + valuePrefix + value + valueSuffix; break;\n      }\n\n      return numerals(value);\n    }\n\n    format.toString = function() {\n      return specifier + \"\";\n    };\n\n    return format;\n  }\n\n  function formatPrefix(specifier, value) {\n    var f = newFormat((specifier = formatSpecifier(specifier), specifier.type = \"f\", specifier)),\n        e = Math.max(-8, Math.min(8, Math.floor(exponent(value) / 3))) * 3,\n        k = Math.pow(10, -e),\n        prefix = prefixes[8 + e / 3];\n    return function(value) {\n      return f(k * value) + prefix;\n    };\n  }\n\n  return {\n    format: newFormat,\n    formatPrefix: formatPrefix\n  };\n}\n","import formatLocale from \"./locale.js\";\n\nvar locale;\nexport var format;\nexport var formatPrefix;\n\ndefaultLocale({\n  thousands: \",\",\n  grouping: [3],\n  currency: [\"$\", \"\"]\n});\n\nexport default function defaultLocale(definition) {\n  locale = formatLocale(definition);\n  format = locale.format;\n  formatPrefix = locale.formatPrefix;\n  return locale;\n}\n","export default function(grouping, thousands) {\n  return function(value, width) {\n    var i = value.length,\n        t = [],\n        j = 0,\n        g = grouping[0],\n        length = 0;\n\n    while (i > 0 && g > 0) {\n      if (length + g + 1 > width) g = Math.max(1, width - length);\n      t.push(value.substring(i -= g, i + g));\n      if ((length += g + 1) > width) break;\n      g = grouping[j = (j + 1) % grouping.length];\n    }\n\n    return t.reverse().join(thousands);\n  };\n}\n","export default function(numerals) {\n  return function(value) {\n    return value.replace(/[0-9]/g, function(i) {\n      return numerals[+i];\n    });\n  };\n}\n","// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.\nexport default function(s) {\n  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {\n    switch (s[i]) {\n      case \".\": i0 = i1 = i; break;\n      case \"0\": if (i0 === 0) i0 = i; i1 = i; break;\n      default: if (!+s[i]) break out; if (i0 > 0) i0 = 0; break;\n    }\n  }\n  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;\n}\n","import {formatDecimalParts} from \"./formatDecimal.js\";\n\nexport default function(x) {\n  return x = formatDecimalParts(Math.abs(x)), x ? x[1] : NaN;\n}\n","function count(node) {\n  var sum = 0,\n      children = node.children,\n      i = children && children.length;\n  if (!i) sum = 1;\n  else while (--i >= 0) sum += children[i].value;\n  node.value = sum;\n}\n\nexport default function() {\n  return this.eachAfter(count);\n}\n","import node_count from \"./count.js\";\nimport node_each from \"./each.js\";\nimport node_eachBefore from \"./eachBefore.js\";\nimport node_eachAfter from \"./eachAfter.js\";\nimport node_find from \"./find.js\";\nimport node_sum from \"./sum.js\";\nimport node_sort from \"./sort.js\";\nimport node_path from \"./path.js\";\nimport node_ancestors from \"./ancestors.js\";\nimport node_descendants from \"./descendants.js\";\nimport node_leaves from \"./leaves.js\";\nimport node_links from \"./links.js\";\nimport node_iterator from \"./iterator.js\";\n\nexport default function hierarchy(data, children) {\n  if (data instanceof Map) {\n    data = [undefined, data];\n    if (children === undefined) children = mapChildren;\n  } else if (children === undefined) {\n    children = objectChildren;\n  }\n\n  var root = new Node(data),\n      node,\n      nodes = [root],\n      child,\n      childs,\n      i,\n      n;\n\n  while (node = nodes.pop()) {\n    if ((childs = children(node.data)) && (n = (childs = Array.from(childs)).length)) {\n      node.children = childs;\n      for (i = n - 1; i >= 0; --i) {\n        nodes.push(child = childs[i] = new Node(childs[i]));\n        child.parent = node;\n        child.depth = node.depth + 1;\n      }\n    }\n  }\n\n  return root.eachBefore(computeHeight);\n}\n\nfunction node_copy() {\n  return hierarchy(this).eachBefore(copyData);\n}\n\nfunction objectChildren(d) {\n  return d.children;\n}\n\nfunction mapChildren(d) {\n  return Array.isArray(d) ? d[1] : null;\n}\n\nfunction copyData(node) {\n  if (node.data.value !== undefined) node.value = node.data.value;\n  node.data = node.data.data;\n}\n\nexport function computeHeight(node) {\n  var height = 0;\n  do node.height = height;\n  while ((node = node.parent) && (node.height < ++height));\n}\n\nexport function Node(data) {\n  this.data = data;\n  this.depth =\n  this.height = 0;\n  this.parent = null;\n}\n\nNode.prototype = hierarchy.prototype = {\n  constructor: Node,\n  count: node_count,\n  each: node_each,\n  eachAfter: node_eachAfter,\n  eachBefore: node_eachBefore,\n  find: node_find,\n  sum: node_sum,\n  sort: node_sort,\n  path: node_path,\n  ancestors: node_ancestors,\n  descendants: node_descendants,\n  leaves: node_leaves,\n  links: node_links,\n  copy: node_copy,\n  [Symbol.iterator]: node_iterator\n};\n","export function optional(f) {\n  return f == null ? null : required(f);\n}\n\nexport function required(f) {\n  if (typeof f !== \"function\") throw new Error;\n  return f;\n}\n","export function constantZero() {\n  return 0;\n}\n\nexport default function(x) {\n  return function() {\n    return x;\n  };\n}\n","export default function(node) {\n  node.x0 = Math.round(node.x0);\n  node.y0 = Math.round(node.y0);\n  node.x1 = Math.round(node.x1);\n  node.y1 = Math.round(node.y1);\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (x1 - x0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.y0 = y0, node.y1 = y1;\n    node.x0 = x0, node.x1 = x0 += node.value * k;\n  }\n}\n","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      node,\n      i = -1,\n      n = nodes.length,\n      k = parent.value && (y1 - y0) / parent.value;\n\n  while (++i < n) {\n    node = nodes[i], node.x0 = x0, node.x1 = x1;\n    node.y0 = y0, node.y1 = y0 += node.value * k;\n  }\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], next = [], children, i, n, index = -1;\n  while (node = nodes.pop()) {\n    next.push(node);\n    if (children = node.children) {\n      for (i = 0, n = children.length; i < n; ++i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  while (node = next.pop()) {\n    callback.call(that, node, ++index, this);\n  }\n  return this;\n}\n","export default function(callback, that) {\n  var node = this, nodes = [node], children, i, index = -1;\n  while (node = nodes.pop()) {\n    callback.call(that, node, ++index, this);\n    if (children = node.children) {\n      for (i = children.length - 1; i >= 0; --i) {\n        nodes.push(children[i]);\n      }\n    }\n  }\n  return this;\n}\n","export default function(callback, that) {\n  let index = -1;\n  for (const node of this) {\n    if (callback.call(that, node, ++index, this)) {\n      return node;\n    }\n  }\n}\n","export default function(value) {\n  return this.eachAfter(function(node) {\n    var sum = +value(node.data) || 0,\n        children = node.children,\n        i = children && children.length;\n    while (--i >= 0) sum += children[i].value;\n    node.value = sum;\n  });\n}\n","export default function(compare) {\n  return this.eachBefore(function(node) {\n    if (node.children) {\n      node.children.sort(compare);\n    }\n  });\n}\n","export default function(end) {\n  var start = this,\n      ancestor = leastCommonAncestor(start, end),\n      nodes = [start];\n  while (start !== ancestor) {\n    start = start.parent;\n    nodes.push(start);\n  }\n  var k = nodes.length;\n  while (end !== ancestor) {\n    nodes.splice(k, 0, end);\n    end = end.parent;\n  }\n  return nodes;\n}\n\nfunction leastCommonAncestor(a, b) {\n  if (a === b) return a;\n  var aNodes = a.ancestors(),\n      bNodes = b.ancestors(),\n      c = null;\n  a = aNodes.pop();\n  b = bNodes.pop();\n  while (a === b) {\n    c = a;\n    a = aNodes.pop();\n    b = bNodes.pop();\n  }\n  return c;\n}\n","export default function() {\n  var node = this, nodes = [node];\n  while (node = node.parent) {\n    nodes.push(node);\n  }\n  return nodes;\n}\n","export default function() {\n  return Array.from(this);\n}\n","export default function() {\n  var leaves = [];\n  this.eachBefore(function(node) {\n    if (!node.children) {\n      leaves.push(node);\n    }\n  });\n  return leaves;\n}\n","export default function() {\n  var root = this, links = [];\n  root.each(function(node) {\n    if (node !== root) { // Don’t include the root’s parent, if any.\n      links.push({source: node.parent, target: node});\n    }\n  });\n  return links;\n}\n","export default function*() {\n  var node = this, current, next = [node], children, i, n;\n  do {\n    current = next.reverse(), next = [];\n    while (node = current.pop()) {\n      yield node;\n      if (children = node.children) {\n        for (i = 0, n = children.length; i < n; ++i) {\n          next.push(children[i]);\n        }\n      }\n    }\n  } while (next.length);\n}\n","import treemapDice from \"./dice.js\";\nimport treemapSlice from \"./slice.js\";\n\nexport var phi = (1 + Math.sqrt(5)) / 2;\n\nexport function squarifyRatio(ratio, parent, x0, y0, x1, y1) {\n  var rows = [],\n      nodes = parent.children,\n      row,\n      nodeValue,\n      i0 = 0,\n      i1 = 0,\n      n = nodes.length,\n      dx, dy,\n      value = parent.value,\n      sumValue,\n      minValue,\n      maxValue,\n      newRatio,\n      minRatio,\n      alpha,\n      beta;\n\n  while (i0 < n) {\n    dx = x1 - x0, dy = y1 - y0;\n\n    // Find the next non-empty node.\n    do sumValue = nodes[i1++].value; while (!sumValue && i1 < n);\n    minValue = maxValue = sumValue;\n    alpha = Math.max(dy / dx, dx / dy) / (value * ratio);\n    beta = sumValue * sumValue * alpha;\n    minRatio = Math.max(maxValue / beta, beta / minValue);\n\n    // Keep adding nodes while the aspect ratio maintains or improves.\n    for (; i1 < n; ++i1) {\n      sumValue += nodeValue = nodes[i1].value;\n      if (nodeValue < minValue) minValue = nodeValue;\n      if (nodeValue > maxValue) maxValue = nodeValue;\n      beta = sumValue * sumValue * alpha;\n      newRatio = Math.max(maxValue / beta, beta / minValue);\n      if (newRatio > minRatio) { sumValue -= nodeValue; break; }\n      minRatio = newRatio;\n    }\n\n    // Position and record the row orientation.\n    rows.push(row = {value: sumValue, dice: dx < dy, children: nodes.slice(i0, i1)});\n    if (row.dice) treemapDice(row, x0, y0, x1, value ? y0 += dy * sumValue / value : y1);\n    else treemapSlice(row, x0, y0, value ? x0 += dx * sumValue / value : x1, y1);\n    value -= sumValue, i0 = i1;\n  }\n\n  return rows;\n}\n\nexport default (function custom(ratio) {\n\n  function squarify(parent, x0, y0, x1, y1) {\n    squarifyRatio(ratio, parent, x0, y0, x1, y1);\n  }\n\n  squarify.ratio = function(x) {\n    return custom((x = +x) > 1 ? x : 1);\n  };\n\n  return squarify;\n})(phi);\n","export function initRange(domain, range) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: this.range(domain); break;\n    default: this.range(range).domain(domain); break;\n  }\n  return this;\n}\n\nexport function initInterpolator(domain, interpolator) {\n  switch (arguments.length) {\n    case 0: break;\n    case 1: {\n      if (typeof domain === \"function\") this.interpolator(domain);\n      else this.range(domain);\n      break;\n    }\n    default: {\n      this.domain(domain);\n      if (typeof interpolator === \"function\") this.interpolator(interpolator);\n      else this.range(interpolator);\n      break;\n    }\n  }\n  return this;\n}\n","import {InternMap} from \"d3-array\";\nimport {initRange} from \"./init.js\";\n\nexport const implicit = Symbol(\"implicit\");\n\nexport default function ordinal() {\n  var index = new InternMap(),\n      domain = [],\n      range = [],\n      unknown = implicit;\n\n  function scale(d) {\n    let i = index.get(d);\n    if (i === undefined) {\n      if (unknown !== implicit) return unknown;\n      index.set(d, i = domain.push(d) - 1);\n    }\n    return range[i % range.length];\n  }\n\n  scale.domain = function(_) {\n    if (!arguments.length) return domain.slice();\n    domain = [], index = new InternMap();\n    for (const value of _) {\n      if (index.has(value)) continue;\n      index.set(value, domain.push(value) - 1);\n    }\n    return scale;\n  };\n\n  scale.range = function(_) {\n    return arguments.length ? (range = Array.from(_), scale) : range.slice();\n  };\n\n  scale.unknown = function(_) {\n    return arguments.length ? (unknown = _, scale) : unknown;\n  };\n\n  scale.copy = function() {\n    return ordinal(domain, range).unknown(unknown);\n  };\n\n  initRange.apply(scale, arguments);\n\n  return scale;\n}\n","export default function(specifier) {\n  var n = specifier.length / 6 | 0, colors = new Array(n), i = 0;\n  while (i < n) colors[i] = \"#\" + specifier.slice(i * 6, ++i * 6);\n  return colors;\n}\n","import colors from \"../colors.js\";\n\nexport default colors(\"4e79a7f28e2ce1575976b7b259a14fedc949af7aa1ff9da79c755fbab0ab\");\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export var abs = Math.abs;\nexport var atan2 = Math.atan2;\nexport var cos = Math.cos;\nexport var max = Math.max;\nexport var min = Math.min;\nexport var sin = Math.sin;\nexport var sqrt = Math.sqrt;\n\nexport var epsilon = 1e-12;\nexport var pi = Math.PI;\nexport var halfPi = pi / 2;\nexport var tau = 2 * pi;\n\nexport function acos(x) {\n  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);\n}\n\nexport function asin(x) {\n  return x >= 1 ? halfPi : x <= -1 ? -halfPi : Math.asin(x);\n}\n","import {path} from \"d3-path\";\nimport constant from \"./constant.js\";\nimport {abs, acos, asin, atan2, cos, epsilon, halfPi, max, min, pi, sin, sqrt, tau} from \"./math.js\";\n\nfunction arcInnerRadius(d) {\n  return d.innerRadius;\n}\n\nfunction arcOuterRadius(d) {\n  return d.outerRadius;\n}\n\nfunction arcStartAngle(d) {\n  return d.startAngle;\n}\n\nfunction arcEndAngle(d) {\n  return d.endAngle;\n}\n\nfunction arcPadAngle(d) {\n  return d && d.padAngle; // Note: optional!\n}\n\nfunction intersect(x0, y0, x1, y1, x2, y2, x3, y3) {\n  var x10 = x1 - x0, y10 = y1 - y0,\n      x32 = x3 - x2, y32 = y3 - y2,\n      t = y32 * x10 - x32 * y10;\n  if (t * t < epsilon) return;\n  t = (x32 * (y0 - y2) - y32 * (x0 - x2)) / t;\n  return [x0 + t * x10, y0 + t * y10];\n}\n\n// Compute perpendicular offset line of length rc.\n// http://mathworld.wolfram.com/Circle-LineIntersection.html\nfunction cornerTangents(x0, y0, x1, y1, r1, rc, cw) {\n  var x01 = x0 - x1,\n      y01 = y0 - y1,\n      lo = (cw ? rc : -rc) / sqrt(x01 * x01 + y01 * y01),\n      ox = lo * y01,\n      oy = -lo * x01,\n      x11 = x0 + ox,\n      y11 = y0 + oy,\n      x10 = x1 + ox,\n      y10 = y1 + oy,\n      x00 = (x11 + x10) / 2,\n      y00 = (y11 + y10) / 2,\n      dx = x10 - x11,\n      dy = y10 - y11,\n      d2 = dx * dx + dy * dy,\n      r = r1 - rc,\n      D = x11 * y10 - x10 * y11,\n      d = (dy < 0 ? -1 : 1) * sqrt(max(0, r * r * d2 - D * D)),\n      cx0 = (D * dy - dx * d) / d2,\n      cy0 = (-D * dx - dy * d) / d2,\n      cx1 = (D * dy + dx * d) / d2,\n      cy1 = (-D * dx + dy * d) / d2,\n      dx0 = cx0 - x00,\n      dy0 = cy0 - y00,\n      dx1 = cx1 - x00,\n      dy1 = cy1 - y00;\n\n  // Pick the closer of the two intersection points.\n  // TODO Is there a faster way to determine which intersection to use?\n  if (dx0 * dx0 + dy0 * dy0 > dx1 * dx1 + dy1 * dy1) cx0 = cx1, cy0 = cy1;\n\n  return {\n    cx: cx0,\n    cy: cy0,\n    x01: -ox,\n    y01: -oy,\n    x11: cx0 * (r1 / r - 1),\n    y11: cy0 * (r1 / r - 1)\n  };\n}\n\nexport default function() {\n  var innerRadius = arcInnerRadius,\n      outerRadius = arcOuterRadius,\n      cornerRadius = constant(0),\n      padRadius = null,\n      startAngle = arcStartAngle,\n      endAngle = arcEndAngle,\n      padAngle = arcPadAngle,\n      context = null;\n\n  function arc() {\n    var buffer,\n        r,\n        r0 = +innerRadius.apply(this, arguments),\n        r1 = +outerRadius.apply(this, arguments),\n        a0 = startAngle.apply(this, arguments) - halfPi,\n        a1 = endAngle.apply(this, arguments) - halfPi,\n        da = abs(a1 - a0),\n        cw = a1 > a0;\n\n    if (!context) context = buffer = path();\n\n    // Ensure that the outer radius is always larger than the inner radius.\n    if (r1 < r0) r = r1, r1 = r0, r0 = r;\n\n    // Is it a point?\n    if (!(r1 > epsilon)) context.moveTo(0, 0);\n\n    // Or is it a circle or annulus?\n    else if (da > tau - epsilon) {\n      context.moveTo(r1 * cos(a0), r1 * sin(a0));\n      context.arc(0, 0, r1, a0, a1, !cw);\n      if (r0 > epsilon) {\n        context.moveTo(r0 * cos(a1), r0 * sin(a1));\n        context.arc(0, 0, r0, a1, a0, cw);\n      }\n    }\n\n    // Or is it a circular or annular sector?\n    else {\n      var a01 = a0,\n          a11 = a1,\n          a00 = a0,\n          a10 = a1,\n          da0 = da,\n          da1 = da,\n          ap = padAngle.apply(this, arguments) / 2,\n          rp = (ap > epsilon) && (padRadius ? +padRadius.apply(this, arguments) : sqrt(r0 * r0 + r1 * r1)),\n          rc = min(abs(r1 - r0) / 2, +cornerRadius.apply(this, arguments)),\n          rc0 = rc,\n          rc1 = rc,\n          t0,\n          t1;\n\n      // Apply padding? Note that since r1 ≥ r0, da1 ≥ da0.\n      if (rp > epsilon) {\n        var p0 = asin(rp / r0 * sin(ap)),\n            p1 = asin(rp / r1 * sin(ap));\n        if ((da0 -= p0 * 2) > epsilon) p0 *= (cw ? 1 : -1), a00 += p0, a10 -= p0;\n        else da0 = 0, a00 = a10 = (a0 + a1) / 2;\n        if ((da1 -= p1 * 2) > epsilon) p1 *= (cw ? 1 : -1), a01 += p1, a11 -= p1;\n        else da1 = 0, a01 = a11 = (a0 + a1) / 2;\n      }\n\n      var x01 = r1 * cos(a01),\n          y01 = r1 * sin(a01),\n          x10 = r0 * cos(a10),\n          y10 = r0 * sin(a10);\n\n      // Apply rounded corners?\n      if (rc > epsilon) {\n        var x11 = r1 * cos(a11),\n            y11 = r1 * sin(a11),\n            x00 = r0 * cos(a00),\n            y00 = r0 * sin(a00),\n            oc;\n\n        // Restrict the corner radius according to the sector angle.\n        if (da < pi && (oc = intersect(x01, y01, x00, y00, x11, y11, x10, y10))) {\n          var ax = x01 - oc[0],\n              ay = y01 - oc[1],\n              bx = x11 - oc[0],\n              by = y11 - oc[1],\n              kc = 1 / sin(acos((ax * bx + ay * by) / (sqrt(ax * ax + ay * ay) * sqrt(bx * bx + by * by))) / 2),\n              lc = sqrt(oc[0] * oc[0] + oc[1] * oc[1]);\n          rc0 = min(rc, (r0 - lc) / (kc - 1));\n          rc1 = min(rc, (r1 - lc) / (kc + 1));\n        }\n      }\n\n      // Is the sector collapsed to a line?\n      if (!(da1 > epsilon)) context.moveTo(x01, y01);\n\n      // Does the sector’s outer ring have rounded corners?\n      else if (rc1 > epsilon) {\n        t0 = cornerTangents(x00, y00, x01, y01, r1, rc1, cw);\n        t1 = cornerTangents(x11, y11, x10, y10, r1, rc1, cw);\n\n        context.moveTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc1 < rc) context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc1, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r1, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), !cw);\n          context.arc(t1.cx, t1.cy, rc1, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the outer ring just a circular arc?\n      else context.moveTo(x01, y01), context.arc(0, 0, r1, a01, a11, !cw);\n\n      // Is there no inner ring, and it’s a circular sector?\n      // Or perhaps it’s an annular sector collapsed due to padding?\n      if (!(r0 > epsilon) || !(da0 > epsilon)) context.lineTo(x10, y10);\n\n      // Does the sector’s inner ring (or point) have rounded corners?\n      else if (rc0 > epsilon) {\n        t0 = cornerTangents(x10, y10, x11, y11, r0, -rc0, cw);\n        t1 = cornerTangents(x01, y01, x00, y00, r0, -rc0, cw);\n\n        context.lineTo(t0.cx + t0.x01, t0.cy + t0.y01);\n\n        // Have the corners merged?\n        if (rc0 < rc) context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t1.y01, t1.x01), !cw);\n\n        // Otherwise, draw the two corners and the ring.\n        else {\n          context.arc(t0.cx, t0.cy, rc0, atan2(t0.y01, t0.x01), atan2(t0.y11, t0.x11), !cw);\n          context.arc(0, 0, r0, atan2(t0.cy + t0.y11, t0.cx + t0.x11), atan2(t1.cy + t1.y11, t1.cx + t1.x11), cw);\n          context.arc(t1.cx, t1.cy, rc0, atan2(t1.y11, t1.x11), atan2(t1.y01, t1.x01), !cw);\n        }\n      }\n\n      // Or is the inner ring just a circular arc?\n      else context.arc(0, 0, r0, a10, a00, cw);\n    }\n\n    context.closePath();\n\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  arc.centroid = function() {\n    var r = (+innerRadius.apply(this, arguments) + +outerRadius.apply(this, arguments)) / 2,\n        a = (+startAngle.apply(this, arguments) + +endAngle.apply(this, arguments)) / 2 - pi / 2;\n    return [cos(a) * r, sin(a) * r];\n  };\n\n  arc.innerRadius = function(_) {\n    return arguments.length ? (innerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : innerRadius;\n  };\n\n  arc.outerRadius = function(_) {\n    return arguments.length ? (outerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : outerRadius;\n  };\n\n  arc.cornerRadius = function(_) {\n    return arguments.length ? (cornerRadius = typeof _ === \"function\" ? _ : constant(+_), arc) : cornerRadius;\n  };\n\n  arc.padRadius = function(_) {\n    return arguments.length ? (padRadius = _ == null ? null : typeof _ === \"function\" ? _ : constant(+_), arc) : padRadius;\n  };\n\n  arc.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : startAngle;\n  };\n\n  arc.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : endAngle;\n  };\n\n  arc.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), arc) : padAngle;\n  };\n\n  arc.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), arc) : context;\n  };\n\n  return arc;\n}\n","export var slice = Array.prototype.slice;\n\nexport default function(x) {\n  return typeof x === \"object\" && \"length\" in x\n    ? x // Array, TypedArray, NodeList, array-like\n    : Array.from(x); // Map, Set, iterable, string, or anything else\n}\n","export default function(a, b) {\n  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;\n}\n","export default function(d) {\n  return d;\n}\n","export default x => () => x;\n","export default function ZoomEvent(type, {\n  sourceEvent,\n  target,\n  transform,\n  dispatch\n}) {\n  Object.defineProperties(this, {\n    type: {value: type, enumerable: true, configurable: true},\n    sourceEvent: {value: sourceEvent, enumerable: true, configurable: true},\n    target: {value: target, enumerable: true, configurable: true},\n    transform: {value: transform, enumerable: true, configurable: true},\n    _: {value: dispatch}\n  });\n}\n","export function Transform(k, x, y) {\n  this.k = k;\n  this.x = x;\n  this.y = y;\n}\n\nTransform.prototype = {\n  constructor: Transform,\n  scale: function(k) {\n    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);\n  },\n  translate: function(x, y) {\n    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);\n  },\n  apply: function(point) {\n    return [point[0] * this.k + this.x, point[1] * this.k + this.y];\n  },\n  applyX: function(x) {\n    return x * this.k + this.x;\n  },\n  applyY: function(y) {\n    return y * this.k + this.y;\n  },\n  invert: function(location) {\n    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];\n  },\n  invertX: function(x) {\n    return (x - this.x) / this.k;\n  },\n  invertY: function(y) {\n    return (y - this.y) / this.k;\n  },\n  rescaleX: function(x) {\n    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));\n  },\n  rescaleY: function(y) {\n    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));\n  },\n  toString: function() {\n    return \"translate(\" + this.x + \",\" + this.y + \") scale(\" + this.k + \")\";\n  }\n};\n\nexport var identity = new Transform(1, 0, 0);\n\ntransform.prototype = Transform.prototype;\n\nexport default function transform(node) {\n  while (!node.__zoom) if (!(node = node.parentNode)) return identity;\n  return node.__zoom;\n}\n","export function nopropagation(event) {\n  event.stopImmediatePropagation();\n}\n\nexport default function(event) {\n  event.preventDefault();\n  event.stopImmediatePropagation();\n}\n","import {dispatch} from \"d3-dispatch\";\nimport {dragDisable, dragEnable} from \"d3-drag\";\nimport {interpolateZoom} from \"d3-interpolate\";\nimport {select, pointer} from \"d3-selection\";\nimport {interrupt} from \"d3-transition\";\nimport constant from \"./constant.js\";\nimport ZoomEvent from \"./event.js\";\nimport {Transform, identity} from \"./transform.js\";\nimport noevent, {nopropagation} from \"./noevent.js\";\n\n// Ignore right-click, since that should open the context menu.\n// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event\nfunction defaultFilter(event) {\n  return (!event.ctrlKey || event.type === 'wheel') && !event.button;\n}\n\nfunction defaultExtent() {\n  var e = this;\n  if (e instanceof SVGElement) {\n    e = e.ownerSVGElement || e;\n    if (e.hasAttribute(\"viewBox\")) {\n      e = e.viewBox.baseVal;\n      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];\n    }\n    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];\n  }\n  return [[0, 0], [e.clientWidth, e.clientHeight]];\n}\n\nfunction defaultTransform() {\n  return this.__zoom || identity;\n}\n\nfunction defaultWheelDelta(event) {\n  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);\n}\n\nfunction defaultTouchable() {\n  return navigator.maxTouchPoints || (\"ontouchstart\" in this);\n}\n\nfunction defaultConstrain(transform, extent, translateExtent) {\n  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],\n      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],\n      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],\n      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];\n  return transform.translate(\n    dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1),\n    dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1)\n  );\n}\n\nexport default function() {\n  var filter = defaultFilter,\n      extent = defaultExtent,\n      constrain = defaultConstrain,\n      wheelDelta = defaultWheelDelta,\n      touchable = defaultTouchable,\n      scaleExtent = [0, Infinity],\n      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],\n      duration = 250,\n      interpolate = interpolateZoom,\n      listeners = dispatch(\"start\", \"zoom\", \"end\"),\n      touchstarting,\n      touchfirst,\n      touchending,\n      touchDelay = 500,\n      wheelDelay = 150,\n      clickDistance2 = 0,\n      tapDistance = 10;\n\n  function zoom(selection) {\n    selection\n        .property(\"__zoom\", defaultTransform)\n        .on(\"wheel.zoom\", wheeled, {passive: false})\n        .on(\"mousedown.zoom\", mousedowned)\n        .on(\"dblclick.zoom\", dblclicked)\n      .filter(touchable)\n        .on(\"touchstart.zoom\", touchstarted)\n        .on(\"touchmove.zoom\", touchmoved)\n        .on(\"touchend.zoom touchcancel.zoom\", touchended)\n        .style(\"-webkit-tap-highlight-color\", \"rgba(0,0,0,0)\");\n  }\n\n  zoom.transform = function(collection, transform, point, event) {\n    var selection = collection.selection ? collection.selection() : collection;\n    selection.property(\"__zoom\", defaultTransform);\n    if (collection !== selection) {\n      schedule(collection, transform, point, event);\n    } else {\n      selection.interrupt().each(function() {\n        gesture(this, arguments)\n          .event(event)\n          .start()\n          .zoom(null, typeof transform === \"function\" ? transform.apply(this, arguments) : transform)\n          .end();\n      });\n    }\n  };\n\n  zoom.scaleBy = function(selection, k, p, event) {\n    zoom.scaleTo(selection, function() {\n      var k0 = this.__zoom.k,\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return k0 * k1;\n    }, p, event);\n  };\n\n  zoom.scaleTo = function(selection, k, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t0 = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p,\n          p1 = t0.invert(p0),\n          k1 = typeof k === \"function\" ? k.apply(this, arguments) : k;\n      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);\n    }, p, event);\n  };\n\n  zoom.translateBy = function(selection, x, y, event) {\n    zoom.transform(selection, function() {\n      return constrain(this.__zoom.translate(\n        typeof x === \"function\" ? x.apply(this, arguments) : x,\n        typeof y === \"function\" ? y.apply(this, arguments) : y\n      ), extent.apply(this, arguments), translateExtent);\n    }, null, event);\n  };\n\n  zoom.translateTo = function(selection, x, y, p, event) {\n    zoom.transform(selection, function() {\n      var e = extent.apply(this, arguments),\n          t = this.__zoom,\n          p0 = p == null ? centroid(e) : typeof p === \"function\" ? p.apply(this, arguments) : p;\n      return constrain(identity.translate(p0[0], p0[1]).scale(t.k).translate(\n        typeof x === \"function\" ? -x.apply(this, arguments) : -x,\n        typeof y === \"function\" ? -y.apply(this, arguments) : -y\n      ), e, translateExtent);\n    }, p, event);\n  };\n\n  function scale(transform, k) {\n    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));\n    return k === transform.k ? transform : new Transform(k, transform.x, transform.y);\n  }\n\n  function translate(transform, p0, p1) {\n    var x = p0[0] - p1[0] * transform.k, y = p0[1] - p1[1] * transform.k;\n    return x === transform.x && y === transform.y ? transform : new Transform(transform.k, x, y);\n  }\n\n  function centroid(extent) {\n    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];\n  }\n\n  function schedule(transition, transform, point, event) {\n    transition\n        .on(\"start.zoom\", function() { gesture(this, arguments).event(event).start(); })\n        .on(\"interrupt.zoom end.zoom\", function() { gesture(this, arguments).event(event).end(); })\n        .tween(\"zoom\", function() {\n          var that = this,\n              args = arguments,\n              g = gesture(that, args).event(event),\n              e = extent.apply(that, args),\n              p = point == null ? centroid(e) : typeof point === \"function\" ? point.apply(that, args) : point,\n              w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),\n              a = that.__zoom,\n              b = typeof transform === \"function\" ? transform.apply(that, args) : transform,\n              i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));\n          return function(t) {\n            if (t === 1) t = b; // Avoid rounding error on end.\n            else { var l = i(t), k = w / l[2]; t = new Transform(k, p[0] - l[0] * k, p[1] - l[1] * k); }\n            g.zoom(null, t);\n          };\n        });\n  }\n\n  function gesture(that, args, clean) {\n    return (!clean && that.__zooming) || new Gesture(that, args);\n  }\n\n  function Gesture(that, args) {\n    this.that = that;\n    this.args = args;\n    this.active = 0;\n    this.sourceEvent = null;\n    this.extent = extent.apply(that, args);\n    this.taps = 0;\n  }\n\n  Gesture.prototype = {\n    event: function(event) {\n      if (event) this.sourceEvent = event;\n      return this;\n    },\n    start: function() {\n      if (++this.active === 1) {\n        this.that.__zooming = this;\n        this.emit(\"start\");\n      }\n      return this;\n    },\n    zoom: function(key, transform) {\n      if (this.mouse && key !== \"mouse\") this.mouse[1] = transform.invert(this.mouse[0]);\n      if (this.touch0 && key !== \"touch\") this.touch0[1] = transform.invert(this.touch0[0]);\n      if (this.touch1 && key !== \"touch\") this.touch1[1] = transform.invert(this.touch1[0]);\n      this.that.__zoom = transform;\n      this.emit(\"zoom\");\n      return this;\n    },\n    end: function() {\n      if (--this.active === 0) {\n        delete this.that.__zooming;\n        this.emit(\"end\");\n      }\n      return this;\n    },\n    emit: function(type) {\n      var d = select(this.that).datum();\n      listeners.call(\n        type,\n        this.that,\n        new ZoomEvent(type, {\n          sourceEvent: this.sourceEvent,\n          target: zoom,\n          type,\n          transform: this.that.__zoom,\n          dispatch: listeners\n        }),\n        d\n      );\n    }\n  };\n\n  function wheeled(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var g = gesture(this, args).event(event),\n        t = this.__zoom,\n        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),\n        p = pointer(event);\n\n    // If the mouse is in the same location as before, reuse it.\n    // If there were recent wheel events, reset the wheel idle timeout.\n    if (g.wheel) {\n      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {\n        g.mouse[1] = t.invert(g.mouse[0] = p);\n      }\n      clearTimeout(g.wheel);\n    }\n\n    // If this wheel event won’t trigger a transform change, ignore it.\n    else if (t.k === k) return;\n\n    // Otherwise, capture the mouse point and location at the start.\n    else {\n      g.mouse = [p, t.invert(p)];\n      interrupt(this);\n      g.start();\n    }\n\n    noevent(event);\n    g.wheel = setTimeout(wheelidled, wheelDelay);\n    g.zoom(\"mouse\", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));\n\n    function wheelidled() {\n      g.wheel = null;\n      g.end();\n    }\n  }\n\n  function mousedowned(event, ...args) {\n    if (touchending || !filter.apply(this, arguments)) return;\n    var currentTarget = event.currentTarget,\n        g = gesture(this, args, true).event(event),\n        v = select(event.view).on(\"mousemove.zoom\", mousemoved, true).on(\"mouseup.zoom\", mouseupped, true),\n        p = pointer(event, currentTarget),\n        x0 = event.clientX,\n        y0 = event.clientY;\n\n    dragDisable(event.view);\n    nopropagation(event);\n    g.mouse = [p, this.__zoom.invert(p)];\n    interrupt(this);\n    g.start();\n\n    function mousemoved(event) {\n      noevent(event);\n      if (!g.moved) {\n        var dx = event.clientX - x0, dy = event.clientY - y0;\n        g.moved = dx * dx + dy * dy > clickDistance2;\n      }\n      g.event(event)\n       .zoom(\"mouse\", constrain(translate(g.that.__zoom, g.mouse[0] = pointer(event, currentTarget), g.mouse[1]), g.extent, translateExtent));\n    }\n\n    function mouseupped(event) {\n      v.on(\"mousemove.zoom mouseup.zoom\", null);\n      dragEnable(event.view, g.moved);\n      noevent(event);\n      g.event(event).end();\n    }\n  }\n\n  function dblclicked(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var t0 = this.__zoom,\n        p0 = pointer(event.changedTouches ? event.changedTouches[0] : event, this),\n        p1 = t0.invert(p0),\n        k1 = t0.k * (event.shiftKey ? 0.5 : 2),\n        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);\n\n    noevent(event);\n    if (duration > 0) select(this).transition().duration(duration).call(schedule, t1, p0, event);\n    else select(this).call(zoom.transform, t1, p0, event);\n  }\n\n  function touchstarted(event, ...args) {\n    if (!filter.apply(this, arguments)) return;\n    var touches = event.touches,\n        n = touches.length,\n        g = gesture(this, args, event.changedTouches.length === n).event(event),\n        started, i, t, p;\n\n    nopropagation(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      p = [p, this.__zoom.invert(p), t.identifier];\n      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;\n      else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;\n    }\n\n    if (touchstarting) touchstarting = clearTimeout(touchstarting);\n\n    if (started) {\n      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function() { touchstarting = null; }, touchDelay);\n      interrupt(this);\n      g.start();\n    }\n  }\n\n  function touchmoved(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t, p, l;\n\n    noevent(event);\n    for (i = 0; i < n; ++i) {\n      t = touches[i], p = pointer(t, this);\n      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;\n      else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;\n    }\n    t = g.that.__zoom;\n    if (g.touch1) {\n      var p0 = g.touch0[0], l0 = g.touch0[1],\n          p1 = g.touch1[0], l1 = g.touch1[1],\n          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,\n          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;\n      t = scale(t, Math.sqrt(dp / dl));\n      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];\n      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];\n    }\n    else if (g.touch0) p = g.touch0[0], l = g.touch0[1];\n    else return;\n\n    g.zoom(\"touch\", constrain(translate(t, p, l), g.extent, translateExtent));\n  }\n\n  function touchended(event, ...args) {\n    if (!this.__zooming) return;\n    var g = gesture(this, args).event(event),\n        touches = event.changedTouches,\n        n = touches.length, i, t;\n\n    nopropagation(event);\n    if (touchending) clearTimeout(touchending);\n    touchending = setTimeout(function() { touchending = null; }, touchDelay);\n    for (i = 0; i < n; ++i) {\n      t = touches[i];\n      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;\n      else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;\n    }\n    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;\n    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);\n    else {\n      g.end();\n      // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.\n      if (g.taps === 2) {\n        t = pointer(t, this);\n        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {\n          var p = select(this).on(\"dblclick.zoom\");\n          if (p) p.apply(this, arguments);\n        }\n      }\n    }\n  }\n\n  zoom.wheelDelta = function(_) {\n    return arguments.length ? (wheelDelta = typeof _ === \"function\" ? _ : constant(+_), zoom) : wheelDelta;\n  };\n\n  zoom.filter = function(_) {\n    return arguments.length ? (filter = typeof _ === \"function\" ? _ : constant(!!_), zoom) : filter;\n  };\n\n  zoom.touchable = function(_) {\n    return arguments.length ? (touchable = typeof _ === \"function\" ? _ : constant(!!_), zoom) : touchable;\n  };\n\n  zoom.extent = function(_) {\n    return arguments.length ? (extent = typeof _ === \"function\" ? _ : constant([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;\n  };\n\n  zoom.scaleExtent = function(_) {\n    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];\n  };\n\n  zoom.translateExtent = function(_) {\n    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];\n  };\n\n  zoom.constrain = function(_) {\n    return arguments.length ? (constrain = _, zoom) : constrain;\n  };\n\n  zoom.duration = function(_) {\n    return arguments.length ? (duration = +_, zoom) : duration;\n  };\n\n  zoom.interpolate = function(_) {\n    return arguments.length ? (interpolate = _, zoom) : interpolate;\n  };\n\n  zoom.on = function() {\n    var value = listeners.on.apply(listeners, arguments);\n    return value === listeners ? zoom : value;\n  };\n\n  zoom.clickDistance = function(_) {\n    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);\n  };\n\n  zoom.tapDistance = function(_) {\n    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;\n  };\n\n  return zoom;\n}\n","import { HPCCSVGElement, attribute, customElement, css, ChangeMap, html, ref, display } from \"../common\";\r\nimport * as d3 from \"d3\";\r\n\r\nconst template = html<HPCCZoomElement>`\\\r\n<svg ${ref(\"_svg\")}>\r\n    <foreignObject ${ref(\"_content\")} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" style=\"overflow:visible\">\r\n        <slot></slot>\r\n    </foreignObject>\r\n</svg>`;\r\n\r\nconst styles = css`\r\n${display(\"inline-block\")} \r\n`;\r\n\r\n@customElement(\"hpcc-zoom\", { template, styles })\r\nexport class HPCCZoomElement extends HPCCSVGElement {\r\n    /**\r\n     * The minimum scale extent that can be applied to the content\r\n     *\r\n     * @defaultValue 0.5\r\n     */\r\n    @attribute({ type: \"number\" }) scaleMin = 0.5;\r\n\r\n    /**\r\n     * The maximum scale extent that can be applied to the content\r\n     *\r\n     * @defaultValue 0.5\r\n     */\r\n    @attribute({ type: \"number\" }) scaleMax = 1.5;\r\n\r\n    /**\r\n     * The current x-position of the content\r\n     *\r\n     * @defaultValue 0\r\n     */\r\n    @attribute({ type: \"number\" }) x = 0;\r\n\r\n    /**\r\n     * The current y-position of the content\r\n     *\r\n     * @defaultValue 0\r\n     */\r\n    @attribute({ type: \"number\" }) y = 0;\r\n\r\n    /**\r\n     * The current scale of the content\r\n     *\r\n     * @defaultValue 1\r\n     */\r\n    @attribute({ type: \"number\" }) scale = 1;\r\n\r\n    protected svg: d3.Selection<SVGSVGElement, any, any, any>;\r\n    _content: SVGGElement;\r\n    protected content: d3.Selection<SVGGElement, any, any, any>;\r\n\r\n    _zoom = d3\r\n        .zoom<SVGSVGElement, unknown>()\r\n        .duration(0)\r\n        .on(\"zoom\", ({ transform }) => {\r\n            this.x = transform.x;\r\n            this.y = transform.y;\r\n            this.scale = transform.k;\r\n            this.$emit(\"changed\");\r\n        });\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    enter() {\r\n        super.enter();\r\n        if (!this.isConnected) throw new Error(\"Hmmmmm\");\r\n        this.svg = d3.select(this.shadowRoot! as any).select(\"svg\");\r\n        this.content = this.svg.select(\"foreignObject\");\r\n        this.svg.call(this._zoom, d3.zoomIdentity.translate(this.x, this.y).scale(this.scale));\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        // this.svg.attr(\"viewBox\", \"0 0 0 0\");\r\n        this.content\r\n            .attr(\"width\", `${this.clientWidth}`)\r\n            .attr(\"height\", `${this.clientHeight}`)\r\n            ;\r\n        this._zoom\r\n            .extent([\r\n                [0, 0],\r\n                [this.clientWidth, this.clientHeight]\r\n            ])\r\n            .scaleExtent([this.scaleMin, this.scaleMax]);\r\n        if (changes.x !== undefined || changes.y !== undefined || changes.scale !== undefined) {\r\n            this.content.attr(\"transform\", d3.zoomIdentity.translate(this.x, this.y).scale(this.scale).toString());\r\n            this.$emit(\"zoom\");\r\n        }\r\n        this._zoom.transform(this.svg, d3.zoomIdentity.translate(this.x, this.y).scale(this.scale));\r\n    }\r\n}\r\n","export type TextSize = { width: number; height: number; };\r\nlet g_fontCanvas;\r\nlet g_fontSizeContext: CanvasRenderingContext2D;\r\nconst g_fontSizeContextCache: { [key: string]: TextSize } = {};\r\n\r\nfunction globalCanvasElement() {\r\n    if (!g_fontCanvas) {\r\n        g_fontCanvas = document.getElementById(\"hpcc_js_font_size\");\r\n        if (!g_fontCanvas) {\r\n            g_fontCanvas = document.createElement(\"canvas\");\r\n            g_fontCanvas.id = \"hpcc_js_font_size\";\r\n            document.body.appendChild(g_fontCanvas);\r\n        }\r\n    }\r\n    return g_fontCanvas;\r\n}\r\n\r\nfunction globalCanvasContext() {\r\n    if (!g_fontSizeContext) {\r\n        g_fontCanvas = globalCanvasElement();\r\n        g_fontSizeContext = (g_fontCanvas as HTMLCanvasElement).getContext(\"2d\")!;\r\n    }\r\n    return g_fontSizeContext;\r\n}\r\n\r\nexport function textSize(_text: string | string[], fontName: string = \"Verdana\", fontSize: number = 12, bold: boolean = false): Readonly<TextSize> {\r\n    g_fontSizeContext = globalCanvasContext();\r\n    const text = _text instanceof Array ? _text : [_text];\r\n    const hash = `${bold}::${fontSize}::${fontName}::${text.join(\"::\")}`;\r\n    let retVal = g_fontSizeContextCache[hash];\r\n    if (!retVal) {\r\n        g_fontSizeContext.font = `${bold ? \"bold \" : \"\"}${fontSize}px ${fontName}`;\r\n        g_fontSizeContextCache[hash] = retVal = {\r\n            width: Math.max(...text.map(t => g_fontSizeContext.measureText(\"\" + t).width)),\r\n            height: fontSize * text.length\r\n        };\r\n    }\r\n    return retVal;\r\n}\r\n\r\n","import { Widget } from \"./Widget\";\r\nimport * as d3 from \"d3\";\r\nimport { HPCCElement } from \"../common\";\r\n\r\ntype Point = { x: number, y: number };\r\ntype Rect = { x: number, y: number, width: number, height: number };\r\n\r\nconst lerp = function (point: Point, that: Point, t: number): Point {\r\n    //  From https://github.com/thelonious/js-intersections\r\n    return {\r\n        x: point.x + (that.x - point.x) * t,\r\n        y: point.y + (that.y - point.y) * t\r\n    };\r\n};\r\n\r\ntype LineIntersection = { type: \"Intersection\" | \"No Intersection\" | \"Coincident\" | \"Parallel\", points: Point[] };\r\nconst intersectLineLine = function (a1: Point, a2: Point, b1: Point, b2: Point): LineIntersection {\r\n    //  From https://github.com/thelonious/js-intersections\r\n    const result: LineIntersection = { type: \"Parallel\", points: [] };\r\n    const uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x);\r\n    const ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x);\r\n    const uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\r\n\r\n    if (uB !== 0) {\r\n        const ua = uaT / uB;\r\n        const ub = ubT / uB;\r\n\r\n        if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\r\n            result.type = \"Intersection\";\r\n            result.points.push({\r\n                x: a1.x + ua * (a2.x - a1.x),\r\n                y: a1.y + ua * (a2.y - a1.y)\r\n            });\r\n        } else {\r\n            result.type = \"No Intersection\";\r\n        }\r\n    } else {\r\n        if (uaT === 0 || ubT === 0) {\r\n            result.type = \"Coincident\";\r\n        } else {\r\n            result.type = \"Parallel\";\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\ntype CircleIntersection = { type: \"Outside\" | \"Tangent\" | \"Inside\" | \"Intersection\", points: Point[] };\r\nconst intersectCircleLine = function (c: Point, r: number, a1: Point, a2: Point): CircleIntersection {\r\n    //  From https://github.com/thelonious/js-intersections\r\n    const result: CircleIntersection = { type: \"Intersection\", points: [] };\r\n    const a = (a2.x - a1.x) * (a2.x - a1.x) +\r\n        (a2.y - a1.y) * (a2.y - a1.y);\r\n    const b = 2 * ((a2.x - a1.x) * (a1.x - c.x) +\r\n        (a2.y - a1.y) * (a1.y - c.y));\r\n    const cc = c.x * c.x + c.y * c.y + a1.x * a1.x + a1.y * a1.y -\r\n        2 * (c.x * a1.x + c.y * a1.y) - r * r;\r\n    const deter = b * b - 4 * a * cc;\r\n\r\n    if (deter < 0) {\r\n        result.type = \"Outside\";\r\n    } else if (deter === 0) {\r\n        result.type = \"Tangent\";\r\n        // NOTE: should calculate this point\r\n    } else {\r\n        const e = Math.sqrt(deter);\r\n        const u1 = (-b + e) / (2 * a);\r\n        const u2 = (-b - e) / (2 * a);\r\n\r\n        if ((u1 < 0 || u1 > 1) && (u2 < 0 || u2 > 1)) {\r\n            if ((u1 < 0 && u2 < 0) || (u1 > 1 && u2 > 1)) {\r\n                result.type = \"Outside\";\r\n            } else {\r\n                result.type = \"Inside\";\r\n            }\r\n        } else {\r\n            result.type = \"Intersection\";\r\n\r\n            if (0 <= u1 && u1 <= 1)\r\n                result.points.push(lerp(a1, a2, u1));\r\n\r\n            if (0 <= u2 && u2 <= 1)\r\n                result.points.push(lerp(a1, a2, u2));\r\n        }\r\n    }\r\n\r\n    return result;\r\n};\r\n\r\nexport class SVGWidget extends Widget {\r\n\r\n    protected _boundingBox;\r\n    _palette: d3.ScaleOrdinal<string, string, never>;\r\n\r\n    constructor(host: HPCCElement) {\r\n        super(host);\r\n        this._boundingBox = null;\r\n    }\r\n\r\n    fillColor(row: any[], column?, value?, origRow?): string {\r\n        return this._palette(row[0]);\r\n    }\r\n\r\n    getOffsetPos(): Point {\r\n        const retVal = { x: 0, y: 0 };\r\n        return retVal;\r\n    }\r\n\r\n    //  Intersections  ---\r\n    containsCircle(radius: number, point: Point) {\r\n        const center = this.getOffsetPos();\r\n        return this.distance(center, point) <= radius;\r\n    }\r\n\r\n    intersectRectRect(rect1: Rect, rect2: Rect): Rect {\r\n        const x = Math.max(rect1.x, rect2.x);\r\n        const y = Math.max(rect1.y, rect2.y);\r\n        const xLimit = (rect1.x < rect2.x) ? Math.min(rect1.x + rect1.width, rect2.x + rect2.width) : Math.min(rect2.x + rect2.width, rect1.x + rect1.width);\r\n        const yLimit = (rect1.y < rect2.y) ? Math.min(rect1.y + rect1.height, rect2.y + rect2.height) : Math.min(rect2.y + rect2.height, rect1.y + rect1.height);\r\n        return {\r\n            x,\r\n            y,\r\n            width: xLimit - x,\r\n            height: yLimit - y\r\n        };\r\n    }\r\n\r\n    intersectCircle(radius: number, pointA: Point, pointB: Point): Point | null {\r\n        const center = this.getOffsetPos();\r\n        const intersection = intersectCircleLine(center, radius, pointA, pointB);\r\n        if (intersection.points.length) {\r\n            return { x: intersection.points[0].x, y: intersection.points[0].y };\r\n        }\r\n        return null;\r\n    }\r\n\r\n    distance(pointA: Point, pointB: Point): number {\r\n        return Math.sqrt((pointA.x - pointB.x) * (pointA.x - pointB.x) + (pointA.y - pointB.y) * (pointA.y - pointB.y));\r\n    }\r\n\r\n}\r\n\r\n","import { HPCCElement } from \"../common\";\r\n\r\nexport class Class {\r\n\r\n    protected _host: HPCCElement;\r\n\r\n    constructor(host: HPCCElement) {\r\n        this._host = host;\r\n    }\r\n\r\n    cssTag(id: string): string {\r\n        return (\"\" + id).replace(/[^a-z0-9]/g, (s) => {\r\n            const c = s.charCodeAt(0);\r\n            if (c === 32) return \"-\";\r\n            if (c >= 65 && c <= 90) return \"_\" + s.toLowerCase();\r\n            return \"_0x\" + c.toString(16);\r\n        });\r\n    }\r\n}","import { HPCCElement } from \"../common\";\r\nimport { Class } from \"./Class\";\r\nimport { textSize, TextSize } from \"./Utility\";\r\nexport interface IPos {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport class Widget extends Class {\r\n\r\n    protected _pos;\r\n    constructor(host: HPCCElement) {\r\n        super(host);\r\n        this._pos = { x: 0, y: 0 };\r\n    }\r\n\r\n    pos(): IPos;\r\n    pos(_: IPos): this;\r\n    pos(_?: IPos): IPos | this {\r\n        if (!arguments.length) return this._pos;\r\n        this._pos = _;\r\n        return this;\r\n    }\r\n\r\n    x(): number;\r\n    x(_): this;\r\n    x(_?): number | this {\r\n        if (!arguments.length) return this._pos.x;\r\n        this.pos({ x: _, y: this._pos.y });\r\n        return this;\r\n    }\r\n\r\n    y(): number;\r\n    y(_): this;\r\n    y(_?): number | this {\r\n        if (!arguments.length) return this._pos.y;\r\n        this.pos({ x: this._pos.x, y: _ });\r\n        return this;\r\n    }\r\n    textSize(_text: string | string[], fontName: string = \"Verdana\", fontSize: number = 12, bold: boolean = false): Readonly<TextSize> {\r\n        return textSize(_text, fontName, fontSize, bold);\r\n    }\r\n}\r\n","import { degreesToRadians, normalizeRadians } from \"@hpcc-js/util\";\r\nimport { HPCCSVGElement, attribute, css, property, ChangeMap, customElement, HTMLColor, display, html, ref } from \"../common\";\r\nimport * as d3 from \"d3\";\r\nimport { SVGWidget } from \"../legacy\";\r\n\r\nconst template = html<HPCCPieElement>`\\\r\n<svg ${ref(\"_svg\")}>\r\n    <g ${ref(\"_slicesG\")}></g>\r\n    <g ${ref(\"_labelsG\")}></g>\r\n</svg>`;\r\n\r\nconst styles = css`\r\n${display(\"inline-block\")}\r\n\r\n:host {\r\n}\r\n\r\nsvg {\r\n    font-family: sans-serif;\r\n    font-size: 12;\r\n}\r\n\r\n.arc path {\r\n    stroke: white;\r\n    stroke-width: 0.75px;\r\n}\r\n\r\npolyline {\r\n    opacity: .3;\r\n    stroke: black;\r\n    stroke-width: 2px;\r\n    fill: none;\r\n}\r\n`;\r\n\r\nexport type Columns = string[];\r\nexport type Row = [string, number];\r\nexport type Data = Row[];\r\nexport type PieArcDatum = d3.PieArcDatum<Row>;\r\n\r\n@customElement(\"hpcc-pie\", { template, styles })\r\nexport class HPCCPieElement extends HPCCSVGElement {\r\n\r\n    /**\r\n     * Show labels for each slice\r\n     * \r\n     * @defaultValue true\r\n     */\r\n    @attribute({ type: \"boolean\" }) showLabels = true;\r\n\r\n    /**\r\n     * Show value for each slice\r\n     * \r\n     * @defaultValue false\r\n     */\r\n    @attribute({ type: \"boolean\" }) showSeriesValue = false;\r\n\r\n    /**\r\n     * Value format (when visible)\r\n     * \r\n     * @defaultValue \",.0f\"\r\n     * \r\n     * @Remarks Internally the format string uses `d3.format` to format the value.  See\r\n     * https://github.com/d3/d3-format#locale_format for details.\r\n     */\r\n    @attribute seriesValueFormat = \",.0f\";\r\n\r\n    /**\r\n     * Show value as a percentage for each slice\r\n     * \r\n     * @defaultValue false\r\n     */\r\n    @attribute({ type: \"boolean\" }) showSeriesPercentage = false;\r\n\r\n    /**\r\n     * Percentage format (when visible)\r\n     * \r\n     * @defaultValue \",.0f\"\r\n     * \r\n     * @Remarks Internally the format string uses `d3.format` to format the percentage.  See\r\n     * https://github.com/d3/d3-format#locale_format for details.\r\n     */\r\n    @attribute seriesPercentageFormat = \",.0f\";\r\n\r\n    /**\r\n     * Inner radius of the pie chart.  A larger value will make the pie chart appear as a donut chart.\r\n     * \r\n     * @defaultValue 2\r\n     */\r\n    @attribute({ type: \"number\" }) innerRadius = 2;\r\n\r\n    /**\r\n     * The minimum outer radius.  In general the pie chart will expand to fill the available space.\r\n     * \r\n     * @defaultValue 20\r\n     */\r\n    @attribute({ type: \"number\" }) minOuterRadius = 20;\r\n\r\n    /**\r\n     * The starting position for the first slice.  This is used to rotate the pie chart.\r\n     * \r\n     * @defaultValue 0\r\n     */\r\n    @attribute({ type: \"number\" }) startAngle = 0;\r\n\r\n    /**\r\n     * Label height.  Used to position the labels.\r\n     * \r\n     * @defaultValue 12\r\n     */\r\n    @attribute({ type: \"number\" }) labelHeight = 12;\r\n\r\n    /**\r\n     * \"Column\" labels for the data.  Used to describe the data content\r\n     * \r\n     * @defaultValue [\"Label\", \"Value\"]\r\n     */\r\n    @property columns: Columns = [\"Label\", \"Value\"];\r\n\r\n    /**\r\n     * The data content for the pie chart.\r\n     * \r\n     * @defaultValue []\r\n     */\r\n    @property data: Data = [];\r\n\r\n    protected _slicesG: SVGGElement;\r\n    protected _labelsG: SVGGElement;\r\n    protected _slices: d3.Selection<SVGGElement, unknown, null, undefined>;\r\n    protected _labels: d3.Selection<SVGGElement, unknown, null, undefined>;\r\n\r\n    protected _totalValue: number;\r\n\r\n    protected d3Pie = d3.pie<Row>();\r\n    protected d3Arc = d3.arc<PieArcDatum>();\r\n    protected d3LabelArc = d3.arc<PieArcDatum>();\r\n\r\n    private _labelPositions;\r\n    private _smallValueLabelHeight;\r\n    private _labelWidthLimit: number;\r\n    private _quadIdxArr;\r\n    private _minLabelTop = 0;\r\n    private _maxLabelBottom = 0;\r\n    private _seriesValueFormatter;\r\n    private _seriesPercentageFormatter;\r\n\r\n    private _legacy = new SVGWidget(this);\r\n\r\n    constructor() {\r\n        super();\r\n        this._slices = d3.select<SVGGElement, unknown>(this._slicesG);\r\n        this._labels = d3.select<SVGGElement, unknown>(this._labelsG);\r\n    }\r\n\r\n    calcInnerRadius() {\r\n        return this.innerRadius !== undefined ? this.calcOuterRadius() * this.innerRadius / 100 : 0;\r\n    }\r\n\r\n    calcOuterRadius() {\r\n        const maxTextWidth = this._legacy.textSize(this.data.map(d => this.getLabelText({ data: d }, false)), \"Verdana\", 12).width;\r\n        const horizontalLimit = this._svg.clientWidth - (this.showLabels ? maxTextWidth * 2 : 0) - 20;\r\n        const verticalLimit = this._svg.clientHeight - 12 * 3 - (this.showLabels ? this._smallValueLabelHeight : 0);\r\n        const outerRadius = Math.min(horizontalLimit, verticalLimit) / 2 - 2;\r\n        if ((horizontalLimit / 2) - 2 < this.minOuterRadius) {\r\n            this._labelWidthLimit = maxTextWidth - (this.minOuterRadius - ((horizontalLimit / 2) - 2));\r\n        } else {\r\n            this._labelWidthLimit = maxTextWidth;\r\n        }\r\n        if (outerRadius < this.minOuterRadius) {\r\n            return this.minOuterRadius;\r\n        }\r\n        return outerRadius;\r\n    }\r\n\r\n    calcSmallValueLabelHeight() {\r\n        const smallDef = 0.1;\r\n        const totalVal = this.data.reduce((acc, n) => acc + n[1], 0);\r\n        let smallCount = 0;\r\n        this.data.forEach(row => {\r\n            if (row[1] / totalVal < smallDef) {\r\n                smallCount++;\r\n            }\r\n        });\r\n        return this.labelHeight * smallCount;\r\n    }\r\n\r\n    calcTotalValue(): number {\r\n        return this.data.reduce((acc, d) => {\r\n            return acc + d[1];\r\n        }, 0);\r\n    }\r\n\r\n    getLabelText(d: { data: Row }, truncate?: boolean): string {\r\n        let len;\r\n        let label = d.data[0];\r\n        if (typeof this._labelWidthLimit !== \"undefined\" && truncate) {\r\n            const labelWidth = this._legacy.textSize(label, \"Verdana\", this.labelHeight).width;\r\n            if (this._labelWidthLimit < labelWidth) {\r\n                len = label.length * (this._labelWidthLimit / labelWidth) - 3;\r\n                label = len < label.length ? label.slice(0, len) + \"...\" : label;\r\n            }\r\n        }\r\n        if (this.showSeriesValue) {\r\n            label += ` : ${this._seriesValueFormatter(d.data[1])}`;\r\n        }\r\n        if (this.showSeriesPercentage) {\r\n            let sum = this._totalValue;\r\n            const dm: any = {};//this.dataMeta();\r\n            if (typeof dm.sum !== \"undefined\") {\r\n                sum = dm.sum;\r\n            }\r\n            const perc = (d.data[1] / sum) * 100;\r\n            label += ` : ${this._seriesPercentageFormatter(perc)}%`;\r\n        }\r\n        return label;\r\n    }\r\n\r\n    enter() {\r\n        super.enter();\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        this._slices.attr(\"transform\", `translate(${this.clientWidth / 2}, ${this.clientHeight / 2})`);\r\n        this._labels.attr(\"transform\", `translate(${this.clientWidth / 2}, ${this.clientHeight / 2})`);\r\n        const context = this;\r\n        this.updateD3Pie();\r\n        this._legacy._palette = d3.scaleOrdinal([] as string[], d3.schemeTableau10);\r\n        this._seriesValueFormatter = d3.format(this.seriesValueFormat);\r\n        this._seriesPercentageFormatter = d3.format(this.seriesPercentageFormat);\r\n\r\n        this._smallValueLabelHeight = this.calcSmallValueLabelHeight();\r\n        this._totalValue = this.calcTotalValue();\r\n        const innerRadius = this.calcInnerRadius();\r\n        const outerRadius = this.calcOuterRadius();\r\n        const labelRadius = outerRadius + 12;\r\n        this.d3Arc\r\n            .innerRadius(innerRadius)\r\n            .padRadius(outerRadius)\r\n            .outerRadius(outerRadius)\r\n            ;\r\n\r\n        this._quadIdxArr = [[], [], [], []];\r\n        const data = [...this.data].sort((a, b) => {\r\n            return a[1] - b[1] > 0 ? -1 : 1;\r\n        });\r\n        const arc = this._slices.selectAll<SVGGElement, PieArcDatum>(\".arc\").data(this.d3Pie(data), d => d.data[0]);\r\n\r\n        this._labelPositions = [];\r\n\r\n        //  Enter  ---\r\n        arc.enter().append(\"g\")\r\n            .attr(\"class\", (d, i) => \"arc series series-\" + this._legacy.cssTag(d.data[0]))\r\n            .attr(\"opacity\", 0)\r\n            // .call(this._selection.enter.bind(this._selection))\r\n            .on(\"click\", function (d) {\r\n                // context.click(context.rowToObj(d.data), context.columns()[1], context._selection.selected(this));\r\n            })\r\n            .on(\"dblclick\", function (d) {\r\n                // context.dblclick(context.rowToObj(d.data), context.columns()[1], context._selection.selected(this));\r\n            })\r\n            .each(function (d, i) {\r\n                d3.select(this).append(\"path\")\r\n                    // .on(\"mouseout.tooltip\", context.tooltip.hide)\r\n                    // .on(\"mousemove.tooltip\", context.tooltip.show)\r\n                    .on(\"mouseover\", arcTween(0, 0))\r\n                    .on(\"mouseout\", arcTween(-5, 150))\r\n                    ;\r\n            })\r\n            .merge(arc).transition()\r\n            .attr(\"opacity\", 1)\r\n            .each(function (d, i) {\r\n                const quad = context.getQuadrant(midAngle(d));\r\n                context._quadIdxArr[quad].push(i);\r\n                (d as any).outerRadius = outerRadius - 5;\r\n                const element2 = d3.select(this);\r\n                element2.select<SVGPathElement>(\"path\").transition()\r\n                    .attr(\"d\", d => context.d3Arc(d as PieArcDatum))\r\n                    .style(\"fill\", context._legacy.fillColor(d.data, context.columns[1], d.data[1]))\r\n                    ;\r\n            })\r\n            ;\r\n\r\n        //  Exit  ---\r\n        arc.exit().transition()\r\n            .style(\"opacity\", 0)\r\n            .remove()\r\n            ;\r\n        //  Labels  ---\r\n        this.d3LabelArc\r\n            .innerRadius(labelRadius)\r\n            .outerRadius(labelRadius)\r\n            ;\r\n        const text = this._labels.selectAll<SVGTextElement, PieArcDatum>(\"text\").data(this.showLabels ? this.d3Pie(data) : [], d => d.data[0]);\r\n\r\n        const mergedText = text.enter().append(\"text\")\r\n            // .on(\"mouseout.tooltip\", context.tooltip.hide)\r\n            // .on(\"mousemove.tooltip\", context.tooltip.show)\r\n            .attr(\"dy\", \".5em\")\r\n            .on(\"click\", function (d) {\r\n                // context._slices.selectAll(\"g\").filter(function (d2) {\r\n                //     if (d.data === d2.data) {\r\n                //         context._selection.click(this);\r\n                //         context.click(context.rowToObj(d.data), context.columns()[1], context._selection.selected(this));\r\n                //     }\r\n                // });\r\n            })\r\n            .on(\"dblclick\", function (d) {\r\n                // context._slices.selectAll(\"g\").filter(function (d2) {\r\n                //     if (d.data === d2.data) {\r\n                //         context.dblclick(context.rowToObj(d.data), context.columns()[1], context._selection.selected(this));\r\n                //     }\r\n                // });\r\n            })\r\n            .merge(text)\r\n            .text(d => this.getLabelText(d, true))\r\n            .each(function (d, i) {\r\n                const pos = context.d3LabelArc.centroid(d);\r\n                const mid_angle = midAngle(d);\r\n                pos[0] = labelRadius * (context.isLeftSide(mid_angle) ? 1 : -1);\r\n                context._labelPositions.push({\r\n                    top: pos[1],\r\n                    bottom: pos[1] + context.labelHeight\r\n                });\r\n            });\r\n        if (this.showLabels) {\r\n            this.adjustForOverlap();\r\n            mergedText.transition()\r\n                .style(\"font-size\", this.labelHeight + \"px\")\r\n                .attr(\"transform\", (d, i) => {\r\n                    const pos = context.d3LabelArc.centroid(d);\r\n                    pos[0] = labelRadius * (context.isLeftSide(midAngle(d)) ? 1 : -1);\r\n                    pos[1] = context._labelPositions[i].top;\r\n                    return \"translate(\" + pos + \")\";\r\n                })\r\n                .style(\"text-anchor\", d => this.isLeftSide(midAngle(d)) ? \"start\" : \"end\");\r\n        }\r\n\r\n        text.exit()\r\n            .remove();\r\n\r\n        const polyline = this._labels.selectAll<SVGPolylineElement, PieArcDatum>(\"polyline\").data(this.showLabels ? this.d3Pie(data) : [], d => this.getLabelText(d, true));\r\n\r\n        polyline.enter()\r\n            .append(\"polyline\")\r\n            .merge(polyline).transition()\r\n            .attr(\"points\", function (d, i) {\r\n                const pos = context.d3LabelArc.centroid(d);\r\n                const pos1 = context.d3Arc.centroid(d);\r\n                const pos2 = [...pos];\r\n                pos[0] = labelRadius * (context.isLeftSide(midAngle(d)) ? 1 : -1);\r\n                pos[1] = context._labelPositions[i].top;\r\n                return `${pos1}, ${pos2}, ${pos}`;\r\n            });\r\n\r\n        polyline.exit()\r\n            .remove();\r\n\r\n        if (this.showLabels) {\r\n            this.centerOnLabels();\r\n        }\r\n        function midAngle(d) {\r\n            return d.startAngle + (d.endAngle - d.startAngle) / 2;\r\n        }\r\n\r\n        function arcTween(outerRadiusDelta, delay) {\r\n            function tween(d: PieArcDatum) {\r\n                const i = d3.interpolate((d as any).outerRadius, outerRadius + outerRadiusDelta);\r\n                return function (t): string {\r\n                    (d as any).outerRadius = i(t);\r\n                    return context.d3Arc(d)!;\r\n                };\r\n            }\r\n            return function (this: SVGPathElement, d) {\r\n                d3.select<SVGPathElement, PieArcDatum>(this).transition().delay(delay)\r\n                    .attrTween(\"d\", tween);\r\n            };\r\n        }\r\n    }\r\n\r\n    isLeftSide(midAngle) {\r\n        midAngle = normalizeRadians(midAngle);\r\n        const isLeft = midAngle > Math.PI * 2 ? midAngle : midAngle < Math.PI && midAngle > 0;\r\n        return isLeft;\r\n    }\r\n\r\n    getQuadrant(radians) {\r\n        let quad = 0;\r\n        const rad = normalizeRadians(radians);\r\n        quad = rad <= Math.PI * 1.0 && rad >= Math.PI * 0.5 ? 3 : quad;\r\n        quad = rad <= Math.PI * 0.5 && rad >= Math.PI * 0.0 ? 2 : quad;\r\n        quad = rad <= Math.PI * 0.0 && rad >= Math.PI * -0.5 ? 1 : quad;\r\n        return quad;\r\n    }\r\n\r\n    centerOnLabels() {\r\n        const gY = this._legacy.pos().y;\r\n        const gY2 = gY * 2;\r\n        const radius = this.calcOuterRadius();\r\n        const top = Math.min(this._minLabelTop, -radius);\r\n        const bottom = Math.max(this._maxLabelBottom, radius);\r\n        const h = bottom - top;\r\n        const heightDiff = gY2 - h;\r\n        const absTop = Math.abs(this._minLabelTop);\r\n        let yShift = 0;\r\n        if (bottom > gY) {\r\n            yShift = gY - bottom + (this.labelHeight / 2);\r\n            yShift -= heightDiff / 2;\r\n        } else if (top < 0 && absTop > gY) {\r\n            yShift = absTop - gY + (this.labelHeight / 2);\r\n            yShift += heightDiff / 2;\r\n        }\r\n        const pos = this._legacy.pos();\r\n        this._legacy.pos({\r\n            y: pos.y + yShift,\r\n            x: pos.x\r\n        });\r\n    }\r\n\r\n    adjustForOverlap() {\r\n        const labelHeight = this.labelHeight;\r\n        this._quadIdxArr.forEach((arr, quad) => {\r\n            this._quadIdxArr[quad].sort((a, b) => {\r\n                if (quad === 1 || quad === 2) {\r\n                    return this._labelPositions[a].top > this._labelPositions[b].top ? -1 : 1;\r\n                } else if (quad === 0 || quad === 3) {\r\n                    return this._labelPositions[a].top > this._labelPositions[b].top ? 1 : -1;\r\n                }\r\n            });\r\n            let prevTop;\r\n            this._quadIdxArr[quad].forEach((n, i) => {\r\n                if (i > 0) {\r\n                    if (quad === 1 || quad === 2) {\r\n                        if (prevTop < this._labelPositions[n].bottom) {\r\n                            const overlap = this._labelPositions[n].bottom - prevTop;\r\n                            this._labelPositions[n].top -= overlap;\r\n                            this._labelPositions[n].bottom -= overlap;\r\n                        }\r\n                    } else if (quad === 0 || quad === 3) {\r\n                        if (prevTop + labelHeight > this._labelPositions[n].top) {\r\n                            const overlap = Math.abs(this._labelPositions[n].top) - Math.abs(prevTop + labelHeight);\r\n                            this._labelPositions[n].top -= overlap;\r\n                            this._labelPositions[n].bottom -= overlap;\r\n                        }\r\n                    }\r\n                }\r\n                prevTop = this._labelPositions[n].top;\r\n            });\r\n        });\r\n        this._minLabelTop = 0;\r\n        this._maxLabelBottom = 0;\r\n        this._quadIdxArr.forEach((arr, quad) => {\r\n            this._quadIdxArr[quad].forEach((n, i) => {\r\n                if (this._minLabelTop > this._labelPositions[n].top) {\r\n                    this._minLabelTop = this._labelPositions[n].top;\r\n                }\r\n                if (this._maxLabelBottom < this._labelPositions[n].bottom) {\r\n                    this._maxLabelBottom = this._labelPositions[n].bottom;\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    exit() {\r\n        super.exit();\r\n    }\r\n\r\n    updateD3Pie() {\r\n        const startAngle = normalizeRadians(degreesToRadians(this.startAngle));\r\n        this.d3Pie\r\n            .padAngle(0.0025)\r\n            .startAngle(startAngle)\r\n            .endAngle(2 * Math.PI + startAngle)\r\n            .sort(function (b, a) {\r\n                return a[1] < b[1] ? -1 : a[1] > b[1] ? 1 : 0;\r\n            })\r\n            .value(function (d) {\r\n                return d[1];\r\n            })\r\n            ;\r\n    }\r\n}\r\n","import array from \"./array.js\";\nimport constant from \"./constant.js\";\nimport descending from \"./descending.js\";\nimport identity from \"./identity.js\";\nimport {tau} from \"./math.js\";\n\nexport default function() {\n  var value = identity,\n      sortValues = descending,\n      sort = null,\n      startAngle = constant(0),\n      endAngle = constant(tau),\n      padAngle = constant(0);\n\n  function pie(data) {\n    var i,\n        n = (data = array(data)).length,\n        j,\n        k,\n        sum = 0,\n        index = new Array(n),\n        arcs = new Array(n),\n        a0 = +startAngle.apply(this, arguments),\n        da = Math.min(tau, Math.max(-tau, endAngle.apply(this, arguments) - a0)),\n        a1,\n        p = Math.min(Math.abs(da) / n, padAngle.apply(this, arguments)),\n        pa = p * (da < 0 ? -1 : 1),\n        v;\n\n    for (i = 0; i < n; ++i) {\n      if ((v = arcs[index[i] = i] = +value(data[i], i, data)) > 0) {\n        sum += v;\n      }\n    }\n\n    // Optionally sort the arcs by previously-computed values or by data.\n    if (sortValues != null) index.sort(function(i, j) { return sortValues(arcs[i], arcs[j]); });\n    else if (sort != null) index.sort(function(i, j) { return sort(data[i], data[j]); });\n\n    // Compute the arcs! They are stored in the original data's order.\n    for (i = 0, k = sum ? (da - n * pa) / sum : 0; i < n; ++i, a0 = a1) {\n      j = index[i], v = arcs[j], a1 = a0 + (v > 0 ? v * k : 0) + pa, arcs[j] = {\n        data: data[j],\n        index: i,\n        value: v,\n        startAngle: a0,\n        endAngle: a1,\n        padAngle: p\n      };\n    }\n\n    return arcs;\n  }\n\n  pie.value = function(_) {\n    return arguments.length ? (value = typeof _ === \"function\" ? _ : constant(+_), pie) : value;\n  };\n\n  pie.sortValues = function(_) {\n    return arguments.length ? (sortValues = _, sort = null, pie) : sortValues;\n  };\n\n  pie.sort = function(_) {\n    return arguments.length ? (sort = _, sortValues = null, pie) : sort;\n  };\n\n  pie.startAngle = function(_) {\n    return arguments.length ? (startAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : startAngle;\n  };\n\n  pie.endAngle = function(_) {\n    return arguments.length ? (endAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : endAngle;\n  };\n\n  pie.padAngle = function(_) {\n    return arguments.length ? (padAngle = typeof _ === \"function\" ? _ : constant(+_), pie) : padAngle;\n  };\n\n  return pie;\n}\n","/**\n * degreesToRadians - converts degrees to radians\n * Usage: degreesToRadians(1080);\n *\n * @param degrees\n * @returns Number radians\n */\nexport function degreesToRadians(degrees: number): number {\n    return degrees * (Math.PI / 180);\n}\n\n/**\n * radiansToDegrees - converts radians to degrees\n * Usage: radiansToDegrees(7);\n *\n * @param radians\n * @returns Number degreees\n */\nexport function radiansToDegrees(radians: number): number {\n    return radians * (180 / Math.PI);\n}\n\n/**\n * polarToCartesian - converts (r, theta) to {x, y}\n * Usage: polarToCartesian(5, Math.PI);\n *\n * @param r radius\n * @param theta angle in radians\n * @returns { x: number, y: number }\n */\nexport function polarToCartesian(r: number, theta: number): { x:number, y:number } {\n    return {\n        x: r * Math.cos(theta),\n        y: r * Math.sin(theta)\n    };\n}\n\n/**\n * cartesianToPolar - converts (x, y) to {r, theta}\n * Usage: cartesianToPolar(100, 200);\n *\n * @param x\n * @param y\n * @returns { r: number, theta: number }\n */\nexport function cartesianToPolar(x: number, y: number): { r: number, theta: number } {\n    return {\n        r: Math.sqrt(x * x + y * y),\n        theta: Math.atan2(y, x)\n    };\n}\n\n/**\n * normalizeRadians - normalizes a radian value to within the provided range\n * Usage: normalizeRadians(7);\n *\n * @param radians value to be normalized\n * @param min lower limit\n * @param max upper limit\n * @returns Number normalized to within the provided range\n */\nexport function normalizeRadians(radians: number, min: number = -Math.PI, max: number = Math.PI): number {\n    return normalize(radians, min, max);\n}\n\n/**\n * normalizeDegrees - normalizes a degree value to within the provided range\n * Usage: normalizeDegrees(1080);\n *\n * @param degrees value to be normalized\n * @param min lower limit\n * @param max upper limit\n * @returns Number normalized to within the provided range\n */\nexport function normalizeDegrees(degrees: number, min: number = -180, max: number = 180): number {\n    return normalize(degrees, min, max);\n}\n\n/**\n * normalize - normalizes a value to within the provided range\n * Usage: normalize(1000, 0, 365);\n *\n * @param value value to be normalized\n * @param min lower limit\n * @param max upper limit\n * @returns Number normalized to within the provided range\n */\nexport function normalize(value: number, min: number, max: number): number {\n    const spread = max - min;\n    const offsetValue = value - min;\n    return (offsetValue - (Math.floor(offsetValue / spread) * spread)) + min;\n}\n","import { HPCCCodemirrorElement } from \"../codemirror\";\r\nimport { HPCCResizeElement, attribute, ChangeMap, customElement, css, display, html, ref } from \"../common\";\r\n\r\nconst template = html<HPCCPreviewElement>`\\\r\n<div ${ref(\"_iframeDiv\")}>\r\n</div>\r\n<hpcc-codemirror ${ref(\"_cm\")}></hpcc-codemirror>`;\r\n\r\nconst styles = css`\r\n${display(\"inline-block\")} \r\n\r\n:host > div {\r\n    flex-direction: column;\r\n}\r\n\r\n:host > div > div {\r\n    padding-bottom: 4px;\r\n}\r\n\r\n:host > div > hpcc-codemirror {\r\n    padding-top: 4px;\r\n}\r\n`;\r\n\r\n@customElement(\"hpcc-preview\", { template, styles })\r\nexport class HPCCPreviewElement extends HPCCResizeElement {\r\n\r\n    /**\r\n     * Border style for the preview iframe\r\n     *\r\n     * @defaultValue \"1px solid #ccc\"\r\n    */\r\n    @attribute previewBorder = \"1px solid #ccc\";\r\n\r\n    /**\r\n     * Force full reload of iframe, on each change.\r\n     * \r\n     * @defaultValue \"\"\r\n     */\r\n    @attribute headExt = \"\";\r\n\r\n    /**\r\n     * Content to be displayed in the preview iframe\r\n     * \r\n     * @defaultValue \"\"\r\n     */\r\n    @attribute content = \"\";\r\n\r\n    protected _iframeDiv: HTMLDivElement;\r\n    protected _iframe: HTMLIFrameElement;\r\n    protected _cm: HPCCCodemirrorElement;\r\n    protected _vitepress: boolean = false;\r\n\r\n    gatherScripts(node: HTMLElement, scripts: string[]) {\r\n        Array.prototype.slice\r\n            .call(node.children, 0)\r\n            .filter((child) => child !== this)\r\n            .filter((child) => {\r\n                return child.tagName !== \"hpcc-preview\".toUpperCase();\r\n            })\r\n            .forEach((child) => {\r\n                if (child.tagName === \"SCRIPT\") {\r\n                    if (child.src.indexOf(\"/@fs/\") >= 0) {\r\n                        this._vitepress = true;\r\n                    }\r\n                    scripts.push(child.outerHTML.toString());\r\n                }\r\n                // this.gatherScripts(child, scripts);\r\n            });\r\n    }\r\n\r\n    protected _head = \"\";\r\n    protected _scripts: string[] = [];\r\n\r\n    enter() {\r\n        super.enter();\r\n        this._head = document.head.innerHTML.toString();\r\n        const codeElements = this.getElementsByTagName(\"code\")[0];\r\n        this._cm.text = codeElements?.innerText ?? \"\" + this.innerHTML;\r\n        this.gatherScripts(document.body, this._scripts);\r\n        this._cm.addEventListener(\"change\", (evt) => {\r\n            this.content = this._cm.text.trim();\r\n        });\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        if (changes.content) {\r\n            this._iframeDiv.innerHTML = \"\";\r\n            this._iframe = document.createElement(\"iframe\");\r\n            this._iframe.style.border = this.previewBorder;\r\n            this._iframe.width = \"100%\";\r\n            this._iframe.height = `${this.clientHeight * 2 / 3}`;\r\n            this._iframeDiv.append(this._iframe);\r\n            this._iframe.contentWindow?.document.open();\r\n            this._iframe.contentWindow?.document.write(`\\\r\n<head>\r\n${this._vitepress ? '<script src=\"../.vitepress/dist/assets/index.js\"></script>' :\r\n                    '<script src=\"/hpcc-js-wc/assets/index.min.js\"></script>'}\r\n<style>\r\n        body {\r\n            margin: 0;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n<body style=\"overflow:hidden\">\r\n<div>\r\n${this._cm.text.trim()}\r\n</div>\r\n</body>`);\r\n            this._iframe.contentWindow?.document.close();\r\n        }\r\n        this._cm.style.width = \"100%\";\r\n        this._cm.style.height = `${this.clientHeight / 3}px`;\r\n    }\r\n}\r\n","export default function max(values, valueof) {\n  let max;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (max < value || (max === undefined && value >= value))) {\n        max = value;\n      }\n    }\n  }\n  return max;\n}\n","export default function min(values, valueof) {\n  let min;\n  if (valueof === undefined) {\n    for (const value of values) {\n      if (value != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if ((value = valueof(value, ++index, values)) != null\n          && (min > value || (min === undefined && value >= value))) {\n        min = value;\n      }\n    }\n  }\n  return min;\n}\n","export default function sum(values, valueof) {\n  let sum = 0;\n  if (valueof === undefined) {\n    for (let value of values) {\n      if (value = +value) {\n        sum += value;\n      }\n    }\n  } else {\n    let index = -1;\n    for (let value of values) {\n      if (value = +valueof(value, ++index, values)) {\n        sum += value;\n      }\n    }\n  }\n  return sum;\n}\n","import {min} from \"d3-array\";\n\nfunction targetDepth(d) {\n  return d.target.depth;\n}\n\nexport function left(node) {\n  return node.depth;\n}\n\nexport function right(node, n) {\n  return n - 1 - node.height;\n}\n\nexport function justify(node, n) {\n  return node.sourceLinks.length ? node.depth : n - 1;\n}\n\nexport function center(node) {\n  return node.targetLinks.length ? node.depth\n      : node.sourceLinks.length ? min(node.sourceLinks, targetDepth) - 1\n      : 0;\n}\n","export default function constant(x) {\n  return function() {\n    return x;\n  };\n}\n","import {max, min, sum} from \"d3-array\";\nimport {justify} from \"./align.js\";\nimport constant from \"./constant.js\";\n\nfunction ascendingSourceBreadth(a, b) {\n  return ascendingBreadth(a.source, b.source) || a.index - b.index;\n}\n\nfunction ascendingTargetBreadth(a, b) {\n  return ascendingBreadth(a.target, b.target) || a.index - b.index;\n}\n\nfunction ascendingBreadth(a, b) {\n  return a.y0 - b.y0;\n}\n\nfunction value(d) {\n  return d.value;\n}\n\nfunction defaultId(d) {\n  return d.index;\n}\n\nfunction defaultNodes(graph) {\n  return graph.nodes;\n}\n\nfunction defaultLinks(graph) {\n  return graph.links;\n}\n\nfunction find(nodeById, id) {\n  const node = nodeById.get(id);\n  if (!node) throw new Error(\"missing: \" + id);\n  return node;\n}\n\nfunction computeLinkBreadths({nodes}) {\n  for (const node of nodes) {\n    let y0 = node.y0;\n    let y1 = y0;\n    for (const link of node.sourceLinks) {\n      link.y0 = y0 + link.width / 2;\n      y0 += link.width;\n    }\n    for (const link of node.targetLinks) {\n      link.y1 = y1 + link.width / 2;\n      y1 += link.width;\n    }\n  }\n}\n\nexport default function Sankey() {\n  let x0 = 0, y0 = 0, x1 = 1, y1 = 1; // extent\n  let dx = 24; // nodeWidth\n  let dy = 8, py; // nodePadding\n  let id = defaultId;\n  let align = justify;\n  let sort;\n  let linkSort;\n  let nodes = defaultNodes;\n  let links = defaultLinks;\n  let iterations = 6;\n\n  function sankey() {\n    const graph = {nodes: nodes.apply(null, arguments), links: links.apply(null, arguments)};\n    computeNodeLinks(graph);\n    computeNodeValues(graph);\n    computeNodeDepths(graph);\n    computeNodeHeights(graph);\n    computeNodeBreadths(graph);\n    computeLinkBreadths(graph);\n    return graph;\n  }\n\n  sankey.update = function(graph) {\n    computeLinkBreadths(graph);\n    return graph;\n  };\n\n  sankey.nodeId = function(_) {\n    return arguments.length ? (id = typeof _ === \"function\" ? _ : constant(_), sankey) : id;\n  };\n\n  sankey.nodeAlign = function(_) {\n    return arguments.length ? (align = typeof _ === \"function\" ? _ : constant(_), sankey) : align;\n  };\n\n  sankey.nodeSort = function(_) {\n    return arguments.length ? (sort = _, sankey) : sort;\n  };\n\n  sankey.nodeWidth = function(_) {\n    return arguments.length ? (dx = +_, sankey) : dx;\n  };\n\n  sankey.nodePadding = function(_) {\n    return arguments.length ? (dy = py = +_, sankey) : dy;\n  };\n\n  sankey.nodes = function(_) {\n    return arguments.length ? (nodes = typeof _ === \"function\" ? _ : constant(_), sankey) : nodes;\n  };\n\n  sankey.links = function(_) {\n    return arguments.length ? (links = typeof _ === \"function\" ? _ : constant(_), sankey) : links;\n  };\n\n  sankey.linkSort = function(_) {\n    return arguments.length ? (linkSort = _, sankey) : linkSort;\n  };\n\n  sankey.size = function(_) {\n    return arguments.length ? (x0 = y0 = 0, x1 = +_[0], y1 = +_[1], sankey) : [x1 - x0, y1 - y0];\n  };\n\n  sankey.extent = function(_) {\n    return arguments.length ? (x0 = +_[0][0], x1 = +_[1][0], y0 = +_[0][1], y1 = +_[1][1], sankey) : [[x0, y0], [x1, y1]];\n  };\n\n  sankey.iterations = function(_) {\n    return arguments.length ? (iterations = +_, sankey) : iterations;\n  };\n\n  function computeNodeLinks({nodes, links}) {\n    for (const [i, node] of nodes.entries()) {\n      node.index = i;\n      node.sourceLinks = [];\n      node.targetLinks = [];\n    }\n    const nodeById = new Map(nodes.map((d, i) => [id(d, i, nodes), d]));\n    for (const [i, link] of links.entries()) {\n      link.index = i;\n      let {source, target} = link;\n      if (typeof source !== \"object\") source = link.source = find(nodeById, source);\n      if (typeof target !== \"object\") target = link.target = find(nodeById, target);\n      source.sourceLinks.push(link);\n      target.targetLinks.push(link);\n    }\n    if (linkSort != null) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(linkSort);\n        targetLinks.sort(linkSort);\n      }\n    }\n  }\n\n  function computeNodeValues({nodes}) {\n    for (const node of nodes) {\n      node.value = node.fixedValue === undefined\n          ? Math.max(sum(node.sourceLinks, value), sum(node.targetLinks, value))\n          : node.fixedValue;\n    }\n  }\n\n  function computeNodeDepths({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.depth = x;\n        for (const {target} of node.sourceLinks) {\n          next.add(target);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeHeights({nodes}) {\n    const n = nodes.length;\n    let current = new Set(nodes);\n    let next = new Set;\n    let x = 0;\n    while (current.size) {\n      for (const node of current) {\n        node.height = x;\n        for (const {source} of node.targetLinks) {\n          next.add(source);\n        }\n      }\n      if (++x > n) throw new Error(\"circular link\");\n      current = next;\n      next = new Set;\n    }\n  }\n\n  function computeNodeLayers({nodes}) {\n    const x = max(nodes, d => d.depth) + 1;\n    const kx = (x1 - x0 - dx) / (x - 1);\n    const columns = new Array(x);\n    for (const node of nodes) {\n      const i = Math.max(0, Math.min(x - 1, Math.floor(align.call(null, node, x))));\n      node.layer = i;\n      node.x0 = x0 + i * kx;\n      node.x1 = node.x0 + dx;\n      if (columns[i]) columns[i].push(node);\n      else columns[i] = [node];\n    }\n    if (sort) for (const column of columns) {\n      column.sort(sort);\n    }\n    return columns;\n  }\n\n  function initializeNodeBreadths(columns) {\n    const ky = min(columns, c => (y1 - y0 - (c.length - 1) * py) / sum(c, value));\n    for (const nodes of columns) {\n      let y = y0;\n      for (const node of nodes) {\n        node.y0 = y;\n        node.y1 = y + node.value * ky;\n        y = node.y1 + py;\n        for (const link of node.sourceLinks) {\n          link.width = link.value * ky;\n        }\n      }\n      y = (y1 - y + py) / (nodes.length + 1);\n      for (let i = 0; i < nodes.length; ++i) {\n        const node = nodes[i];\n        node.y0 += y * (i + 1);\n        node.y1 += y * (i + 1);\n      }\n      reorderLinks(nodes);\n    }\n  }\n\n  function computeNodeBreadths(graph) {\n    const columns = computeNodeLayers(graph);\n    py = Math.min(dy, (y1 - y0) / (max(columns, c => c.length) - 1));\n    initializeNodeBreadths(columns);\n    for (let i = 0; i < iterations; ++i) {\n      const alpha = Math.pow(0.99, i);\n      const beta = Math.max(1 - alpha, (i + 1) / iterations);\n      relaxRightToLeft(columns, alpha, beta);\n      relaxLeftToRight(columns, alpha, beta);\n    }\n  }\n\n  // Reposition each node based on its incoming (target) links.\n  function relaxLeftToRight(columns, alpha, beta) {\n    for (let i = 1, n = columns.length; i < n; ++i) {\n      const column = columns[i];\n      for (const target of column) {\n        let y = 0;\n        let w = 0;\n        for (const {source, value} of target.targetLinks) {\n          let v = value * (target.layer - source.layer);\n          y += targetTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - target.y0) * alpha;\n        target.y0 += dy;\n        target.y1 += dy;\n        reorderNodeLinks(target);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  // Reposition each node based on its outgoing (source) links.\n  function relaxRightToLeft(columns, alpha, beta) {\n    for (let n = columns.length, i = n - 2; i >= 0; --i) {\n      const column = columns[i];\n      for (const source of column) {\n        let y = 0;\n        let w = 0;\n        for (const {target, value} of source.sourceLinks) {\n          let v = value * (target.layer - source.layer);\n          y += sourceTop(source, target) * v;\n          w += v;\n        }\n        if (!(w > 0)) continue;\n        let dy = (y / w - source.y0) * alpha;\n        source.y0 += dy;\n        source.y1 += dy;\n        reorderNodeLinks(source);\n      }\n      if (sort === undefined) column.sort(ascendingBreadth);\n      resolveCollisions(column, beta);\n    }\n  }\n\n  function resolveCollisions(nodes, alpha) {\n    const i = nodes.length >> 1;\n    const subject = nodes[i];\n    resolveCollisionsBottomToTop(nodes, subject.y0 - py, i - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, subject.y1 + py, i + 1, alpha);\n    resolveCollisionsBottomToTop(nodes, y1, nodes.length - 1, alpha);\n    resolveCollisionsTopToBottom(nodes, y0, 0, alpha);\n  }\n\n  // Push any overlapping nodes down.\n  function resolveCollisionsTopToBottom(nodes, y, i, alpha) {\n    for (; i < nodes.length; ++i) {\n      const node = nodes[i];\n      const dy = (y - node.y0) * alpha;\n      if (dy > 1e-6) node.y0 += dy, node.y1 += dy;\n      y = node.y1 + py;\n    }\n  }\n\n  // Push any overlapping nodes up.\n  function resolveCollisionsBottomToTop(nodes, y, i, alpha) {\n    for (; i >= 0; --i) {\n      const node = nodes[i];\n      const dy = (node.y1 - y) * alpha;\n      if (dy > 1e-6) node.y0 -= dy, node.y1 -= dy;\n      y = node.y0 - py;\n    }\n  }\n\n  function reorderNodeLinks({sourceLinks, targetLinks}) {\n    if (linkSort === undefined) {\n      for (const {source: {sourceLinks}} of targetLinks) {\n        sourceLinks.sort(ascendingTargetBreadth);\n      }\n      for (const {target: {targetLinks}} of sourceLinks) {\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  function reorderLinks(nodes) {\n    if (linkSort === undefined) {\n      for (const {sourceLinks, targetLinks} of nodes) {\n        sourceLinks.sort(ascendingTargetBreadth);\n        targetLinks.sort(ascendingSourceBreadth);\n      }\n    }\n  }\n\n  // Returns the target.y0 that would produce an ideal link from source to target.\n  function targetTop(source, target) {\n    let y = source.y0 - (source.sourceLinks.length - 1) * py / 2;\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y += width + py;\n    }\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  // Returns the source.y0 that would produce an ideal link from source to target.\n  function sourceTop(source, target) {\n    let y = target.y0 - (target.targetLinks.length - 1) * py / 2;\n    for (const {source: node, width} of target.targetLinks) {\n      if (node === source) break;\n      y += width + py;\n    }\n    for (const {target: node, width} of source.sourceLinks) {\n      if (node === target) break;\n      y -= width;\n    }\n    return y;\n  }\n\n  return sankey;\n}\n","var pi = Math.PI,\n    tau = 2 * pi,\n    epsilon = 1e-6,\n    tauEpsilon = tau - epsilon;\n\nfunction Path() {\n  this._x0 = this._y0 = // start of current subpath\n  this._x1 = this._y1 = null; // end of current subpath\n  this._ = \"\";\n}\n\nfunction path() {\n  return new Path;\n}\n\nPath.prototype = path.prototype = {\n  constructor: Path,\n  moveTo: function(x, y) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y);\n  },\n  closePath: function() {\n    if (this._x1 !== null) {\n      this._x1 = this._x0, this._y1 = this._y0;\n      this._ += \"Z\";\n    }\n  },\n  lineTo: function(x, y) {\n    this._ += \"L\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  quadraticCurveTo: function(x1, y1, x, y) {\n    this._ += \"Q\" + (+x1) + \",\" + (+y1) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  bezierCurveTo: function(x1, y1, x2, y2, x, y) {\n    this._ += \"C\" + (+x1) + \",\" + (+y1) + \",\" + (+x2) + \",\" + (+y2) + \",\" + (this._x1 = +x) + \",\" + (this._y1 = +y);\n  },\n  arcTo: function(x1, y1, x2, y2, r) {\n    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;\n    var x0 = this._x1,\n        y0 = this._y1,\n        x21 = x2 - x1,\n        y21 = y2 - y1,\n        x01 = x0 - x1,\n        y01 = y0 - y1,\n        l01_2 = x01 * x01 + y01 * y01;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x1,y1).\n    if (this._x1 === null) {\n      this._ += \"M\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.\n    else if (!(l01_2 > epsilon));\n\n    // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?\n    // Equivalently, is (x1,y1) coincident with (x2,y2)?\n    // Or, is the radius zero? Line to (x1,y1).\n    else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {\n      this._ += \"L\" + (this._x1 = x1) + \",\" + (this._y1 = y1);\n    }\n\n    // Otherwise, draw an arc!\n    else {\n      var x20 = x2 - x0,\n          y20 = y2 - y0,\n          l21_2 = x21 * x21 + y21 * y21,\n          l20_2 = x20 * x20 + y20 * y20,\n          l21 = Math.sqrt(l21_2),\n          l01 = Math.sqrt(l01_2),\n          l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),\n          t01 = l / l01,\n          t21 = l / l21;\n\n      // If the start tangent is not coincident with (x0,y0), line to.\n      if (Math.abs(t01 - 1) > epsilon) {\n        this._ += \"L\" + (x1 + t01 * x01) + \",\" + (y1 + t01 * y01);\n      }\n\n      this._ += \"A\" + r + \",\" + r + \",0,0,\" + (+(y01 * x20 > x01 * y20)) + \",\" + (this._x1 = x1 + t21 * x21) + \",\" + (this._y1 = y1 + t21 * y21);\n    }\n  },\n  arc: function(x, y, r, a0, a1, ccw) {\n    x = +x, y = +y, r = +r, ccw = !!ccw;\n    var dx = r * Math.cos(a0),\n        dy = r * Math.sin(a0),\n        x0 = x + dx,\n        y0 = y + dy,\n        cw = 1 ^ ccw,\n        da = ccw ? a0 - a1 : a1 - a0;\n\n    // Is the radius negative? Error.\n    if (r < 0) throw new Error(\"negative radius: \" + r);\n\n    // Is this path empty? Move to (x0,y0).\n    if (this._x1 === null) {\n      this._ += \"M\" + x0 + \",\" + y0;\n    }\n\n    // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).\n    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {\n      this._ += \"L\" + x0 + \",\" + y0;\n    }\n\n    // Is this arc empty? We’re done.\n    if (!r) return;\n\n    // Does the angle go the wrong way? Flip the direction.\n    if (da < 0) da = da % tau + tau;\n\n    // Is this a complete circle? Draw two arcs to complete the circle.\n    if (da > tauEpsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (x - dx) + \",\" + (y - dy) + \"A\" + r + \",\" + r + \",0,1,\" + cw + \",\" + (this._x1 = x0) + \",\" + (this._y1 = y0);\n    }\n\n    // Is this arc non-empty? Draw an arc!\n    else if (da > epsilon) {\n      this._ += \"A\" + r + \",\" + r + \",0,\" + (+(da >= pi)) + \",\" + cw + \",\" + (this._x1 = x + r * Math.cos(a1)) + \",\" + (this._y1 = y + r * Math.sin(a1));\n    }\n  },\n  rect: function(x, y, w, h) {\n    this._ += \"M\" + (this._x0 = this._x1 = +x) + \",\" + (this._y0 = this._y1 = +y) + \"h\" + (+w) + \"v\" + (+h) + \"h\" + (-w) + \"Z\";\n  },\n  toString: function() {\n    return this._;\n  }\n};\n\nexport default path;\n","export default function(x) {\n  return function constant() {\n    return x;\n  };\n}\n","export function x(p) {\n  return p[0];\n}\n\nexport function y(p) {\n  return p[1];\n}\n","export var slice = Array.prototype.slice;\n","import {path} from \"d3-path\";\nimport {slice} from \"../array.js\";\nimport constant from \"../constant.js\";\nimport {x as pointX, y as pointY} from \"../point.js\";\nimport pointRadial from \"../pointRadial.js\";\n\nfunction linkSource(d) {\n  return d.source;\n}\n\nfunction linkTarget(d) {\n  return d.target;\n}\n\nfunction link(curve) {\n  var source = linkSource,\n      target = linkTarget,\n      x = pointX,\n      y = pointY,\n      context = null;\n\n  function link() {\n    var buffer, argv = slice.call(arguments), s = source.apply(this, argv), t = target.apply(this, argv);\n    if (!context) context = buffer = path();\n    curve(context, +x.apply(this, (argv[0] = s, argv)), +y.apply(this, argv), +x.apply(this, (argv[0] = t, argv)), +y.apply(this, argv));\n    if (buffer) return context = null, buffer + \"\" || null;\n  }\n\n  link.source = function(_) {\n    return arguments.length ? (source = _, link) : source;\n  };\n\n  link.target = function(_) {\n    return arguments.length ? (target = _, link) : target;\n  };\n\n  link.x = function(_) {\n    return arguments.length ? (x = typeof _ === \"function\" ? _ : constant(+_), link) : x;\n  };\n\n  link.y = function(_) {\n    return arguments.length ? (y = typeof _ === \"function\" ? _ : constant(+_), link) : y;\n  };\n\n  link.context = function(_) {\n    return arguments.length ? ((context = _ == null ? null : _), link) : context;\n  };\n\n  return link;\n}\n\nfunction curveHorizontal(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0 = (x0 + x1) / 2, y0, x0, y1, x1, y1);\n}\n\nfunction curveVertical(context, x0, y0, x1, y1) {\n  context.moveTo(x0, y0);\n  context.bezierCurveTo(x0, y0 = (y0 + y1) / 2, x1, y0, x1, y1);\n}\n\nfunction curveRadial(context, x0, y0, x1, y1) {\n  var p0 = pointRadial(x0, y0),\n      p1 = pointRadial(x0, y0 = (y0 + y1) / 2),\n      p2 = pointRadial(x1, y0),\n      p3 = pointRadial(x1, y1);\n  context.moveTo(p0[0], p0[1]);\n  context.bezierCurveTo(p1[0], p1[1], p2[0], p2[1], p3[0], p3[1]);\n}\n\nexport function linkHorizontal() {\n  return link(curveHorizontal);\n}\n\nexport function linkVertical() {\n  return link(curveVertical);\n}\n\nexport function linkRadial() {\n  var l = link(curveRadial);\n  l.angle = l.x, delete l.x;\n  l.radius = l.y, delete l.y;\n  return l;\n}\n","import {linkHorizontal} from \"d3-shape\";\n\nfunction horizontalSource(d) {\n  return [d.source.x1, d.y0];\n}\n\nfunction horizontalTarget(d) {\n  return [d.target.x0, d.y1];\n}\n\nexport default function() {\n  return linkHorizontal()\n      .source(horizontalSource)\n      .target(horizontalTarget);\n}\n","// Copyright 2021 Observable, Inc.\n// Released under the ISC license.\n// https://observablehq.com/@d3/sankey-diagram\n\nimport * as d3 from \"d3\";\nimport { ScaleOrdinal, ValueFn } from \"d3\";\nimport * as d3Sankey from \"d3-sankey\";\n\nexport interface Link {\n    source: string;\n    target: string;\n    value: number;\n}\n\ninterface MappedNode {\n    id: string;\n    index: number;\n    x0: number;\n    y0: number;\n    x1: number; y1: number;\n}\n\ninterface MappedLink {\n    index: number;\n    source: MappedNode;\n    target: MappedNode;\n    value: number;\n    width: number;\n}\n\nconst endcodeID = (str: string) => {\n    return str?.replace(/[^a-zA-Z0-9]/g, \"_\");\n};\n\nfunction intern(value): string {\n    return value !== null && typeof value === \"object\" ? value.valueOf() : value;\n}\n\nexport function sankeyFunc(\n    { nodesG, linksG, textG },\n    {\n        nodes, // an iterable of node objects (typically [{id}, …]); implied by links if missing\n        links // an iterable of link objects (typically [{source, target}, …])\n    }: { nodes?: any[], links: Link[] },\n    {\n        format = \",\", // a function or format specifier for values in titles\n        align = \"justify\", // convenience shorthand for nodeAlign\n        nodeId = (d) => d.id, // given d in nodes, returns a unique identifier (string)\n        nodeGroup, // given d in nodes, returns an (ordinal) value for color\n        nodeGroups, // an array of ordinal values representing the node groups\n        nodeLabel, // given d in (computed) nodes, text to label the associated rect\n        nodeTitle = (d) => `${d.id}\\n${format(d.value)}`, // given d in (computed) nodes, hover text\n        nodeAlign = align, // Sankey node alignment strategy: left, right, justify, center\n        nodeWidth = 15, // width of node rects\n        nodePadding = 10, // vertical separation between adjacent nodes\n        nodeLabelPadding = 6, // horizontal separation between node and label\n        linkSource = ({ source }): string => source, // given d in links, returns a node identifier string\n        linkTarget = ({ target }): string => target, // given d in links, returns a node identifier string\n        linkValue = ({ value }): number => value, // given d in links, returns the quantitative value\n        linkPath = d3Sankey.sankeyLinkHorizontal(), // given d in (computed) links, returns the SVG path\n        linkTitle = (d) => `${d.source.id} → ${d.target.id}\\n${format(d.value)}`, // given d in (computed) links\n        linkColor = \"source-target\", // source, target, source-target, or static color\n        linkMixBlendMode = \"multiply\", // link blending mode\n        colors = d3.schemeTableau10, // array of colors\n        width = 640, // outer width, in pixels\n        height = 400, // outer height, in pixels\n        marginTop = 5, // top margin, in pixels\n        marginRight = 1, // right margin, in pixels\n        marginBottom = 5, // bottom margin, in pixels\n        marginLeft = 1 // left margin, in pixels\n    }: {\n        nodeGroups?: string[],\n        nodeGroup?: (d) => string,\n        nodeTitle?: (d) => string,\n        linkValue?: (d) => number,\n        [id: string]: any\n    } = {}\n) {\n    // Convert nodeAlign from a name to a function (since d3-sankey is not part of core d3).\n    if (typeof nodeAlign !== \"function\")\n        nodeAlign =\n            {\n                left: d3Sankey.sankeyLeft,\n                right: d3Sankey.sankeyRight,\n                center: d3Sankey.sankeyCenter\n            }[nodeAlign] ?? d3Sankey.sankeyJustify;\n\n    // Compute values.\n    const LS = d3.map(links, linkSource).map(intern);\n    const LT = d3.map(links, linkTarget).map(intern);\n    const LV = d3.map(links, linkValue);\n    if (nodes === undefined) nodes = Array.from(d3.union(LS, LT), (id) => ({ id }));\n    const N = d3.map(nodes, nodeId).map(intern);\n    const G = nodeGroup == null ? null : d3.map(nodes, nodeGroup).map(intern);\n\n    // Replace the input nodes and links with mutable objects for the simulation.\n    const mappedNodes: MappedNode[] = d3.map(nodes, (_, i) => ({ index: 0, id: N[i], x0: 0, y0: 0, x1: 0, y1: 0 }));\n    const mappedLinks: MappedLink[] = d3.map(links, (_, i) => ({\n        source: LS[i],\n        target: LT[i],\n        value: LV[i]\n    } as any));\n\n    // Ignore a group-based linkColor option if no groups are specified.\n    if (!G && [\"source\", \"target\", \"source-target\"].includes(linkColor)) linkColor = \"currentColor\";\n\n    // Compute default domains.\n    if (G && nodeGroups === undefined) nodeGroups = G;\n\n    // Construct the scales.\n    const color: ScaleOrdinal<string, Range> | null = (nodeGroup && nodeGroups) ? d3.scaleOrdinal(nodeGroups, colors) : null;\n\n    // Compute the Sankey layout.\n    d3Sankey\n        .sankey()\n        .nodeId(({ index: i }) => N[i])\n        .nodeAlign(nodeAlign)\n        .nodeWidth(nodeWidth)\n        .nodePadding(nodePadding)\n        .extent([\n            [marginLeft, marginTop],\n            [width - marginRight, height - marginBottom]\n        ])({ nodes: mappedNodes, links: mappedLinks });\n\n    // Compute titles and labels using layout nodes, so as to access aggregate values.\n    if (typeof format !== \"function\") format = d3.format(format);\n    const Tl: string[] | null = nodeLabel === undefined ? N : nodeLabel == null ? null : d3.map(mappedNodes, nodeLabel);\n    const Tt: string[] = d3.map(mappedNodes, nodeTitle);\n    const Lt: string[] | null = linkTitle == null ? null : d3.map(mappedLinks, linkTitle);\n\n    // A unique identifier for clip paths (to avoid conflicts).\n    const clipPathID = `O-${Math.random().toString(16).slice(2)}`;\n\n    const node = d3\n        .select(nodesG)\n        .selectAll(\"rect\")\n        .data(mappedNodes)\n        .join(\"rect\")\n        .attr(\"x\", (d) => d.x0)\n        .attr(\"y\", (d) => d.y0)\n        .attr(\"height\", (d) => d.y1 - d.y0)\n        .attr(\"width\", (d) => d.x1 - d.x0);\n\n    if (G && color) node.attr(\"fill\", ({ index: i }) => color(G[i]).toString());\n    if (Tt)\n        node.selectAll(\"title\")\n            .data((d) => [d])\n            .join(\"title\")\n            .text(({ index: i }) => Tt[i]);\n\n    const link = d3.select(linksG).selectAll(\"g\").data(mappedLinks).join(\"g\").style(\"mix-blend-mode\", linkMixBlendMode);\n    const gradiantID = ({ source, target }: MappedLink): string => `${endcodeID(source.id)}-${endcodeID(target.id)}`;\n    link.selectAll(\"linearGradient\")\n        .data((d): MappedLink[] => (linkColor === \"source-target\" ? [d] : []), d => gradiantID(d as MappedLink))\n        .join(\"linearGradient\")\n        .attr(\"id\", (d) => `${clipPathID}-link-${gradiantID(d)}`)\n        .attr(\"gradientUnits\", \"userSpaceOnUse\")\n        .attr(\"x1\", (d) => d.source.x1)\n        .attr(\"x2\", (d) => d.target.x0)\n        .call((gradient) =>\n            gradient\n                .selectAll(\"stop\")\n                .data((d) => [d.source, d.target])\n                .join(\"stop\")\n                .attr(\"offset\", (d, i) => (i === 0 ? \"0%\" : \"100%\"))\n                .attr(\"stop-color\", ({ index: i }) => color!(G![i]).toString())\n        );\n\n    link.selectAll(\"path\")\n        .data((d) => [d], (d) => gradiantID(d as MappedLink))\n        .join(\"path\")\n        .attr(\"d\", linkPath)\n        .attr(\"stroke\", linkColor === \"source-target\" ? (d) => `url(#${clipPathID}-link-${gradiantID(d)})` : linkColor === \"source\" ? ({ source: { index: i } }) => color!(G![i]) : linkColor === \"target\" ? ({ target: { index: i } }) => color!(G![i]) : linkColor)\n        .attr(\"stroke-width\", ({ width }) => Math.max(1, width))\n        .call(Lt ?\n            (path) => path\n                .selectAll(\"title\")\n                .data((d) => [d])\n                .join(\"title\")\n                .text(({ index: i }) => Lt[i])\n            : () => { }\n        );\n\n    if (Tl) {\n        d3.select(textG)\n            .selectAll(\"text\")\n            .data(mappedNodes)\n            .join(\"text\")\n            .attr(\"x\", (d) => (d.x0 < width / 2 ? d.x1 + nodeLabelPadding : d.x0 - nodeLabelPadding))\n            .attr(\"y\", (d) => (d.y1 + d.y0) / 2)\n            .attr(\"dy\", \"0.35em\")\n            .attr(\"text-anchor\", (d) => (d.x0 < width / 2 ? \"start\" : \"end\"))\n            .text(({ index: i }) => Tl[i]);\n    }\n}\n","import {InternSet} from \"internmap\";\n\nexport default function union(...others) {\n  const set = new InternSet();\n  for (const other of others) {\n    for (const o of other) {\n      set.add(o);\n    }\n  }\n  return set;\n}\n","import { HPCCSVGElement, attribute, css, property, ChangeMap, customElement, HTMLColor, display, html, ref } from \"../common\";\r\nimport { format as d3Format } from \"d3\";\r\nimport { sankeyFunc } from \"./sankeyFunc\";\r\n\r\nconst template = html<HPCCSankeyElement>`\\\r\n<svg ${ref(\"_svg\")}>\r\n    <g ${ref(\"_nodesG\")}></g>\r\n    <g ${ref(\"_linksG\")} class=\"links\"></g>\r\n    <g ${ref(\"_textG\")}></g>\r\n</svg>`;\r\n\r\nconst styles = css`\r\n${display(\"inline-block\")}\r\n\r\n:host {\r\n}\r\n\r\nsvg {\r\n    font-family: sans-serif;\r\n    font-size: 10;\r\n}\r\n\r\ng.links {\r\n    fill: none;\r\n}\r\n`;\r\n\r\n@customElement(\"hpcc-sankey\", { template, styles })\r\nexport class HPCCSankeyElement extends HPCCSVGElement {\r\n    /**\r\n     * Alignment of the nodes\r\n     *\r\n     * @typeParam left - nodes are aligned to the left of the diagram\r\n     * @typeParam right - nodes are aligned to the right of the diagram\r\n     * @typeParam justify - nodes are evenly distributed in the diagram\r\n     *\r\n     * @defaultValue justify\r\n     */\r\n    @attribute nodeAlign: \"justify\" | \"left\" | \"right\" = \"justify\"; // stroke around node rects\r\n\r\n    /**\r\n     * Border color of the nodes.  Value can be any valid CSS color string or \"currentColor\"\r\n     *\r\n     * @defaultValue \"currentColor\"\r\n     */\r\n    @attribute nodeStroke: HTMLColor = \"currentColor\"; // stroke around node rects\r\n\r\n    /**\r\n     * Border width the nodes\r\n     *\r\n     * @defaultValue 1\r\n     */\r\n    @attribute({ type: \"number\" }) nodeStrokeWidth: number = 1; // width of stroke around node rects, in pixels\r\n\r\n    /**\r\n     * Border opacity of the nodes\r\n     *\r\n     * @defaultValue 1\r\n     */\r\n    @attribute({ type: \"number\" }) nodeStrokeOpacity = 1; // opacity of stroke around node rects\r\n\r\n    /**\r\n     * Link opacity\r\n     *\r\n     * @defaultValue 0.5\r\n     */\r\n    @attribute({ type: \"number\" }) linkStrokeOpacity = 0.5; // opacity of stroke around node rects\r\n\r\n    /**\r\n     * Link color of the links\r\n     *\r\n     * @typeParam source - links are colored based on the source node\r\n     * @typeParam target - links are colored based on the target node\r\n     * @typeParam source-target - links are colored based on the source and target nodes\r\n     * @typeParam HTMLColor - links are colored by any valid CSS color string\r\n     *\r\n     * @defaultValue source-target\r\n     */\r\n    @attribute linkColor: \"source\" | \"target\" | \"source-target\" | HTMLColor = \"source-target\"; // stroke around node rects\r\n\r\n    /**\r\n     * Links to be displayed\r\n     *\r\n     * @defaultValue []\r\n     */\r\n    @property links: { source: string; target: string; value: number }[] = [];\r\n\r\n    protected _nodesG: SVGGElement;\r\n    protected _linksG: SVGGElement;\r\n    protected _textG: SVGGElement;\r\n\r\n    constructor() {\r\n        super();\r\n    }\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        this._nodesG.setAttribute(\"stroke\", this.nodeStroke);\r\n        this._nodesG.setAttribute(\"stroke-width\", `${this.nodeStrokeWidth}`);\r\n        this._nodesG.setAttribute(\"stroke-opacity\", `${this.nodeStrokeOpacity}`);\r\n        this._linksG.setAttribute(\"stroke-opacity\", `${this.linkStrokeOpacity}`);\r\n\r\n        const links = typeof this.links === \"string\" ? JSON.parse(this.links) : this.links;\r\n        if (links?.length) {\r\n            sankeyFunc(\r\n                {\r\n                    nodesG: this._nodesG,\r\n                    linksG: this._linksG,\r\n                    textG: this._textG\r\n                },\r\n                { nodes: undefined, links },\r\n                {\r\n                    nodeGroup: (d) => d.id.split(/\\W/)[0], // take first word for color\r\n                    nodeAlign: this.nodeAlign,\r\n                    linkColor: this.linkColor, // e.g., \"source\" or \"target\"; set by input above\r\n                    format: (\r\n                        (f) => (d) =>\r\n                            `${f(d)} TWh`\r\n                    )(d3Format(\",.1~f\")),\r\n                    width: this._svg.clientWidth,\r\n                    height: this._svg.clientHeight\r\n                }\r\n            );\r\n        }\r\n    }\r\n}\r\n","// Copyright 2021 Observable, Inc.\r\n// Released under the ISC license.\r\n// https://observablehq.com/@d3/treemap\r\n\r\nimport * as d3 from \"d3\";\r\n\r\nexport interface Leaf {\r\n    name: string;\r\n    size: number\r\n}\r\n\r\nexport interface Node {\r\n    name: string;\r\n    children: Array<Leaf | Node>\r\n}\r\n\r\nexport interface HierarchyNodeEx<Datum> extends d3.HierarchyNode<Datum> {\r\n    group: string;\r\n    x0: number;\r\n    x1: number;\r\n    y0: number;\r\n    y1: number;\r\n}\r\n\r\nexport type Mode = \"binary\" | \"squarify\" | \"sliceDice\" | \"slice\" | \"dice\";\r\nconst ModeMap = new Map<Mode, any>([\r\n    [\"binary\", d3.treemapBinary],\r\n    [\"squarify\", d3.treemapSquarify],\r\n    [\"sliceDice\", d3.treemapSliceDice],\r\n    [\"slice\", d3.treemapSlice],\r\n    [\"dice\", d3.treemapDice]\r\n]);\r\n\r\nexport function treemapFunc(\r\n    svgNode: SVGSVGElement,\r\n    data: Node, { // data is either tabular (array of objects) or hierarchy (nested objects)\r\n        path, // as an alternative to id and parentId, returns an array identifier, imputing internal nodes\r\n        id = Array.isArray(data) ? d => d.id : null, // if tabular data, given a d in data, returns a unique identifier (string)\r\n        parentId = Array.isArray(data) ? d => d.parentId : null, // if tabular data, given a node d, returns its parent’s identifier\r\n        children, // if hierarchical data, given a d in data, returns its children\r\n        value, // given a node d, returns a quantitative value (for area encoding; null for count)\r\n        sort = (a, b) => d3.descending(a.value, b.value), // how to sort nodes prior to layout\r\n        label, // given a leaf node d, returns the name to display on the rectangle\r\n        group, // given a leaf node d, returns a categorical value (for color encoding)\r\n        title, // given a leaf node d, returns its hover text\r\n        link, // given a leaf node d, its link (if any)\r\n        linkTarget = \"_blank\", // the target attribute for links (if any)\r\n        mode = \"binary\", // treemap strategy\r\n        width = 640, // outer width, in pixels\r\n        height = 400, // outer height, in pixels\r\n        margin = 0, // shorthand for margins\r\n        marginTop = margin, // top margin, in pixels\r\n        marginRight = margin, // right margin, in pixels\r\n        marginBottom = margin, // bottom margin, in pixels\r\n        marginLeft = margin, // left margin, in pixels\r\n        padding = 1, // shorthand for inner and outer padding\r\n        paddingInner = padding, // to separate a node from its adjacent siblings\r\n        paddingOuter = padding, // shorthand for top, right, bottom, and left padding\r\n        paddingTop = paddingOuter, // to separate a node’s top edge from its children\r\n        paddingRight = paddingOuter, // to separate a node’s right edge from its children\r\n        paddingBottom = paddingOuter, // to separate a node’s bottom edge from its children\r\n        paddingLeft = paddingOuter, // to separate a node’s left edge from its children\r\n        round = true, // whether to round to exact pixels\r\n        colors = d3.schemeTableau10, // array of colors\r\n        zDomain, // array of values for the color scale\r\n        fill = \"#ccc\", // fill for node rects (if no group color encoding)\r\n        fillOpacity = group == null ? null : 0.6, // fill opacity for node rects\r\n        stroke, // stroke for node rects\r\n        strokeWidth, // stroke width for node rects\r\n        strokeOpacity, // stroke opacity for node rects\r\n        strokeLinejoin, // stroke line join for node rects\r\n    }: { mode?: Mode, [id: string]: any } = {}) {\r\n\r\n    const svg = d3.select(svgNode);\r\n    const tile = ModeMap.get(mode);\r\n\r\n    // If id and parentId options are specified, or the path option, use d3.stratify\r\n    // to convert tabular data to a hierarchy; otherwise we assume that the data is\r\n    // specified as an object {children} with nested objects (a.k.a. the “flare.json”\r\n    // format), and use d3.hierarchy.\r\n    // @ts-ignore\r\n\r\n    const root: d3.HierarchyNode<Node> = d3.hierarchy(data, children);\r\n    if (path != null) {\r\n        // root = d3.stratify().path(path)(data);\r\n    } else if (id != null || parentId != null) {\r\n        // root = d3.stratify().id(id).parentId(parentId)(data);\r\n    } else {\r\n        //root = d3.hierarchy(data, children);\r\n    }\r\n\r\n    // Compute the values of internal nodes by aggregating from the leaves.\r\n    value == null ? root.count() : root.sum(d => Math.max(0, value(d)));\r\n\r\n    // Prior to sorting, if a group channel is specified, construct an ordinal color scale.\r\n    const leaves = root.leaves() as HierarchyNodeEx<Node>[];\r\n    const G = group == null ? null : leaves.map(d => {\r\n        const retVal = group(d.data, d);\r\n        d.group = retVal;\r\n        return retVal;\r\n    });\r\n    if (zDomain === undefined) zDomain = G;\r\n    zDomain = new d3.InternSet(zDomain);\r\n    const color = group == null ? null : d3.scaleOrdinal(zDomain, colors);\r\n\r\n    // Compute labels and titles.\r\n    const L = label == null ? null : leaves.map(d => label(d.data, d));\r\n    const T = title === undefined ? L : title == null ? null : leaves.map(d => title(d.data, d));\r\n\r\n    // Sort the leaves (typically by descending value for a pleasing layout).\r\n    if (sort != null) root.sort(sort);\r\n\r\n    // Compute the treemap layout.\r\n    d3.treemap()\r\n        .tile(tile)\r\n        .size([width - marginLeft - marginRight, height - marginTop - marginBottom])\r\n        .paddingInner(paddingInner)\r\n        .paddingTop(paddingTop)\r\n        .paddingRight(paddingRight)\r\n        .paddingBottom(paddingBottom)\r\n        .paddingLeft(paddingLeft)\r\n        .round(round)(root);\r\n\r\n    const node = svg.selectAll(\"a\")\r\n        .data(leaves)\r\n        .join(\"a\", undefined,)\r\n        .attr(\"xlink:href\", link == null ? null : (d, i) => link(d.data, d))\r\n        .attr(\"target\", link == null ? null : linkTarget)\r\n        .attr(\"transform\", d => `translate(${d.x0},${d.y0})`)\r\n        ;\r\n\r\n    node.selectAll(\"rect\").data(d => d).join(\"rect\")\r\n        .attr(\"fill\", color ? d => color(d.group) : fill)\r\n        .attr(\"fill-opacity\", fillOpacity)\r\n        .attr(\"stroke\", stroke)\r\n        .attr(\"stroke-width\", strokeWidth)\r\n        .attr(\"stroke-opacity\", strokeOpacity)\r\n        .attr(\"stroke-linejoin\", strokeLinejoin)\r\n        .attr(\"width\", d => d.x1 - d.x0)\r\n        .attr(\"height\", d => d.y1 - d.y0);\r\n\r\n    if (T) {\r\n        node.append(\"title\").text((d, i) => T[i]);\r\n    }\r\n\r\n    if (L) {\r\n        // A unique identifier for clip paths (to avoid conflicts).\r\n        const uid = `O-${Math.random().toString(16).slice(2)}`;\r\n\r\n        node.append(\"clipPath\")\r\n            .attr(\"id\", (d, i) => `${uid}-clip-${i}`)\r\n            .append(\"rect\")\r\n            .attr(\"width\", d => d.x1 - d.x0)\r\n            .attr(\"height\", d => d.y1 - d.y0);\r\n\r\n        node.append(\"text\")\r\n            .attr(\"clip-path\", (d, i) => `url(${new URL(`#${uid}-clip-${i}`, location as any)})`)\r\n            .selectAll(\"tspan\")\r\n            .data((d, i) => `${L[i]}`.split(/\\n/g))\r\n            .join(\"tspan\")\r\n            .attr(\"x\", 3)\r\n            .attr(\"y\", (d, i, D) => `${((i === D.length - 1) ? 1 : 0) * 0.3 + 1.1 + i * 0.9}em`)\r\n            .attr(\"fill-opacity\", (d, i, D) => i === D.length - 1 ? 0.7 : null)\r\n            .text(d => d);\r\n    }\r\n\r\n    return Object.assign(svg.node(), { scales: { color } });\r\n}","export default function(parent, x0, y0, x1, y1) {\n  var nodes = parent.children,\n      i, n = nodes.length,\n      sum, sums = new Array(n + 1);\n\n  for (sums[0] = sum = i = 0; i < n; ++i) {\n    sums[i + 1] = sum += nodes[i].value;\n  }\n\n  partition(0, n, parent.value, x0, y0, x1, y1);\n\n  function partition(i, j, value, x0, y0, x1, y1) {\n    if (i >= j - 1) {\n      var node = nodes[i];\n      node.x0 = x0, node.y0 = y0;\n      node.x1 = x1, node.y1 = y1;\n      return;\n    }\n\n    var valueOffset = sums[i],\n        valueTarget = (value / 2) + valueOffset,\n        k = i + 1,\n        hi = j - 1;\n\n    while (k < hi) {\n      var mid = k + hi >>> 1;\n      if (sums[mid] < valueTarget) k = mid + 1;\n      else hi = mid;\n    }\n\n    if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) --k;\n\n    var valueLeft = sums[k] - valueOffset,\n        valueRight = value - valueLeft;\n\n    if ((x1 - x0) > (y1 - y0)) {\n      var xk = value ? (x0 * valueRight + x1 * valueLeft) / value : x1;\n      partition(i, k, valueLeft, x0, y0, xk, y1);\n      partition(k, j, valueRight, xk, y0, x1, y1);\n    } else {\n      var yk = value ? (y0 * valueRight + y1 * valueLeft) / value : y1;\n      partition(i, k, valueLeft, x0, y0, x1, yk);\n      partition(k, j, valueRight, x0, yk, x1, y1);\n    }\n  }\n}\n","import dice from \"./dice.js\";\nimport slice from \"./slice.js\";\n\nexport default function(parent, x0, y0, x1, y1) {\n  (parent.depth & 1 ? slice : dice)(parent, x0, y0, x1, y1);\n}\n","export default function descending(a, b) {\n  return a == null || b == null ? NaN\n    : b < a ? -1\n    : b > a ? 1\n    : b >= a ? 0\n    : NaN;\n}\n","import roundNode from \"./round.js\";\nimport squarify from \"./squarify.js\";\nimport {required} from \"../accessors.js\";\nimport constant, {constantZero} from \"../constant.js\";\n\nexport default function() {\n  var tile = squarify,\n      round = false,\n      dx = 1,\n      dy = 1,\n      paddingStack = [0],\n      paddingInner = constantZero,\n      paddingTop = constantZero,\n      paddingRight = constantZero,\n      paddingBottom = constantZero,\n      paddingLeft = constantZero;\n\n  function treemap(root) {\n    root.x0 =\n    root.y0 = 0;\n    root.x1 = dx;\n    root.y1 = dy;\n    root.eachBefore(positionNode);\n    paddingStack = [0];\n    if (round) root.eachBefore(roundNode);\n    return root;\n  }\n\n  function positionNode(node) {\n    var p = paddingStack[node.depth],\n        x0 = node.x0 + p,\n        y0 = node.y0 + p,\n        x1 = node.x1 - p,\n        y1 = node.y1 - p;\n    if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n    if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n    node.x0 = x0;\n    node.y0 = y0;\n    node.x1 = x1;\n    node.y1 = y1;\n    if (node.children) {\n      p = paddingStack[node.depth + 1] = paddingInner(node) / 2;\n      x0 += paddingLeft(node) - p;\n      y0 += paddingTop(node) - p;\n      x1 -= paddingRight(node) - p;\n      y1 -= paddingBottom(node) - p;\n      if (x1 < x0) x0 = x1 = (x0 + x1) / 2;\n      if (y1 < y0) y0 = y1 = (y0 + y1) / 2;\n      tile(node, x0, y0, x1, y1);\n    }\n  }\n\n  treemap.round = function(x) {\n    return arguments.length ? (round = !!x, treemap) : round;\n  };\n\n  treemap.size = function(x) {\n    return arguments.length ? (dx = +x[0], dy = +x[1], treemap) : [dx, dy];\n  };\n\n  treemap.tile = function(x) {\n    return arguments.length ? (tile = required(x), treemap) : tile;\n  };\n\n  treemap.padding = function(x) {\n    return arguments.length ? treemap.paddingInner(x).paddingOuter(x) : treemap.paddingInner();\n  };\n\n  treemap.paddingInner = function(x) {\n    return arguments.length ? (paddingInner = typeof x === \"function\" ? x : constant(+x), treemap) : paddingInner;\n  };\n\n  treemap.paddingOuter = function(x) {\n    return arguments.length ? treemap.paddingTop(x).paddingRight(x).paddingBottom(x).paddingLeft(x) : treemap.paddingTop();\n  };\n\n  treemap.paddingTop = function(x) {\n    return arguments.length ? (paddingTop = typeof x === \"function\" ? x : constant(+x), treemap) : paddingTop;\n  };\n\n  treemap.paddingRight = function(x) {\n    return arguments.length ? (paddingRight = typeof x === \"function\" ? x : constant(+x), treemap) : paddingRight;\n  };\n\n  treemap.paddingBottom = function(x) {\n    return arguments.length ? (paddingBottom = typeof x === \"function\" ? x : constant(+x), treemap) : paddingBottom;\n  };\n\n  treemap.paddingLeft = function(x) {\n    return arguments.length ? (paddingLeft = typeof x === \"function\" ? x : constant(+x), treemap) : paddingLeft;\n  };\n\n  return treemap;\n}\n","import { HPCCSVGElement, attribute, property, ChangeMap, customElement, css, display, html, ref } from \"../common\";\r\nimport { treemapFunc, Node, Leaf, Mode } from \"./treemapFunc\";\r\n\r\nexport type { Node, Mode, Leaf };\r\n\r\nconst template = html<HPCCTreemapElement>`\\\r\n<svg ${ref(\"_svg\")}>\r\n</svg>`;\r\n\r\nconst styles = css`\r\n${display(\"inline-block\")}\r\n\r\n:host {\r\n}\r\n\r\nsvg {\r\n}\r\n`;\r\n\r\n@customElement(\"hpcc-treemap\", { template, styles })\r\nexport class HPCCTreemapElement extends HPCCSVGElement {\r\n\r\n    /**\r\n    * Render mode\r\n    *\r\n    * @typeParam binary - Recursively partitions the specified nodes into an approximately-balanced binary tree, choosing horizontal partitioning for wide rectangles and vertical partitioning for tall rectangles\r\n    * @typeParam squarify - mplements the squarified treemap algorithm by Bruls et al., which seeks to produce rectangles of a given aspect ratio\r\n    * @typeParam sliceDice - If the specified node has odd depth, delegates to treemapSlice; otherwise delegates to treemapDice\r\n    * @typeParam slice - Divides the rectangular area specified by x0, y0, x1, y1 vertically according the value of each of the specified node’s children. The children are positioned in order, starting with the top edge (y0) of the given rectangle. If the sum of the children’s values is less than the specified node’s value (i.e., if the specified node has a non-zero internal value), the remaining empty space will be positioned on the bottom edge (y1) of the given rectangle\r\n    * @typeParam dice - Divides the rectangular area specified by x0, y0, x1, y1 horizontally according the value of each of the specified node’s children. The children are positioned in order, starting with the left edge (x0) of the given rectangle. If the sum of the children’s values is less than the specified node’s value (i.e., if the specified node has a non-zero internal value), the remaining empty space will be positioned on the right edge (x1) of the given rectangle\r\n    * \r\n    * @defaultValue binary\r\n    */\r\n    @attribute mode: \"binary\" | \"squarify\" | \"sliceDice\" | \"slice\" | \"dice\" = \"binary\";\r\n\r\n    /**\r\n     * Data to be rendered\r\n     *\r\n     * @defaultValue undefined\r\n     */\r\n    @property data: Node = { name: \"root\", children: [] };\r\n\r\n    update(changes: ChangeMap) {\r\n        super.update(changes);\r\n        const data = typeof this.data === \"string\" ? JSON.parse(this.data) : this.data;\r\n        if (data) {\r\n            treemapFunc(this._svg, data, {\r\n                mode: this.mode,\r\n                value: d => d.size, // size of each node (file); null for internal nodes (folders)\r\n                group: (d, n) => n.ancestors().slice(-2)[0].data.name, // e.g., \"animate\" in flare/animate/Easing; color\r\n                label: (d, n) => [...d.name.split(/(?=[A-Z][a-z])/g), n.value.toLocaleString(\"en\")].join(\"\\n\"),\r\n                title: (d, n) => `${n.ancestors().reverse().map(d => d.data.name).join(\".\")}\\n${n.value.toLocaleString(\"en\")}`,\r\n                link: (d, n) => `https://github.com/prefuse/Flare/blob/master/flare/src/${n.ancestors().reverse().map(d => d.data.name).join(\"/\")}.as`,\r\n                width: this._svg.clientWidth,\r\n                height: this._svg.clientHeight\r\n            });\r\n        }\r\n    }\r\n}\r\n"],"names":["css","templateData","args","i","String","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","prototype","hasOwnProperty","call","__extends","TypeError","__","this","constructor","create","__spreadArray","to","from","pack","arguments","length","ar","l","slice","concat","Dictionary","key","value","retVal","has","GraphItem","parent","_this","full","subgraph","subgraphs","idx","vertices","indexOf","vertex","_graph","edges","item","configurable","removeVertex","removeOutEdge","outEdges","target","idOf","root","Error","forEach","get","_allSubgraphsMap","_allVerticesMap","_","push","isArray","keyList","keys","hasProp","deepEquals","a","length_1","arrA","arrB","dateA","dateB","regexpA","regexpB","globalThis","window","isNode","process","versions","node","env","TRAVIS","GITHUB_ACTIONS","Level","requestAnimationFrame","colours","alert","ConsoleWriter","id","Logging","_instance","_key","cache","log","level","_level","_filter","dateTime","msg","write","warning","critical","getTime","currTime","Message","enumerable","_observerID","observers","some","msg2","messages","msgs","XMLNode","appendAttribute","name","tag","attributes","attribute","nodeName","childNode","childNodes","endDocument","stack","characters","_super","void","newValue","Directive","super","html","AttrChangedMessage","oldValue","DefaultEventOptions","HPCCElement","HTMLElement","Dispatch","innerHTML","$meta","directive","ref","removeAttribute","insertBefore","qualifiedName","_initialized","attr","innerID","changes","change","initMeta","getPrototypeOf","allProperties","meta","opts","set","oldVal","newVal","__decorate","decorators","desc","c","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","HPCCResizeElement","ResizeObserver","template","styles","display","HPCCSVGElement","extend","split","map","s","parseInt","isExtendingChar","code","isRegionalIndicator","findClusterBreak","str","pos","forward","nextClusterBreak","prevClusterBreak","surrogateLow","charCodeAt","surrogateHigh","prev","codePointAt","codePointSize","next","countBefore","found","ch","code0","code1","fromCodePoint","fromCharCode","countColumn","string","tabSize","n","findColumn","col","strict","Text","lineAt","RangeError","lineInner","line","lines","replace","text","parts","decompose","TextNode","append","other","eq","start","scanIdentical","end","RawTextCursor","skip","lineBreak","done","iter","dir","iterRange","PartialTextCursor","iterLines","inner","Math","max","LineCursor","toString","sliceString","toJSON","flatten","static","TextLeaf","empty","textLength","children","isLine","offset","Line","open","sliceText","min","pop","joined","appendText","mid","newLen","lineSep","result","part","len","child","endLine","childOpen","updated","totalLines","copy","iA","iB","eA","eB","chA","chB","reduce","flat","chunk","maxChunk","minChunk","chunked","currentLines","currentLen","currentChunk","add","last","flush","first","nodes","offsets","nextInner","top","offsetValue","size","cursor","limit","afterBreak","Symbol","iterator","number","DefaultSplit","MapMode","ChangeDesc","sections","newLength","ins","iterGaps","f","posA","posB","iterChangedRanges","individual","iterChanges","invertedDesc","composeDesc","composeSets","mapDesc","before","mapSet","mapPos","assoc","mode","Simple","endA","TrackDel","TrackBefore","TrackAfter","touchesRange","json","ChangeSet","inserted","apply","doc","fromA","toA","fromB","_toB","invert","index","compose","filter","ranges","resultSections","resultInserted","filteredSections","SectionIter","addSection","off","addInsert","filtered","total","force","spec","sub","insert","insText","of","insLen","e","forceJoin","values","endB","setA","setB","mkSet","len2","sectionLen","insB","textBit","forward2","undefined","SelectionRange","flags","anchor","head","bidiLevel","goalColumn","EditorSelection","range","abs","mainIndex","main","asSingle","addRange","replaceRange","which","fromJSON","normalized","goal","sort","splice","checkSelection","selection","docLength","nextID","Facet","combine","compareInput","compare","isStatic","extensions","default","config","sameArray","enables","FacetProvider","compute","deps","computeN","field","x","state","every","dependencies","facet","type","dynamicSlot","addresses","_a","getter","multi","depDoc","depSel","depAddrs","dep","tr","Uninitialized","docChanged","addr","ensureAddr","compareArray","dynamicFacetSlot","providers","providerAddrs","providerTypes","dynamic","changed","dynAddr","getAddr","val","initField","define","StateField","createF","updateF","compareF","provides","update","provide","init","find","slot","extension","Prec_","prec","ext","PrecExtension","Prec","lowest","low","high","highest","fallback","override","Compartment","CompartmentInstance","reconfigure","content","compartment","compartments","Configuration","base","dynamicSlots","address","staticValues","statusTemplate","staticFacet","oldState","fields","facets","newCompartments","Map","seen","known","delete","dynamicDeps","oldAddr","dynamicValues","canReuse","depth","cur","configuration","status","applying","languageData","allowMultipleSelections","v","lineSeparator","changeFilter","transactionFilter","transactionExtender","readOnly","Annotation","AnnotationType","StateEffectType","StateEffect","mapping","mapped","is","effects","effect","appendConfig","Transaction","startState","annotations","scrollIntoView","_doc","_state","time","Date","now","newDoc","newSelection","applyTransaction","annotation","ann","reconfigured","isUserEvent","event","userEvent","joinRanges","mergeTransaction","sequential","mapForA","mapForB","mapEffects","resolveTransactionInner","docSize","sel","asArray","single","resolveTransaction","specs","seq","extenders","extendTransaction","back","filters","filterTransaction","addToHistory","remote","none","CharCategory","nonASCIISingleCaseWordChar","wordChar","RegExp","makeCategorizer","wordChars","char","test","Space","toUpperCase","toLowerCase","hasWordChar","Word","Other","EditorState","require","startValues","conf","resolved","resolve","replaceSelection","toText","changeByRange","result1","newChanges","newMapped","j","mapBy","sliceDoc","prop","fieldInit","phrase","phrases","languageDataAt","side","provider","charCategorizer","at","join","wordAt","cat","combineConfig","configs","defaults","current","COUNT","for","SET","floor","random","StyleModule","options","rules","finish","splitSelector","selector","render","selectors","isKeyframes","local","isAt","exec","keyframes","getRules","modules","StyleSet","mount","adoptedSet","adoptedStyleSheets","CSSStyleSheet","sheet","styleTag","ownerDocument","createElement","firstChild","mod","k","insertRule","textContent","RangeValue","Range","startSide","endSide","point","mapMode","cmpRange","Chunk","maxPoint","findIndex","startAt","arr","lo","hi","diff","between","newPos","newFrom","newTo","curFrom","curTo","RangeSet","chunkPos","nextLayer","chunkEnd","isEmpty","updateSpec","filterFrom","filterTo","LayerCursor","goto","spill","builder","RangeSetBuilder","addInner","rangeIndex","chunkIndex","addChunk","nextChunk","finishInner","chunks","touch","HeapCursor","sets","oldSets","newSets","textDiff","comparator","minPointSize","sharedChunks","findSharedChunks","sideA","SpanCursor","sideB","sameValues","active","filterPoint","bind","openStart","activeForPoint","openEnd","span","build","lazySort","chunkStart","lastFrom","lastTo","setMaxPoint","finishChunk","newArrays","inA","shared","Set","layer","minPoint","rank","gotoInner","setRangeIndex","heap","heapBubble","childIndex","activeTo","activeRank","minActive","pointFrom","pointRank","removeActive","remove","findMinIndex","addActive","trackOpen","wasPoint","trackExtra","nextVal","reverse","startA","startB","dPos","clipEnd","comparePoint","compareRange","array","foundPos","shift","chrome","navigator","userAgent","safari","vendor","gecko","mac","platform","ie","brokenModifierNames","getSelection","nodeType","contains","dom","parentNode","hasSelection","anchorNode","clientRectsFor","textRange","nodeValue","getClientRects","isEquivalentPosition","targetNode","targetOff","scanFor","domIndex","previousSibling","maxOffset","contentEditable","Rect0","left","right","bottom","flattenRect","rect","windowRect","win","innerWidth","innerHeight","DOMSelectionState","anchorOffset","focusNode","focusOffset","domSel","setRange","scratchRange","preventScrollSupported","focusPreventScroll","setActive","focus","scrollTop","scrollLeft","preventScroll","elt","document","createRange","setEnd","setStart","dispatchKey","keyCode","cancelable","down","KeyboardEvent","synthetic","dispatchEvent","up","defaultPrevented","clearAttributes","removeAttributeNode","DOMPos","precise","noChildren","ContentView","dirty","editorView","overrideDOMText","posAtStart","posBefore","posAtEnd","view","breakAfter","posAfter","coordsAt","_pos","_side","sync","track","contentView","reuseDOM","written","rm","nextSibling","_dom","localPosFromDOM","after","bias","lastChild","domBoundsAround","fromI","fromStart","toI","toEnd","prevEnd","startDOM","endDOM","markDirty","andParent","markParentsDirty","childList","setParent","setDOM","cmView","rootView","replaceChildren","destroy","ignoreMutation","_rec","ignoreEvent","_event","childCursor","ChildCursor","childPos","findPos","isEditable","merge","source","hasStart","become","getSide","removeChild","fromOff","toOff","breakAtStart","breakAtEnd","mergeChildrenInto","dLen","nav","documentElement","style","ie_edge","ie_upto10","ie_11up","webkit","ios","maxTouchPoints","browser","windows","linux","ie_version","documentMode","gecko_version","chrome_version","android","webkit_version","TextView","createDOM","textDOM","createTextNode","domAtPos","_from","_to","textCoords","MarkView","mark","setAttrs","class","className","attrs","setAttribute","tagName","_hasStart","detachFrom","inlineDOMAtPos","coordsInChildren","rects","width","WidgetView","widget","customView","updateDOM","toDOM","CompositionView","ZeroWidthSpace","WidgetBufferView","joinInlineInto","getBoundingClientRect","combineAttrs","attrsEq","keysA","keysB","updateAttrs","WidgetType","_widget","estimatedHeight","BlockType","Decoration","heightRelevant","MarkDecoration","block","PointDecoration","getInclusive","LineDecoration","hasHeight","isReplace","WidgetRange","WidgetBefore","WidgetAfter","inclusiveStart","inclusiveEnd","inclusive","margin","LineView","prevAttrs","transferDOM","setDeco","addLineDeco","deco","cls","classList","hack","cmIgnore","appendChild","measureTextSize","totalWidth","lineHeight","height","charWidth","_other","docView","BlockWidgetView","_takeDeco","Text$1","ContentBuilder","disallowBlockEffectsBelow","curLine","pendingBuffer","atCursorPos","textOff","posCovered","getLine","flushBuffer","wrapMarks","addBlockWidget","buildText","take","NullWidget","cursorBefore","cursorAfter","decorations","pluginDecorationLength","spans","clickAddsSelectionRange","dragMovesSelection$1","mouseSelectionStyle","exceptionSink","updateListener","inputHandler","scrollTo","centerOn","ScrollTarget","y","yMargin","xMargin","t","logException","exception","context","handler","onerror","console","error","editable","PluginFieldProvider","PluginField","atomicRanges","scrollMargins","nextPluginID","viewPlugin","ViewPlugin","eventHandlers","domEventHandlers","plugin","handlers","PluginInstance","mustUpdate","takeField","deactivate","editorAttributes","contentAttributes","styleModule","ChangedRange","toB","addToSet","me","dI","rI","ViewUpdate","transactions","changedRanges","hasFocus","inputState","notifiedFocused","viewportChanged","heightChanged","geometryChanged","focusChanged","selectionSet","Direction","LTR","RTL","dec","LowTypes","ArabicTypes","Brackets","BracketStack","BidiRE","BidiSpan","order","maybe","types","trivialOrder","movedOver","moveVisually","startIndex","spanI","indexForward","nextIndex","nextSpan","DOMReader","points","readRange","findPointBefore","readNode","nextView","isBlockElement","fromView","findPointIn","lastKeyCode","maxLen","DOMPoint","DocView","compositionDeco","minWidth","minWidthFrom","minWidthTo","impreciseAnchor","impreciseHead","forceSelection","lastUpdate","contentDOM","updateDeco","updateInner","composing","observer","selectionRange","textNode","nearbyTextNode","cView","nearest","topNode","CompositionWidget","computeCompositionDeco","decoDiff","comp","DecorationComparator$1","findChangedDeco","extendWithRanges","oldLength","viewState","mustMeasureContent","updateChildren","ignore","contentHeight","gaps","viewport","BlockGapWidget","updateGaps","updateSelection","mustRead","fromPointer","readSelectionRange","mayControlSelection","rapidCompositionStart","dummy","inside","assignedSlot","inUneditable","blur","rawSel","nextTo","collapse","cursorBidiLevel","removeAllRanges","setSelectionRange","enforceCursorAssoc","modify","lineStart","activeElement","domView","posFromDOM","measureVisibleLineHeights","contentWidth","clientWidth","isWider","scrollDOM","widest","childRect","textDirection","measure","computeBlockGapDeco","vs","viewports","lineBlockAt","pluginDecorations","pluginField","lineGapDeco","mLeft","mRight","mTop","mBottom","margins","targetRect","ltr","defaultView","bounding","body","scrollHeight","clientHeight","scrollWidth","moveX","moveY","rectHeight","boundingHeight","scrollBy","host","scrollRectIntoView","getdx","getdy","yOverlap","upTop","upBot","domPosAtCoords","closest","closestRect","closestX","closestY","above","below","aboveRect","belowRect","dx","dy","domPosInText","clipX","closestOffset","closestDY","generalSide","posAtCoords","docTop","paddingTop","docHeight","yOffset","halfLine","defaultLineHeight","bounced","elementAtHeight","posAtCoordsImprecise","elementFromPoint","element","caretPositionFromPoint","offsetNode","caretRangeFromPoint","startContainer","startOffset","isSuspiciousCaretResult","contentRect","into","round","defaultCharacterWidth","lineWrapping","heightOracle","lineLength","moveByChar","by","bidiSpans","check","skipAtoms","oldPos","atoms","moved","InputState","lastKeyTime","pendingIOSKey","lastSelectionOrigin","lastSelectionTime","lastEscPress","lastContextMenu","scrollHandlers","registeredEvents","customHandlers","compositionFirstChange","compositionEndedAt","mouseSelection","addEventListener","keydown","eventBelongsToEditor","ignoreDuringComposition","mustFlushObserver","forceFlush","runCustomHandlers","preventDefault","ensureHandlers","setSelectionOrigin","origin","runScrollHandlers","scroll","screenKeyEvent","delayAndroidKey","pending","PendingKeys","ctrlKey","altKey","metaKey","setTimeout","flushIOSKey","protectedTab","modifierCodes","startMouseSelection","inputType","MouseSelection","startEvent","mustSelect","lastEvent","move","shiftKey","multiple","addsSelectionRange","dragMove","dragMovesSelection","dragging","rangeCount","getRangeAt","clientX","clientY","isInPrimarySelection","getClickType","select","buttons","removeEventListener","dispatch","bubbles","brokenClipboardAPI","doPaste","input","byLine","lastLinewiseCopy","lastLine","lastTouch","rangeForClick","categorize","linePos","groupAt","visual","touchstart","touchmove","mousedown","makeStyle","button","queryPos","startSel","startRange","basicMouseSelection","mustFocus","insideY","findPositionSide","BadMouseDetail","lastMouseDown","lastMouseDownCount","lastMouseDownTime","detail","lastTime","dropText","direct","dropPos","del","dragstart","dataTransfer","setData","effectAllowed","drop","files","read","finishFile","reader","FileReader","onload","readAsText","getData","paste","data","clipboardData","cssText","capturePaste","forceClearComposition","rapid","cut","linewise","upto","copiedRange","clearData","selectionEnd","selectionStart","captureCopy","beforeprint","printing","requestMeasure","compositionstart","compositionupdate","compositionend","contextmenu","beforeinput","startViewHeight","visualViewport","wrappingWhiteSpace","HeightOracle","direction","heightSamples","heightForGap","ceil","heightForLine","setDoc","mustRefreshForStyle","whiteSpace","mustRefreshForHeights","lineHeights","newHeight","h","refresh","knownHeights","MeasuredHeights","heights","more","BlockInfo","QueryType","Epsilon","HeightMap","outdated","setHeight","oracle","decomposeLeft","decomposeRight","applyChanges","oldDoc","ByPosNoHeight","NodeBuilder","updateHeight","HeightMapText","break","brk","HeightMapBranch","HeightMapBlock","blockAt","_height","_value","_type","forEachLine","_force","measured","collapsed","widgetHeight","HeightMapGap","firstLine","ByHeight","unshift","singleHeight","wasChanged","rightTop","rightOffset","subQuery","ByPos","rightStart","balanced","mergeGaps","rebalance","around","lineEnd","covering","writtenTo","isCovered","addBlock","enterLine","blankContent","gap","ensureLine","DecorationComparator","LineGap","gA","gB","draw","wrapping","LineGapWidget","vertical","ViewState","pixelViewport","inView","paddingBottom","contentDOMWidth","contentDOMHeight","editorHeight","scaler","IdScaler","scrollTarget","visibleRanges","mustEnforceCursorAssoc","heightMap","getViewport","updateViewportLines","updateForViewport","lineGaps","ensureLineGaps","computeVisibleRanges","Viewport","BigScaler","viewportLines","scale","scaleBlock","newDeco","contentChanges","heightChanges","heightRelevantDecoChanges","prevHeight","mapViewport","viewportIsAppropriate","updateLines","updateLineGaps","mapLineGaps","getComputedStyle","measureContent","overflow","parentRect","position","offsetParent","visiblePixelRange","dTop","dBottom","viewportChange","visibleTop","fromDOM","visibleBottom","marginTop","viewHeight","topPos","viewFrom","viewTo","structure","lineStructure","marginHeight","findPosition","marginWidth","outside","cutRange","gapSize","fraction","findFraction","same","lineBlockAtHeight","ratio","dist","counted","pieces","vpHeight","domBase","domTop","domBottom","obj","vp","bTop","bBottom","theme","strs","darkTheme","baseThemeID","newName","baseLightID","baseDarkID","lightDarkIDs","buildTheme","scopes","m","baseTheme","boxSizing","outline","flexDirection","alignItems","fontFamily","overflowX","zIndex","flexGrow","minHeight","wordWrap","padding","WebkitUserModify","whiteSpace_fallback","wordBreak","overflowWrap","caretColor","contain","background","pointerEvents","animation","visibility","borderLeft","marginLeft","borderLeftColor","backgroundColor","color","verticalAlign","fontSize","borderRadius","backgroundImage","border","observeOptions","characterData","subtree","characterDataOldValue","useCharData","DOMObserver","onChange","onScrollChanged","selectionChanged","delayedFlush","resizeTimeout","queue","delayedAndroidKey","scrollTargets","intersection","resize","intersecting","gapIntersection","parentCheck","MutationObserver","mutations","mut","removedNodes","flushSoon","onCharData","prevValue","onSelectionChange","observe","onScroll","IntersectionObserver","entries","listenForScroll","intersectionRatio","createEvent","g","disconnect","shadowRoot","deepActiveElement","stopImmediatePropagation","getTargetRanges","execCommand","endContainer","endOffset","curAnchor","safariSelectionRangeHack","stop","clear","takeRecords","processRecords","clearTimeout","records","typeOver","record","readMutation","readSelection","newSel","rec","childBefore","findChild","childAfter","_b","_c","curView","applyDOMChange","bounds","selPoints","selectionPoints","selectionFromPoints","preferredPos","preferredSide","minLen","findDiff","iHead","iAnchor","EditorView","plugins","pluginMap","editorAttrs","contentAttrs","bidiCache","destroyed","updateState","measureScheduled","measureRequests","tabIndex","announceDOM","_dispatch","getRoot","mountStyles","resizeDebounce","handleResize","redrawn","setState","CachedOrder","updatePlugins","styleModules","showAnnouncements","listener","newState","prevSpecs","newPlugins","cancelAnimationFrame","oldViewport","warn","measuring","BadMeasure","themeClasses","attrsFromFacet","spellcheck","autocorrect","autocapitalize","translate","contenteditable","role","trs","announce","readMeasured","request","documentTop","documentPadding","blockAtHeight","ensureTop","visualLineAtHeight","viewportLineBlocks","visualLineAt","moveByGroup","initial","nextCat","byGroup","moveToLineBoundary","includeWrap","coords","coordsAtPos","editorRect","lineView","moveVertically","distance","startPos","startY","startCoords","resolvedGoal","extra","curY","scrollPosIntoView","posAtDOM","MaxBidiLine","entry","outerType","oppositeType","prevStrong","br","sI","sJ","embed","beforeL","rtl","computeOrder","prefix","dark","given","querySelectorAll","lastDir","sources","currentPlatform","modifiers","handleKeyEvents","runHandlers","getKeymap","keymap","Keymaps","WeakMap","bindings","bound","isPrefix","checkPrefix","scope","command","scopeObj","alt","ctrl","normalizeKeyName","commands","ourObj","storedPrefix","binding","run","buildKeymap","keyName","isChar","fallthrough","baseName","runFor","cmd","CanHidePrimary","selectionConfig","cursorBlinkRate","drawRangeCursor","drawSelection","drawSelectionPlugin","hideNativeSelection","Piece","adjust","fromClass","rangePieces","cursors","measureReq","readPos","drawSel","selectionLayer","cursorLayer","setBlinkRate","animationDuration","confChanged","animationName","getBase","lineStyle","leftSide","paddingLeft","textIndent","rightSide","paddingRight","startBlock","endBlock","visualStart","visualEnd","wrappedLine","drawForLine","drawForWidget","piece","horizontal","addSpan","fromOpen","toOpen","fromCoords","toCoords","endPos","docLine","spanFrom","spanTo","measureRange","prim","measureCursor","oldCursors","themeSpec","primary","setDropCursorPos","dropCursorPos","drawDropCursor","drawCursor","cursorPos","outer","setDropPos","dragover","dragleave","relatedTarget","dragend","dropCursor","iterMatches","re","lastIndex","MatchDecorator","regexp","decoration","boundary","maxLength","global","getDeco","createDeco","visible","matchRanges","changeFrom","changeTo","_f","_t","updateRange","updateFrom","updateTo","fromLine","toLine","UnicodeRegexpSupport","unicode","Specials","Names","_supportsTabSize","specialCharConfig","specialChars","addSpecialChars","replaceTabs","MozTabSize","supportsTabSize","highlightSpecialChars","_plugin","decorationCache","decorator","makeDecorator","TabWidget","SpecialCharWidget","ph","placeholder$1","custom","title","highlightActiveLine","activeLineHighlighter","lineDeco","lastLineStart","fromHistory","isolateHistory","invertedEffects","historyConfig","minDepth","newGroupDelay","historyField_","HistoryState","fromHist","HistEvent","fromTransaction","undone","updateBranch","addSelection","rest","isolate","addMapping","addChanges","history","undo","redo","historyState","undoSelection","redoSelection","startSelection","selectionsAfter","setSelAfter","selections","branch","newEvent","newBranch","conc","sels","popSelection","addMappingToBranch","mapEvent","extraSelections","mappedChanges","fullMapping","joinableUserEvent","prevTime","prevUserEvent","isAdjacent","historyKeymap","DefaultBufferLength","nextPropID","NodeProp","perNode","deserialize","match","NodeType","closedBy","openedBy","group","contextHash","lookAhead","mounted","MountedTree","tree","overlay","parser","noProps","props","skipped","src","isTop","isSkipped","isError","isAnonymous","groups","NodeSet","newTypes","newProps","assign","CachedNode","CachedInnerNode","Tree","positions","JSON","stringify","TreeCursor","moveTo","_tree","fullCursor","TreeNode","resolveNode","resolveInner","iterate","enter","leave","mustLeave","propValues","balance","balanceRange","makeTree","buffer","nodeSet","maxBufferLength","reused","minRepeatType","FlatBufferCursor","takeNode","parentStart","minPos","inRepeat","lookAheadAtStart","findBufferSize","Uint16Array","copyToBuffer","TreeBuffer","localChildren","localPositions","localInRepeat","lastGroup","lastEnd","makeRepeatLeaf","make","makeBalanced","lookAheadProp","lastI","pair","maxSize","fork","minStart","scan","nodeSize","localSkipped","nodeStart","bufferStart","topID","buildTree","childString","endIndex","pick","checkSide","startI","endI","enterUnfinishedNodesBefore","prevSibling","overlays","_parent","nextChild","BufferNode","BufferContext","hasChild","buffers","rPos","nextSignificantParent","toTree","getChild","getChildren","externalSibling","bufferNode","yieldNode","yieldBuf","yield","enterChild","sibling","atLastNode","nodeSizeCache","balanceType","mkTop","mkTree","maxChild","divide","groupFrom","groupStart","groupSize","nextSize","only","TreeFragment","fragments","partial","minGap","fI","nextF","cI","nextC","nextPos","fFrom","fTo","Parser","startParse","StringInput","createParse","parse","advance","lineChunks","InnerParse","ActiveOverlay","predicate","mounts","stoppedInner","MixedParse","nest","innerDone","baseTree","stoppedAt","baseParse","startInner","stopAt","parsedPos","fragmentCursor","FragmentCursor","covered","hasNode","frag","checkCover","materialize","oldMounts","findMounts","punchRanges","enterFragments","sliceBuf","buf","innerOffset","isTarget","StructureCursor","fragI","curFrag","nextFrag","gapFrom","gapTo","findCoverChanges","inB","nextA","nextB","languageDataProp","Language","extraExtensions","syntaxTree","language","languageDataFacetAt","isActiveAt","findRegions","lang","allowsNesting","explore","topLang","LRLanguage","baseData","configure","wrappers","DocInput","syncTo","stringStart","currentContext","ParseContext","treeLen","scheduleOn","tempSkipped","work","isDone","takeTree","withContext","endTime","withoutTempSkipped","addTree","cutFragments","updateViewport","startLen","reset","skipUntilInView","until","cx","Promise","all","frags","LanguageState","newCx","vpTo","parseState","requestIdle","callback","timeout","requestIdleCallback","idle","cancelIdleCallback","parseWorker","working","workScheduled","chunkBudget","scheduleWork","checkAsyncSchedule","deadline","timeRemaining","viewportFirst","then","catch","err","isWorking","languages","LanguageSupport","support","indentService","indentUnit","getIndentUnit","unit","indentString","cols","ts","getIndentation","IndentContext","service","ast","indentFrom","syntaxIndentation","simulateBreak","textAfterPos","simulateDoubleBreak","column","overrideIndentation","search","lineIndent","overriden","simulatedBreak","indentNodeProp","indentStrategy","strategy","close","closed","delimitedStrategy","ignoreClosed","topIndent","TreeIndentContext","textAfter","baseIndent","atBreak","isParent","continue","delimitedIndent","closing","align","units","closedAt","space","aligned","openToken","sim","openLine","bracketedAligned","continuedIndent","except","matchExcept","indentOnInput","indent","norm","foldService","foldNodeProp","foldInside","foldable","syntaxFolding","GutterMarker","elementClass","gutterLineClass","renderEmptyElements","elementStyle","markers","lineMarker","lineMarkerChange","initialSpacer","updateSpacer","activeGutters","gutter","gutters","borderRight","flexShrink","textAlign","unfixGutters","gutterView","fixed","prevViewport","SingleGutterView","syncGutters","updateGutters","vpA","vpB","vpOverlap","detach","lineClasses","classSet","contexts","UpdateContext","advanceCursor","offsetWidth","collect","localMarkers","extraMarkers","forLine","elements","newElt","GutterElement","spacer","prevMarkers","sameMarkers","setMarkers","domPos","iNew","iOld","skipTo","marker","matched","lineNumberMarkers","lineNumberConfig","formatNumber","exists","NumberMarker","lineNumberGutter","others","maxLineNumber","lineNumbers","activeLineGutterMarker","activeLineGutterHighlighter","marks","highlightActiveLineGutter","mapRange","foldEffect","unfoldEffect","selectedLines","foldState","folded","foldExists","foldWidget","onSelection","maybeEnable","codeFolding","announceFold","fold","lineFrom","lineTo","foldKeymap","defaultConfig","placeholderDOM","placeholderText","foldConfig","ignoreEvents","onclick","foldGutterDefaults","openText","closedText","markerDOM","FoldMarker","foldGutter","fullConfig","canFold","canUnfold","buildMarkers","click","DefaultBrackets","bracketMatchingConfig","afterCursor","brackets","maxScanDistance","matchingMark","nonmatchingMark","bracketMatchingState","matchBrackets","bracketMatchingUnique","bracketMatching","matchingNodes","byProp","matches","matchMarkedBrackets","tokenType","startCh","bracket","startToken","basePos","matchPlainBrackets","token","matching","firstToken","updateSel","setSel","moveSel","how","rangeEnd","cursorByChar","cursorCharLeft","cursorCharRight","cursorByGroup","interestingNode","bracketProp","moveBySyntax","cursorByLine","cursorLineUp","cursorLineDown","cursorByPage","cursorPageUp","cursorPageDown","moveByLineBoundary","cursorLineBoundaryForward","cursorLineBoundaryBackward","extendSel","selectByChar","selectCharLeft","selectCharRight","selectByGroup","selectByLine","selectLineUp","selectLineDown","selectByPage","selectPageUp","selectPageDown","selectLineBoundaryForward","selectLineBoundaryBackward","cursorDocStart","cursorDocEnd","selectDocStart","selectDocEnd","deleteBy","towards","skipAtomic","deleteByChar","targetPos","deleteCharBackward","deleteCharForward","deleteByGroup","nextChar","deleteGroupBackward","deleteToLineEnd","selectedLineBlocks","blocks","startLine","moveLine","nextLine","copyLine","insertNewlineAndIndent","newlineAndIndent","insertBlankLine","atEof","explode","isBetweenBrackets","changeBySelectedLine","atLine","changeSet","emacsStyleKeymap","standardKeymap","defaultKeymap","keep","toMatchingBracket","closeBracketEffect","skipBracketEffect","closedBracket","bracketState","prevLineStart","closeBrackets","handleInput","definedClosing","charAt","tokens","tok","handleSame","handleOpen","closedBracketAt","handleClose","insertBracket","closeBracketsKeymap","dont","prevChar","closeBefore","_open","allowTriple","isTriple","panelConfig","topContainer","bottomContainer","getPanel","panel","panelPlugin","panels","showPanel","PanelGroup","container","syncClasses","scrollMargin","classes","syncDOM","curDOM","borderBottom","borderTop","crelt","basicNormalize","normalize","SearchCursor","query","bufferPos","peek","nextOverlapping","baseFlags","RegExpCursor","MultilineRegExpCursor","ignoreCase","curLineStart","matchPos","flattened","FlattenedDoc","cached","cachedFrom","createLineDialog","go","sign","ln","cl","percent","pc","dialogEffect","onkeydown","onsubmit","dialogField","baseTheme$1","defaultHighlightOptions","highlightWordAroundCursor","minSelectionLength","maxMatches","highlightConfig","highlightSelectionMatches","defaultTheme","matchHighlighter","matchDeco","mainMatchDeco","word","trim","searchConfigFacet","caseSensitive","matchCase","createPanel","SearchPanel","SearchQuery","valid","validRegExp","RegExpQuery","StringQuery","unquoted","nextMatch","prevMatchInRange","prevMatch","getReplacement","_result","matchAll","highlight","setSearchQuery","togglePanel","searchState","SearchState","defaultQuery","createSearchPanel","matchMark","selectedMatchMark","searchHighlighter","selected","searchCommand","openSearchPanel","findNext","announceMatch","findPrevious","selectMatches","replaceNext","replacement","replaceAll","selText","searchInput","querySelector","searchExtensions","closeSearchPanel","searchKeymap","selectWord","searchedText","fullWord","cycled","findNextOccurrence","commit","searchField","placeholder","onchange","onkeyup","replaceField","caseField","checked","reField","setQuery","Break","font","marginRight","Outside","TooltipViewManager","createTooltipView","tooltips","tooltipViews","tip","tooltipView","windowSpace","tooltipConfig","tooltipSpace","tooltipPlugin","lastTransaction","intersectionTimeout","createContainer","readMeasure","writeMeasure","manager","showTooltip","createTooltip","intersectionObserver","maybeMeasure","threshold","observeIntersection","tooltip","shouldMeasure","newConfig","arrow","editor","tView","arrowHeight","noOffset","strictSide","toggle","positioned","tv","borderTopColor","borderBottomColor","showHoverTooltip","HoverTooltipHost","createHostedView","hostedView","showHoverTooltipHost","HoverPlugin","setHover","hoverTime","hoverTimeout","restartTimeout","lastMove","checkHover","mouseleave","mousemove","startHover","hovered","posCoords","bidi","isInTooltip","isOverRange","hoverTooltip","hoverState","hideOnChange","closeHoverTooltipEffect","CompletionContext","explicit","abortListeners","tokenBefore","matchBefore","expr","ensureAnchor","aborted","toSet","chars","words","completeFromList","list","o","label","prefixMatch","Option","completion","addStart","addEnd","pickedCompletion","applyCompletion","option","SourceCache","asSource","FuzzyMatcher","pattern","any","byWord","upper","astral","anyTo","preciseTo","byWordTo","byWordFolded","adjacentTo","adjacentStart","adjacentEnd","hasLower","prevType","score","completionConfig","activateOnTyping","maxRenderedOptions","optionClass","aboveCursor","icons","addToOptions","joinClass","rangeAroundSelected","CompletionTooltip","stateField","info","placeInfo","measureInfo","positionInfo","cState","optionContent","icon","_s","labelElt","detailElt","createListBox","updateSelectedOption","createInfoDialog","opt","hasAttribute","self","infoRect","spaceLeft","spaceRight","ul","li","boost","CompletionDialog","timestamp","setSelected","makeAttrs","hasResult","matcher","cmpOption","sortOptions","selectedValue","completionState","CompletionState","ActiveSource","sameResults","setSelectedEffect","baseAttrs","dScore","localeCompare","getUserEvent","explicitPos","handleUserEvent","handleChange","startCompletionEffect","closeCompletionEffect","setActiveEffect","ActiveResult","moveCompletionSelection","step","offsetHeight","RunningQuery","updates","completionPlugin","debounceUpdate","running","debounceAccept","startQuery","doesReset","q","startUpdate","scheduleAccept","accept","maxWidth_fallback","maxWidth","maxHeight","listStyle","textOverflow","opacity","textDecoration","fontStyle","FieldPos","FieldRange","Snippet","fieldPositions","instantiate","lineObj","tabs","fieldMarker","fieldRange","ActiveSnippet","selectionInsideField","moveToField","snippetState","fieldSelection","snippet","_completion","addSnippetKeymap","snippetPointerHandler","moveField","defaultSnippetKeymap","snippetKeymap","maps","snippetCompletion","autocompletion","completionKeymapExt","completionKeymap","toggleLineComment","changeLineComment","toggleBlockComment","changeBlockComment","commentKeymap","getConfig","comments","startText","endText","textBefore","spaceBefore","spaceAfter","beforeOff","startSpace","endSpace","endOff","findBlockComment","comment","prevLine","minIndent","MaxOff","getPos","absoluteColumn","rectangleSelectionStyle","newStart","newLine","_extend","startOff","startCol","endCol","rectangleFor","rectangularSelection","eventFilter","nextTagID","Tag","modified","Modifier","nextModifierID","instances","mods","permute","styleTags","byName","tags","rule","Rule","ruleNodeProp","highlightStyle","stylings","HighlightStyle","combinedMatch","fallbackHighlightStyle","getHighlightStyle","modSpec","def","module","treeHighlighter","TreeHighlighter","markCache","buildDeco","styleChange","highlightTreeRange","nodeStack","HighlightBuilder","startSpan","highlightRange","inheritedClass","opaque","matchContext","st","rangeFrom","rangeTo","typeName","propertyName","literal","heading","keyword","operator","punctuation","lineComment","blockComment","docComment","variableName","attributeName","labelName","namespace","macroName","docString","character","attributeValue","integer","float","bool","escape","url","null","atom","modifier","operatorKeyword","controlKeyword","definitionKeyword","derefOperator","arithmeticOperator","logicOperator","bitwiseOperator","compareOperator","updateOperator","definitionOperator","typeOperator","controlOperator","separator","angleBracket","squareBracket","paren","brace","heading1","heading2","heading3","heading4","heading5","heading6","contentSeparator","quote","emphasis","strong","link","monospace","strikethrough","deleted","invalid","documentMeta","processingInstruction","definition","defineModifier","constant","function","standard","special","defaultHighlightStyle","fontWeight","SelectedDiagnostic","diagnostic","LintState","diagnostics","DiagnosticWidget","severity","findDiagnostic","setDiagnosticsEffect","movePanelSelection","lintState","selPos","LintPanel","activeMark","lintTooltip","stackStart","stackEnd","diagnosticsTooltip","renderDiagnostic","closeLintPanel","lintKeymap","assignKeys","actions","assigned","inPanel","message","action","keyIndex","nameElt","onmousedown","PanelItem","items","moveSelection","selectedIndex","needsSync","newSelectedItem","_start","_end","underline","encodeURIComponent","svg","backgroundPosition","backgroundRepeat","overflowY","background_fallback","color_fallback","basicSetup","Stack","reducePos","bufferBase","curContext","StackContext","pushState","dPrec","dynamicPrecedence","minRepeatTerm","storeNode","getGoto","reduceContext","count","stateFlag","baseStateID","term","isReduce","nextEnd","nextState","maxNode","shiftContext","useNode","updateContext","tracker","reuse","stream","recoverByDelete","canShift","SimulatedStack","stateSlot","hasAction","recoverByInsert","nextStates","best","forceReduce","validAction","forceAll","deadEnd","restart","sameState","dialectEnabled","dialectID","dialect","emitContext","hash","emitLookAhead","setLookAhead","Recover","StackBufferCursor","maybeNext","CachedToken","extended","mask","nullToken","InputStream","chunkOff","chunk2","chunk2Pos","readNext","resolveOffset","acceptToken","getChunk","setDone","TokenGroup","groupMask","accEnd","allows","overrides","readToken","contextual","ExternalTokenizer","decodeArray","Type","out","digit","verbose","LOG","stackIDs","Safety","Rec","cutAt","fragment","safeFrom","safeTo","trees","nextFragment","fr","nextStart","nodeAt","TokenCache","mainToken","tokenizers","getActions","actionIndex","tokenizer","updateCachedToken","addActions","eofTerm","getMainToken","specialized","specializers","putAction","Parse","recovering","nextStackID","minStackPos","topTerm","stacks","bufferLength","stopped","stoppedTokens","newStacks","advanceStack","finished","findFinished","stackToTree","getName","SyntaxError","runRecovery","maxRemaining","stackID","strictCx","cxHash","defaultReduce","localStack","advanceFully","pushStackDedup","restarted","tokenEnd","forceBase","Dialect","disabled","ContextTracker","LRParser","version","nodeNames","repeatNodeCount","topTerms","topRules","nodeProps","setProp","nodeID","propSpec","skippedNodes","tokenArray","tokenData","states","Uint32Array","stateData","maxTerm","dialects","dynamicPrecedences","tokenPrecTable","tokenPrec","termNames","parseDialect","w","loose","table","groupTag","terminal","flag","iPrev","findOffset","contextTracker","wrap","Uint8Array","selfClosers","area","frame","hr","img","keygen","param","wbr","menuitem","implicitlyClosed","dd","optgroup","rp","rt","tbody","td","tfoot","th","closeOnOpen","dt","article","aside","blockquote","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","menu","ol","pre","section","thead","isSpace","cachedName","cachedInput","cachedPos","tagNameAfter","question","bang","ElementContext","startTagTerms","elementContext","tagStart","selfClosed","commentContent","contentTokenizer","textToken","endToken","lastState","matchedLen","scriptTokens","styleTokens","textareaTokens","Document","noMatch","getAttrs","att","maybeNest","configureNesting","script","textarea","isAlpha","identifiers","dashes","descendant","includes","unitToken","spec_callee","domain","spec_AtKeyword","spec_identifier","not","StyleSheet","_properties","properties","names","pseudoClasses","cssLanguage","Declaration","Block","tags$1","NamespaceName","KeyframeName","TagName","ClassName","PseudoClassName","IdName","AttributeName","NumberLiteral","KeywordQuery","UnaryQueryOp","VariableName","Callee","Unit","AtKeyword","MatchOp","BinOp","Important","Comment","ParenthesizedContent","ColorLiteral","StringLiteral","commentTokens","cssCompletion","autocomplete","templateContent","trackNewline","insertSemicolon","noSemicolon","incdecToken","mayPostfix","afterDollar","export","as","async","true","false","typeof","new","await","extends","public","private","protected","readonly","instanceof","in","const","import","keyof","unique","infer","abstract","implements","let","var","interface","enum","declare","while","with","do","if","else","switch","case","try","finally","return","throw","debugger","spec_word","spec_LessThan","Script","jsx","tsExtends","snippets","javascriptLanguage","IfStatement","TryStatement","LabeledStatement","SwitchBody","isCase","ArrowFunction","JSXElement","JSXEscape","BlockComment","TemplateString","Super","BooleanLiteral","Star","VariableDefinition","Label","PropertyName","PrivatePropertyName","PropertyDefinition","PrivatePropertyDefinition","UpdateOp","LineComment","Number","ArithOp","LogicOp","BitOp","CompareOp","Equals","TypeName","TypeDefinition","JSXAttributeValue","JSXText","typescriptLanguage","jsxLanguage","tsxLanguage","javascript","typescript","Targets","Charsets","Methods","Encs","Bool","S","Tags","href","ping","media","hreflang","abbr","acronym","applet","shape","audio","mediagroup","crossorigin","preload","autoplay","loop","controls","basefont","bdi","bdo","big","cite","formaction","autofocus","formenctype","formmethod","formnovalidate","formtarget","canvas","caption","center","colgroup","radiogroup","datagrid","datalist","datetime","details","dfn","em","eventsource","figcaption","figure","enctype","method","novalidate","frameset","manifest","iframe","srcdoc","sandbox","seamless","ismap","usemap","dirname","maxlength","required","kbd","challenge","keytype","legend","sizes","charset","meter","optimum","noframes","noscript","object","typemustmatch","reversed","output","progress","ruby","samp","defer","small","strike","scoped","summary","sup","colspan","rowspan","headers","rows","kind","srclang","tt","u","video","poster","muted","GlobalAttrs","accesskey","draggable","dropzone","hidden","inert","itemid","itemprop","itemref","itemscope","itemtype","tabindex","rel","AllTags","GlobalAttrNames","elementName","findParentElement","allowedChildren","parentInfo","openTags","identifier","completeTag","completeCloseTag","htmlLanguage","Element","endElt","Is","ProcessingInst","DoctypeDecl","htmlCompletion","attrName","completeAttrName","nameNode","quoteStart","quoteEnd","completeAttrValue","completeStartTag","autoCloseTags","JsonText","jsonLanguage","coral","ivory","stone","whiskey","highlightBackground","tooltipBackground","oneDarkTheme","oneDarkHighlightStyle","matchClosingTags","_view","fn","begin","half","fromIndex","toIndex","removeFirstWhere","ArrayExt","_source","clone","FilterIterator","MapIterator","once","RetroArrayIterator","bt","bl","pr","bb","er","Private$1","Private","BranchNode","findKeyIndex","findPivotIndexByKey","prevSize","removeAt","findPivotIndexByIndex","_node","RetroIterator","_index","MIN_NODE_WIDTH","next_1","v1","hasExtra","_size","LinkedList","_first","removeLast","passed","sendMessage","conflate","hooks","scheduleCleanup","nextPID","receiver","each","connection","senders","receivers","receiversForSender","disconnectBetween","sender","DisposableDelegate","supportedActions","_promise","stopPropagation","moveDragImage","_evtMouseUp","_updateDragScroll","dispatchDragEnter","currTarget","_dropAction","supported","scrollable","dragEvent","a2","mime","_types","keyForKeydownEvent","EN_US","Signal","isToggleable","createKeyBinding","_keyBindings","_keyBindingChanged","msg1","_exactKeyMatch","keystroke","IS_MAC","layout","getKeyboardLayout","isModifierKey","emptyStringFunc","isVisible","CommandRegistry","validateSelector","exact","Infinity","specificity","sqm","VirtualDOM","VirtualElement","values_1","_i","VirtualText","oldContent","hostMap","newContent","updateContent","newCount","removeContent","oldVNode","currElem","vNode","oldKey","newVNode","createDOMNode","oldCopy","newAttrs","oldAttrs","__assign","sizers","totalMax","sizer","hint","stretchCount","freeSpace","stretch","notDoneCount","minSize","nearZero","amt","delta","shrinkLimit","grow","shrink","BoxEngine","_className","mnemonic","_icon","iconClass","_changed","emit","Title","_disposed","addClass","setFlag","IsHidden","postMessage","Widget","ActivateRequest","hide","onAfterDetach","Flag","HiddenMode","BeforeHide","ResizeMessage","MessageLoop","BeforeDetach","AfterDetach","titleProperty","onFitRequest","onAfterAttach","verticalAlignmentProperty","setVerticalAlignment","LayoutItem","limits","_minHeight","clampW","dispose","_widgets","removeWidget","isAttached","renderer","orientation","alignment","SplitLayout","fit","_sizers","normed","dataset","handle","_items","_spacing","sizeHint","sum","oldTitle","attachWidget","Private$g","_titles","Panel","SplitPanel","relativeSizes","setRelativeSizes","overrideCursor","Renderer","setStretch","spacing","AccordionPanel","aData","_alignment","BoxLayout","BoxSizer","nVisible","minW","_dirty","calc","getStretch","getSizeBasis","owner","createLayout","Private$b","Private$a","connect","getElementsByClassName","removeItem","inputNode","indices","_evtClick","_execute","_activeIndex","_activatePreviousItem","ai","renderItem","renderItemContent","kb","categoryIndices","wrapper","scores","item_1","labelIndices","_commands","CommandItem","isEnabled","findLastValue","Menu","Private$9","removeItemAt","forceY","activeIndex","collapsedFlags","_loop_1","onfocus","submenu","_startCloseTimer","createItemDataset","aria","py","MenuItem","s2","currentTarget","availableItems","parentElement","groupByTarget","Private$7","TabBar","_currentIndex","removeTab","removeTabAt","_adjustCurrentForRemove","releaseMouse","_releaseMouse","_evtKeyDown","currentTitle","ElementExt","hitTest","input_1","tab","addButtonClicked","tabPressPos","_orientation","_dragData","removeClass","currentIndex","renderTab","closable","renderCloseIcon","createTabClass","tabPos","_hiddenMode","_root","oldWidgets","oldHandles","handles","Private$6","findTabNode","_insertSplit","refNode","tabNode","tabBar","borderWidth","borderHeight","Msg","maybeParent","_insertTab","TabLayoutNode","_createTabBar","addAria","splitNode","oldRoot","newRoot","_box","box","widgets","chain","holdAllSizes","tabBarSizer","isHidden","iterAllWidgets","SplitLayoutNode","createConfig","handleStyle","createTabKey","DockPanel","tabbar","selectedWidgets","tabBars","bar","titles","saveLayout","Platform","IS_EDGE","_evtDragEnter","_evtMouseMove","Private$5","hasData","dropAction","findDropTarget","proposedAction","tabHeight","_mode","IS_IE","Overlay","pt","pb","zone","al","_counter","_currentWidget","_numbers","second","oldActive","focusTarget","GridLayout","reallocSizers","_rowSpacing","setColumnStretch","Private$4","WidgetAdapter","dockpanel","splitpanel","tabpanel","dragdrop","isTrue","pretty","luminoStyles.splitpanel","luminoStyles.tabbar","luminoStyles.tabpanel","luminoTheme.dockpanel","luminoTheme.tabbar","codeElements","iconLabel","addWidget","attach","_dockPanel","_constructed","assignedElements","InternMap","defineProperties","_intern","intern_get","intern_set","intern_delete","InternSet","valueOf","mapper","noop","parseTypenames","typenames","on","typename","T","that","xhtml","xlink","xml","xmlns","namespaces","creatorInherit","uri","namespaceURI","createElementNS","creatorFixed","fullname","childMatcher","childFirst","firstElementChild","EnterNode","datum","_next","__data__","bindIndex","exit","groupLength","dataLength","bindKey","keyValue","nodeByKeyValue","keyValues","arraylike","ascending","NaN","attrRemove","attrRemoveNS","removeAttributeNS","attrConstant","attrConstantNS","setAttributeNS","attrFunction","attrFunctionNS","styleRemove","removeProperty","styleConstant","priority","setProperty","styleFunction","styleValue","getPropertyValue","propertyRemove","propertyConstant","propertyFunction","classArray","ClassList","_names","getAttribute","classedAdd","classedRemove","classedTrue","classedFalse","classedFunction","textRemove","textConstant","textFunction","htmlRemove","htmlConstant","htmlFunction","raise","lower","constantNull","selection_cloneShallow","cloneNode","selection_cloneDeep","onRemove","__on","onAdd","contextListener","params","CustomEvent","initEvent","dispatchConstant","dispatchFunction","Selection","parents","_groups","_parents","sourceEvent","ownerSVGElement","createSVGPoint","matrixTransform","getScreenCTM","inverse","clientLeft","clientTop","pageX","pageY","subgroups","subnode","subgroup","selectAll","arrayAll","selectorAll","selectChild","childFind","selectChildren","childrenFilter","enterGroup","updateGroup","exitGroup","previous","i0","i1","_enter","_exit","sparse","onenter","onupdate","onexit","groups0","groups1","m0","m1","merges","group0","group1","compareDocumentPosition","compareNode","sortgroups","sortgroup","getAttributeNS","property","classed","creator","deep","nonpassivecapture","capture","passive","noevent","__noselect","MozUserSelect","yesdrag","noclick","factory","Color","darker","brighter","reI","reN","reP","reHex","reRgbInteger","reRgbPercent","reRgbaInteger","reRgbaPercent","reHslPercent","reHslaPercent","named","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","color_formatHex","rgb","formatHex","color_formatRgb","formatRgb","format","rgbn","Rgb","rgba","hsla","rgbConvert","rgb_formatHex","hex","rgb_formatRgb","isNaN","Hsl","hslConvert","hsl2rgb","m2","channels","displayable","formatHsl","pow","gamma","nogamma","exponential","linear","rgbGamma","colorRgb","genericArray","nb","na","setTime","reA","reB","am","bm","bs","bi","one","zero","date","ArrayBuffer","isView","DataView","isNumberArray","numberArray","svgNode","degrees","PI","identity","translateX","translateY","rotate","skewX","scaleX","scaleY","sqrt","atan2","atan","interpolateTransform","pxComma","pxParen","degParen","xa","ya","xb","yb","interpolateTransformCss","DOMMatrix","WebKitCSSMatrix","isIdentity","interpolateTransformSvg","transform","baseVal","consolidate","matrix","cosh","exp","taskHead","taskTail","zoomRho","rho","rho2","rho4","zoom","p0","p1","ux0","uy0","w0","ux1","uy1","w1","d2","d1","b0","b1","r0","r1","coshr0","tanh","sinh","duration","SQRT2","_1","_2","interval","clockLast","clockNow","clockSkew","clock","performance","setFrame","clearNow","Timer","_call","_time","timer","delay","wake","timerFlush","t0","t2","t1","sleep","nap","poke","clearInterval","setInterval","elapsed","emptyOn","emptyTween","timing","schedules","__transition","tween","schedule","tick","ease","tweenRemove","tween0","tween1","tweenFunction","tweenValue","transition","_id","interpolateNumber","interpolateRgb","interpolateString","interpolate","value1","string00","interpolate0","string1","string0","string10","attrInterpolate","attrInterpolateNS","attrTweenNS","attrTween","delayFunction","delayConstant","durationFunction","durationConstant","easeConstant","onFunction","on0","on1","sit","styleInterpolate","styleTween","textInterpolate","textTween","Transition","_name","newId","selection_prototype","inherit","id0","id1","styleNull","listener0","styleMaybeRemove","removeFunction","easeVarying","reject","cancel","interrupt","defaultTiming","pi","tau","epsilon","tauEpsilon","Path","_x0","_y0","_x1","_y1","path","formatDecimalParts","toExponential","coefficient","closePath","quadraticCurveTo","x1","y1","bezierCurveTo","x2","y2","arcTo","x0","y0","x21","y21","x01","y01","l01_2","x20","y20","l21_2","l20_2","l21","l01","acos","t01","t21","arc","a0","a1","ccw","cos","sin","cw","da","prefixExponent","formatSpecifier","specifier","FormatSpecifier","fill","symbol","comma","precision","exponent","toFixed","toLocaleString","toPrecision","formatRounded","X","locale","prefixes","grouping","thousands","substring","currencyPrefix","currency","currencySuffix","decimal","numerals","formatNumerals","minus","nan","newFormat","formatTypes","suffix","formatType","maybeSuffix","valuePrefix","valueSuffix","valueNegative","formatTrim","formatPrefix","hierarchy","mapChildren","objectChildren","childs","Node","eachBefore","computeHeight","copyData","constantZero","formatLocale","eachAfter","ancestor","aNodes","ancestors","bNodes","leastCommonAncestor","descendants","leaves","links","squarify","row","sumValue","minValue","maxValue","newRatio","minRatio","alpha","beta","dice","treemapDice","treemapSlice","squarifyRatio","initRange","implicit","ordinal","unknown","colors","halfPi","asin","arcInnerRadius","innerRadius","arcOuterRadius","outerRadius","arcStartAngle","startAngle","arcEndAngle","endAngle","arcPadAngle","padAngle","intersect","x3","y3","x10","y10","x32","y32","cornerTangents","rc","ox","oy","x11","y11","x00","y00","D","cx0","cy0","cx1","cy1","dx0","dy0","dx1","dy1","cy","cornerRadius","padRadius","a01","a11","a00","a10","da0","da1","ap","rc0","rc1","oc","ax","ay","bx","kc","lc","centroid","ZoomEvent","Transform","applyX","applyY","location","invertX","invertY","rescaleX","rescaleY","nopropagation","defaultFilter","defaultExtent","SVGElement","viewBox","defaultTransform","__zoom","defaultWheelDelta","deltaY","deltaMode","defaultTouchable","defaultConstrain","extent","translateExtent","touchstarting","touchfirst","touchending","constrain","wheelDelta","touchable","scaleExtent","interpolateZoom","listeners","touchDelay","clickDistance2","tapDistance","wheeled","mousedowned","dblclicked","touchstarted","touchmoved","touchended","gesture","clean","__zooming","Gesture","taps","pointer","wheel","mouse","wheelidled","mousemoved","mouseupped","dragDisable","dragEnable","changedTouches","k1","started","touches","touch0","touch1","l0","l1","dp","hypot","collection","scaleBy","scaleTo","translateBy","translateTo","clickDistance","_zoom","d3.zoomIdentity","g_fontCanvas","g_fontSizeContext","g_fontSizeContextCache","SVGWidget","_text","bold","origRow","rect2","rect1","deter","sortValues","descending","pie","arcs","pa","_slicesG","horizontalLimit","smallCount","showSeriesValue","showSeriesPercentage","_labels","updateD3Pie","_palette","d3.scaleOrdinal","_slices","d3.select","labelHeight","labelRadius","pos1","normalizeRadians","midAngle","quad","_minLabelTop","yShift","_labelPositions","prevTop","overlap","valueof","targetDepth","justify","sourceLinks","targetLinks","ascendingSourceBreadth","ascendingBreadth","ascendingTargetBreadth","defaultId","defaultNodes","graph","defaultLinks","nodeById","computeLinkBreadths","Sankey","linkSort","iterations","sankey","computeNodeLinks","computeNodeValues","computeNodeDepths","computeNodeHeights","computeNodeBreadths","fixedValue","columns","kx","computeNodeLayers","ky","reorderLinks","initializeNodeBreadths","relaxRightToLeft","relaxLeftToRight","targetTop","reorderNodeLinks","resolveCollisions","sourceTop","subject","resolveCollisionsBottomToTop","resolveCollisionsTopToBottom","nodeId","nodeAlign","nodeSort","nodeWidth","nodePadding","getElementsByTagName","innerText","linkSource","linkTarget","curveHorizontal","linkHorizontal","curve","pointX","pointY","argv","horizontalSource","horizontalTarget","d3Sankey.sankeyCenter","N","nodeLabel","d3.map","Lt","linkTitle","nodesG","linksG","endcodeID","ModeMap","sums","partition","valueOffset","valueTarget","valueLeft","valueRight","xk","yk","d3.descending","paddingInner","zDomain","tile","paddingStack","treemap","positionNode","roundNode","paddingOuter","uid","_svg"],"mappings":"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"}