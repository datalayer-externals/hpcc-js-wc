import{_ as a,c as i,e as r,w as l,b as e,d as t,a as n,r as c,o as s}from"./app.db3d4f43.js";const w='{"title":"Gauge","description":"","frontmatter":{},"headers":[{"level":2,"title":"Attributes","slug":"attributes"},{"level":3,"title":"color_domain","slug":"color-domain"},{"level":3,"title":"color_range","slug":"color-range"},{"level":3,"title":"empty_color","slug":"empty-color"},{"level":3,"title":"show_tick","slug":"show-tick"},{"level":3,"title":"tick_color","slug":"tick-color"},{"level":3,"title":"tick_value_description","slug":"tick-value-description"},{"level":3,"title":"tick_value","slug":"tick-value"},{"level":3,"title":"title_description","slug":"title-description"},{"level":3,"title":"title","slug":"title"},{"level":3,"title":"tooltip","slug":"tooltip"},{"level":3,"title":"value_description","slug":"value-description"},{"level":3,"title":"value","slug":"value"},{"level":2,"title":"Events","slug":"events"}],"relativePath":"src/gauge/gauge.md","lastUpdated":1642448495715}',d={},p=e("h1",{id:"gauge",tabindex:"-1"},[t("Gauge "),e("a",{class:"header-anchor",href:"#gauge","aria-hidden":"true"},"#")],-1),u=e("p",null,[e("strong",null,"tag"),t(": "),e("code",null,"<hpcc-gauge>")],-1),h=e("hpcc-preview",{preview_border:"0px",preview_height_ratio:"0.33",style:{width:"100%",height:"400px"}},[e("pre",null,[e("code",null,`<hpcc-splitpanel style="width:100%;height:100%">
  <hpcc-gauge show_tick title="G-01" title_description="Gauge 01" style="width:100%;min-width:48px;height:100%">
  </hpcc-gauge>
  <hpcc-gauge title="G-02" style="width:100%;min-width:48px;height:100%">
  </hpcc-gauge>
  <hpcc-gauge show_tick title="G-03" style="width:100%;min-width:48px;height:100%">
  </hpcc-gauge>
  <hpcc-gauge title="G-04" style="width:100%;min-width:48px;height:100%">
  </hpcc-gauge>
</hpcc-splitpanel>
<script>
    customElements.whenDefined("hpcc-splitpanel").then(() => {
      for (const gauge of document.querySelectorAll("hpcc-gauge")) {
          gauge.value = Math.random();
          gauge.tick_value = Math.random();
      }
    });
<\/script>
`)])],-1),g=n('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>See <a href="./../../README.html">Getting Started</a> for details on how to include @hpcc-js/web-components in your application</p></div><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-hidden="true">#</a></h2><h3 id="color-domain" tabindex="-1"><code>color_domain</code> <a class="header-anchor" href="#color-domain" aria-hidden="true">#</a></h3><p><i>This array augments the mapping of the value to the fill colorRange</i></p><p><strong>Type:</strong> <code>number[]</code></p><p><strong>Default Value:</strong> [0, 0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9, 1]</p><h3 id="color-range" tabindex="-1"><code>color_range</code> <a class="header-anchor" href="#color-range" aria-hidden="true">#</a></h3><p><i>Array of colors for the filled gauge portion. The fill color will be relative to the gauge value</i></p><p><strong>Type:</strong> <code>HTMLColor[]</code></p><p><strong>Default Value:</strong> [&quot;green&quot;, &quot;green&quot;, &quot;green&quot;, &quot;green&quot;, &quot;green&quot;, &quot;green&quot;, &quot;green&quot;, &quot;green&quot;, &quot;orange&quot;, &quot;red&quot;, &quot;red&quot;]</p><h3 id="empty-color" tabindex="-1"><code>empty_color</code> <a class="header-anchor" href="#empty-color" aria-hidden="true">#</a></h3><p><i>Color of the empty portion of the gauge</i></p><p><strong>Type:</strong> <code>string</code></p><p><strong>Default Value:</strong> &quot;lightgray&quot;</p><h3 id="show-tick" tabindex="-1"><code>show_tick</code> <a class="header-anchor" href="#show-tick" aria-hidden="true">#</a></h3><p><i>Show &quot;tick&quot; indicator on the gauge</i></p><p><strong>Type:</strong> <code>boolean</code></p><p><strong>Default Value:</strong> false</p><h3 id="tick-color" tabindex="-1"><code>tick_color</code> <a class="header-anchor" href="#tick-color" aria-hidden="true">#</a></h3><p><i>Color of the tick indicator</i></p><p><strong>Type:</strong> <code>HTMLColor</code></p><p><strong>Default Value:</strong> &quot;black&quot;</p><h3 id="tick-value-description" tabindex="-1"><code>tick_value_description</code> <a class="header-anchor" href="#tick-value-description" aria-hidden="true">#</a></h3><p><i>Description to display when mouse is over the tick indicators</i></p><p><strong>Type:</strong> <code>string</code></p><p><strong>Default Value:</strong> &quot;&quot;</p><h3 id="tick-value" tabindex="-1"><code>tick_value</code> <a class="header-anchor" href="#tick-value" aria-hidden="true">#</a></h3><p><i>Tick value of the gauge, expects value from 0 to 1</i></p><p><strong>Type:</strong> <code>number</code></p><p><strong>Default Value:</strong> 0</p><h3 id="title-description" tabindex="-1"><code>title_description</code> <a class="header-anchor" href="#title-description" aria-hidden="true">#</a></h3><p><i>Description to display when mouse is over the title</i></p><p><strong>Type:</strong> <code>string</code></p><p><strong>Default Value:</strong> &quot;&quot;</p><h3 id="title" tabindex="-1"><code>title</code> <a class="header-anchor" href="#title" aria-hidden="true">#</a></h3><p><i>Title to display at the bottom of the gauge</i></p><p><strong>Type:</strong> <code>string</code></p><p><strong>Default Value:</strong> &quot;&quot;</p><h3 id="tooltip" tabindex="-1"><code>tooltip</code> <a class="header-anchor" href="#tooltip" aria-hidden="true">#</a></h3><p><i>Tooltip to display when mouse is over the gauge</i></p><p><strong>Type:</strong> <code>string</code></p><p><strong>Default Value:</strong> &quot;&quot;</p><h3 id="value-description" tabindex="-1"><code>value_description</code> <a class="header-anchor" href="#value-description" aria-hidden="true">#</a></h3><p><i>Description to display when mouse is over the gauge arc</i></p><p><strong>Type:</strong> <code>string</code></p><p><strong>Default Value:</strong> &quot;&quot;</p><h3 id="value" tabindex="-1"><code>value</code> <a class="header-anchor" href="#value" aria-hidden="true">#</a></h3><p><i>Main value of the gauge, expects value from 0 to 1</i></p><p><strong>Type:</strong> <code>number</code></p><p><strong>Default Value:</strong> 0</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h2>',51);function v(_,f,m,q,y,b){const o=c("ClientOnly");return s(),i("div",null,[p,u,r(o,null,{default:l(()=>[h]),_:1}),g])}var x=a(d,[["render",v]]);export{w as __pageData,x as default};
