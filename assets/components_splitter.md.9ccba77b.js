import{_ as o,r as t,c as d,b as a,w as n,d as e,e as i,a as l,o as c}from"./app.3ced51f7.js";const V='{"title":"Splitter","description":"","frontmatter":{},"headers":[{"level":2,"title":"Attributes","slug":"attributes"},{"level":3,"title":"height","slug":"height"},{"level":3,"title":"width","slug":"width"},{"level":3,"title":"scale","slug":"scale"},{"level":3,"title":"scaleMax","slug":"scalemax"},{"level":3,"title":"scaleMin","slug":"scalemin"},{"level":3,"title":"x","slug":"x"},{"level":3,"title":"y","slug":"y"},{"level":2,"title":"Events","slug":"events"},{"level":3,"title":"changed","slug":"changed"}],"relativePath":"components/splitter.md","lastUpdated":1639907601824}',h={},p=e("h1",{id:"splitter",tabindex:"-1"},[i("Splitter "),e("a",{class:"header-anchor",href:"#splitter","aria-hidden":"true"},"#")],-1),u=e("p",null,[e("strong",null,"tag"),i(": "),e("code",null,"<hpcc-splitter>")],-1),g=e("pre",null,[e("code",null,`<hpcc-splitter width="100%">
  <div>Left</div>
  <div>Right</div>
</hpcc-splitter>
`)],-1),m=l('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>See <a href="./../guide/getting-started.html">Getting Started</a> for details on how to include @hpcc-js/web-components in your application</p></div><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-hidden="true">#</a></h2><p>HPCCZoomElement HPCCResizeElement HPCCElement</p><h3 id="height" tabindex="-1"><code>height</code> <a class="header-anchor" href="#height" aria-hidden="true">#</a></h3><p><i>The element height</i></p><p><strong>Type:</strong> <code>number | string</code></p><p><strong>Default Value:</strong></p><h3 id="width" tabindex="-1"><code>width</code> <a class="header-anchor" href="#width" aria-hidden="true">#</a></h3><p><i>The element width</i></p><p><strong>Type:</strong> <code>number | string</code></p><p><strong>Default Value:</strong></p><h3 id="scale" tabindex="-1"><code>scale</code> <a class="header-anchor" href="#scale" aria-hidden="true">#</a></h3><p><i>The current scale of the content</i></p><p><strong>Type:</strong> <code>number</code></p><p><strong>Default Value:</strong> 1</p><h3 id="scalemax" tabindex="-1"><code>scaleMax</code> <a class="header-anchor" href="#scalemax" aria-hidden="true">#</a></h3><p><i>The maximum scale extent that can be applied to the content</i></p><p><strong>Type:</strong> <code>number</code></p><p><strong>Default Value:</strong> 0.5</p><h3 id="scalemin" tabindex="-1"><code>scaleMin</code> <a class="header-anchor" href="#scalemin" aria-hidden="true">#</a></h3><p><i>The minimum scale extent that can be applied to the content</i></p><p><strong>Type:</strong> <code>number</code></p><p><strong>Default Value:</strong> 0.5</p><h3 id="x" tabindex="-1"><code>x</code> <a class="header-anchor" href="#x" aria-hidden="true">#</a></h3><p><i>The current x-position of the content</i></p><p><strong>Type:</strong> <code>number</code></p><p><strong>Default Value:</strong> 0</p><h3 id="y" tabindex="-1"><code>y</code> <a class="header-anchor" href="#y" aria-hidden="true">#</a></h3><p><i>The current y-position of the content</i></p><p><strong>Type:</strong> <code>number</code></p><p><strong>Default Value:</strong> 0</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h2><h3 id="changed" tabindex="-1"><code>changed</code> <a class="header-anchor" href="#changed" aria-hidden="true">#</a></h3><p><em>Emitted whenever the content is panned or zoomed</em></p>',34);function _(f,x,b,v,T,w){const r=t("hpcc-preview"),s=t("ClientOnly");return c(),d("div",null,[p,u,a(s,null,{default:n(()=>[a(r,{previewBorder:"0px",width:"100%",fullReload:"s"},{default:n(()=>[g]),_:1})]),_:1}),m])}var C=o(h,[["render",_]]);export{V as __pageData,C as default};
