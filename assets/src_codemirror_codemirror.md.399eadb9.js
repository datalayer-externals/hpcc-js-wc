import{_ as r,c as d,e as i,w as a,b as e,d as t,a as n,r as c,o as s}from"./app.db3d4f43.js";const w='{"title":"CodeMirror Editor","description":"","frontmatter":{},"headers":[{"level":2,"title":"Attributes","slug":"attributes"},{"level":3,"title":"mode","slug":"mode"},{"level":3,"title":"text","slug":"text"},{"level":3,"title":"theme","slug":"theme"},{"level":2,"title":"Events","slug":"events"}],"relativePath":"src/codemirror/codemirror.md","lastUpdated":1642408018438}',l={},h=e("h1",{id:"codemirror-editor",tabindex:"-1"},[t("CodeMirror Editor "),e("a",{class:"header-anchor",href:"#codemirror-editor","aria-hidden":"true"},"#")],-1),p=e("p",null,[e("strong",null,"tag"),t(": "),e("code",null,"<hpcc-codemirror>")],-1),u=e("hpcc-preview",{previewBorder:"0px",previewHeightRatio:"0.5",style:{width:"100%",height:"400px"}},[e("pre",null,[e("code",null,`  <hpcc-codemirror mode="json" theme="dark" style="width:100%;height:100%">
  </hpcc-codemirror>
  <script>
    customElements.whenDefined("hpcc-codemirror").then(() => {
      document.querySelector('hpcc-codemirror').text = \`\\
{
  "aaa":123, 
  "bbb":"ddd", 
  "c":3, 
  "d":true
}\`;
    });
  <\/script>
`)])],-1),m=n('<div class="tip custom-block"><p class="custom-block-title">TIP</p><p>See <a href="./../../README.html">Getting Started</a> for details on how to include @hpcc-js/web-components in your application</p></div><h2 id="attributes" tabindex="-1">Attributes <a class="header-anchor" href="#attributes" aria-hidden="true">#</a></h2><h3 id="mode" tabindex="-1"><code>mode</code> <a class="header-anchor" href="#mode" aria-hidden="true">#</a></h3><p><i>Text to be displayed in the editor</i></p><p><strong>Type:</strong> <code>&quot;html&quot; | &quot;json&quot;</code></p><ul><li><p><code>html</code>: HTML document</p></li><li><p><code>JSON</code>: JSON document</p></li></ul><p><strong>Default Value:</strong> html</p><h3 id="text" tabindex="-1"><code>text</code> <a class="header-anchor" href="#text" aria-hidden="true">#</a></h3><p><i>Text to be displayed in the editor</i></p><p><strong>Type:</strong> <code>string</code></p><p><strong>Default Value:</strong></p><h3 id="theme" tabindex="-1"><code>theme</code> <a class="header-anchor" href="#theme" aria-hidden="true">#</a></h3><p><i>Text to be displayed in the editor</i></p><p><strong>Type:</strong> <code>&quot;light&quot; | &quot;dark&quot;</code></p><ul><li><p><code>light</code>: Light theme</p></li><li><p><code>dark</code>: Dark theme</p></li></ul><p><strong>Default Value:</strong> light</p><h2 id="events" tabindex="-1">Events <a class="header-anchor" href="#events" aria-hidden="true">#</a></h2>',17);function _(g,b,x,f,v,T){const o=c("ClientOnly");return s(),d("div",null,[h,p,i(o,null,{default:a(()=>[u]),_:1}),m])}var q=r(l,[["render",_]]);export{w as __pageData,q as default};
